
motor_FOC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000c730  080001e0  080001e0  000011e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000114  0800c910  0800c910  0000d910  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800ca24  0800ca24  0000e2a0  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  0800ca24  0800ca24  0000da24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800ca2c  0800ca2c  0000e2a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800ca2c  0800ca2c  0000da2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800ca30  0800ca30  0000da30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000002a0  20000000  0800ca34  0000e000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00002310  200002a0  0800ccd4  0000e2a0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200025b0  0800ccd4  0000e5b0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000e2a0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000319f6  00000000  00000000  0000e2d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00007186  00000000  00000000  0003fcc6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002488  00000000  00000000  00046e50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001be6  00000000  00000000  000492d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002b57d  00000000  00000000  0004aebe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000355dd  00000000  00000000  0007643b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000f181d  00000000  00000000  000aba18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0019d235  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000099a8  00000000  00000000  0019d278  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000063  00000000  00000000  001a6c20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	@ (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	@ (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	@ (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	200002a0 	.word	0x200002a0
 80001fc:	00000000 	.word	0x00000000
 8000200:	0800c8f8 	.word	0x0800c8f8

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	@ (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	@ (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	@ (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	200002a4 	.word	0x200002a4
 800021c:	0800c8f8 	.word	0x0800c8f8

08000220 <__aeabi_uldivmod>:
 8000220:	b953      	cbnz	r3, 8000238 <__aeabi_uldivmod+0x18>
 8000222:	b94a      	cbnz	r2, 8000238 <__aeabi_uldivmod+0x18>
 8000224:	2900      	cmp	r1, #0
 8000226:	bf08      	it	eq
 8000228:	2800      	cmpeq	r0, #0
 800022a:	bf1c      	itt	ne
 800022c:	f04f 31ff 	movne.w	r1, #4294967295
 8000230:	f04f 30ff 	movne.w	r0, #4294967295
 8000234:	f000 b988 	b.w	8000548 <__aeabi_idiv0>
 8000238:	f1ad 0c08 	sub.w	ip, sp, #8
 800023c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000240:	f000 f806 	bl	8000250 <__udivmoddi4>
 8000244:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000248:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800024c:	b004      	add	sp, #16
 800024e:	4770      	bx	lr

08000250 <__udivmoddi4>:
 8000250:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000254:	9d08      	ldr	r5, [sp, #32]
 8000256:	468e      	mov	lr, r1
 8000258:	4604      	mov	r4, r0
 800025a:	4688      	mov	r8, r1
 800025c:	2b00      	cmp	r3, #0
 800025e:	d14a      	bne.n	80002f6 <__udivmoddi4+0xa6>
 8000260:	428a      	cmp	r2, r1
 8000262:	4617      	mov	r7, r2
 8000264:	d962      	bls.n	800032c <__udivmoddi4+0xdc>
 8000266:	fab2 f682 	clz	r6, r2
 800026a:	b14e      	cbz	r6, 8000280 <__udivmoddi4+0x30>
 800026c:	f1c6 0320 	rsb	r3, r6, #32
 8000270:	fa01 f806 	lsl.w	r8, r1, r6
 8000274:	fa20 f303 	lsr.w	r3, r0, r3
 8000278:	40b7      	lsls	r7, r6
 800027a:	ea43 0808 	orr.w	r8, r3, r8
 800027e:	40b4      	lsls	r4, r6
 8000280:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000284:	fa1f fc87 	uxth.w	ip, r7
 8000288:	fbb8 f1fe 	udiv	r1, r8, lr
 800028c:	0c23      	lsrs	r3, r4, #16
 800028e:	fb0e 8811 	mls	r8, lr, r1, r8
 8000292:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000296:	fb01 f20c 	mul.w	r2, r1, ip
 800029a:	429a      	cmp	r2, r3
 800029c:	d909      	bls.n	80002b2 <__udivmoddi4+0x62>
 800029e:	18fb      	adds	r3, r7, r3
 80002a0:	f101 30ff 	add.w	r0, r1, #4294967295
 80002a4:	f080 80ea 	bcs.w	800047c <__udivmoddi4+0x22c>
 80002a8:	429a      	cmp	r2, r3
 80002aa:	f240 80e7 	bls.w	800047c <__udivmoddi4+0x22c>
 80002ae:	3902      	subs	r1, #2
 80002b0:	443b      	add	r3, r7
 80002b2:	1a9a      	subs	r2, r3, r2
 80002b4:	b2a3      	uxth	r3, r4
 80002b6:	fbb2 f0fe 	udiv	r0, r2, lr
 80002ba:	fb0e 2210 	mls	r2, lr, r0, r2
 80002be:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80002c2:	fb00 fc0c 	mul.w	ip, r0, ip
 80002c6:	459c      	cmp	ip, r3
 80002c8:	d909      	bls.n	80002de <__udivmoddi4+0x8e>
 80002ca:	18fb      	adds	r3, r7, r3
 80002cc:	f100 32ff 	add.w	r2, r0, #4294967295
 80002d0:	f080 80d6 	bcs.w	8000480 <__udivmoddi4+0x230>
 80002d4:	459c      	cmp	ip, r3
 80002d6:	f240 80d3 	bls.w	8000480 <__udivmoddi4+0x230>
 80002da:	443b      	add	r3, r7
 80002dc:	3802      	subs	r0, #2
 80002de:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80002e2:	eba3 030c 	sub.w	r3, r3, ip
 80002e6:	2100      	movs	r1, #0
 80002e8:	b11d      	cbz	r5, 80002f2 <__udivmoddi4+0xa2>
 80002ea:	40f3      	lsrs	r3, r6
 80002ec:	2200      	movs	r2, #0
 80002ee:	e9c5 3200 	strd	r3, r2, [r5]
 80002f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002f6:	428b      	cmp	r3, r1
 80002f8:	d905      	bls.n	8000306 <__udivmoddi4+0xb6>
 80002fa:	b10d      	cbz	r5, 8000300 <__udivmoddi4+0xb0>
 80002fc:	e9c5 0100 	strd	r0, r1, [r5]
 8000300:	2100      	movs	r1, #0
 8000302:	4608      	mov	r0, r1
 8000304:	e7f5      	b.n	80002f2 <__udivmoddi4+0xa2>
 8000306:	fab3 f183 	clz	r1, r3
 800030a:	2900      	cmp	r1, #0
 800030c:	d146      	bne.n	800039c <__udivmoddi4+0x14c>
 800030e:	4573      	cmp	r3, lr
 8000310:	d302      	bcc.n	8000318 <__udivmoddi4+0xc8>
 8000312:	4282      	cmp	r2, r0
 8000314:	f200 8105 	bhi.w	8000522 <__udivmoddi4+0x2d2>
 8000318:	1a84      	subs	r4, r0, r2
 800031a:	eb6e 0203 	sbc.w	r2, lr, r3
 800031e:	2001      	movs	r0, #1
 8000320:	4690      	mov	r8, r2
 8000322:	2d00      	cmp	r5, #0
 8000324:	d0e5      	beq.n	80002f2 <__udivmoddi4+0xa2>
 8000326:	e9c5 4800 	strd	r4, r8, [r5]
 800032a:	e7e2      	b.n	80002f2 <__udivmoddi4+0xa2>
 800032c:	2a00      	cmp	r2, #0
 800032e:	f000 8090 	beq.w	8000452 <__udivmoddi4+0x202>
 8000332:	fab2 f682 	clz	r6, r2
 8000336:	2e00      	cmp	r6, #0
 8000338:	f040 80a4 	bne.w	8000484 <__udivmoddi4+0x234>
 800033c:	1a8a      	subs	r2, r1, r2
 800033e:	0c03      	lsrs	r3, r0, #16
 8000340:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000344:	b280      	uxth	r0, r0
 8000346:	b2bc      	uxth	r4, r7
 8000348:	2101      	movs	r1, #1
 800034a:	fbb2 fcfe 	udiv	ip, r2, lr
 800034e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000352:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000356:	fb04 f20c 	mul.w	r2, r4, ip
 800035a:	429a      	cmp	r2, r3
 800035c:	d907      	bls.n	800036e <__udivmoddi4+0x11e>
 800035e:	18fb      	adds	r3, r7, r3
 8000360:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000364:	d202      	bcs.n	800036c <__udivmoddi4+0x11c>
 8000366:	429a      	cmp	r2, r3
 8000368:	f200 80e0 	bhi.w	800052c <__udivmoddi4+0x2dc>
 800036c:	46c4      	mov	ip, r8
 800036e:	1a9b      	subs	r3, r3, r2
 8000370:	fbb3 f2fe 	udiv	r2, r3, lr
 8000374:	fb0e 3312 	mls	r3, lr, r2, r3
 8000378:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800037c:	fb02 f404 	mul.w	r4, r2, r4
 8000380:	429c      	cmp	r4, r3
 8000382:	d907      	bls.n	8000394 <__udivmoddi4+0x144>
 8000384:	18fb      	adds	r3, r7, r3
 8000386:	f102 30ff 	add.w	r0, r2, #4294967295
 800038a:	d202      	bcs.n	8000392 <__udivmoddi4+0x142>
 800038c:	429c      	cmp	r4, r3
 800038e:	f200 80ca 	bhi.w	8000526 <__udivmoddi4+0x2d6>
 8000392:	4602      	mov	r2, r0
 8000394:	1b1b      	subs	r3, r3, r4
 8000396:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 800039a:	e7a5      	b.n	80002e8 <__udivmoddi4+0x98>
 800039c:	f1c1 0620 	rsb	r6, r1, #32
 80003a0:	408b      	lsls	r3, r1
 80003a2:	fa22 f706 	lsr.w	r7, r2, r6
 80003a6:	431f      	orrs	r7, r3
 80003a8:	fa0e f401 	lsl.w	r4, lr, r1
 80003ac:	fa20 f306 	lsr.w	r3, r0, r6
 80003b0:	fa2e fe06 	lsr.w	lr, lr, r6
 80003b4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80003b8:	4323      	orrs	r3, r4
 80003ba:	fa00 f801 	lsl.w	r8, r0, r1
 80003be:	fa1f fc87 	uxth.w	ip, r7
 80003c2:	fbbe f0f9 	udiv	r0, lr, r9
 80003c6:	0c1c      	lsrs	r4, r3, #16
 80003c8:	fb09 ee10 	mls	lr, r9, r0, lr
 80003cc:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80003d0:	fb00 fe0c 	mul.w	lr, r0, ip
 80003d4:	45a6      	cmp	lr, r4
 80003d6:	fa02 f201 	lsl.w	r2, r2, r1
 80003da:	d909      	bls.n	80003f0 <__udivmoddi4+0x1a0>
 80003dc:	193c      	adds	r4, r7, r4
 80003de:	f100 3aff 	add.w	sl, r0, #4294967295
 80003e2:	f080 809c 	bcs.w	800051e <__udivmoddi4+0x2ce>
 80003e6:	45a6      	cmp	lr, r4
 80003e8:	f240 8099 	bls.w	800051e <__udivmoddi4+0x2ce>
 80003ec:	3802      	subs	r0, #2
 80003ee:	443c      	add	r4, r7
 80003f0:	eba4 040e 	sub.w	r4, r4, lr
 80003f4:	fa1f fe83 	uxth.w	lr, r3
 80003f8:	fbb4 f3f9 	udiv	r3, r4, r9
 80003fc:	fb09 4413 	mls	r4, r9, r3, r4
 8000400:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000404:	fb03 fc0c 	mul.w	ip, r3, ip
 8000408:	45a4      	cmp	ip, r4
 800040a:	d908      	bls.n	800041e <__udivmoddi4+0x1ce>
 800040c:	193c      	adds	r4, r7, r4
 800040e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000412:	f080 8082 	bcs.w	800051a <__udivmoddi4+0x2ca>
 8000416:	45a4      	cmp	ip, r4
 8000418:	d97f      	bls.n	800051a <__udivmoddi4+0x2ca>
 800041a:	3b02      	subs	r3, #2
 800041c:	443c      	add	r4, r7
 800041e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000422:	eba4 040c 	sub.w	r4, r4, ip
 8000426:	fba0 ec02 	umull	lr, ip, r0, r2
 800042a:	4564      	cmp	r4, ip
 800042c:	4673      	mov	r3, lr
 800042e:	46e1      	mov	r9, ip
 8000430:	d362      	bcc.n	80004f8 <__udivmoddi4+0x2a8>
 8000432:	d05f      	beq.n	80004f4 <__udivmoddi4+0x2a4>
 8000434:	b15d      	cbz	r5, 800044e <__udivmoddi4+0x1fe>
 8000436:	ebb8 0203 	subs.w	r2, r8, r3
 800043a:	eb64 0409 	sbc.w	r4, r4, r9
 800043e:	fa04 f606 	lsl.w	r6, r4, r6
 8000442:	fa22 f301 	lsr.w	r3, r2, r1
 8000446:	431e      	orrs	r6, r3
 8000448:	40cc      	lsrs	r4, r1
 800044a:	e9c5 6400 	strd	r6, r4, [r5]
 800044e:	2100      	movs	r1, #0
 8000450:	e74f      	b.n	80002f2 <__udivmoddi4+0xa2>
 8000452:	fbb1 fcf2 	udiv	ip, r1, r2
 8000456:	0c01      	lsrs	r1, r0, #16
 8000458:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800045c:	b280      	uxth	r0, r0
 800045e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000462:	463b      	mov	r3, r7
 8000464:	4638      	mov	r0, r7
 8000466:	463c      	mov	r4, r7
 8000468:	46b8      	mov	r8, r7
 800046a:	46be      	mov	lr, r7
 800046c:	2620      	movs	r6, #32
 800046e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000472:	eba2 0208 	sub.w	r2, r2, r8
 8000476:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800047a:	e766      	b.n	800034a <__udivmoddi4+0xfa>
 800047c:	4601      	mov	r1, r0
 800047e:	e718      	b.n	80002b2 <__udivmoddi4+0x62>
 8000480:	4610      	mov	r0, r2
 8000482:	e72c      	b.n	80002de <__udivmoddi4+0x8e>
 8000484:	f1c6 0220 	rsb	r2, r6, #32
 8000488:	fa2e f302 	lsr.w	r3, lr, r2
 800048c:	40b7      	lsls	r7, r6
 800048e:	40b1      	lsls	r1, r6
 8000490:	fa20 f202 	lsr.w	r2, r0, r2
 8000494:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000498:	430a      	orrs	r2, r1
 800049a:	fbb3 f8fe 	udiv	r8, r3, lr
 800049e:	b2bc      	uxth	r4, r7
 80004a0:	fb0e 3318 	mls	r3, lr, r8, r3
 80004a4:	0c11      	lsrs	r1, r2, #16
 80004a6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004aa:	fb08 f904 	mul.w	r9, r8, r4
 80004ae:	40b0      	lsls	r0, r6
 80004b0:	4589      	cmp	r9, r1
 80004b2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80004b6:	b280      	uxth	r0, r0
 80004b8:	d93e      	bls.n	8000538 <__udivmoddi4+0x2e8>
 80004ba:	1879      	adds	r1, r7, r1
 80004bc:	f108 3cff 	add.w	ip, r8, #4294967295
 80004c0:	d201      	bcs.n	80004c6 <__udivmoddi4+0x276>
 80004c2:	4589      	cmp	r9, r1
 80004c4:	d81f      	bhi.n	8000506 <__udivmoddi4+0x2b6>
 80004c6:	eba1 0109 	sub.w	r1, r1, r9
 80004ca:	fbb1 f9fe 	udiv	r9, r1, lr
 80004ce:	fb09 f804 	mul.w	r8, r9, r4
 80004d2:	fb0e 1119 	mls	r1, lr, r9, r1
 80004d6:	b292      	uxth	r2, r2
 80004d8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80004dc:	4542      	cmp	r2, r8
 80004de:	d229      	bcs.n	8000534 <__udivmoddi4+0x2e4>
 80004e0:	18ba      	adds	r2, r7, r2
 80004e2:	f109 31ff 	add.w	r1, r9, #4294967295
 80004e6:	d2c4      	bcs.n	8000472 <__udivmoddi4+0x222>
 80004e8:	4542      	cmp	r2, r8
 80004ea:	d2c2      	bcs.n	8000472 <__udivmoddi4+0x222>
 80004ec:	f1a9 0102 	sub.w	r1, r9, #2
 80004f0:	443a      	add	r2, r7
 80004f2:	e7be      	b.n	8000472 <__udivmoddi4+0x222>
 80004f4:	45f0      	cmp	r8, lr
 80004f6:	d29d      	bcs.n	8000434 <__udivmoddi4+0x1e4>
 80004f8:	ebbe 0302 	subs.w	r3, lr, r2
 80004fc:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000500:	3801      	subs	r0, #1
 8000502:	46e1      	mov	r9, ip
 8000504:	e796      	b.n	8000434 <__udivmoddi4+0x1e4>
 8000506:	eba7 0909 	sub.w	r9, r7, r9
 800050a:	4449      	add	r1, r9
 800050c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000510:	fbb1 f9fe 	udiv	r9, r1, lr
 8000514:	fb09 f804 	mul.w	r8, r9, r4
 8000518:	e7db      	b.n	80004d2 <__udivmoddi4+0x282>
 800051a:	4673      	mov	r3, lr
 800051c:	e77f      	b.n	800041e <__udivmoddi4+0x1ce>
 800051e:	4650      	mov	r0, sl
 8000520:	e766      	b.n	80003f0 <__udivmoddi4+0x1a0>
 8000522:	4608      	mov	r0, r1
 8000524:	e6fd      	b.n	8000322 <__udivmoddi4+0xd2>
 8000526:	443b      	add	r3, r7
 8000528:	3a02      	subs	r2, #2
 800052a:	e733      	b.n	8000394 <__udivmoddi4+0x144>
 800052c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000530:	443b      	add	r3, r7
 8000532:	e71c      	b.n	800036e <__udivmoddi4+0x11e>
 8000534:	4649      	mov	r1, r9
 8000536:	e79c      	b.n	8000472 <__udivmoddi4+0x222>
 8000538:	eba1 0109 	sub.w	r1, r1, r9
 800053c:	46c4      	mov	ip, r8
 800053e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000542:	fb09 f804 	mul.w	r8, r9, r4
 8000546:	e7c4      	b.n	80004d2 <__udivmoddi4+0x282>

08000548 <__aeabi_idiv0>:
 8000548:	4770      	bx	lr
 800054a:	bf00      	nop

0800054c <MX_ADC1_Init>:
ADC_HandleTypeDef hadc1;
DMA_HandleTypeDef hdma_adc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 800054c:	b580      	push	{r7, lr}
 800054e:	b08c      	sub	sp, #48	@ 0x30
 8000550:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 8000552:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000556:	2200      	movs	r2, #0
 8000558:	601a      	str	r2, [r3, #0]
 800055a:	605a      	str	r2, [r3, #4]
 800055c:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 800055e:	1d3b      	adds	r3, r7, #4
 8000560:	2220      	movs	r2, #32
 8000562:	2100      	movs	r1, #0
 8000564:	4618      	mov	r0, r3
 8000566:	f00c f8af 	bl	800c6c8 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 800056a:	4b47      	ldr	r3, [pc, #284]	@ (8000688 <MX_ADC1_Init+0x13c>)
 800056c:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 8000570:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000572:	4b45      	ldr	r3, [pc, #276]	@ (8000688 <MX_ADC1_Init+0x13c>)
 8000574:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8000578:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800057a:	4b43      	ldr	r3, [pc, #268]	@ (8000688 <MX_ADC1_Init+0x13c>)
 800057c:	2200      	movs	r2, #0
 800057e:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000580:	4b41      	ldr	r3, [pc, #260]	@ (8000688 <MX_ADC1_Init+0x13c>)
 8000582:	2200      	movs	r2, #0
 8000584:	60da      	str	r2, [r3, #12]
  hadc1.Init.GainCompensation = 0;
 8000586:	4b40      	ldr	r3, [pc, #256]	@ (8000688 <MX_ADC1_Init+0x13c>)
 8000588:	2200      	movs	r2, #0
 800058a:	611a      	str	r2, [r3, #16]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 800058c:	4b3e      	ldr	r3, [pc, #248]	@ (8000688 <MX_ADC1_Init+0x13c>)
 800058e:	2201      	movs	r2, #1
 8000590:	615a      	str	r2, [r3, #20]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000592:	4b3d      	ldr	r3, [pc, #244]	@ (8000688 <MX_ADC1_Init+0x13c>)
 8000594:	2204      	movs	r2, #4
 8000596:	619a      	str	r2, [r3, #24]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8000598:	4b3b      	ldr	r3, [pc, #236]	@ (8000688 <MX_ADC1_Init+0x13c>)
 800059a:	2200      	movs	r2, #0
 800059c:	771a      	strb	r2, [r3, #28]
  hadc1.Init.ContinuousConvMode = ENABLE;
 800059e:	4b3a      	ldr	r3, [pc, #232]	@ (8000688 <MX_ADC1_Init+0x13c>)
 80005a0:	2201      	movs	r2, #1
 80005a2:	775a      	strb	r2, [r3, #29]
  hadc1.Init.NbrOfConversion = 4;
 80005a4:	4b38      	ldr	r3, [pc, #224]	@ (8000688 <MX_ADC1_Init+0x13c>)
 80005a6:	2204      	movs	r2, #4
 80005a8:	621a      	str	r2, [r3, #32]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80005aa:	4b37      	ldr	r3, [pc, #220]	@ (8000688 <MX_ADC1_Init+0x13c>)
 80005ac:	2200      	movs	r2, #0
 80005ae:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80005b2:	4b35      	ldr	r3, [pc, #212]	@ (8000688 <MX_ADC1_Init+0x13c>)
 80005b4:	2200      	movs	r2, #0
 80005b6:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80005b8:	4b33      	ldr	r3, [pc, #204]	@ (8000688 <MX_ADC1_Init+0x13c>)
 80005ba:	2200      	movs	r2, #0
 80005bc:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc1.Init.DMAContinuousRequests = ENABLE;
 80005be:	4b32      	ldr	r3, [pc, #200]	@ (8000688 <MX_ADC1_Init+0x13c>)
 80005c0:	2201      	movs	r2, #1
 80005c2:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80005c6:	4b30      	ldr	r3, [pc, #192]	@ (8000688 <MX_ADC1_Init+0x13c>)
 80005c8:	2200      	movs	r2, #0
 80005ca:	63da      	str	r2, [r3, #60]	@ 0x3c
  hadc1.Init.OversamplingMode = DISABLE;
 80005cc:	4b2e      	ldr	r3, [pc, #184]	@ (8000688 <MX_ADC1_Init+0x13c>)
 80005ce:	2200      	movs	r2, #0
 80005d0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80005d4:	482c      	ldr	r0, [pc, #176]	@ (8000688 <MX_ADC1_Init+0x13c>)
 80005d6:	f003 fc03 	bl	8003de0 <HAL_ADC_Init>
 80005da:	4603      	mov	r3, r0
 80005dc:	2b00      	cmp	r3, #0
 80005de:	d001      	beq.n	80005e4 <MX_ADC1_Init+0x98>
  {
    Error_Handler();
 80005e0:	f000 fbd0 	bl	8000d84 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 80005e4:	2300      	movs	r3, #0
 80005e6:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 80005e8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80005ec:	4619      	mov	r1, r3
 80005ee:	4826      	ldr	r0, [pc, #152]	@ (8000688 <MX_ADC1_Init+0x13c>)
 80005f0:	f004 fb7c 	bl	8004cec <HAL_ADCEx_MultiModeConfigChannel>
 80005f4:	4603      	mov	r3, r0
 80005f6:	2b00      	cmp	r3, #0
 80005f8:	d001      	beq.n	80005fe <MX_ADC1_Init+0xb2>
  {
    Error_Handler();
 80005fa:	f000 fbc3 	bl	8000d84 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_11;
 80005fe:	4b23      	ldr	r3, [pc, #140]	@ (800068c <MX_ADC1_Init+0x140>)
 8000600:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000602:	2306      	movs	r3, #6
 8000604:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_92CYCLES_5;
 8000606:	2305      	movs	r3, #5
 8000608:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 800060a:	237f      	movs	r3, #127	@ 0x7f
 800060c:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 800060e:	2304      	movs	r3, #4
 8000610:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 8000612:	2300      	movs	r3, #0
 8000614:	61bb      	str	r3, [r7, #24]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000616:	1d3b      	adds	r3, r7, #4
 8000618:	4619      	mov	r1, r3
 800061a:	481b      	ldr	r0, [pc, #108]	@ (8000688 <MX_ADC1_Init+0x13c>)
 800061c:	f003 fe36 	bl	800428c <HAL_ADC_ConfigChannel>
 8000620:	4603      	mov	r3, r0
 8000622:	2b00      	cmp	r3, #0
 8000624:	d001      	beq.n	800062a <MX_ADC1_Init+0xde>
  {
    Error_Handler();
 8000626:	f000 fbad 	bl	8000d84 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_12;
 800062a:	4b19      	ldr	r3, [pc, #100]	@ (8000690 <MX_ADC1_Init+0x144>)
 800062c:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 800062e:	230c      	movs	r3, #12
 8000630:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000632:	1d3b      	adds	r3, r7, #4
 8000634:	4619      	mov	r1, r3
 8000636:	4814      	ldr	r0, [pc, #80]	@ (8000688 <MX_ADC1_Init+0x13c>)
 8000638:	f003 fe28 	bl	800428c <HAL_ADC_ConfigChannel>
 800063c:	4603      	mov	r3, r0
 800063e:	2b00      	cmp	r3, #0
 8000640:	d001      	beq.n	8000646 <MX_ADC1_Init+0xfa>
  {
    Error_Handler();
 8000642:	f000 fb9f 	bl	8000d84 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_14;
 8000646:	4b13      	ldr	r3, [pc, #76]	@ (8000694 <MX_ADC1_Init+0x148>)
 8000648:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 800064a:	2312      	movs	r3, #18
 800064c:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800064e:	1d3b      	adds	r3, r7, #4
 8000650:	4619      	mov	r1, r3
 8000652:	480d      	ldr	r0, [pc, #52]	@ (8000688 <MX_ADC1_Init+0x13c>)
 8000654:	f003 fe1a 	bl	800428c <HAL_ADC_ConfigChannel>
 8000658:	4603      	mov	r3, r0
 800065a:	2b00      	cmp	r3, #0
 800065c:	d001      	beq.n	8000662 <MX_ADC1_Init+0x116>
  {
    Error_Handler();
 800065e:	f000 fb91 	bl	8000d84 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_15;
 8000662:	4b0d      	ldr	r3, [pc, #52]	@ (8000698 <MX_ADC1_Init+0x14c>)
 8000664:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_4;
 8000666:	2318      	movs	r3, #24
 8000668:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800066a:	1d3b      	adds	r3, r7, #4
 800066c:	4619      	mov	r1, r3
 800066e:	4806      	ldr	r0, [pc, #24]	@ (8000688 <MX_ADC1_Init+0x13c>)
 8000670:	f003 fe0c 	bl	800428c <HAL_ADC_ConfigChannel>
 8000674:	4603      	mov	r3, r0
 8000676:	2b00      	cmp	r3, #0
 8000678:	d001      	beq.n	800067e <MX_ADC1_Init+0x132>
  {
    Error_Handler();
 800067a:	f000 fb83 	bl	8000d84 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800067e:	bf00      	nop
 8000680:	3730      	adds	r7, #48	@ 0x30
 8000682:	46bd      	mov	sp, r7
 8000684:	bd80      	pop	{r7, pc}
 8000686:	bf00      	nop
 8000688:	200002bc 	.word	0x200002bc
 800068c:	2e300800 	.word	0x2e300800
 8000690:	32601000 	.word	0x32601000
 8000694:	3ac04000 	.word	0x3ac04000
 8000698:	3ef08000 	.word	0x3ef08000

0800069c <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 800069c:	b580      	push	{r7, lr}
 800069e:	b09a      	sub	sp, #104	@ 0x68
 80006a0:	af00      	add	r7, sp, #0
 80006a2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80006a4:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80006a8:	2200      	movs	r2, #0
 80006aa:	601a      	str	r2, [r3, #0]
 80006ac:	605a      	str	r2, [r3, #4]
 80006ae:	609a      	str	r2, [r3, #8]
 80006b0:	60da      	str	r2, [r3, #12]
 80006b2:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80006b4:	f107 0310 	add.w	r3, r7, #16
 80006b8:	2244      	movs	r2, #68	@ 0x44
 80006ba:	2100      	movs	r1, #0
 80006bc:	4618      	mov	r0, r3
 80006be:	f00c f803 	bl	800c6c8 <memset>
  if(adcHandle->Instance==ADC1)
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80006ca:	d160      	bne.n	800078e <HAL_ADC_MspInit+0xf2>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 80006cc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80006d0:	613b      	str	r3, [r7, #16]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 80006d2:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 80006d6:	64fb      	str	r3, [r7, #76]	@ 0x4c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80006d8:	f107 0310 	add.w	r3, r7, #16
 80006dc:	4618      	mov	r0, r3
 80006de:	f006 fd0d 	bl	80070fc <HAL_RCCEx_PeriphCLKConfig>
 80006e2:	4603      	mov	r3, r0
 80006e4:	2b00      	cmp	r3, #0
 80006e6:	d001      	beq.n	80006ec <HAL_ADC_MspInit+0x50>
    {
      Error_Handler();
 80006e8:	f000 fb4c 	bl	8000d84 <Error_Handler>
    }

    /* ADC1 clock enable */
    __HAL_RCC_ADC12_CLK_ENABLE();
 80006ec:	4b2a      	ldr	r3, [pc, #168]	@ (8000798 <HAL_ADC_MspInit+0xfc>)
 80006ee:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80006f0:	4a29      	ldr	r2, [pc, #164]	@ (8000798 <HAL_ADC_MspInit+0xfc>)
 80006f2:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80006f6:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80006f8:	4b27      	ldr	r3, [pc, #156]	@ (8000798 <HAL_ADC_MspInit+0xfc>)
 80006fa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80006fc:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8000700:	60fb      	str	r3, [r7, #12]
 8000702:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000704:	4b24      	ldr	r3, [pc, #144]	@ (8000798 <HAL_ADC_MspInit+0xfc>)
 8000706:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000708:	4a23      	ldr	r2, [pc, #140]	@ (8000798 <HAL_ADC_MspInit+0xfc>)
 800070a:	f043 0302 	orr.w	r3, r3, #2
 800070e:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000710:	4b21      	ldr	r3, [pc, #132]	@ (8000798 <HAL_ADC_MspInit+0xfc>)
 8000712:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000714:	f003 0302 	and.w	r3, r3, #2
 8000718:	60bb      	str	r3, [r7, #8]
 800071a:	68bb      	ldr	r3, [r7, #8]
    PB0     ------> ADC1_IN15
    PB1     ------> ADC1_IN12
    PB11     ------> ADC1_IN14
    PB12     ------> ADC1_IN11
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_11|GPIO_PIN_12;
 800071c:	f641 0303 	movw	r3, #6147	@ 0x1803
 8000720:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000722:	2303      	movs	r3, #3
 8000724:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000726:	2300      	movs	r3, #0
 8000728:	65fb      	str	r3, [r7, #92]	@ 0x5c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800072a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800072e:	4619      	mov	r1, r3
 8000730:	481a      	ldr	r0, [pc, #104]	@ (800079c <HAL_ADC_MspInit+0x100>)
 8000732:	f005 fd1d 	bl	8006170 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Channel1;
 8000736:	4b1a      	ldr	r3, [pc, #104]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 8000738:	4a1a      	ldr	r2, [pc, #104]	@ (80007a4 <HAL_ADC_MspInit+0x108>)
 800073a:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 800073c:	4b18      	ldr	r3, [pc, #96]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 800073e:	2205      	movs	r2, #5
 8000740:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000742:	4b17      	ldr	r3, [pc, #92]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 8000744:	2200      	movs	r2, #0
 8000746:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8000748:	4b15      	ldr	r3, [pc, #84]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 800074a:	2200      	movs	r2, #0
 800074c:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 800074e:	4b14      	ldr	r3, [pc, #80]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 8000750:	2280      	movs	r2, #128	@ 0x80
 8000752:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8000754:	4b12      	ldr	r3, [pc, #72]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 8000756:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800075a:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800075c:	4b10      	ldr	r3, [pc, #64]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 800075e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8000762:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 8000764:	4b0e      	ldr	r3, [pc, #56]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 8000766:	2220      	movs	r2, #32
 8000768:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 800076a:	4b0d      	ldr	r3, [pc, #52]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 800076c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000770:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8000772:	480b      	ldr	r0, [pc, #44]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 8000774:	f004 fd78 	bl	8005268 <HAL_DMA_Init>
 8000778:	4603      	mov	r3, r0
 800077a:	2b00      	cmp	r3, #0
 800077c:	d001      	beq.n	8000782 <HAL_ADC_MspInit+0xe6>
    {
      Error_Handler();
 800077e:	f000 fb01 	bl	8000d84 <Error_Handler>
    }

    __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	4a06      	ldr	r2, [pc, #24]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 8000786:	655a      	str	r2, [r3, #84]	@ 0x54
 8000788:	4a05      	ldr	r2, [pc, #20]	@ (80007a0 <HAL_ADC_MspInit+0x104>)
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	6293      	str	r3, [r2, #40]	@ 0x28

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
}
 800078e:	bf00      	nop
 8000790:	3768      	adds	r7, #104	@ 0x68
 8000792:	46bd      	mov	sp, r7
 8000794:	bd80      	pop	{r7, pc}
 8000796:	bf00      	nop
 8000798:	40021000 	.word	0x40021000
 800079c:	48000400 	.word	0x48000400
 80007a0:	20000328 	.word	0x20000328
 80007a4:	40020408 	.word	0x40020408

080007a8 <MX_FREERTOS_Init>:
 80007a8:	b580      	push	{r7, lr}
 80007aa:	af00      	add	r7, sp, #0
 80007ac:	4a0c      	ldr	r2, [pc, #48]	@ (80007e0 <MX_FREERTOS_Init+0x38>)
 80007ae:	2100      	movs	r1, #0
 80007b0:	480c      	ldr	r0, [pc, #48]	@ (80007e4 <MX_FREERTOS_Init+0x3c>)
 80007b2:	f009 f8e8 	bl	8009986 <osThreadNew>
 80007b6:	4603      	mov	r3, r0
 80007b8:	4a0b      	ldr	r2, [pc, #44]	@ (80007e8 <MX_FREERTOS_Init+0x40>)
 80007ba:	6013      	str	r3, [r2, #0]
 80007bc:	4a0b      	ldr	r2, [pc, #44]	@ (80007ec <MX_FREERTOS_Init+0x44>)
 80007be:	2100      	movs	r1, #0
 80007c0:	480b      	ldr	r0, [pc, #44]	@ (80007f0 <MX_FREERTOS_Init+0x48>)
 80007c2:	f009 f8e0 	bl	8009986 <osThreadNew>
 80007c6:	4603      	mov	r3, r0
 80007c8:	4a0a      	ldr	r2, [pc, #40]	@ (80007f4 <MX_FREERTOS_Init+0x4c>)
 80007ca:	6013      	str	r3, [r2, #0]
 80007cc:	4a0a      	ldr	r2, [pc, #40]	@ (80007f8 <MX_FREERTOS_Init+0x50>)
 80007ce:	2100      	movs	r1, #0
 80007d0:	480a      	ldr	r0, [pc, #40]	@ (80007fc <MX_FREERTOS_Init+0x54>)
 80007d2:	f009 f8d8 	bl	8009986 <osThreadNew>
 80007d6:	4603      	mov	r3, r0
 80007d8:	4a09      	ldr	r2, [pc, #36]	@ (8000800 <MX_FREERTOS_Init+0x58>)
 80007da:	6013      	str	r3, [r2, #0]
 80007dc:	bf00      	nop
 80007de:	bd80      	pop	{r7, pc}
 80007e0:	0800c948 	.word	0x0800c948
 80007e4:	08001a21 	.word	0x08001a21
 80007e8:	20000388 	.word	0x20000388
 80007ec:	0800c96c 	.word	0x0800c96c
 80007f0:	080030a1 	.word	0x080030a1
 80007f4:	2000038c 	.word	0x2000038c
 80007f8:	0800c990 	.word	0x0800c990
 80007fc:	08001505 	.word	0x08001505
 8000800:	20000390 	.word	0x20000390

08000804 <MX_CORDIC_Init>:
 8000804:	b580      	push	{r7, lr}
 8000806:	af00      	add	r7, sp, #0
 8000808:	4b06      	ldr	r3, [pc, #24]	@ (8000824 <MX_CORDIC_Init+0x20>)
 800080a:	4a07      	ldr	r2, [pc, #28]	@ (8000828 <MX_CORDIC_Init+0x24>)
 800080c:	601a      	str	r2, [r3, #0]
 800080e:	4805      	ldr	r0, [pc, #20]	@ (8000824 <MX_CORDIC_Init+0x20>)
 8000810:	f004 fb10 	bl	8004e34 <HAL_CORDIC_Init>
 8000814:	4603      	mov	r3, r0
 8000816:	2b00      	cmp	r3, #0
 8000818:	d001      	beq.n	800081e <MX_CORDIC_Init+0x1a>
 800081a:	f000 fab3 	bl	8000d84 <Error_Handler>
 800081e:	bf00      	nop
 8000820:	bd80      	pop	{r7, pc}
 8000822:	bf00      	nop
 8000824:	20000394 	.word	0x20000394
 8000828:	40020c00 	.word	0x40020c00

0800082c <HAL_CORDIC_MspInit>:
 800082c:	b580      	push	{r7, lr}
 800082e:	b084      	sub	sp, #16
 8000830:	af00      	add	r7, sp, #0
 8000832:	6078      	str	r0, [r7, #4]
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	681b      	ldr	r3, [r3, #0]
 8000838:	4a34      	ldr	r2, [pc, #208]	@ (800090c <HAL_CORDIC_MspInit+0xe0>)
 800083a:	4293      	cmp	r3, r2
 800083c:	d161      	bne.n	8000902 <HAL_CORDIC_MspInit+0xd6>
 800083e:	4b34      	ldr	r3, [pc, #208]	@ (8000910 <HAL_CORDIC_MspInit+0xe4>)
 8000840:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8000842:	4a33      	ldr	r2, [pc, #204]	@ (8000910 <HAL_CORDIC_MspInit+0xe4>)
 8000844:	f043 0308 	orr.w	r3, r3, #8
 8000848:	6493      	str	r3, [r2, #72]	@ 0x48
 800084a:	4b31      	ldr	r3, [pc, #196]	@ (8000910 <HAL_CORDIC_MspInit+0xe4>)
 800084c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800084e:	f003 0308 	and.w	r3, r3, #8
 8000852:	60fb      	str	r3, [r7, #12]
 8000854:	68fb      	ldr	r3, [r7, #12]
 8000856:	4b2f      	ldr	r3, [pc, #188]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 8000858:	4a2f      	ldr	r2, [pc, #188]	@ (8000918 <HAL_CORDIC_MspInit+0xec>)
 800085a:	601a      	str	r2, [r3, #0]
 800085c:	4b2d      	ldr	r3, [pc, #180]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 800085e:	2270      	movs	r2, #112	@ 0x70
 8000860:	605a      	str	r2, [r3, #4]
 8000862:	4b2c      	ldr	r3, [pc, #176]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 8000864:	2200      	movs	r2, #0
 8000866:	609a      	str	r2, [r3, #8]
 8000868:	4b2a      	ldr	r3, [pc, #168]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 800086a:	2200      	movs	r2, #0
 800086c:	60da      	str	r2, [r3, #12]
 800086e:	4b29      	ldr	r3, [pc, #164]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 8000870:	2280      	movs	r2, #128	@ 0x80
 8000872:	611a      	str	r2, [r3, #16]
 8000874:	4b27      	ldr	r3, [pc, #156]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 8000876:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800087a:	615a      	str	r2, [r3, #20]
 800087c:	4b25      	ldr	r3, [pc, #148]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 800087e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8000882:	619a      	str	r2, [r3, #24]
 8000884:	4b23      	ldr	r3, [pc, #140]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 8000886:	2200      	movs	r2, #0
 8000888:	61da      	str	r2, [r3, #28]
 800088a:	4b22      	ldr	r3, [pc, #136]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 800088c:	2200      	movs	r2, #0
 800088e:	621a      	str	r2, [r3, #32]
 8000890:	4820      	ldr	r0, [pc, #128]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 8000892:	f004 fce9 	bl	8005268 <HAL_DMA_Init>
 8000896:	4603      	mov	r3, r0
 8000898:	2b00      	cmp	r3, #0
 800089a:	d001      	beq.n	80008a0 <HAL_CORDIC_MspInit+0x74>
 800089c:	f000 fa72 	bl	8000d84 <Error_Handler>
 80008a0:	687b      	ldr	r3, [r7, #4]
 80008a2:	4a1c      	ldr	r2, [pc, #112]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 80008a4:	61da      	str	r2, [r3, #28]
 80008a6:	4a1b      	ldr	r2, [pc, #108]	@ (8000914 <HAL_CORDIC_MspInit+0xe8>)
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	6293      	str	r3, [r2, #40]	@ 0x28
 80008ac:	4b1b      	ldr	r3, [pc, #108]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008ae:	4a1c      	ldr	r2, [pc, #112]	@ (8000920 <HAL_CORDIC_MspInit+0xf4>)
 80008b0:	601a      	str	r2, [r3, #0]
 80008b2:	4b1a      	ldr	r3, [pc, #104]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008b4:	2271      	movs	r2, #113	@ 0x71
 80008b6:	605a      	str	r2, [r3, #4]
 80008b8:	4b18      	ldr	r3, [pc, #96]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008ba:	2210      	movs	r2, #16
 80008bc:	609a      	str	r2, [r3, #8]
 80008be:	4b17      	ldr	r3, [pc, #92]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008c0:	2200      	movs	r2, #0
 80008c2:	60da      	str	r2, [r3, #12]
 80008c4:	4b15      	ldr	r3, [pc, #84]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008c6:	2280      	movs	r2, #128	@ 0x80
 80008c8:	611a      	str	r2, [r3, #16]
 80008ca:	4b14      	ldr	r3, [pc, #80]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008cc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80008d0:	615a      	str	r2, [r3, #20]
 80008d2:	4b12      	ldr	r3, [pc, #72]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008d4:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80008d8:	619a      	str	r2, [r3, #24]
 80008da:	4b10      	ldr	r3, [pc, #64]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008dc:	2200      	movs	r2, #0
 80008de:	61da      	str	r2, [r3, #28]
 80008e0:	4b0e      	ldr	r3, [pc, #56]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008e2:	2200      	movs	r2, #0
 80008e4:	621a      	str	r2, [r3, #32]
 80008e6:	480d      	ldr	r0, [pc, #52]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008e8:	f004 fcbe 	bl	8005268 <HAL_DMA_Init>
 80008ec:	4603      	mov	r3, r0
 80008ee:	2b00      	cmp	r3, #0
 80008f0:	d001      	beq.n	80008f6 <HAL_CORDIC_MspInit+0xca>
 80008f2:	f000 fa47 	bl	8000d84 <Error_Handler>
 80008f6:	687b      	ldr	r3, [r7, #4]
 80008f8:	4a08      	ldr	r2, [pc, #32]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008fa:	619a      	str	r2, [r3, #24]
 80008fc:	4a07      	ldr	r2, [pc, #28]	@ (800091c <HAL_CORDIC_MspInit+0xf0>)
 80008fe:	687b      	ldr	r3, [r7, #4]
 8000900:	6293      	str	r3, [r2, #40]	@ 0x28
 8000902:	bf00      	nop
 8000904:	3710      	adds	r7, #16
 8000906:	46bd      	mov	sp, r7
 8000908:	bd80      	pop	{r7, pc}
 800090a:	bf00      	nop
 800090c:	40020c00 	.word	0x40020c00
 8000910:	40021000 	.word	0x40021000
 8000914:	200003bc 	.word	0x200003bc
 8000918:	4002041c 	.word	0x4002041c
 800091c:	2000041c 	.word	0x2000041c
 8000920:	40020430 	.word	0x40020430

08000924 <MX_DMA_Init>:
 8000924:	b580      	push	{r7, lr}
 8000926:	b082      	sub	sp, #8
 8000928:	af00      	add	r7, sp, #0
 800092a:	4b1a      	ldr	r3, [pc, #104]	@ (8000994 <MX_DMA_Init+0x70>)
 800092c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800092e:	4a19      	ldr	r2, [pc, #100]	@ (8000994 <MX_DMA_Init+0x70>)
 8000930:	f043 0304 	orr.w	r3, r3, #4
 8000934:	6493      	str	r3, [r2, #72]	@ 0x48
 8000936:	4b17      	ldr	r3, [pc, #92]	@ (8000994 <MX_DMA_Init+0x70>)
 8000938:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800093a:	f003 0304 	and.w	r3, r3, #4
 800093e:	607b      	str	r3, [r7, #4]
 8000940:	687b      	ldr	r3, [r7, #4]
 8000942:	4b14      	ldr	r3, [pc, #80]	@ (8000994 <MX_DMA_Init+0x70>)
 8000944:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8000946:	4a13      	ldr	r2, [pc, #76]	@ (8000994 <MX_DMA_Init+0x70>)
 8000948:	f043 0302 	orr.w	r3, r3, #2
 800094c:	6493      	str	r3, [r2, #72]	@ 0x48
 800094e:	4b11      	ldr	r3, [pc, #68]	@ (8000994 <MX_DMA_Init+0x70>)
 8000950:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8000952:	f003 0302 	and.w	r3, r3, #2
 8000956:	603b      	str	r3, [r7, #0]
 8000958:	683b      	ldr	r3, [r7, #0]
 800095a:	2200      	movs	r2, #0
 800095c:	2105      	movs	r1, #5
 800095e:	2038      	movs	r0, #56	@ 0x38
 8000960:	f004 fc5a 	bl	8005218 <HAL_NVIC_SetPriority>
 8000964:	2038      	movs	r0, #56	@ 0x38
 8000966:	f004 fc71 	bl	800524c <HAL_NVIC_EnableIRQ>
 800096a:	2200      	movs	r2, #0
 800096c:	2105      	movs	r1, #5
 800096e:	2039      	movs	r0, #57	@ 0x39
 8000970:	f004 fc52 	bl	8005218 <HAL_NVIC_SetPriority>
 8000974:	2039      	movs	r0, #57	@ 0x39
 8000976:	f004 fc69 	bl	800524c <HAL_NVIC_EnableIRQ>
 800097a:	2200      	movs	r2, #0
 800097c:	2105      	movs	r1, #5
 800097e:	203a      	movs	r0, #58	@ 0x3a
 8000980:	f004 fc4a 	bl	8005218 <HAL_NVIC_SetPriority>
 8000984:	203a      	movs	r0, #58	@ 0x3a
 8000986:	f004 fc61 	bl	800524c <HAL_NVIC_EnableIRQ>
 800098a:	bf00      	nop
 800098c:	3708      	adds	r7, #8
 800098e:	46bd      	mov	sp, r7
 8000990:	bd80      	pop	{r7, pc}
 8000992:	bf00      	nop
 8000994:	40021000 	.word	0x40021000

08000998 <MX_FDCAN1_Init>:
 8000998:	b580      	push	{r7, lr}
 800099a:	af00      	add	r7, sp, #0
 800099c:	4b1f      	ldr	r3, [pc, #124]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 800099e:	4a20      	ldr	r2, [pc, #128]	@ (8000a20 <MX_FDCAN1_Init+0x88>)
 80009a0:	601a      	str	r2, [r3, #0]
 80009a2:	4b1e      	ldr	r3, [pc, #120]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009a4:	2200      	movs	r2, #0
 80009a6:	605a      	str	r2, [r3, #4]
 80009a8:	4b1c      	ldr	r3, [pc, #112]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009aa:	2200      	movs	r2, #0
 80009ac:	609a      	str	r2, [r3, #8]
 80009ae:	4b1b      	ldr	r3, [pc, #108]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009b0:	2200      	movs	r2, #0
 80009b2:	60da      	str	r2, [r3, #12]
 80009b4:	4b19      	ldr	r3, [pc, #100]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009b6:	2200      	movs	r2, #0
 80009b8:	741a      	strb	r2, [r3, #16]
 80009ba:	4b18      	ldr	r3, [pc, #96]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009bc:	2200      	movs	r2, #0
 80009be:	745a      	strb	r2, [r3, #17]
 80009c0:	4b16      	ldr	r3, [pc, #88]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009c2:	2200      	movs	r2, #0
 80009c4:	749a      	strb	r2, [r3, #18]
 80009c6:	4b15      	ldr	r3, [pc, #84]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009c8:	2214      	movs	r2, #20
 80009ca:	615a      	str	r2, [r3, #20]
 80009cc:	4b13      	ldr	r3, [pc, #76]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009ce:	2201      	movs	r2, #1
 80009d0:	619a      	str	r2, [r3, #24]
 80009d2:	4b12      	ldr	r3, [pc, #72]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009d4:	220e      	movs	r2, #14
 80009d6:	61da      	str	r2, [r3, #28]
 80009d8:	4b10      	ldr	r3, [pc, #64]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009da:	2202      	movs	r2, #2
 80009dc:	621a      	str	r2, [r3, #32]
 80009de:	4b0f      	ldr	r3, [pc, #60]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009e0:	2202      	movs	r2, #2
 80009e2:	625a      	str	r2, [r3, #36]	@ 0x24
 80009e4:	4b0d      	ldr	r3, [pc, #52]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009e6:	2201      	movs	r2, #1
 80009e8:	629a      	str	r2, [r3, #40]	@ 0x28
 80009ea:	4b0c      	ldr	r3, [pc, #48]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009ec:	220e      	movs	r2, #14
 80009ee:	62da      	str	r2, [r3, #44]	@ 0x2c
 80009f0:	4b0a      	ldr	r3, [pc, #40]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009f2:	2202      	movs	r2, #2
 80009f4:	631a      	str	r2, [r3, #48]	@ 0x30
 80009f6:	4b09      	ldr	r3, [pc, #36]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009f8:	2202      	movs	r2, #2
 80009fa:	635a      	str	r2, [r3, #52]	@ 0x34
 80009fc:	4b07      	ldr	r3, [pc, #28]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 80009fe:	2200      	movs	r2, #0
 8000a00:	639a      	str	r2, [r3, #56]	@ 0x38
 8000a02:	4b06      	ldr	r3, [pc, #24]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 8000a04:	2200      	movs	r2, #0
 8000a06:	63da      	str	r2, [r3, #60]	@ 0x3c
 8000a08:	4804      	ldr	r0, [pc, #16]	@ (8000a1c <MX_FDCAN1_Init+0x84>)
 8000a0a:	f004 ff01 	bl	8005810 <HAL_FDCAN_Init>
 8000a0e:	4603      	mov	r3, r0
 8000a10:	2b00      	cmp	r3, #0
 8000a12:	d001      	beq.n	8000a18 <MX_FDCAN1_Init+0x80>
 8000a14:	f000 f9b6 	bl	8000d84 <Error_Handler>
 8000a18:	bf00      	nop
 8000a1a:	bd80      	pop	{r7, pc}
 8000a1c:	2000047c 	.word	0x2000047c
 8000a20:	40006400 	.word	0x40006400

08000a24 <HAL_FDCAN_MspInit>:
 8000a24:	b580      	push	{r7, lr}
 8000a26:	b09a      	sub	sp, #104	@ 0x68
 8000a28:	af00      	add	r7, sp, #0
 8000a2a:	6078      	str	r0, [r7, #4]
 8000a2c:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8000a30:	2200      	movs	r2, #0
 8000a32:	601a      	str	r2, [r3, #0]
 8000a34:	605a      	str	r2, [r3, #4]
 8000a36:	609a      	str	r2, [r3, #8]
 8000a38:	60da      	str	r2, [r3, #12]
 8000a3a:	611a      	str	r2, [r3, #16]
 8000a3c:	f107 0310 	add.w	r3, r7, #16
 8000a40:	2244      	movs	r2, #68	@ 0x44
 8000a42:	2100      	movs	r1, #0
 8000a44:	4618      	mov	r0, r3
 8000a46:	f00b fe3f 	bl	800c6c8 <memset>
 8000a4a:	687b      	ldr	r3, [r7, #4]
 8000a4c:	681b      	ldr	r3, [r3, #0]
 8000a4e:	4a28      	ldr	r2, [pc, #160]	@ (8000af0 <HAL_FDCAN_MspInit+0xcc>)
 8000a50:	4293      	cmp	r3, r2
 8000a52:	d149      	bne.n	8000ae8 <HAL_FDCAN_MspInit+0xc4>
 8000a54:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000a58:	613b      	str	r3, [r7, #16]
 8000a5a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8000a5e:	643b      	str	r3, [r7, #64]	@ 0x40
 8000a60:	f107 0310 	add.w	r3, r7, #16
 8000a64:	4618      	mov	r0, r3
 8000a66:	f006 fb49 	bl	80070fc <HAL_RCCEx_PeriphCLKConfig>
 8000a6a:	4603      	mov	r3, r0
 8000a6c:	2b00      	cmp	r3, #0
 8000a6e:	d001      	beq.n	8000a74 <HAL_FDCAN_MspInit+0x50>
 8000a70:	f000 f988 	bl	8000d84 <Error_Handler>
 8000a74:	4b1f      	ldr	r3, [pc, #124]	@ (8000af4 <HAL_FDCAN_MspInit+0xd0>)
 8000a76:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000a78:	4a1e      	ldr	r2, [pc, #120]	@ (8000af4 <HAL_FDCAN_MspInit+0xd0>)
 8000a7a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000a7e:	6593      	str	r3, [r2, #88]	@ 0x58
 8000a80:	4b1c      	ldr	r3, [pc, #112]	@ (8000af4 <HAL_FDCAN_MspInit+0xd0>)
 8000a82:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000a84:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000a88:	60fb      	str	r3, [r7, #12]
 8000a8a:	68fb      	ldr	r3, [r7, #12]
 8000a8c:	4b19      	ldr	r3, [pc, #100]	@ (8000af4 <HAL_FDCAN_MspInit+0xd0>)
 8000a8e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000a90:	4a18      	ldr	r2, [pc, #96]	@ (8000af4 <HAL_FDCAN_MspInit+0xd0>)
 8000a92:	f043 0301 	orr.w	r3, r3, #1
 8000a96:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000a98:	4b16      	ldr	r3, [pc, #88]	@ (8000af4 <HAL_FDCAN_MspInit+0xd0>)
 8000a9a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000a9c:	f003 0301 	and.w	r3, r3, #1
 8000aa0:	60bb      	str	r3, [r7, #8]
 8000aa2:	68bb      	ldr	r3, [r7, #8]
 8000aa4:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 8000aa8:	657b      	str	r3, [r7, #84]	@ 0x54
 8000aaa:	2302      	movs	r3, #2
 8000aac:	65bb      	str	r3, [r7, #88]	@ 0x58
 8000aae:	2300      	movs	r3, #0
 8000ab0:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8000ab2:	2300      	movs	r3, #0
 8000ab4:	663b      	str	r3, [r7, #96]	@ 0x60
 8000ab6:	2309      	movs	r3, #9
 8000ab8:	667b      	str	r3, [r7, #100]	@ 0x64
 8000aba:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8000abe:	4619      	mov	r1, r3
 8000ac0:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000ac4:	f005 fb54 	bl	8006170 <HAL_GPIO_Init>
 8000ac8:	2200      	movs	r2, #0
 8000aca:	2105      	movs	r1, #5
 8000acc:	2015      	movs	r0, #21
 8000ace:	f004 fba3 	bl	8005218 <HAL_NVIC_SetPriority>
 8000ad2:	2015      	movs	r0, #21
 8000ad4:	f004 fbba 	bl	800524c <HAL_NVIC_EnableIRQ>
 8000ad8:	2200      	movs	r2, #0
 8000ada:	2105      	movs	r1, #5
 8000adc:	2016      	movs	r0, #22
 8000ade:	f004 fb9b 	bl	8005218 <HAL_NVIC_SetPriority>
 8000ae2:	2016      	movs	r0, #22
 8000ae4:	f004 fbb2 	bl	800524c <HAL_NVIC_EnableIRQ>
 8000ae8:	bf00      	nop
 8000aea:	3768      	adds	r7, #104	@ 0x68
 8000aec:	46bd      	mov	sp, r7
 8000aee:	bd80      	pop	{r7, pc}
 8000af0:	40006400 	.word	0x40006400
 8000af4:	40021000 	.word	0x40021000

08000af8 <MX_GPIO_Init>:
 8000af8:	b580      	push	{r7, lr}
 8000afa:	b08a      	sub	sp, #40	@ 0x28
 8000afc:	af00      	add	r7, sp, #0
 8000afe:	f107 0314 	add.w	r3, r7, #20
 8000b02:	2200      	movs	r2, #0
 8000b04:	601a      	str	r2, [r3, #0]
 8000b06:	605a      	str	r2, [r3, #4]
 8000b08:	609a      	str	r2, [r3, #8]
 8000b0a:	60da      	str	r2, [r3, #12]
 8000b0c:	611a      	str	r2, [r3, #16]
 8000b0e:	4b49      	ldr	r3, [pc, #292]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b10:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000b12:	4a48      	ldr	r2, [pc, #288]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b14:	f043 0304 	orr.w	r3, r3, #4
 8000b18:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000b1a:	4b46      	ldr	r3, [pc, #280]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b1c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000b1e:	f003 0304 	and.w	r3, r3, #4
 8000b22:	613b      	str	r3, [r7, #16]
 8000b24:	693b      	ldr	r3, [r7, #16]
 8000b26:	4b43      	ldr	r3, [pc, #268]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b28:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000b2a:	4a42      	ldr	r2, [pc, #264]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b2c:	f043 0320 	orr.w	r3, r3, #32
 8000b30:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000b32:	4b40      	ldr	r3, [pc, #256]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b34:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000b36:	f003 0320 	and.w	r3, r3, #32
 8000b3a:	60fb      	str	r3, [r7, #12]
 8000b3c:	68fb      	ldr	r3, [r7, #12]
 8000b3e:	4b3d      	ldr	r3, [pc, #244]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b40:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000b42:	4a3c      	ldr	r2, [pc, #240]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b44:	f043 0301 	orr.w	r3, r3, #1
 8000b48:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000b4a:	4b3a      	ldr	r3, [pc, #232]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b4c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000b4e:	f003 0301 	and.w	r3, r3, #1
 8000b52:	60bb      	str	r3, [r7, #8]
 8000b54:	68bb      	ldr	r3, [r7, #8]
 8000b56:	4b37      	ldr	r3, [pc, #220]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b58:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000b5a:	4a36      	ldr	r2, [pc, #216]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b5c:	f043 0302 	orr.w	r3, r3, #2
 8000b60:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000b62:	4b34      	ldr	r3, [pc, #208]	@ (8000c34 <MX_GPIO_Init+0x13c>)
 8000b64:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000b66:	f003 0302 	and.w	r3, r3, #2
 8000b6a:	607b      	str	r3, [r7, #4]
 8000b6c:	687b      	ldr	r3, [r7, #4]
 8000b6e:	2200      	movs	r2, #0
 8000b70:	2120      	movs	r1, #32
 8000b72:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000b76:	f005 fc7d 	bl	8006474 <HAL_GPIO_WritePin>
 8000b7a:	2200      	movs	r2, #0
 8000b7c:	f44f 6186 	mov.w	r1, #1072	@ 0x430
 8000b80:	482d      	ldr	r0, [pc, #180]	@ (8000c38 <MX_GPIO_Init+0x140>)
 8000b82:	f005 fc77 	bl	8006474 <HAL_GPIO_WritePin>
 8000b86:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000b8a:	617b      	str	r3, [r7, #20]
 8000b8c:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8000b90:	61bb      	str	r3, [r7, #24]
 8000b92:	2300      	movs	r3, #0
 8000b94:	61fb      	str	r3, [r7, #28]
 8000b96:	f107 0314 	add.w	r3, r7, #20
 8000b9a:	4619      	mov	r1, r3
 8000b9c:	4827      	ldr	r0, [pc, #156]	@ (8000c3c <MX_GPIO_Init+0x144>)
 8000b9e:	f005 fae7 	bl	8006170 <HAL_GPIO_Init>
 8000ba2:	230c      	movs	r3, #12
 8000ba4:	617b      	str	r3, [r7, #20]
 8000ba6:	2302      	movs	r3, #2
 8000ba8:	61bb      	str	r3, [r7, #24]
 8000baa:	2300      	movs	r3, #0
 8000bac:	61fb      	str	r3, [r7, #28]
 8000bae:	2300      	movs	r3, #0
 8000bb0:	623b      	str	r3, [r7, #32]
 8000bb2:	230c      	movs	r3, #12
 8000bb4:	627b      	str	r3, [r7, #36]	@ 0x24
 8000bb6:	f107 0314 	add.w	r3, r7, #20
 8000bba:	4619      	mov	r1, r3
 8000bbc:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000bc0:	f005 fad6 	bl	8006170 <HAL_GPIO_Init>
 8000bc4:	2320      	movs	r3, #32
 8000bc6:	617b      	str	r3, [r7, #20]
 8000bc8:	2301      	movs	r3, #1
 8000bca:	61bb      	str	r3, [r7, #24]
 8000bcc:	2300      	movs	r3, #0
 8000bce:	61fb      	str	r3, [r7, #28]
 8000bd0:	2300      	movs	r3, #0
 8000bd2:	623b      	str	r3, [r7, #32]
 8000bd4:	f107 0314 	add.w	r3, r7, #20
 8000bd8:	4619      	mov	r1, r3
 8000bda:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000bde:	f005 fac7 	bl	8006170 <HAL_GPIO_Init>
 8000be2:	f44f 6386 	mov.w	r3, #1072	@ 0x430
 8000be6:	617b      	str	r3, [r7, #20]
 8000be8:	2301      	movs	r3, #1
 8000bea:	61bb      	str	r3, [r7, #24]
 8000bec:	2300      	movs	r3, #0
 8000bee:	61fb      	str	r3, [r7, #28]
 8000bf0:	2300      	movs	r3, #0
 8000bf2:	623b      	str	r3, [r7, #32]
 8000bf4:	f107 0314 	add.w	r3, r7, #20
 8000bf8:	4619      	mov	r1, r3
 8000bfa:	480f      	ldr	r0, [pc, #60]	@ (8000c38 <MX_GPIO_Init+0x140>)
 8000bfc:	f005 fab8 	bl	8006170 <HAL_GPIO_Init>
 8000c00:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 8000c04:	617b      	str	r3, [r7, #20]
 8000c06:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
 8000c0a:	61bb      	str	r3, [r7, #24]
 8000c0c:	2301      	movs	r3, #1
 8000c0e:	61fb      	str	r3, [r7, #28]
 8000c10:	f107 0314 	add.w	r3, r7, #20
 8000c14:	4619      	mov	r1, r3
 8000c16:	4809      	ldr	r0, [pc, #36]	@ (8000c3c <MX_GPIO_Init+0x144>)
 8000c18:	f005 faaa 	bl	8006170 <HAL_GPIO_Init>
 8000c1c:	2200      	movs	r2, #0
 8000c1e:	2105      	movs	r1, #5
 8000c20:	2028      	movs	r0, #40	@ 0x28
 8000c22:	f004 faf9 	bl	8005218 <HAL_NVIC_SetPriority>
 8000c26:	2028      	movs	r0, #40	@ 0x28
 8000c28:	f004 fb10 	bl	800524c <HAL_NVIC_EnableIRQ>
 8000c2c:	bf00      	nop
 8000c2e:	3728      	adds	r7, #40	@ 0x28
 8000c30:	46bd      	mov	sp, r7
 8000c32:	bd80      	pop	{r7, pc}
 8000c34:	40021000 	.word	0x40021000
 8000c38:	48000400 	.word	0x48000400
 8000c3c:	48000800 	.word	0x48000800

08000c40 <main>:
 8000c40:	b580      	push	{r7, lr}
 8000c42:	af00      	add	r7, sp, #0
 8000c44:	f002 fe78 	bl	8003938 <HAL_Init>
 8000c48:	f000 f83c 	bl	8000cc4 <SystemClock_Config>
 8000c4c:	f7ff ff54 	bl	8000af8 <MX_GPIO_Init>
 8000c50:	f7ff fe68 	bl	8000924 <MX_DMA_Init>
 8000c54:	f7ff fc7a 	bl	800054c <MX_ADC1_Init>
 8000c58:	f7ff fe9e 	bl	8000998 <MX_FDCAN1_Init>
 8000c5c:	f000 f9b6 	bl	8000fcc <MX_TIM1_Init>
 8000c60:	f000 fa66 	bl	8001130 <MX_TIM2_Init>
 8000c64:	f7ff fdce 	bl	8000804 <MX_CORDIC_Init>
 8000c68:	f000 fab8 	bl	80011dc <MX_TIM3_Init>
 8000c6c:	f000 fea2 	bl	80019b4 <INIT_OWN>
 8000c70:	f008 fe2a 	bl	80098c8 <osKernelInitialize>
 8000c74:	f7ff fd98 	bl	80007a8 <MX_FREERTOS_Init>
 8000c78:	2000      	movs	r0, #0
 8000c7a:	f002 fce5 	bl	8003648 <BSP_LED_Init>
 8000c7e:	2101      	movs	r1, #1
 8000c80:	2000      	movs	r0, #0
 8000c82:	f002 fd17 	bl	80036b4 <BSP_PB_Init>
 8000c86:	4b0e      	ldr	r3, [pc, #56]	@ (8000cc0 <main+0x80>)
 8000c88:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000c8c:	601a      	str	r2, [r3, #0]
 8000c8e:	4b0c      	ldr	r3, [pc, #48]	@ (8000cc0 <main+0x80>)
 8000c90:	2200      	movs	r2, #0
 8000c92:	605a      	str	r2, [r3, #4]
 8000c94:	4b0a      	ldr	r3, [pc, #40]	@ (8000cc0 <main+0x80>)
 8000c96:	2200      	movs	r2, #0
 8000c98:	811a      	strh	r2, [r3, #8]
 8000c9a:	4b09      	ldr	r3, [pc, #36]	@ (8000cc0 <main+0x80>)
 8000c9c:	2200      	movs	r2, #0
 8000c9e:	815a      	strh	r2, [r3, #10]
 8000ca0:	4b07      	ldr	r3, [pc, #28]	@ (8000cc0 <main+0x80>)
 8000ca2:	2200      	movs	r2, #0
 8000ca4:	819a      	strh	r2, [r3, #12]
 8000ca6:	4906      	ldr	r1, [pc, #24]	@ (8000cc0 <main+0x80>)
 8000ca8:	2000      	movs	r0, #0
 8000caa:	f002 fd8f 	bl	80037cc <BSP_COM_Init>
 8000cae:	4603      	mov	r3, r0
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	d001      	beq.n	8000cb8 <main+0x78>
 8000cb4:	f000 f866 	bl	8000d84 <Error_Handler>
 8000cb8:	f008 fe2a 	bl	8009910 <osKernelStart>
 8000cbc:	bf00      	nop
 8000cbe:	e7fd      	b.n	8000cbc <main+0x7c>
 8000cc0:	200004e0 	.word	0x200004e0

08000cc4 <SystemClock_Config>:
 8000cc4:	b580      	push	{r7, lr}
 8000cc6:	b094      	sub	sp, #80	@ 0x50
 8000cc8:	af00      	add	r7, sp, #0
 8000cca:	f107 0318 	add.w	r3, r7, #24
 8000cce:	2238      	movs	r2, #56	@ 0x38
 8000cd0:	2100      	movs	r1, #0
 8000cd2:	4618      	mov	r0, r3
 8000cd4:	f00b fcf8 	bl	800c6c8 <memset>
 8000cd8:	1d3b      	adds	r3, r7, #4
 8000cda:	2200      	movs	r2, #0
 8000cdc:	601a      	str	r2, [r3, #0]
 8000cde:	605a      	str	r2, [r3, #4]
 8000ce0:	609a      	str	r2, [r3, #8]
 8000ce2:	60da      	str	r2, [r3, #12]
 8000ce4:	611a      	str	r2, [r3, #16]
 8000ce6:	2000      	movs	r0, #0
 8000ce8:	f005 fbf4 	bl	80064d4 <HAL_PWREx_ControlVoltageScaling>
 8000cec:	2302      	movs	r3, #2
 8000cee:	61bb      	str	r3, [r7, #24]
 8000cf0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000cf4:	627b      	str	r3, [r7, #36]	@ 0x24
 8000cf6:	2340      	movs	r3, #64	@ 0x40
 8000cf8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000cfa:	2302      	movs	r3, #2
 8000cfc:	637b      	str	r3, [r7, #52]	@ 0x34
 8000cfe:	2302      	movs	r3, #2
 8000d00:	63bb      	str	r3, [r7, #56]	@ 0x38
 8000d02:	2304      	movs	r3, #4
 8000d04:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8000d06:	2355      	movs	r3, #85	@ 0x55
 8000d08:	643b      	str	r3, [r7, #64]	@ 0x40
 8000d0a:	2302      	movs	r3, #2
 8000d0c:	647b      	str	r3, [r7, #68]	@ 0x44
 8000d0e:	2302      	movs	r3, #2
 8000d10:	64bb      	str	r3, [r7, #72]	@ 0x48
 8000d12:	2302      	movs	r3, #2
 8000d14:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8000d16:	f107 0318 	add.w	r3, r7, #24
 8000d1a:	4618      	mov	r0, r3
 8000d1c:	f005 fc8e 	bl	800663c <HAL_RCC_OscConfig>
 8000d20:	4603      	mov	r3, r0
 8000d22:	2b00      	cmp	r3, #0
 8000d24:	d001      	beq.n	8000d2a <SystemClock_Config+0x66>
 8000d26:	f000 f82d 	bl	8000d84 <Error_Handler>
 8000d2a:	230f      	movs	r3, #15
 8000d2c:	607b      	str	r3, [r7, #4]
 8000d2e:	2303      	movs	r3, #3
 8000d30:	60bb      	str	r3, [r7, #8]
 8000d32:	2300      	movs	r3, #0
 8000d34:	60fb      	str	r3, [r7, #12]
 8000d36:	2300      	movs	r3, #0
 8000d38:	613b      	str	r3, [r7, #16]
 8000d3a:	2300      	movs	r3, #0
 8000d3c:	617b      	str	r3, [r7, #20]
 8000d3e:	1d3b      	adds	r3, r7, #4
 8000d40:	2104      	movs	r1, #4
 8000d42:	4618      	mov	r0, r3
 8000d44:	f005 ff8c 	bl	8006c60 <HAL_RCC_ClockConfig>
 8000d48:	4603      	mov	r3, r0
 8000d4a:	2b00      	cmp	r3, #0
 8000d4c:	d001      	beq.n	8000d52 <SystemClock_Config+0x8e>
 8000d4e:	f000 f819 	bl	8000d84 <Error_Handler>
 8000d52:	bf00      	nop
 8000d54:	3750      	adds	r7, #80	@ 0x50
 8000d56:	46bd      	mov	sp, r7
 8000d58:	bd80      	pop	{r7, pc}
	...

08000d5c <HAL_TIM_PeriodElapsedCallback>:
 8000d5c:	b580      	push	{r7, lr}
 8000d5e:	b082      	sub	sp, #8
 8000d60:	af00      	add	r7, sp, #0
 8000d62:	6078      	str	r0, [r7, #4]
 8000d64:	687b      	ldr	r3, [r7, #4]
 8000d66:	681b      	ldr	r3, [r3, #0]
 8000d68:	4a05      	ldr	r2, [pc, #20]	@ (8000d80 <HAL_TIM_PeriodElapsedCallback+0x24>)
 8000d6a:	4293      	cmp	r3, r2
 8000d6c:	d101      	bne.n	8000d72 <HAL_TIM_PeriodElapsedCallback+0x16>
 8000d6e:	f002 fdfb 	bl	8003968 <HAL_IncTick>
 8000d72:	6878      	ldr	r0, [r7, #4]
 8000d74:	f000 fe42 	bl	80019fc <HAL_TIM_PeriodElapsedCallback_OWN>
 8000d78:	bf00      	nop
 8000d7a:	3708      	adds	r7, #8
 8000d7c:	46bd      	mov	sp, r7
 8000d7e:	bd80      	pop	{r7, pc}
 8000d80:	40001000 	.word	0x40001000

08000d84 <Error_Handler>:
 8000d84:	b480      	push	{r7}
 8000d86:	af00      	add	r7, sp, #0
 8000d88:	b672      	cpsid	i
 8000d8a:	bf00      	nop
 8000d8c:	bf00      	nop
 8000d8e:	e7fd      	b.n	8000d8c <Error_Handler+0x8>

08000d90 <HAL_MspInit>:
 8000d90:	b580      	push	{r7, lr}
 8000d92:	b082      	sub	sp, #8
 8000d94:	af00      	add	r7, sp, #0
 8000d96:	4b12      	ldr	r3, [pc, #72]	@ (8000de0 <HAL_MspInit+0x50>)
 8000d98:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000d9a:	4a11      	ldr	r2, [pc, #68]	@ (8000de0 <HAL_MspInit+0x50>)
 8000d9c:	f043 0301 	orr.w	r3, r3, #1
 8000da0:	6613      	str	r3, [r2, #96]	@ 0x60
 8000da2:	4b0f      	ldr	r3, [pc, #60]	@ (8000de0 <HAL_MspInit+0x50>)
 8000da4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000da6:	f003 0301 	and.w	r3, r3, #1
 8000daa:	607b      	str	r3, [r7, #4]
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	4b0c      	ldr	r3, [pc, #48]	@ (8000de0 <HAL_MspInit+0x50>)
 8000db0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000db2:	4a0b      	ldr	r2, [pc, #44]	@ (8000de0 <HAL_MspInit+0x50>)
 8000db4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000db8:	6593      	str	r3, [r2, #88]	@ 0x58
 8000dba:	4b09      	ldr	r3, [pc, #36]	@ (8000de0 <HAL_MspInit+0x50>)
 8000dbc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000dbe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000dc2:	603b      	str	r3, [r7, #0]
 8000dc4:	683b      	ldr	r3, [r7, #0]
 8000dc6:	2200      	movs	r2, #0
 8000dc8:	210f      	movs	r1, #15
 8000dca:	f06f 0001 	mvn.w	r0, #1
 8000dce:	f004 fa23 	bl	8005218 <HAL_NVIC_SetPriority>
 8000dd2:	f005 fc23 	bl	800661c <HAL_PWREx_DisableUCPDDeadBattery>
 8000dd6:	bf00      	nop
 8000dd8:	3708      	adds	r7, #8
 8000dda:	46bd      	mov	sp, r7
 8000ddc:	bd80      	pop	{r7, pc}
 8000dde:	bf00      	nop
 8000de0:	40021000 	.word	0x40021000

08000de4 <HAL_InitTick>:
 8000de4:	b580      	push	{r7, lr}
 8000de6:	b08c      	sub	sp, #48	@ 0x30
 8000de8:	af00      	add	r7, sp, #0
 8000dea:	6078      	str	r0, [r7, #4]
 8000dec:	2300      	movs	r3, #0
 8000dee:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000df0:	2300      	movs	r3, #0
 8000df2:	627b      	str	r3, [r7, #36]	@ 0x24
 8000df4:	4b2c      	ldr	r3, [pc, #176]	@ (8000ea8 <HAL_InitTick+0xc4>)
 8000df6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000df8:	4a2b      	ldr	r2, [pc, #172]	@ (8000ea8 <HAL_InitTick+0xc4>)
 8000dfa:	f043 0310 	orr.w	r3, r3, #16
 8000dfe:	6593      	str	r3, [r2, #88]	@ 0x58
 8000e00:	4b29      	ldr	r3, [pc, #164]	@ (8000ea8 <HAL_InitTick+0xc4>)
 8000e02:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000e04:	f003 0310 	and.w	r3, r3, #16
 8000e08:	60bb      	str	r3, [r7, #8]
 8000e0a:	68bb      	ldr	r3, [r7, #8]
 8000e0c:	f107 020c 	add.w	r2, r7, #12
 8000e10:	f107 0310 	add.w	r3, r7, #16
 8000e14:	4611      	mov	r1, r2
 8000e16:	4618      	mov	r0, r3
 8000e18:	f006 f8f8 	bl	800700c <HAL_RCC_GetClockConfig>
 8000e1c:	f006 f8ca 	bl	8006fb4 <HAL_RCC_GetPCLK1Freq>
 8000e20:	62b8      	str	r0, [r7, #40]	@ 0x28
 8000e22:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000e24:	4a21      	ldr	r2, [pc, #132]	@ (8000eac <HAL_InitTick+0xc8>)
 8000e26:	fba2 2303 	umull	r2, r3, r2, r3
 8000e2a:	0c9b      	lsrs	r3, r3, #18
 8000e2c:	3b01      	subs	r3, #1
 8000e2e:	627b      	str	r3, [r7, #36]	@ 0x24
 8000e30:	4b1f      	ldr	r3, [pc, #124]	@ (8000eb0 <HAL_InitTick+0xcc>)
 8000e32:	4a20      	ldr	r2, [pc, #128]	@ (8000eb4 <HAL_InitTick+0xd0>)
 8000e34:	601a      	str	r2, [r3, #0]
 8000e36:	4b1e      	ldr	r3, [pc, #120]	@ (8000eb0 <HAL_InitTick+0xcc>)
 8000e38:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8000e3c:	60da      	str	r2, [r3, #12]
 8000e3e:	4a1c      	ldr	r2, [pc, #112]	@ (8000eb0 <HAL_InitTick+0xcc>)
 8000e40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000e42:	6053      	str	r3, [r2, #4]
 8000e44:	4b1a      	ldr	r3, [pc, #104]	@ (8000eb0 <HAL_InitTick+0xcc>)
 8000e46:	2200      	movs	r2, #0
 8000e48:	611a      	str	r2, [r3, #16]
 8000e4a:	4b19      	ldr	r3, [pc, #100]	@ (8000eb0 <HAL_InitTick+0xcc>)
 8000e4c:	2200      	movs	r2, #0
 8000e4e:	609a      	str	r2, [r3, #8]
 8000e50:	4817      	ldr	r0, [pc, #92]	@ (8000eb0 <HAL_InitTick+0xcc>)
 8000e52:	f006 fb43 	bl	80074dc <HAL_TIM_Base_Init>
 8000e56:	4603      	mov	r3, r0
 8000e58:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8000e5c:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8000e60:	2b00      	cmp	r3, #0
 8000e62:	d11b      	bne.n	8000e9c <HAL_InitTick+0xb8>
 8000e64:	4812      	ldr	r0, [pc, #72]	@ (8000eb0 <HAL_InitTick+0xcc>)
 8000e66:	f006 fb9b 	bl	80075a0 <HAL_TIM_Base_Start_IT>
 8000e6a:	4603      	mov	r3, r0
 8000e6c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8000e70:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d111      	bne.n	8000e9c <HAL_InitTick+0xb8>
 8000e78:	2036      	movs	r0, #54	@ 0x36
 8000e7a:	f004 f9e7 	bl	800524c <HAL_NVIC_EnableIRQ>
 8000e7e:	687b      	ldr	r3, [r7, #4]
 8000e80:	2b0f      	cmp	r3, #15
 8000e82:	d808      	bhi.n	8000e96 <HAL_InitTick+0xb2>
 8000e84:	2200      	movs	r2, #0
 8000e86:	6879      	ldr	r1, [r7, #4]
 8000e88:	2036      	movs	r0, #54	@ 0x36
 8000e8a:	f004 f9c5 	bl	8005218 <HAL_NVIC_SetPriority>
 8000e8e:	4a0a      	ldr	r2, [pc, #40]	@ (8000eb8 <HAL_InitTick+0xd4>)
 8000e90:	687b      	ldr	r3, [r7, #4]
 8000e92:	6013      	str	r3, [r2, #0]
 8000e94:	e002      	b.n	8000e9c <HAL_InitTick+0xb8>
 8000e96:	2301      	movs	r3, #1
 8000e98:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8000e9c:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8000ea0:	4618      	mov	r0, r3
 8000ea2:	3730      	adds	r7, #48	@ 0x30
 8000ea4:	46bd      	mov	sp, r7
 8000ea6:	bd80      	pop	{r7, pc}
 8000ea8:	40021000 	.word	0x40021000
 8000eac:	431bde83 	.word	0x431bde83
 8000eb0:	200004f0 	.word	0x200004f0
 8000eb4:	40001000 	.word	0x40001000
 8000eb8:	20000244 	.word	0x20000244

08000ebc <NMI_Handler>:
 8000ebc:	b480      	push	{r7}
 8000ebe:	af00      	add	r7, sp, #0
 8000ec0:	bf00      	nop
 8000ec2:	e7fd      	b.n	8000ec0 <NMI_Handler+0x4>

08000ec4 <HardFault_Handler>:
 8000ec4:	b480      	push	{r7}
 8000ec6:	af00      	add	r7, sp, #0
 8000ec8:	bf00      	nop
 8000eca:	e7fd      	b.n	8000ec8 <HardFault_Handler+0x4>

08000ecc <MemManage_Handler>:
 8000ecc:	b480      	push	{r7}
 8000ece:	af00      	add	r7, sp, #0
 8000ed0:	bf00      	nop
 8000ed2:	e7fd      	b.n	8000ed0 <MemManage_Handler+0x4>

08000ed4 <BusFault_Handler>:
 8000ed4:	b480      	push	{r7}
 8000ed6:	af00      	add	r7, sp, #0
 8000ed8:	bf00      	nop
 8000eda:	e7fd      	b.n	8000ed8 <BusFault_Handler+0x4>

08000edc <UsageFault_Handler>:
 8000edc:	b480      	push	{r7}
 8000ede:	af00      	add	r7, sp, #0
 8000ee0:	bf00      	nop
 8000ee2:	e7fd      	b.n	8000ee0 <UsageFault_Handler+0x4>

08000ee4 <DebugMon_Handler>:
 8000ee4:	b480      	push	{r7}
 8000ee6:	af00      	add	r7, sp, #0
 8000ee8:	bf00      	nop
 8000eea:	46bd      	mov	sp, r7
 8000eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ef0:	4770      	bx	lr
	...

08000ef4 <FDCAN1_IT0_IRQHandler>:
 8000ef4:	b580      	push	{r7, lr}
 8000ef6:	af00      	add	r7, sp, #0
 8000ef8:	4802      	ldr	r0, [pc, #8]	@ (8000f04 <FDCAN1_IT0_IRQHandler+0x10>)
 8000efa:	f004 ff73 	bl	8005de4 <HAL_FDCAN_IRQHandler>
 8000efe:	bf00      	nop
 8000f00:	bd80      	pop	{r7, pc}
 8000f02:	bf00      	nop
 8000f04:	2000047c 	.word	0x2000047c

08000f08 <FDCAN1_IT1_IRQHandler>:
 8000f08:	b580      	push	{r7, lr}
 8000f0a:	af00      	add	r7, sp, #0
 8000f0c:	4802      	ldr	r0, [pc, #8]	@ (8000f18 <FDCAN1_IT1_IRQHandler+0x10>)
 8000f0e:	f004 ff69 	bl	8005de4 <HAL_FDCAN_IRQHandler>
 8000f12:	bf00      	nop
 8000f14:	bd80      	pop	{r7, pc}
 8000f16:	bf00      	nop
 8000f18:	2000047c 	.word	0x2000047c

08000f1c <TIM1_UP_TIM16_IRQHandler>:
 8000f1c:	b580      	push	{r7, lr}
 8000f1e:	af00      	add	r7, sp, #0
 8000f20:	4802      	ldr	r0, [pc, #8]	@ (8000f2c <TIM1_UP_TIM16_IRQHandler+0x10>)
 8000f22:	f006 fdeb 	bl	8007afc <HAL_TIM_IRQHandler>
 8000f26:	bf00      	nop
 8000f28:	bd80      	pop	{r7, pc}
 8000f2a:	bf00      	nop
 8000f2c:	2000053c 	.word	0x2000053c

08000f30 <EXTI15_10_IRQHandler>:
 8000f30:	b580      	push	{r7, lr}
 8000f32:	af00      	add	r7, sp, #0
 8000f34:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8000f38:	f005 fab4 	bl	80064a4 <HAL_GPIO_EXTI_IRQHandler>
 8000f3c:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8000f40:	f005 fab0 	bl	80064a4 <HAL_GPIO_EXTI_IRQHandler>
 8000f44:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 8000f48:	f005 faac 	bl	80064a4 <HAL_GPIO_EXTI_IRQHandler>
 8000f4c:	2000      	movs	r0, #0
 8000f4e:	f002 fc1f 	bl	8003790 <BSP_PB_IRQHandler>
 8000f52:	bf00      	nop
 8000f54:	bd80      	pop	{r7, pc}
	...

08000f58 <TIM6_DAC_IRQHandler>:
 8000f58:	b580      	push	{r7, lr}
 8000f5a:	af00      	add	r7, sp, #0
 8000f5c:	4802      	ldr	r0, [pc, #8]	@ (8000f68 <TIM6_DAC_IRQHandler+0x10>)
 8000f5e:	f006 fdcd 	bl	8007afc <HAL_TIM_IRQHandler>
 8000f62:	bf00      	nop
 8000f64:	bd80      	pop	{r7, pc}
 8000f66:	bf00      	nop
 8000f68:	200004f0 	.word	0x200004f0

08000f6c <DMA2_Channel1_IRQHandler>:
 8000f6c:	b580      	push	{r7, lr}
 8000f6e:	af00      	add	r7, sp, #0
 8000f70:	4802      	ldr	r0, [pc, #8]	@ (8000f7c <DMA2_Channel1_IRQHandler+0x10>)
 8000f72:	f004 fa9c 	bl	80054ae <HAL_DMA_IRQHandler>
 8000f76:	bf00      	nop
 8000f78:	bd80      	pop	{r7, pc}
 8000f7a:	bf00      	nop
 8000f7c:	20000328 	.word	0x20000328

08000f80 <DMA2_Channel2_IRQHandler>:
 8000f80:	b580      	push	{r7, lr}
 8000f82:	af00      	add	r7, sp, #0
 8000f84:	4802      	ldr	r0, [pc, #8]	@ (8000f90 <DMA2_Channel2_IRQHandler+0x10>)
 8000f86:	f004 fa92 	bl	80054ae <HAL_DMA_IRQHandler>
 8000f8a:	bf00      	nop
 8000f8c:	bd80      	pop	{r7, pc}
 8000f8e:	bf00      	nop
 8000f90:	200003bc 	.word	0x200003bc

08000f94 <DMA2_Channel3_IRQHandler>:
 8000f94:	b580      	push	{r7, lr}
 8000f96:	af00      	add	r7, sp, #0
 8000f98:	4802      	ldr	r0, [pc, #8]	@ (8000fa4 <DMA2_Channel3_IRQHandler+0x10>)
 8000f9a:	f004 fa88 	bl	80054ae <HAL_DMA_IRQHandler>
 8000f9e:	bf00      	nop
 8000fa0:	bd80      	pop	{r7, pc}
 8000fa2:	bf00      	nop
 8000fa4:	2000041c 	.word	0x2000041c

08000fa8 <SystemInit>:
 8000fa8:	b480      	push	{r7}
 8000faa:	af00      	add	r7, sp, #0
 8000fac:	4b06      	ldr	r3, [pc, #24]	@ (8000fc8 <SystemInit+0x20>)
 8000fae:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000fb2:	4a05      	ldr	r2, [pc, #20]	@ (8000fc8 <SystemInit+0x20>)
 8000fb4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000fb8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000fbc:	bf00      	nop
 8000fbe:	46bd      	mov	sp, r7
 8000fc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fc4:	4770      	bx	lr
 8000fc6:	bf00      	nop
 8000fc8:	e000ed00 	.word	0xe000ed00

08000fcc <MX_TIM1_Init>:
 8000fcc:	b580      	push	{r7, lr}
 8000fce:	b098      	sub	sp, #96	@ 0x60
 8000fd0:	af00      	add	r7, sp, #0
 8000fd2:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8000fd6:	2200      	movs	r2, #0
 8000fd8:	601a      	str	r2, [r3, #0]
 8000fda:	605a      	str	r2, [r3, #4]
 8000fdc:	609a      	str	r2, [r3, #8]
 8000fde:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8000fe2:	2200      	movs	r2, #0
 8000fe4:	601a      	str	r2, [r3, #0]
 8000fe6:	605a      	str	r2, [r3, #4]
 8000fe8:	609a      	str	r2, [r3, #8]
 8000fea:	60da      	str	r2, [r3, #12]
 8000fec:	611a      	str	r2, [r3, #16]
 8000fee:	615a      	str	r2, [r3, #20]
 8000ff0:	619a      	str	r2, [r3, #24]
 8000ff2:	1d3b      	adds	r3, r7, #4
 8000ff4:	2234      	movs	r2, #52	@ 0x34
 8000ff6:	2100      	movs	r1, #0
 8000ff8:	4618      	mov	r0, r3
 8000ffa:	f00b fb65 	bl	800c6c8 <memset>
 8000ffe:	4b4a      	ldr	r3, [pc, #296]	@ (8001128 <MX_TIM1_Init+0x15c>)
 8001000:	4a4a      	ldr	r2, [pc, #296]	@ (800112c <MX_TIM1_Init+0x160>)
 8001002:	601a      	str	r2, [r3, #0]
 8001004:	4b48      	ldr	r3, [pc, #288]	@ (8001128 <MX_TIM1_Init+0x15c>)
 8001006:	2210      	movs	r2, #16
 8001008:	605a      	str	r2, [r3, #4]
 800100a:	4b47      	ldr	r3, [pc, #284]	@ (8001128 <MX_TIM1_Init+0x15c>)
 800100c:	2220      	movs	r2, #32
 800100e:	609a      	str	r2, [r3, #8]
 8001010:	4b45      	ldr	r3, [pc, #276]	@ (8001128 <MX_TIM1_Init+0x15c>)
 8001012:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8001016:	60da      	str	r2, [r3, #12]
 8001018:	4b43      	ldr	r3, [pc, #268]	@ (8001128 <MX_TIM1_Init+0x15c>)
 800101a:	2200      	movs	r2, #0
 800101c:	611a      	str	r2, [r3, #16]
 800101e:	4b42      	ldr	r3, [pc, #264]	@ (8001128 <MX_TIM1_Init+0x15c>)
 8001020:	2200      	movs	r2, #0
 8001022:	615a      	str	r2, [r3, #20]
 8001024:	4b40      	ldr	r3, [pc, #256]	@ (8001128 <MX_TIM1_Init+0x15c>)
 8001026:	2200      	movs	r2, #0
 8001028:	619a      	str	r2, [r3, #24]
 800102a:	483f      	ldr	r0, [pc, #252]	@ (8001128 <MX_TIM1_Init+0x15c>)
 800102c:	f006 fb79 	bl	8007722 <HAL_TIM_PWM_Init>
 8001030:	4603      	mov	r3, r0
 8001032:	2b00      	cmp	r3, #0
 8001034:	d001      	beq.n	800103a <MX_TIM1_Init+0x6e>
 8001036:	f7ff fea5 	bl	8000d84 <Error_Handler>
 800103a:	2300      	movs	r3, #0
 800103c:	657b      	str	r3, [r7, #84]	@ 0x54
 800103e:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001042:	65bb      	str	r3, [r7, #88]	@ 0x58
 8001044:	2300      	movs	r3, #0
 8001046:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8001048:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800104c:	4619      	mov	r1, r3
 800104e:	4836      	ldr	r0, [pc, #216]	@ (8001128 <MX_TIM1_Init+0x15c>)
 8001050:	f007 fd24 	bl	8008a9c <HAL_TIMEx_MasterConfigSynchronization>
 8001054:	4603      	mov	r3, r0
 8001056:	2b00      	cmp	r3, #0
 8001058:	d001      	beq.n	800105e <MX_TIM1_Init+0x92>
 800105a:	f7ff fe93 	bl	8000d84 <Error_Handler>
 800105e:	2360      	movs	r3, #96	@ 0x60
 8001060:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001062:	2300      	movs	r3, #0
 8001064:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001066:	2302      	movs	r3, #2
 8001068:	643b      	str	r3, [r7, #64]	@ 0x40
 800106a:	2300      	movs	r3, #0
 800106c:	647b      	str	r3, [r7, #68]	@ 0x44
 800106e:	2300      	movs	r3, #0
 8001070:	64bb      	str	r3, [r7, #72]	@ 0x48
 8001072:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001076:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001078:	2300      	movs	r3, #0
 800107a:	653b      	str	r3, [r7, #80]	@ 0x50
 800107c:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001080:	2200      	movs	r2, #0
 8001082:	4619      	mov	r1, r3
 8001084:	4828      	ldr	r0, [pc, #160]	@ (8001128 <MX_TIM1_Init+0x15c>)
 8001086:	f006 ff03 	bl	8007e90 <HAL_TIM_PWM_ConfigChannel>
 800108a:	4603      	mov	r3, r0
 800108c:	2b00      	cmp	r3, #0
 800108e:	d001      	beq.n	8001094 <MX_TIM1_Init+0xc8>
 8001090:	f7ff fe78 	bl	8000d84 <Error_Handler>
 8001094:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001098:	2204      	movs	r2, #4
 800109a:	4619      	mov	r1, r3
 800109c:	4822      	ldr	r0, [pc, #136]	@ (8001128 <MX_TIM1_Init+0x15c>)
 800109e:	f006 fef7 	bl	8007e90 <HAL_TIM_PWM_ConfigChannel>
 80010a2:	4603      	mov	r3, r0
 80010a4:	2b00      	cmp	r3, #0
 80010a6:	d001      	beq.n	80010ac <MX_TIM1_Init+0xe0>
 80010a8:	f7ff fe6c 	bl	8000d84 <Error_Handler>
 80010ac:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80010b0:	2208      	movs	r2, #8
 80010b2:	4619      	mov	r1, r3
 80010b4:	481c      	ldr	r0, [pc, #112]	@ (8001128 <MX_TIM1_Init+0x15c>)
 80010b6:	f006 feeb 	bl	8007e90 <HAL_TIM_PWM_ConfigChannel>
 80010ba:	4603      	mov	r3, r0
 80010bc:	2b00      	cmp	r3, #0
 80010be:	d001      	beq.n	80010c4 <MX_TIM1_Init+0xf8>
 80010c0:	f7ff fe60 	bl	8000d84 <Error_Handler>
 80010c4:	4818      	ldr	r0, [pc, #96]	@ (8001128 <MX_TIM1_Init+0x15c>)
 80010c6:	f007 fdf7 	bl	8008cb8 <HAL_TIMEx_EnableDeadTimePreload>
 80010ca:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80010ce:	607b      	str	r3, [r7, #4]
 80010d0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80010d4:	60bb      	str	r3, [r7, #8]
 80010d6:	2300      	movs	r3, #0
 80010d8:	60fb      	str	r3, [r7, #12]
 80010da:	2322      	movs	r3, #34	@ 0x22
 80010dc:	613b      	str	r3, [r7, #16]
 80010de:	2300      	movs	r3, #0
 80010e0:	617b      	str	r3, [r7, #20]
 80010e2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80010e6:	61bb      	str	r3, [r7, #24]
 80010e8:	2300      	movs	r3, #0
 80010ea:	61fb      	str	r3, [r7, #28]
 80010ec:	2300      	movs	r3, #0
 80010ee:	623b      	str	r3, [r7, #32]
 80010f0:	2300      	movs	r3, #0
 80010f2:	627b      	str	r3, [r7, #36]	@ 0x24
 80010f4:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80010f8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80010fa:	2300      	movs	r3, #0
 80010fc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80010fe:	2300      	movs	r3, #0
 8001100:	633b      	str	r3, [r7, #48]	@ 0x30
 8001102:	2300      	movs	r3, #0
 8001104:	637b      	str	r3, [r7, #52]	@ 0x34
 8001106:	1d3b      	adds	r3, r7, #4
 8001108:	4619      	mov	r1, r3
 800110a:	4807      	ldr	r0, [pc, #28]	@ (8001128 <MX_TIM1_Init+0x15c>)
 800110c:	f007 fd48 	bl	8008ba0 <HAL_TIMEx_ConfigBreakDeadTime>
 8001110:	4603      	mov	r3, r0
 8001112:	2b00      	cmp	r3, #0
 8001114:	d001      	beq.n	800111a <MX_TIM1_Init+0x14e>
 8001116:	f7ff fe35 	bl	8000d84 <Error_Handler>
 800111a:	4803      	ldr	r0, [pc, #12]	@ (8001128 <MX_TIM1_Init+0x15c>)
 800111c:	f000 f90e 	bl	800133c <HAL_TIM_MspPostInit>
 8001120:	bf00      	nop
 8001122:	3760      	adds	r7, #96	@ 0x60
 8001124:	46bd      	mov	sp, r7
 8001126:	bd80      	pop	{r7, pc}
 8001128:	2000053c 	.word	0x2000053c
 800112c:	40012c00 	.word	0x40012c00

08001130 <MX_TIM2_Init>:
 8001130:	b580      	push	{r7, lr}
 8001132:	b08a      	sub	sp, #40	@ 0x28
 8001134:	af00      	add	r7, sp, #0
 8001136:	f107 031c 	add.w	r3, r7, #28
 800113a:	2200      	movs	r2, #0
 800113c:	601a      	str	r2, [r3, #0]
 800113e:	605a      	str	r2, [r3, #4]
 8001140:	609a      	str	r2, [r3, #8]
 8001142:	463b      	mov	r3, r7
 8001144:	2200      	movs	r2, #0
 8001146:	601a      	str	r2, [r3, #0]
 8001148:	605a      	str	r2, [r3, #4]
 800114a:	609a      	str	r2, [r3, #8]
 800114c:	60da      	str	r2, [r3, #12]
 800114e:	611a      	str	r2, [r3, #16]
 8001150:	615a      	str	r2, [r3, #20]
 8001152:	619a      	str	r2, [r3, #24]
 8001154:	4b20      	ldr	r3, [pc, #128]	@ (80011d8 <MX_TIM2_Init+0xa8>)
 8001156:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800115a:	601a      	str	r2, [r3, #0]
 800115c:	4b1e      	ldr	r3, [pc, #120]	@ (80011d8 <MX_TIM2_Init+0xa8>)
 800115e:	2200      	movs	r2, #0
 8001160:	605a      	str	r2, [r3, #4]
 8001162:	4b1d      	ldr	r3, [pc, #116]	@ (80011d8 <MX_TIM2_Init+0xa8>)
 8001164:	2200      	movs	r2, #0
 8001166:	609a      	str	r2, [r3, #8]
 8001168:	4b1b      	ldr	r3, [pc, #108]	@ (80011d8 <MX_TIM2_Init+0xa8>)
 800116a:	f04f 32ff 	mov.w	r2, #4294967295
 800116e:	60da      	str	r2, [r3, #12]
 8001170:	4b19      	ldr	r3, [pc, #100]	@ (80011d8 <MX_TIM2_Init+0xa8>)
 8001172:	2200      	movs	r2, #0
 8001174:	611a      	str	r2, [r3, #16]
 8001176:	4b18      	ldr	r3, [pc, #96]	@ (80011d8 <MX_TIM2_Init+0xa8>)
 8001178:	2200      	movs	r2, #0
 800117a:	619a      	str	r2, [r3, #24]
 800117c:	4816      	ldr	r0, [pc, #88]	@ (80011d8 <MX_TIM2_Init+0xa8>)
 800117e:	f006 fa79 	bl	8007674 <HAL_TIM_OC_Init>
 8001182:	4603      	mov	r3, r0
 8001184:	2b00      	cmp	r3, #0
 8001186:	d001      	beq.n	800118c <MX_TIM2_Init+0x5c>
 8001188:	f7ff fdfc 	bl	8000d84 <Error_Handler>
 800118c:	2300      	movs	r3, #0
 800118e:	61fb      	str	r3, [r7, #28]
 8001190:	2300      	movs	r3, #0
 8001192:	627b      	str	r3, [r7, #36]	@ 0x24
 8001194:	f107 031c 	add.w	r3, r7, #28
 8001198:	4619      	mov	r1, r3
 800119a:	480f      	ldr	r0, [pc, #60]	@ (80011d8 <MX_TIM2_Init+0xa8>)
 800119c:	f007 fc7e 	bl	8008a9c <HAL_TIMEx_MasterConfigSynchronization>
 80011a0:	4603      	mov	r3, r0
 80011a2:	2b00      	cmp	r3, #0
 80011a4:	d001      	beq.n	80011aa <MX_TIM2_Init+0x7a>
 80011a6:	f7ff fded 	bl	8000d84 <Error_Handler>
 80011aa:	2300      	movs	r3, #0
 80011ac:	603b      	str	r3, [r7, #0]
 80011ae:	2300      	movs	r3, #0
 80011b0:	607b      	str	r3, [r7, #4]
 80011b2:	2300      	movs	r3, #0
 80011b4:	60bb      	str	r3, [r7, #8]
 80011b6:	2300      	movs	r3, #0
 80011b8:	613b      	str	r3, [r7, #16]
 80011ba:	463b      	mov	r3, r7
 80011bc:	2200      	movs	r2, #0
 80011be:	4619      	mov	r1, r3
 80011c0:	4805      	ldr	r0, [pc, #20]	@ (80011d8 <MX_TIM2_Init+0xa8>)
 80011c2:	f006 fdeb 	bl	8007d9c <HAL_TIM_OC_ConfigChannel>
 80011c6:	4603      	mov	r3, r0
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d001      	beq.n	80011d0 <MX_TIM2_Init+0xa0>
 80011cc:	f7ff fdda 	bl	8000d84 <Error_Handler>
 80011d0:	bf00      	nop
 80011d2:	3728      	adds	r7, #40	@ 0x28
 80011d4:	46bd      	mov	sp, r7
 80011d6:	bd80      	pop	{r7, pc}
 80011d8:	20000588 	.word	0x20000588

080011dc <MX_TIM3_Init>:
 80011dc:	b580      	push	{r7, lr}
 80011de:	b08a      	sub	sp, #40	@ 0x28
 80011e0:	af00      	add	r7, sp, #0
 80011e2:	f107 031c 	add.w	r3, r7, #28
 80011e6:	2200      	movs	r2, #0
 80011e8:	601a      	str	r2, [r3, #0]
 80011ea:	605a      	str	r2, [r3, #4]
 80011ec:	609a      	str	r2, [r3, #8]
 80011ee:	463b      	mov	r3, r7
 80011f0:	2200      	movs	r2, #0
 80011f2:	601a      	str	r2, [r3, #0]
 80011f4:	605a      	str	r2, [r3, #4]
 80011f6:	609a      	str	r2, [r3, #8]
 80011f8:	60da      	str	r2, [r3, #12]
 80011fa:	611a      	str	r2, [r3, #16]
 80011fc:	615a      	str	r2, [r3, #20]
 80011fe:	619a      	str	r2, [r3, #24]
 8001200:	4b20      	ldr	r3, [pc, #128]	@ (8001284 <MX_TIM3_Init+0xa8>)
 8001202:	4a21      	ldr	r2, [pc, #132]	@ (8001288 <MX_TIM3_Init+0xac>)
 8001204:	601a      	str	r2, [r3, #0]
 8001206:	4b1f      	ldr	r3, [pc, #124]	@ (8001284 <MX_TIM3_Init+0xa8>)
 8001208:	2210      	movs	r2, #16
 800120a:	605a      	str	r2, [r3, #4]
 800120c:	4b1d      	ldr	r3, [pc, #116]	@ (8001284 <MX_TIM3_Init+0xa8>)
 800120e:	2200      	movs	r2, #0
 8001210:	609a      	str	r2, [r3, #8]
 8001212:	4b1c      	ldr	r3, [pc, #112]	@ (8001284 <MX_TIM3_Init+0xa8>)
 8001214:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001218:	60da      	str	r2, [r3, #12]
 800121a:	4b1a      	ldr	r3, [pc, #104]	@ (8001284 <MX_TIM3_Init+0xa8>)
 800121c:	2200      	movs	r2, #0
 800121e:	611a      	str	r2, [r3, #16]
 8001220:	4b18      	ldr	r3, [pc, #96]	@ (8001284 <MX_TIM3_Init+0xa8>)
 8001222:	2200      	movs	r2, #0
 8001224:	619a      	str	r2, [r3, #24]
 8001226:	4817      	ldr	r0, [pc, #92]	@ (8001284 <MX_TIM3_Init+0xa8>)
 8001228:	f006 fa24 	bl	8007674 <HAL_TIM_OC_Init>
 800122c:	4603      	mov	r3, r0
 800122e:	2b00      	cmp	r3, #0
 8001230:	d001      	beq.n	8001236 <MX_TIM3_Init+0x5a>
 8001232:	f7ff fda7 	bl	8000d84 <Error_Handler>
 8001236:	2300      	movs	r3, #0
 8001238:	61fb      	str	r3, [r7, #28]
 800123a:	2300      	movs	r3, #0
 800123c:	627b      	str	r3, [r7, #36]	@ 0x24
 800123e:	f107 031c 	add.w	r3, r7, #28
 8001242:	4619      	mov	r1, r3
 8001244:	480f      	ldr	r0, [pc, #60]	@ (8001284 <MX_TIM3_Init+0xa8>)
 8001246:	f007 fc29 	bl	8008a9c <HAL_TIMEx_MasterConfigSynchronization>
 800124a:	4603      	mov	r3, r0
 800124c:	2b00      	cmp	r3, #0
 800124e:	d001      	beq.n	8001254 <MX_TIM3_Init+0x78>
 8001250:	f7ff fd98 	bl	8000d84 <Error_Handler>
 8001254:	2300      	movs	r3, #0
 8001256:	603b      	str	r3, [r7, #0]
 8001258:	2300      	movs	r3, #0
 800125a:	607b      	str	r3, [r7, #4]
 800125c:	2300      	movs	r3, #0
 800125e:	60bb      	str	r3, [r7, #8]
 8001260:	2300      	movs	r3, #0
 8001262:	613b      	str	r3, [r7, #16]
 8001264:	463b      	mov	r3, r7
 8001266:	2200      	movs	r2, #0
 8001268:	4619      	mov	r1, r3
 800126a:	4806      	ldr	r0, [pc, #24]	@ (8001284 <MX_TIM3_Init+0xa8>)
 800126c:	f006 fd96 	bl	8007d9c <HAL_TIM_OC_ConfigChannel>
 8001270:	4603      	mov	r3, r0
 8001272:	2b00      	cmp	r3, #0
 8001274:	d001      	beq.n	800127a <MX_TIM3_Init+0x9e>
 8001276:	f7ff fd85 	bl	8000d84 <Error_Handler>
 800127a:	bf00      	nop
 800127c:	3728      	adds	r7, #40	@ 0x28
 800127e:	46bd      	mov	sp, r7
 8001280:	bd80      	pop	{r7, pc}
 8001282:	bf00      	nop
 8001284:	200005d4 	.word	0x200005d4
 8001288:	40000400 	.word	0x40000400

0800128c <HAL_TIM_PWM_MspInit>:
 800128c:	b580      	push	{r7, lr}
 800128e:	b084      	sub	sp, #16
 8001290:	af00      	add	r7, sp, #0
 8001292:	6078      	str	r0, [r7, #4]
 8001294:	687b      	ldr	r3, [r7, #4]
 8001296:	681b      	ldr	r3, [r3, #0]
 8001298:	4a0d      	ldr	r2, [pc, #52]	@ (80012d0 <HAL_TIM_PWM_MspInit+0x44>)
 800129a:	4293      	cmp	r3, r2
 800129c:	d113      	bne.n	80012c6 <HAL_TIM_PWM_MspInit+0x3a>
 800129e:	4b0d      	ldr	r3, [pc, #52]	@ (80012d4 <HAL_TIM_PWM_MspInit+0x48>)
 80012a0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80012a2:	4a0c      	ldr	r2, [pc, #48]	@ (80012d4 <HAL_TIM_PWM_MspInit+0x48>)
 80012a4:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80012a8:	6613      	str	r3, [r2, #96]	@ 0x60
 80012aa:	4b0a      	ldr	r3, [pc, #40]	@ (80012d4 <HAL_TIM_PWM_MspInit+0x48>)
 80012ac:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80012ae:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80012b2:	60fb      	str	r3, [r7, #12]
 80012b4:	68fb      	ldr	r3, [r7, #12]
 80012b6:	2200      	movs	r2, #0
 80012b8:	2105      	movs	r1, #5
 80012ba:	2019      	movs	r0, #25
 80012bc:	f003 ffac 	bl	8005218 <HAL_NVIC_SetPriority>
 80012c0:	2019      	movs	r0, #25
 80012c2:	f003 ffc3 	bl	800524c <HAL_NVIC_EnableIRQ>
 80012c6:	bf00      	nop
 80012c8:	3710      	adds	r7, #16
 80012ca:	46bd      	mov	sp, r7
 80012cc:	bd80      	pop	{r7, pc}
 80012ce:	bf00      	nop
 80012d0:	40012c00 	.word	0x40012c00
 80012d4:	40021000 	.word	0x40021000

080012d8 <HAL_TIM_OC_MspInit>:
 80012d8:	b480      	push	{r7}
 80012da:	b085      	sub	sp, #20
 80012dc:	af00      	add	r7, sp, #0
 80012de:	6078      	str	r0, [r7, #4]
 80012e0:	687b      	ldr	r3, [r7, #4]
 80012e2:	681b      	ldr	r3, [r3, #0]
 80012e4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80012e8:	d10c      	bne.n	8001304 <HAL_TIM_OC_MspInit+0x2c>
 80012ea:	4b12      	ldr	r3, [pc, #72]	@ (8001334 <HAL_TIM_OC_MspInit+0x5c>)
 80012ec:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80012ee:	4a11      	ldr	r2, [pc, #68]	@ (8001334 <HAL_TIM_OC_MspInit+0x5c>)
 80012f0:	f043 0301 	orr.w	r3, r3, #1
 80012f4:	6593      	str	r3, [r2, #88]	@ 0x58
 80012f6:	4b0f      	ldr	r3, [pc, #60]	@ (8001334 <HAL_TIM_OC_MspInit+0x5c>)
 80012f8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80012fa:	f003 0301 	and.w	r3, r3, #1
 80012fe:	60fb      	str	r3, [r7, #12]
 8001300:	68fb      	ldr	r3, [r7, #12]
 8001302:	e010      	b.n	8001326 <HAL_TIM_OC_MspInit+0x4e>
 8001304:	687b      	ldr	r3, [r7, #4]
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	4a0b      	ldr	r2, [pc, #44]	@ (8001338 <HAL_TIM_OC_MspInit+0x60>)
 800130a:	4293      	cmp	r3, r2
 800130c:	d10b      	bne.n	8001326 <HAL_TIM_OC_MspInit+0x4e>
 800130e:	4b09      	ldr	r3, [pc, #36]	@ (8001334 <HAL_TIM_OC_MspInit+0x5c>)
 8001310:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001312:	4a08      	ldr	r2, [pc, #32]	@ (8001334 <HAL_TIM_OC_MspInit+0x5c>)
 8001314:	f043 0302 	orr.w	r3, r3, #2
 8001318:	6593      	str	r3, [r2, #88]	@ 0x58
 800131a:	4b06      	ldr	r3, [pc, #24]	@ (8001334 <HAL_TIM_OC_MspInit+0x5c>)
 800131c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800131e:	f003 0302 	and.w	r3, r3, #2
 8001322:	60bb      	str	r3, [r7, #8]
 8001324:	68bb      	ldr	r3, [r7, #8]
 8001326:	bf00      	nop
 8001328:	3714      	adds	r7, #20
 800132a:	46bd      	mov	sp, r7
 800132c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001330:	4770      	bx	lr
 8001332:	bf00      	nop
 8001334:	40021000 	.word	0x40021000
 8001338:	40000400 	.word	0x40000400

0800133c <HAL_TIM_MspPostInit>:
 800133c:	b580      	push	{r7, lr}
 800133e:	b08a      	sub	sp, #40	@ 0x28
 8001340:	af00      	add	r7, sp, #0
 8001342:	6078      	str	r0, [r7, #4]
 8001344:	f107 0314 	add.w	r3, r7, #20
 8001348:	2200      	movs	r2, #0
 800134a:	601a      	str	r2, [r3, #0]
 800134c:	605a      	str	r2, [r3, #4]
 800134e:	609a      	str	r2, [r3, #8]
 8001350:	60da      	str	r2, [r3, #12]
 8001352:	611a      	str	r2, [r3, #16]
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	4a28      	ldr	r2, [pc, #160]	@ (80013fc <HAL_TIM_MspPostInit+0xc0>)
 800135a:	4293      	cmp	r3, r2
 800135c:	d149      	bne.n	80013f2 <HAL_TIM_MspPostInit+0xb6>
 800135e:	4b28      	ldr	r3, [pc, #160]	@ (8001400 <HAL_TIM_MspPostInit+0xc4>)
 8001360:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001362:	4a27      	ldr	r2, [pc, #156]	@ (8001400 <HAL_TIM_MspPostInit+0xc4>)
 8001364:	f043 0304 	orr.w	r3, r3, #4
 8001368:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800136a:	4b25      	ldr	r3, [pc, #148]	@ (8001400 <HAL_TIM_MspPostInit+0xc4>)
 800136c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800136e:	f003 0304 	and.w	r3, r3, #4
 8001372:	613b      	str	r3, [r7, #16]
 8001374:	693b      	ldr	r3, [r7, #16]
 8001376:	4b22      	ldr	r3, [pc, #136]	@ (8001400 <HAL_TIM_MspPostInit+0xc4>)
 8001378:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800137a:	4a21      	ldr	r2, [pc, #132]	@ (8001400 <HAL_TIM_MspPostInit+0xc4>)
 800137c:	f043 0302 	orr.w	r3, r3, #2
 8001380:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001382:	4b1f      	ldr	r3, [pc, #124]	@ (8001400 <HAL_TIM_MspPostInit+0xc4>)
 8001384:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001386:	f003 0302 	and.w	r3, r3, #2
 800138a:	60fb      	str	r3, [r7, #12]
 800138c:	68fb      	ldr	r3, [r7, #12]
 800138e:	2307      	movs	r3, #7
 8001390:	617b      	str	r3, [r7, #20]
 8001392:	2302      	movs	r3, #2
 8001394:	61bb      	str	r3, [r7, #24]
 8001396:	2300      	movs	r3, #0
 8001398:	61fb      	str	r3, [r7, #28]
 800139a:	2300      	movs	r3, #0
 800139c:	623b      	str	r3, [r7, #32]
 800139e:	2302      	movs	r3, #2
 80013a0:	627b      	str	r3, [r7, #36]	@ 0x24
 80013a2:	f107 0314 	add.w	r3, r7, #20
 80013a6:	4619      	mov	r1, r3
 80013a8:	4816      	ldr	r0, [pc, #88]	@ (8001404 <HAL_TIM_MspPostInit+0xc8>)
 80013aa:	f004 fee1 	bl	8006170 <HAL_GPIO_Init>
 80013ae:	f44f 43c0 	mov.w	r3, #24576	@ 0x6000
 80013b2:	617b      	str	r3, [r7, #20]
 80013b4:	2302      	movs	r3, #2
 80013b6:	61bb      	str	r3, [r7, #24]
 80013b8:	2300      	movs	r3, #0
 80013ba:	61fb      	str	r3, [r7, #28]
 80013bc:	2300      	movs	r3, #0
 80013be:	623b      	str	r3, [r7, #32]
 80013c0:	2306      	movs	r3, #6
 80013c2:	627b      	str	r3, [r7, #36]	@ 0x24
 80013c4:	f107 0314 	add.w	r3, r7, #20
 80013c8:	4619      	mov	r1, r3
 80013ca:	480f      	ldr	r0, [pc, #60]	@ (8001408 <HAL_TIM_MspPostInit+0xcc>)
 80013cc:	f004 fed0 	bl	8006170 <HAL_GPIO_Init>
 80013d0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80013d4:	617b      	str	r3, [r7, #20]
 80013d6:	2302      	movs	r3, #2
 80013d8:	61bb      	str	r3, [r7, #24]
 80013da:	2300      	movs	r3, #0
 80013dc:	61fb      	str	r3, [r7, #28]
 80013de:	2300      	movs	r3, #0
 80013e0:	623b      	str	r3, [r7, #32]
 80013e2:	2304      	movs	r3, #4
 80013e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80013e6:	f107 0314 	add.w	r3, r7, #20
 80013ea:	4619      	mov	r1, r3
 80013ec:	4806      	ldr	r0, [pc, #24]	@ (8001408 <HAL_TIM_MspPostInit+0xcc>)
 80013ee:	f004 febf 	bl	8006170 <HAL_GPIO_Init>
 80013f2:	bf00      	nop
 80013f4:	3728      	adds	r7, #40	@ 0x28
 80013f6:	46bd      	mov	sp, r7
 80013f8:	bd80      	pop	{r7, pc}
 80013fa:	bf00      	nop
 80013fc:	40012c00 	.word	0x40012c00
 8001400:	40021000 	.word	0x40021000
 8001404:	48000800 	.word	0x48000800
 8001408:	48000400 	.word	0x48000400

0800140c <average>:
 800140c:	b480      	push	{r7}
 800140e:	b085      	sub	sp, #20
 8001410:	af00      	add	r7, sp, #0
 8001412:	4603      	mov	r3, r0
 8001414:	6039      	str	r1, [r7, #0]
 8001416:	71fb      	strb	r3, [r7, #7]
 8001418:	f04f 0300 	mov.w	r3, #0
 800141c:	60bb      	str	r3, [r7, #8]
 800141e:	2300      	movs	r3, #0
 8001420:	81fb      	strh	r3, [r7, #14]
 8001422:	e013      	b.n	800144c <average+0x40>
 8001424:	89fb      	ldrh	r3, [r7, #14]
 8001426:	009a      	lsls	r2, r3, #2
 8001428:	79fb      	ldrb	r3, [r7, #7]
 800142a:	4413      	add	r3, r2
 800142c:	4a10      	ldr	r2, [pc, #64]	@ (8001470 <average+0x64>)
 800142e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001432:	ee07 3a90 	vmov	s15, r3
 8001436:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800143a:	ed97 7a02 	vldr	s14, [r7, #8]
 800143e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001442:	edc7 7a02 	vstr	s15, [r7, #8]
 8001446:	89fb      	ldrh	r3, [r7, #14]
 8001448:	3301      	adds	r3, #1
 800144a:	81fb      	strh	r3, [r7, #14]
 800144c:	89fb      	ldrh	r3, [r7, #14]
 800144e:	2b10      	cmp	r3, #16
 8001450:	d9e8      	bls.n	8001424 <average+0x18>
 8001452:	ed97 7a02 	vldr	s14, [r7, #8]
 8001456:	eef3 6a01 	vmov.f32	s13, #49	@ 0x41880000  17.0
 800145a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800145e:	683b      	ldr	r3, [r7, #0]
 8001460:	edc3 7a00 	vstr	s15, [r3]
 8001464:	bf00      	nop
 8001466:	3714      	adds	r7, #20
 8001468:	46bd      	mov	sp, r7
 800146a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800146e:	4770      	bx	lr
 8001470:	20000620 	.word	0x20000620

08001474 <adc_renew>:
 8001474:	b580      	push	{r7, lr}
 8001476:	b086      	sub	sp, #24
 8001478:	af00      	add	r7, sp, #0
 800147a:	60f8      	str	r0, [r7, #12]
 800147c:	60b9      	str	r1, [r7, #8]
 800147e:	607a      	str	r2, [r7, #4]
 8001480:	68bb      	ldr	r3, [r7, #8]
 8001482:	781a      	ldrb	r2, [r3, #0]
 8001484:	68bb      	ldr	r3, [r7, #8]
 8001486:	3310      	adds	r3, #16
 8001488:	4619      	mov	r1, r3
 800148a:	4610      	mov	r0, r2
 800148c:	f7ff ffbe 	bl	800140c <average>
 8001490:	68bb      	ldr	r3, [r7, #8]
 8001492:	ed93 7a04 	vldr	s14, [r3, #16]
 8001496:	68bb      	ldr	r3, [r7, #8]
 8001498:	edd3 7a03 	vldr	s15, [r3, #12]
 800149c:	ee37 7a67 	vsub.f32	s14, s14, s15
 80014a0:	68bb      	ldr	r3, [r7, #8]
 80014a2:	edd3 7a02 	vldr	s15, [r3, #8]
 80014a6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	edc3 7a00 	vstr	s15, [r3]
 80014b0:	68fb      	ldr	r3, [r7, #12]
 80014b2:	2201      	movs	r2, #1
 80014b4:	701a      	strb	r2, [r3, #0]
 80014b6:	68fb      	ldr	r3, [r7, #12]
 80014b8:	2200      	movs	r2, #0
 80014ba:	605a      	str	r2, [r3, #4]
 80014bc:	68f8      	ldr	r0, [r7, #12]
 80014be:	3718      	adds	r7, #24
 80014c0:	46bd      	mov	sp, r7
 80014c2:	bd80      	pop	{r7, pc}

080014c4 <adc_init>:
 80014c4:	b580      	push	{r7, lr}
 80014c6:	b082      	sub	sp, #8
 80014c8:	af00      	add	r7, sp, #0
 80014ca:	6078      	str	r0, [r7, #4]
 80014cc:	687b      	ldr	r3, [r7, #4]
 80014ce:	ed93 7a01 	vldr	s14, [r3, #4]
 80014d2:	eddf 6a0b 	vldr	s13, [pc, #44]	@ 8001500 <adc_init+0x3c>
 80014d6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80014da:	687b      	ldr	r3, [r7, #4]
 80014dc:	edc3 7a02 	vstr	s15, [r3, #8]
 80014e0:	687b      	ldr	r3, [r7, #4]
 80014e2:	781a      	ldrb	r2, [r3, #0]
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	3310      	adds	r3, #16
 80014e8:	4619      	mov	r1, r3
 80014ea:	4610      	mov	r0, r2
 80014ec:	f7ff ff8e 	bl	800140c <average>
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	691a      	ldr	r2, [r3, #16]
 80014f4:	687b      	ldr	r3, [r7, #4]
 80014f6:	60da      	str	r2, [r3, #12]
 80014f8:	bf00      	nop
 80014fa:	3708      	adds	r7, #8
 80014fc:	46bd      	mov	sp, r7
 80014fe:	bd80      	pop	{r7, pc}
 8001500:	3a9e704d 	.word	0x3a9e704d

08001504 <StartAdcTask>:
 8001504:	b580      	push	{r7, lr}
 8001506:	b08a      	sub	sp, #40	@ 0x28
 8001508:	af00      	add	r7, sp, #0
 800150a:	6078      	str	r0, [r7, #4]
 800150c:	2244      	movs	r2, #68	@ 0x44
 800150e:	4933      	ldr	r1, [pc, #204]	@ (80015dc <StartAdcTask+0xd8>)
 8001510:	4833      	ldr	r0, [pc, #204]	@ (80015e0 <StartAdcTask+0xdc>)
 8001512:	f002 fde9 	bl	80040e8 <HAL_ADC_Start_DMA>
 8001516:	4603      	mov	r3, r0
 8001518:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800151c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001520:	2b00      	cmp	r3, #0
 8001522:	d005      	beq.n	8001530 <StartAdcTask+0x2c>
 8001524:	f997 2027 	ldrsb.w	r2, [r7, #39]	@ 0x27
 8001528:	4b2e      	ldr	r3, [pc, #184]	@ (80015e4 <StartAdcTask+0xe0>)
 800152a:	701a      	strb	r2, [r3, #0]
 800152c:	f7ff fc2a 	bl	8000d84 <Error_Handler>
 8001530:	f107 031c 	add.w	r3, r7, #28
 8001534:	4a2c      	ldr	r2, [pc, #176]	@ (80015e8 <StartAdcTask+0xe4>)
 8001536:	492d      	ldr	r1, [pc, #180]	@ (80015ec <StartAdcTask+0xe8>)
 8001538:	4618      	mov	r0, r3
 800153a:	f7ff ff9b 	bl	8001474 <adc_renew>
 800153e:	7f3b      	ldrb	r3, [r7, #28]
 8001540:	f083 0301 	eor.w	r3, r3, #1
 8001544:	b2db      	uxtb	r3, r3
 8001546:	2b00      	cmp	r3, #0
 8001548:	d005      	beq.n	8001556 <StartAdcTask+0x52>
 800154a:	f997 2020 	ldrsb.w	r2, [r7, #32]
 800154e:	4b25      	ldr	r3, [pc, #148]	@ (80015e4 <StartAdcTask+0xe0>)
 8001550:	701a      	strb	r2, [r3, #0]
 8001552:	f7ff fc17 	bl	8000d84 <Error_Handler>
 8001556:	f107 0314 	add.w	r3, r7, #20
 800155a:	4a25      	ldr	r2, [pc, #148]	@ (80015f0 <StartAdcTask+0xec>)
 800155c:	4925      	ldr	r1, [pc, #148]	@ (80015f4 <StartAdcTask+0xf0>)
 800155e:	4618      	mov	r0, r3
 8001560:	f7ff ff88 	bl	8001474 <adc_renew>
 8001564:	7d3b      	ldrb	r3, [r7, #20]
 8001566:	f083 0301 	eor.w	r3, r3, #1
 800156a:	b2db      	uxtb	r3, r3
 800156c:	2b00      	cmp	r3, #0
 800156e:	d005      	beq.n	800157c <StartAdcTask+0x78>
 8001570:	f997 2018 	ldrsb.w	r2, [r7, #24]
 8001574:	4b1b      	ldr	r3, [pc, #108]	@ (80015e4 <StartAdcTask+0xe0>)
 8001576:	701a      	strb	r2, [r3, #0]
 8001578:	f7ff fc04 	bl	8000d84 <Error_Handler>
 800157c:	f107 030c 	add.w	r3, r7, #12
 8001580:	4a1d      	ldr	r2, [pc, #116]	@ (80015f8 <StartAdcTask+0xf4>)
 8001582:	491e      	ldr	r1, [pc, #120]	@ (80015fc <StartAdcTask+0xf8>)
 8001584:	4618      	mov	r0, r3
 8001586:	f7ff ff75 	bl	8001474 <adc_renew>
 800158a:	7b3b      	ldrb	r3, [r7, #12]
 800158c:	f083 0301 	eor.w	r3, r3, #1
 8001590:	b2db      	uxtb	r3, r3
 8001592:	2b00      	cmp	r3, #0
 8001594:	d005      	beq.n	80015a2 <StartAdcTask+0x9e>
 8001596:	f997 2010 	ldrsb.w	r2, [r7, #16]
 800159a:	4b12      	ldr	r3, [pc, #72]	@ (80015e4 <StartAdcTask+0xe0>)
 800159c:	701a      	strb	r2, [r3, #0]
 800159e:	f7ff fbf1 	bl	8000d84 <Error_Handler>
 80015a2:	4b17      	ldr	r3, [pc, #92]	@ (8001600 <StartAdcTask+0xfc>)
 80015a4:	781b      	ldrb	r3, [r3, #0]
 80015a6:	f083 0301 	eor.w	r3, r3, #1
 80015aa:	b2db      	uxtb	r3, r3
 80015ac:	2b00      	cmp	r3, #0
 80015ae:	d011      	beq.n	80015d4 <StartAdcTask+0xd0>
 80015b0:	f002 f9ec 	bl	800398c <HAL_GetTick>
 80015b4:	4603      	mov	r3, r0
 80015b6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80015ba:	d30b      	bcc.n	80015d4 <StartAdcTask+0xd0>
 80015bc:	4b10      	ldr	r3, [pc, #64]	@ (8001600 <StartAdcTask+0xfc>)
 80015be:	2201      	movs	r2, #1
 80015c0:	701a      	strb	r2, [r3, #0]
 80015c2:	480a      	ldr	r0, [pc, #40]	@ (80015ec <StartAdcTask+0xe8>)
 80015c4:	f7ff ff7e 	bl	80014c4 <adc_init>
 80015c8:	480a      	ldr	r0, [pc, #40]	@ (80015f4 <StartAdcTask+0xf0>)
 80015ca:	f7ff ff7b 	bl	80014c4 <adc_init>
 80015ce:	480b      	ldr	r0, [pc, #44]	@ (80015fc <StartAdcTask+0xf8>)
 80015d0:	f7ff ff78 	bl	80014c4 <adc_init>
 80015d4:	200a      	movs	r0, #10
 80015d6:	f008 fa6f 	bl	8009ab8 <osDelay>
 80015da:	e7a9      	b.n	8001530 <StartAdcTask+0x2c>
 80015dc:	20000620 	.word	0x20000620
 80015e0:	200002bc 	.word	0x200002bc
 80015e4:	20000994 	.word	0x20000994
 80015e8:	200006ac 	.word	0x200006ac
 80015ec:	20000004 	.word	0x20000004
 80015f0:	200006b0 	.word	0x200006b0
 80015f4:	20000018 	.word	0x20000018
 80015f8:	200006b4 	.word	0x200006b4
 80015fc:	2000002c 	.word	0x2000002c
 8001600:	200006a8 	.word	0x200006a8

08001604 <fdcan_pkt_get_byte>:
 8001604:	b480      	push	{r7}
 8001606:	b089      	sub	sp, #36	@ 0x24
 8001608:	af00      	add	r7, sp, #0
 800160a:	60f8      	str	r0, [r7, #12]
 800160c:	60b9      	str	r1, [r7, #8]
 800160e:	603b      	str	r3, [r7, #0]
 8001610:	4613      	mov	r3, r2
 8001612:	71fb      	strb	r3, [r7, #7]
 8001614:	68bb      	ldr	r3, [r7, #8]
 8001616:	7b1b      	ldrb	r3, [r3, #12]
 8001618:	79fa      	ldrb	r2, [r7, #7]
 800161a:	429a      	cmp	r2, r3
 800161c:	d308      	bcc.n	8001630 <fdcan_pkt_get_byte+0x2c>
 800161e:	68fb      	ldr	r3, [r7, #12]
 8001620:	461a      	mov	r2, r3
 8001622:	2300      	movs	r3, #0
 8001624:	6013      	str	r3, [r2, #0]
 8001626:	6053      	str	r3, [r2, #4]
 8001628:	68fb      	ldr	r3, [r7, #12]
 800162a:	2208      	movs	r2, #8
 800162c:	711a      	strb	r2, [r3, #4]
 800162e:	e00b      	b.n	8001648 <fdcan_pkt_get_byte+0x44>
 8001630:	79fb      	ldrb	r3, [r7, #7]
 8001632:	68ba      	ldr	r2, [r7, #8]
 8001634:	4413      	add	r3, r2
 8001636:	791a      	ldrb	r2, [r3, #4]
 8001638:	683b      	ldr	r3, [r7, #0]
 800163a:	701a      	strb	r2, [r3, #0]
 800163c:	68fb      	ldr	r3, [r7, #12]
 800163e:	2201      	movs	r2, #1
 8001640:	701a      	strb	r2, [r3, #0]
 8001642:	68fb      	ldr	r3, [r7, #12]
 8001644:	683a      	ldr	r2, [r7, #0]
 8001646:	605a      	str	r2, [r3, #4]
 8001648:	68f8      	ldr	r0, [r7, #12]
 800164a:	3724      	adds	r7, #36	@ 0x24
 800164c:	46bd      	mov	sp, r7
 800164e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001652:	4770      	bx	lr

08001654 <fdcan_pkt_pool_alloc>:
 8001654:	b480      	push	{r7}
 8001656:	b089      	sub	sp, #36	@ 0x24
 8001658:	af00      	add	r7, sp, #0
 800165a:	6078      	str	r0, [r7, #4]
 800165c:	4b16      	ldr	r3, [pc, #88]	@ (80016b8 <fdcan_pkt_pool_alloc+0x64>)
 800165e:	f8d3 3280 	ldr.w	r3, [r3, #640]	@ 0x280
 8001662:	2b00      	cmp	r3, #0
 8001664:	d108      	bne.n	8001678 <fdcan_pkt_pool_alloc+0x24>
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	461a      	mov	r2, r3
 800166a:	2300      	movs	r3, #0
 800166c:	6013      	str	r3, [r2, #0]
 800166e:	6053      	str	r3, [r2, #4]
 8001670:	687b      	ldr	r3, [r7, #4]
 8001672:	2205      	movs	r2, #5
 8001674:	711a      	strb	r2, [r3, #4]
 8001676:	e019      	b.n	80016ac <fdcan_pkt_pool_alloc+0x58>
 8001678:	4b0f      	ldr	r3, [pc, #60]	@ (80016b8 <fdcan_pkt_pool_alloc+0x64>)
 800167a:	f8d3 3280 	ldr.w	r3, [r3, #640]	@ 0x280
 800167e:	61fb      	str	r3, [r7, #28]
 8001680:	69fb      	ldr	r3, [r7, #28]
 8001682:	691b      	ldr	r3, [r3, #16]
 8001684:	4a0c      	ldr	r2, [pc, #48]	@ (80016b8 <fdcan_pkt_pool_alloc+0x64>)
 8001686:	f8c2 3280 	str.w	r3, [r2, #640]	@ 0x280
 800168a:	69fb      	ldr	r3, [r7, #28]
 800168c:	2200      	movs	r2, #0
 800168e:	611a      	str	r2, [r3, #16]
 8001690:	4b09      	ldr	r3, [pc, #36]	@ (80016b8 <fdcan_pkt_pool_alloc+0x64>)
 8001692:	f893 3284 	ldrb.w	r3, [r3, #644]	@ 0x284
 8001696:	3b01      	subs	r3, #1
 8001698:	b2da      	uxtb	r2, r3
 800169a:	4b07      	ldr	r3, [pc, #28]	@ (80016b8 <fdcan_pkt_pool_alloc+0x64>)
 800169c:	f883 2284 	strb.w	r2, [r3, #644]	@ 0x284
 80016a0:	687b      	ldr	r3, [r7, #4]
 80016a2:	2201      	movs	r2, #1
 80016a4:	701a      	strb	r2, [r3, #0]
 80016a6:	687b      	ldr	r3, [r7, #4]
 80016a8:	69fa      	ldr	r2, [r7, #28]
 80016aa:	605a      	str	r2, [r3, #4]
 80016ac:	6878      	ldr	r0, [r7, #4]
 80016ae:	3724      	adds	r7, #36	@ 0x24
 80016b0:	46bd      	mov	sp, r7
 80016b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016b6:	4770      	bx	lr
 80016b8:	200006b8 	.word	0x200006b8

080016bc <fdcan_pkt_pool_free>:
 80016bc:	b580      	push	{r7, lr}
 80016be:	b082      	sub	sp, #8
 80016c0:	af00      	add	r7, sp, #0
 80016c2:	6078      	str	r0, [r7, #4]
 80016c4:	687b      	ldr	r3, [r7, #4]
 80016c6:	3304      	adds	r3, #4
 80016c8:	2208      	movs	r2, #8
 80016ca:	2100      	movs	r1, #0
 80016cc:	4618      	mov	r0, r3
 80016ce:	f00a fffb 	bl	800c6c8 <memset>
 80016d2:	687b      	ldr	r3, [r7, #4]
 80016d4:	2200      	movs	r2, #0
 80016d6:	731a      	strb	r2, [r3, #12]
 80016d8:	4b0a      	ldr	r3, [pc, #40]	@ (8001704 <fdcan_pkt_pool_free+0x48>)
 80016da:	f8d3 2280 	ldr.w	r2, [r3, #640]	@ 0x280
 80016de:	687b      	ldr	r3, [r7, #4]
 80016e0:	611a      	str	r2, [r3, #16]
 80016e2:	4a08      	ldr	r2, [pc, #32]	@ (8001704 <fdcan_pkt_pool_free+0x48>)
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	f8c2 3280 	str.w	r3, [r2, #640]	@ 0x280
 80016ea:	4b06      	ldr	r3, [pc, #24]	@ (8001704 <fdcan_pkt_pool_free+0x48>)
 80016ec:	f893 3284 	ldrb.w	r3, [r3, #644]	@ 0x284
 80016f0:	3301      	adds	r3, #1
 80016f2:	b2da      	uxtb	r2, r3
 80016f4:	4b03      	ldr	r3, [pc, #12]	@ (8001704 <fdcan_pkt_pool_free+0x48>)
 80016f6:	f883 2284 	strb.w	r2, [r3, #644]	@ 0x284
 80016fa:	bf00      	nop
 80016fc:	3708      	adds	r7, #8
 80016fe:	46bd      	mov	sp, r7
 8001700:	bd80      	pop	{r7, pc}
 8001702:	bf00      	nop
 8001704:	200006b8 	.word	0x200006b8

08001708 <fdcan_pkt_buf_push>:
 8001708:	b480      	push	{r7}
 800170a:	b08b      	sub	sp, #44	@ 0x2c
 800170c:	af00      	add	r7, sp, #0
 800170e:	60f8      	str	r0, [r7, #12]
 8001710:	60b9      	str	r1, [r7, #8]
 8001712:	607a      	str	r2, [r7, #4]
 8001714:	68bb      	ldr	r3, [r7, #8]
 8001716:	689a      	ldr	r2, [r3, #8]
 8001718:	68bb      	ldr	r3, [r7, #8]
 800171a:	68db      	ldr	r3, [r3, #12]
 800171c:	429a      	cmp	r2, r3
 800171e:	d308      	bcc.n	8001732 <fdcan_pkt_buf_push+0x2a>
 8001720:	68fb      	ldr	r3, [r7, #12]
 8001722:	461a      	mov	r2, r3
 8001724:	2300      	movs	r3, #0
 8001726:	6013      	str	r3, [r2, #0]
 8001728:	6053      	str	r3, [r2, #4]
 800172a:	68fb      	ldr	r3, [r7, #12]
 800172c:	2207      	movs	r2, #7
 800172e:	711a      	strb	r2, [r3, #4]
 8001730:	e01e      	b.n	8001770 <fdcan_pkt_buf_push+0x68>
 8001732:	68bb      	ldr	r3, [r7, #8]
 8001734:	685a      	ldr	r2, [r3, #4]
 8001736:	68bb      	ldr	r3, [r7, #8]
 8001738:	689b      	ldr	r3, [r3, #8]
 800173a:	4413      	add	r3, r2
 800173c:	68ba      	ldr	r2, [r7, #8]
 800173e:	68d2      	ldr	r2, [r2, #12]
 8001740:	fbb3 f1f2 	udiv	r1, r3, r2
 8001744:	fb01 f202 	mul.w	r2, r1, r2
 8001748:	1a9b      	subs	r3, r3, r2
 800174a:	627b      	str	r3, [r7, #36]	@ 0x24
 800174c:	68bb      	ldr	r3, [r7, #8]
 800174e:	681a      	ldr	r2, [r3, #0]
 8001750:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001752:	009b      	lsls	r3, r3, #2
 8001754:	4413      	add	r3, r2
 8001756:	687a      	ldr	r2, [r7, #4]
 8001758:	601a      	str	r2, [r3, #0]
 800175a:	68bb      	ldr	r3, [r7, #8]
 800175c:	689b      	ldr	r3, [r3, #8]
 800175e:	1c5a      	adds	r2, r3, #1
 8001760:	68bb      	ldr	r3, [r7, #8]
 8001762:	609a      	str	r2, [r3, #8]
 8001764:	68fb      	ldr	r3, [r7, #12]
 8001766:	2201      	movs	r2, #1
 8001768:	701a      	strb	r2, [r3, #0]
 800176a:	68fb      	ldr	r3, [r7, #12]
 800176c:	68ba      	ldr	r2, [r7, #8]
 800176e:	605a      	str	r2, [r3, #4]
 8001770:	68f8      	ldr	r0, [r7, #12]
 8001772:	372c      	adds	r7, #44	@ 0x2c
 8001774:	46bd      	mov	sp, r7
 8001776:	f85d 7b04 	ldr.w	r7, [sp], #4
 800177a:	4770      	bx	lr

0800177c <HAL_FDCAN_ErrorStatusCallback>:
 800177c:	b480      	push	{r7}
 800177e:	b083      	sub	sp, #12
 8001780:	af00      	add	r7, sp, #0
 8001782:	6078      	str	r0, [r7, #4]
 8001784:	6039      	str	r1, [r7, #0]
 8001786:	687b      	ldr	r3, [r7, #4]
 8001788:	4a08      	ldr	r2, [pc, #32]	@ (80017ac <HAL_FDCAN_ErrorStatusCallback+0x30>)
 800178a:	4293      	cmp	r3, r2
 800178c:	d107      	bne.n	800179e <HAL_FDCAN_ErrorStatusCallback+0x22>
 800178e:	683b      	ldr	r3, [r7, #0]
 8001790:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8001794:	2b00      	cmp	r3, #0
 8001796:	d002      	beq.n	800179e <HAL_FDCAN_ErrorStatusCallback+0x22>
 8001798:	4b05      	ldr	r3, [pc, #20]	@ (80017b0 <HAL_FDCAN_ErrorStatusCallback+0x34>)
 800179a:	2201      	movs	r2, #1
 800179c:	701a      	strb	r2, [r3, #0]
 800179e:	bf00      	nop
 80017a0:	370c      	adds	r7, #12
 80017a2:	46bd      	mov	sp, r7
 80017a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a8:	4770      	bx	lr
 80017aa:	bf00      	nop
 80017ac:	2000047c 	.word	0x2000047c
 80017b0:	20000940 	.word	0x20000940

080017b4 <HAL_FDCAN_TxEventFifoCallback>:
 80017b4:	b580      	push	{r7, lr}
 80017b6:	b08c      	sub	sp, #48	@ 0x30
 80017b8:	af00      	add	r7, sp, #0
 80017ba:	6078      	str	r0, [r7, #4]
 80017bc:	6039      	str	r1, [r7, #0]
 80017be:	683b      	ldr	r3, [r7, #0]
 80017c0:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80017c4:	2b00      	cmp	r3, #0
 80017c6:	d005      	beq.n	80017d4 <HAL_FDCAN_TxEventFifoCallback+0x20>
 80017c8:	f107 0308 	add.w	r3, r7, #8
 80017cc:	4619      	mov	r1, r3
 80017ce:	6878      	ldr	r0, [r7, #4]
 80017d0:	f004 fa80 	bl	8005cd4 <HAL_FDCAN_GetTxEvent>
 80017d4:	683b      	ldr	r3, [r7, #0]
 80017d6:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80017da:	2b00      	cmp	r3, #0
 80017dc:	d001      	beq.n	80017e2 <HAL_FDCAN_TxEventFifoCallback+0x2e>
 80017de:	f7ff fad1 	bl	8000d84 <Error_Handler>
 80017e2:	bf00      	nop
 80017e4:	3730      	adds	r7, #48	@ 0x30
 80017e6:	46bd      	mov	sp, r7
 80017e8:	bd80      	pop	{r7, pc}

080017ea <HAL_FDCAN_TxBufferCompleteCallback>:
 80017ea:	b480      	push	{r7}
 80017ec:	b083      	sub	sp, #12
 80017ee:	af00      	add	r7, sp, #0
 80017f0:	6078      	str	r0, [r7, #4]
 80017f2:	6039      	str	r1, [r7, #0]
 80017f4:	bf00      	nop
 80017f6:	370c      	adds	r7, #12
 80017f8:	46bd      	mov	sp, r7
 80017fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017fe:	4770      	bx	lr

08001800 <HAL_FDCAN_RxFifo0Callback>:
 8001800:	b580      	push	{r7, lr}
 8001802:	b08a      	sub	sp, #40	@ 0x28
 8001804:	af00      	add	r7, sp, #0
 8001806:	60f8      	str	r0, [r7, #12]
 8001808:	60b9      	str	r1, [r7, #8]
 800180a:	68bb      	ldr	r3, [r7, #8]
 800180c:	f003 0301 	and.w	r3, r3, #1
 8001810:	2b00      	cmp	r3, #0
 8001812:	d05b      	beq.n	80018cc <HAL_FDCAN_RxFifo0Callback+0xcc>
 8001814:	f107 0318 	add.w	r3, r7, #24
 8001818:	4618      	mov	r0, r3
 800181a:	f7ff ff1b 	bl	8001654 <fdcan_pkt_pool_alloc>
 800181e:	7e3b      	ldrb	r3, [r7, #24]
 8001820:	f083 0301 	eor.w	r3, r3, #1
 8001824:	b2db      	uxtb	r3, r3
 8001826:	2b00      	cmp	r3, #0
 8001828:	d005      	beq.n	8001836 <HAL_FDCAN_RxFifo0Callback+0x36>
 800182a:	f997 201c 	ldrsb.w	r2, [r7, #28]
 800182e:	4b29      	ldr	r3, [pc, #164]	@ (80018d4 <HAL_FDCAN_RxFifo0Callback+0xd4>)
 8001830:	701a      	strb	r2, [r3, #0]
 8001832:	f7ff faa7 	bl	8000d84 <Error_Handler>
 8001836:	69fb      	ldr	r3, [r7, #28]
 8001838:	627b      	str	r3, [r7, #36]	@ 0x24
 800183a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800183c:	3304      	adds	r3, #4
 800183e:	4a26      	ldr	r2, [pc, #152]	@ (80018d8 <HAL_FDCAN_RxFifo0Callback+0xd8>)
 8001840:	2140      	movs	r1, #64	@ 0x40
 8001842:	68f8      	ldr	r0, [r7, #12]
 8001844:	f004 f93e 	bl	8005ac4 <HAL_FDCAN_GetRxMessage>
 8001848:	4603      	mov	r3, r0
 800184a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800184e:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8001852:	2b00      	cmp	r3, #0
 8001854:	d005      	beq.n	8001862 <HAL_FDCAN_RxFifo0Callback+0x62>
 8001856:	f997 2023 	ldrsb.w	r2, [r7, #35]	@ 0x23
 800185a:	4b1e      	ldr	r3, [pc, #120]	@ (80018d4 <HAL_FDCAN_RxFifo0Callback+0xd4>)
 800185c:	701a      	strb	r2, [r3, #0]
 800185e:	f7ff fa91 	bl	8000d84 <Error_Handler>
 8001862:	4b1d      	ldr	r3, [pc, #116]	@ (80018d8 <HAL_FDCAN_RxFifo0Callback+0xd8>)
 8001864:	681a      	ldr	r2, [r3, #0]
 8001866:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001868:	601a      	str	r2, [r3, #0]
 800186a:	4b1b      	ldr	r3, [pc, #108]	@ (80018d8 <HAL_FDCAN_RxFifo0Callback+0xd8>)
 800186c:	68db      	ldr	r3, [r3, #12]
 800186e:	b2da      	uxtb	r2, r3
 8001870:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001872:	731a      	strb	r2, [r3, #12]
 8001874:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	2b1f      	cmp	r3, #31
 800187a:	d90c      	bls.n	8001896 <HAL_FDCAN_RxFifo0Callback+0x96>
 800187c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800187e:	681b      	ldr	r3, [r3, #0]
 8001880:	2b21      	cmp	r3, #33	@ 0x21
 8001882:	d808      	bhi.n	8001896 <HAL_FDCAN_RxFifo0Callback+0x96>
 8001884:	463b      	mov	r3, r7
 8001886:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8001888:	4618      	mov	r0, r3
 800188a:	f000 f849 	bl	8001920 <instant_recv_proc>
 800188e:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8001890:	f7ff ff14 	bl	80016bc <fdcan_pkt_pool_free>
 8001894:	e01a      	b.n	80018cc <HAL_FDCAN_RxFifo0Callback+0xcc>
 8001896:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	2b21      	cmp	r3, #33	@ 0x21
 800189c:	d916      	bls.n	80018cc <HAL_FDCAN_RxFifo0Callback+0xcc>
 800189e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	2b23      	cmp	r3, #35	@ 0x23
 80018a4:	d812      	bhi.n	80018cc <HAL_FDCAN_RxFifo0Callback+0xcc>
 80018a6:	f107 0310 	add.w	r3, r7, #16
 80018aa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80018ac:	490b      	ldr	r1, [pc, #44]	@ (80018dc <HAL_FDCAN_RxFifo0Callback+0xdc>)
 80018ae:	4618      	mov	r0, r3
 80018b0:	f7ff ff2a 	bl	8001708 <fdcan_pkt_buf_push>
 80018b4:	7c3b      	ldrb	r3, [r7, #16]
 80018b6:	f083 0301 	eor.w	r3, r3, #1
 80018ba:	b2db      	uxtb	r3, r3
 80018bc:	2b00      	cmp	r3, #0
 80018be:	d005      	beq.n	80018cc <HAL_FDCAN_RxFifo0Callback+0xcc>
 80018c0:	f997 2014 	ldrsb.w	r2, [r7, #20]
 80018c4:	4b03      	ldr	r3, [pc, #12]	@ (80018d4 <HAL_FDCAN_RxFifo0Callback+0xd4>)
 80018c6:	701a      	strb	r2, [r3, #0]
 80018c8:	f7ff fa5c 	bl	8000d84 <Error_Handler>
 80018cc:	bf00      	nop
 80018ce:	3728      	adds	r7, #40	@ 0x28
 80018d0:	46bd      	mov	sp, r7
 80018d2:	bd80      	pop	{r7, pc}
 80018d4:	20000994 	.word	0x20000994
 80018d8:	2000096c 	.word	0x2000096c
 80018dc:	20000040 	.word	0x20000040

080018e0 <HAL_FDCAN_RxFifo1Callback>:
 80018e0:	b480      	push	{r7}
 80018e2:	b083      	sub	sp, #12
 80018e4:	af00      	add	r7, sp, #0
 80018e6:	6078      	str	r0, [r7, #4]
 80018e8:	6039      	str	r1, [r7, #0]
 80018ea:	bf00      	nop
 80018ec:	370c      	adds	r7, #12
 80018ee:	46bd      	mov	sp, r7
 80018f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018f4:	4770      	bx	lr

080018f6 <instant_recv_proc_inner>:
 80018f6:	b480      	push	{r7}
 80018f8:	b087      	sub	sp, #28
 80018fa:	af00      	add	r7, sp, #0
 80018fc:	60f8      	str	r0, [r7, #12]
 80018fe:	60b9      	str	r1, [r7, #8]
 8001900:	4613      	mov	r3, r2
 8001902:	71fb      	strb	r3, [r7, #7]
 8001904:	68fb      	ldr	r3, [r7, #12]
 8001906:	461a      	mov	r2, r3
 8001908:	2300      	movs	r3, #0
 800190a:	6013      	str	r3, [r2, #0]
 800190c:	6053      	str	r3, [r2, #4]
 800190e:	68fb      	ldr	r3, [r7, #12]
 8001910:	2208      	movs	r2, #8
 8001912:	711a      	strb	r2, [r3, #4]
 8001914:	68f8      	ldr	r0, [r7, #12]
 8001916:	371c      	adds	r7, #28
 8001918:	46bd      	mov	sp, r7
 800191a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800191e:	4770      	bx	lr

08001920 <instant_recv_proc>:
 8001920:	b580      	push	{r7, lr}
 8001922:	b08a      	sub	sp, #40	@ 0x28
 8001924:	af00      	add	r7, sp, #0
 8001926:	6078      	str	r0, [r7, #4]
 8001928:	6039      	str	r1, [r7, #0]
 800192a:	f107 001c 	add.w	r0, r7, #28
 800192e:	f107 0327 	add.w	r3, r7, #39	@ 0x27
 8001932:	2200      	movs	r2, #0
 8001934:	6839      	ldr	r1, [r7, #0]
 8001936:	f7ff fe65 	bl	8001604 <fdcan_pkt_get_byte>
 800193a:	7f3b      	ldrb	r3, [r7, #28]
 800193c:	f083 0301 	eor.w	r3, r3, #1
 8001940:	b2db      	uxtb	r3, r3
 8001942:	2b00      	cmp	r3, #0
 8001944:	d00c      	beq.n	8001960 <instant_recv_proc+0x40>
 8001946:	f997 2020 	ldrsb.w	r2, [r7, #32]
 800194a:	4b18      	ldr	r3, [pc, #96]	@ (80019ac <instant_recv_proc+0x8c>)
 800194c:	701a      	strb	r2, [r3, #0]
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	461a      	mov	r2, r3
 8001952:	f107 031c 	add.w	r3, r7, #28
 8001956:	e893 0003 	ldmia.w	r3, {r0, r1}
 800195a:	e882 0003 	stmia.w	r2, {r0, r1}
 800195e:	e021      	b.n	80019a4 <instant_recv_proc+0x84>
 8001960:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001964:	2b11      	cmp	r3, #17
 8001966:	d002      	beq.n	800196e <instant_recv_proc+0x4e>
 8001968:	2b12      	cmp	r3, #18
 800196a:	d00a      	beq.n	8001982 <instant_recv_proc+0x62>
 800196c:	e013      	b.n	8001996 <instant_recv_proc+0x76>
 800196e:	4b10      	ldr	r3, [pc, #64]	@ (80019b0 <instant_recv_proc+0x90>)
 8001970:	2200      	movs	r2, #0
 8001972:	701a      	strb	r2, [r3, #0]
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	2201      	movs	r2, #1
 8001978:	701a      	strb	r2, [r3, #0]
 800197a:	687b      	ldr	r3, [r7, #4]
 800197c:	2200      	movs	r2, #0
 800197e:	605a      	str	r2, [r3, #4]
 8001980:	e010      	b.n	80019a4 <instant_recv_proc+0x84>
 8001982:	4b0b      	ldr	r3, [pc, #44]	@ (80019b0 <instant_recv_proc+0x90>)
 8001984:	2201      	movs	r2, #1
 8001986:	701a      	strb	r2, [r3, #0]
 8001988:	687b      	ldr	r3, [r7, #4]
 800198a:	2201      	movs	r2, #1
 800198c:	701a      	strb	r2, [r3, #0]
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	2200      	movs	r2, #0
 8001992:	605a      	str	r2, [r3, #4]
 8001994:	e006      	b.n	80019a4 <instant_recv_proc+0x84>
 8001996:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 800199a:	687b      	ldr	r3, [r7, #4]
 800199c:	6839      	ldr	r1, [r7, #0]
 800199e:	4618      	mov	r0, r3
 80019a0:	f7ff ffa9 	bl	80018f6 <instant_recv_proc_inner>
 80019a4:	6878      	ldr	r0, [r7, #4]
 80019a6:	3728      	adds	r7, #40	@ 0x28
 80019a8:	46bd      	mov	sp, r7
 80019aa:	bd80      	pop	{r7, pc}
 80019ac:	20000994 	.word	0x20000994
 80019b0:	20000941 	.word	0x20000941

080019b4 <INIT_OWN>:
#include "main/main.h"
#include "main/tim.h"
#include "motor/main.h"

inline void INIT_OWN(void)
{
 80019b4:	b580      	push	{r7, lr}
 80019b6:	af00      	add	r7, sp, #0
    INIT_OWN_TIM();
 80019b8:	f000 f84e 	bl	8001a58 <INIT_OWN_TIM>
}
 80019bc:	bf00      	nop
 80019be:	bd80      	pop	{r7, pc}

080019c0 <HAL_GPIO_EXTI_Callback>:

inline void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80019c0:	b580      	push	{r7, lr}
 80019c2:	b082      	sub	sp, #8
 80019c4:	af00      	add	r7, sp, #0
 80019c6:	4603      	mov	r3, r0
 80019c8:	80fb      	strh	r3, [r7, #6]
    if (
           (GPIO_Pin == motor_h.const_h.Hall_GPIO_Pin_x[0])
 80019ca:	4b0b      	ldr	r3, [pc, #44]	@ (80019f8 <HAL_GPIO_EXTI_Callback+0x38>)
 80019cc:	899b      	ldrh	r3, [r3, #12]
    if (
 80019ce:	88fa      	ldrh	r2, [r7, #6]
 80019d0:	429a      	cmp	r2, r3
 80019d2:	d009      	beq.n	80019e8 <HAL_GPIO_EXTI_Callback+0x28>
        || (GPIO_Pin == motor_h.const_h.Hall_GPIO_Pin_x[1])
 80019d4:	4b08      	ldr	r3, [pc, #32]	@ (80019f8 <HAL_GPIO_EXTI_Callback+0x38>)
 80019d6:	89db      	ldrh	r3, [r3, #14]
 80019d8:	88fa      	ldrh	r2, [r7, #6]
 80019da:	429a      	cmp	r2, r3
 80019dc:	d004      	beq.n	80019e8 <HAL_GPIO_EXTI_Callback+0x28>
        || (GPIO_Pin == motor_h.const_h.Hall_GPIO_Pin_x[2])
 80019de:	4b06      	ldr	r3, [pc, #24]	@ (80019f8 <HAL_GPIO_EXTI_Callback+0x38>)
 80019e0:	8a1b      	ldrh	r3, [r3, #16]
 80019e2:	88fa      	ldrh	r2, [r7, #6]
 80019e4:	429a      	cmp	r2, r3
 80019e6:	d102      	bne.n	80019ee <HAL_GPIO_EXTI_Callback+0x2e>
    ) {
        motor_hall_exti(&motor_h);
 80019e8:	4803      	ldr	r0, [pc, #12]	@ (80019f8 <HAL_GPIO_EXTI_Callback+0x38>)
 80019ea:	f001 fa11 	bl	8002e10 <motor_hall_exti>
    }
}
 80019ee:	bf00      	nop
 80019f0:	3708      	adds	r7, #8
 80019f2:	46bd      	mov	sp, r7
 80019f4:	bd80      	pop	{r7, pc}
 80019f6:	bf00      	nop
 80019f8:	20000050 	.word	0x20000050

080019fc <HAL_TIM_PeriodElapsedCallback_OWN>:

inline void HAL_TIM_PeriodElapsedCallback_OWN(TIM_HandleTypeDef *htim)
{
 80019fc:	b580      	push	{r7, lr}
 80019fe:	b082      	sub	sp, #8
 8001a00:	af00      	add	r7, sp, #0
 8001a02:	6078      	str	r0, [r7, #4]
    if (htim == motor_h.const_h.TIM_htimx)
 8001a04:	4b05      	ldr	r3, [pc, #20]	@ (8001a1c <HAL_TIM_PeriodElapsedCallback_OWN+0x20>)
 8001a06:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001a08:	687a      	ldr	r2, [r7, #4]
 8001a0a:	429a      	cmp	r2, r3
 8001a0c:	d102      	bne.n	8001a14 <HAL_TIM_PeriodElapsedCallback_OWN+0x18>
    {
        motor_pwm_pulse(&motor_h);
 8001a0e:	4803      	ldr	r0, [pc, #12]	@ (8001a1c <HAL_TIM_PeriodElapsedCallback_OWN+0x20>)
 8001a10:	f001 faa0 	bl	8002f54 <motor_pwm_pulse>
    }
}
 8001a14:	bf00      	nop
 8001a16:	3708      	adds	r7, #8
 8001a18:	46bd      	mov	sp, r7
 8001a1a:	bd80      	pop	{r7, pc}
 8001a1c:	20000050 	.word	0x20000050

08001a20 <StartDefaultTask>:

#define DEFALT_TASK_DELAY_MS 50
uint32_t defalt_running;
void StartDefaultTask(void *argument)
{
 8001a20:	b580      	push	{r7, lr}
 8001a22:	b084      	sub	sp, #16
 8001a24:	af00      	add	r7, sp, #0
 8001a26:	6078      	str	r0, [r7, #4]
    const uint32_t osPeriod = pdMS_TO_TICKS(DEFALT_TASK_DELAY_MS);
 8001a28:	2332      	movs	r3, #50	@ 0x32
 8001a2a:	60bb      	str	r3, [r7, #8]
    uint32_t next_wake = osKernelGetTickCount() + osPeriod;
 8001a2c:	f007 ff96 	bl	800995c <osKernelGetTickCount>
 8001a30:	4602      	mov	r2, r0
 8001a32:	68bb      	ldr	r3, [r7, #8]
 8001a34:	4413      	add	r3, r2
 8001a36:	60fb      	str	r3, [r7, #12]
    for(;;)
    {
        defalt_running = HAL_GetTick();
 8001a38:	f001 ffa8 	bl	800398c <HAL_GetTick>
 8001a3c:	4603      	mov	r3, r0
 8001a3e:	4a05      	ldr	r2, [pc, #20]	@ (8001a54 <StartDefaultTask+0x34>)
 8001a40:	6013      	str	r3, [r2, #0]
        osDelayUntil(next_wake);
 8001a42:	68f8      	ldr	r0, [r7, #12]
 8001a44:	f008 f853 	bl	8009aee <osDelayUntil>
        next_wake += osPeriod;
 8001a48:	68fa      	ldr	r2, [r7, #12]
 8001a4a:	68bb      	ldr	r3, [r7, #8]
 8001a4c:	4413      	add	r3, r2
 8001a4e:	60fb      	str	r3, [r7, #12]
        defalt_running = HAL_GetTick();
 8001a50:	bf00      	nop
 8001a52:	e7f1      	b.n	8001a38 <StartDefaultTask+0x18>
 8001a54:	20000998 	.word	0x20000998

08001a58 <INIT_OWN_TIM>:
#include "main/tim.h"

uint32_t tim_clk_APB1, tim_clk_APB2;

inline void INIT_OWN_TIM(void)
{
 8001a58:	b580      	push	{r7, lr}
 8001a5a:	af00      	add	r7, sp, #0
    tim_clk_APB1 = HAL_RCC_GetPCLK1Freq();
 8001a5c:	f005 faaa 	bl	8006fb4 <HAL_RCC_GetPCLK1Freq>
 8001a60:	4603      	mov	r3, r0
 8001a62:	4a0f      	ldr	r2, [pc, #60]	@ (8001aa0 <INIT_OWN_TIM+0x48>)
 8001a64:	6013      	str	r3, [r2, #0]
    tim_clk_APB2 = HAL_RCC_GetPCLK2Freq();
 8001a66:	f005 fabb 	bl	8006fe0 <HAL_RCC_GetPCLK2Freq>
 8001a6a:	4603      	mov	r3, r0
 8001a6c:	4a0d      	ldr	r2, [pc, #52]	@ (8001aa4 <INIT_OWN_TIM+0x4c>)
 8001a6e:	6013      	str	r3, [r2, #0]
    if ((RCC->CFGR & RCC_CFGR_PPRE1) != RCC_CFGR_PPRE1_DIV1) tim_clk_APB1 *= 2U;
 8001a70:	4b0d      	ldr	r3, [pc, #52]	@ (8001aa8 <INIT_OWN_TIM+0x50>)
 8001a72:	689b      	ldr	r3, [r3, #8]
 8001a74:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8001a78:	2b00      	cmp	r3, #0
 8001a7a:	d004      	beq.n	8001a86 <INIT_OWN_TIM+0x2e>
 8001a7c:	4b08      	ldr	r3, [pc, #32]	@ (8001aa0 <INIT_OWN_TIM+0x48>)
 8001a7e:	681b      	ldr	r3, [r3, #0]
 8001a80:	005b      	lsls	r3, r3, #1
 8001a82:	4a07      	ldr	r2, [pc, #28]	@ (8001aa0 <INIT_OWN_TIM+0x48>)
 8001a84:	6013      	str	r3, [r2, #0]
    if ((RCC->CFGR & RCC_CFGR_PPRE2) != RCC_CFGR_PPRE2_DIV1) tim_clk_APB2 *= 2U;
 8001a86:	4b08      	ldr	r3, [pc, #32]	@ (8001aa8 <INIT_OWN_TIM+0x50>)
 8001a88:	689b      	ldr	r3, [r3, #8]
 8001a8a:	f403 5360 	and.w	r3, r3, #14336	@ 0x3800
 8001a8e:	2b00      	cmp	r3, #0
 8001a90:	d004      	beq.n	8001a9c <INIT_OWN_TIM+0x44>
 8001a92:	4b04      	ldr	r3, [pc, #16]	@ (8001aa4 <INIT_OWN_TIM+0x4c>)
 8001a94:	681b      	ldr	r3, [r3, #0]
 8001a96:	005b      	lsls	r3, r3, #1
 8001a98:	4a02      	ldr	r2, [pc, #8]	@ (8001aa4 <INIT_OWN_TIM+0x4c>)
 8001a9a:	6013      	str	r3, [r2, #0]
}
 8001a9c:	bf00      	nop
 8001a9e:	bd80      	pop	{r7, pc}
 8001aa0:	2000099c 	.word	0x2000099c
 8001aa4:	200009a0 	.word	0x200009a0
 8001aa8:	40021000 	.word	0x40021000

08001aac <motor_hall_to_angle>:
    },
    .pwm_it_angle_acc = 0.0f,
};

inline Result motor_hall_to_angle(uint8_t hall, volatile float32_t *angle)
{
 8001aac:	b480      	push	{r7}
 8001aae:	b089      	sub	sp, #36	@ 0x24
 8001ab0:	af00      	add	r7, sp, #0
 8001ab2:	60f8      	str	r0, [r7, #12]
 8001ab4:	460b      	mov	r3, r1
 8001ab6:	607a      	str	r2, [r7, #4]
 8001ab8:	72fb      	strb	r3, [r7, #11]
    switch(hall)
 8001aba:	7afb      	ldrb	r3, [r7, #11]
 8001abc:	3b01      	subs	r3, #1
 8001abe:	2b05      	cmp	r3, #5
 8001ac0:	d827      	bhi.n	8001b12 <motor_hall_to_angle+0x66>
 8001ac2:	a201      	add	r2, pc, #4	@ (adr r2, 8001ac8 <motor_hall_to_angle+0x1c>)
 8001ac4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001ac8:	08001afb 	.word	0x08001afb
 8001acc:	08001aeb 	.word	0x08001aeb
 8001ad0:	08001af3 	.word	0x08001af3
 8001ad4:	08001b0b 	.word	0x08001b0b
 8001ad8:	08001b03 	.word	0x08001b03
 8001adc:	08001ae1 	.word	0x08001ae1
    {
        case 6:
        {
            *angle = 0.0f * DEG_TO_RAD;
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	f04f 0200 	mov.w	r2, #0
 8001ae6:	601a      	str	r2, [r3, #0]
            break;
 8001ae8:	e01c      	b.n	8001b24 <motor_hall_to_angle+0x78>
        }
        case 2:
        {
            *angle = 60.0f * DEG_TO_RAD;
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	4a13      	ldr	r2, [pc, #76]	@ (8001b3c <motor_hall_to_angle+0x90>)
 8001aee:	601a      	str	r2, [r3, #0]
            break;
 8001af0:	e018      	b.n	8001b24 <motor_hall_to_angle+0x78>
        }
        case 3:
        {
            *angle = 120.0f * DEG_TO_RAD;
 8001af2:	687b      	ldr	r3, [r7, #4]
 8001af4:	4a12      	ldr	r2, [pc, #72]	@ (8001b40 <motor_hall_to_angle+0x94>)
 8001af6:	601a      	str	r2, [r3, #0]
            break;
 8001af8:	e014      	b.n	8001b24 <motor_hall_to_angle+0x78>
        }
        case 1:
        {
            *angle = 180.0f * DEG_TO_RAD;
 8001afa:	687b      	ldr	r3, [r7, #4]
 8001afc:	4a11      	ldr	r2, [pc, #68]	@ (8001b44 <motor_hall_to_angle+0x98>)
 8001afe:	601a      	str	r2, [r3, #0]
            break;
 8001b00:	e010      	b.n	8001b24 <motor_hall_to_angle+0x78>
        }
        case 5:
        {
            *angle = 240.0f * DEG_TO_RAD;
 8001b02:	687b      	ldr	r3, [r7, #4]
 8001b04:	4a10      	ldr	r2, [pc, #64]	@ (8001b48 <motor_hall_to_angle+0x9c>)
 8001b06:	601a      	str	r2, [r3, #0]
            break;
 8001b08:	e00c      	b.n	8001b24 <motor_hall_to_angle+0x78>
        }
        case 4:
        {
            *angle = 300.0f * DEG_TO_RAD;
 8001b0a:	687b      	ldr	r3, [r7, #4]
 8001b0c:	4a0f      	ldr	r2, [pc, #60]	@ (8001b4c <motor_hall_to_angle+0xa0>)
 8001b0e:	601a      	str	r2, [r3, #0]
            break;
 8001b10:	e008      	b.n	8001b24 <motor_hall_to_angle+0x78>
        }
        default: return RESULT_ERROR(RES_ERR_NOT_FOUND);
 8001b12:	68fb      	ldr	r3, [r7, #12]
 8001b14:	461a      	mov	r2, r3
 8001b16:	2300      	movs	r3, #0
 8001b18:	6013      	str	r3, [r2, #0]
 8001b1a:	6053      	str	r3, [r2, #4]
 8001b1c:	68fb      	ldr	r3, [r7, #12]
 8001b1e:	2208      	movs	r2, #8
 8001b20:	711a      	strb	r2, [r3, #4]
    }
    return RESULT_OK(NULL);
}
 8001b22:	e005      	b.n	8001b30 <motor_hall_to_angle+0x84>
    return RESULT_OK(NULL);
 8001b24:	68fb      	ldr	r3, [r7, #12]
 8001b26:	2201      	movs	r2, #1
 8001b28:	701a      	strb	r2, [r3, #0]
 8001b2a:	68fb      	ldr	r3, [r7, #12]
 8001b2c:	2200      	movs	r2, #0
 8001b2e:	605a      	str	r2, [r3, #4]
}
 8001b30:	68f8      	ldr	r0, [r7, #12]
 8001b32:	3724      	adds	r7, #36	@ 0x24
 8001b34:	46bd      	mov	sp, r7
 8001b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b3a:	4770      	bx	lr
 8001b3c:	3f860a92 	.word	0x3f860a92
 8001b40:	40060a92 	.word	0x40060a92
 8001b44:	40490fdb 	.word	0x40490fdb
 8001b48:	40860a92 	.word	0x40860a92
 8001b4c:	40a78d36 	.word	0x40a78d36

08001b50 <clampf>:

inline float32_t clampf(float32_t val, float32_t min, float32_t max)
{
 8001b50:	b480      	push	{r7}
 8001b52:	b085      	sub	sp, #20
 8001b54:	af00      	add	r7, sp, #0
 8001b56:	ed87 0a03 	vstr	s0, [r7, #12]
 8001b5a:	edc7 0a02 	vstr	s1, [r7, #8]
 8001b5e:	ed87 1a01 	vstr	s2, [r7, #4]
    if (val > max) return max;
 8001b62:	ed97 7a03 	vldr	s14, [r7, #12]
 8001b66:	edd7 7a01 	vldr	s15, [r7, #4]
 8001b6a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001b6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b72:	dd01      	ble.n	8001b78 <clampf+0x28>
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	e00b      	b.n	8001b90 <clampf+0x40>
    if (val < min) return min;
 8001b78:	ed97 7a03 	vldr	s14, [r7, #12]
 8001b7c:	edd7 7a02 	vldr	s15, [r7, #8]
 8001b80:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001b84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b88:	d501      	bpl.n	8001b8e <clampf+0x3e>
 8001b8a:	68bb      	ldr	r3, [r7, #8]
 8001b8c:	e000      	b.n	8001b90 <clampf+0x40>
    return val;
 8001b8e:	68fb      	ldr	r3, [r7, #12]
}
 8001b90:	ee07 3a90 	vmov	s15, r3
 8001b94:	eeb0 0a67 	vmov.f32	s0, s15
 8001b98:	3714      	adds	r7, #20
 8001b9a:	46bd      	mov	sp, r7
 8001b9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ba0:	4770      	bx	lr
	...

08001ba4 <wrap_0_2pi>:

inline float32_t wrap_0_2pi(float32_t x)
{
 8001ba4:	b480      	push	{r7}
 8001ba6:	b085      	sub	sp, #20
 8001ba8:	af00      	add	r7, sp, #0
 8001baa:	ed87 0a01 	vstr	s0, [r7, #4]
    int32_t n = (int32_t)(x / MUL_2_PI);
 8001bae:	ed97 7a01 	vldr	s14, [r7, #4]
 8001bb2:	eddf 6a18 	vldr	s13, [pc, #96]	@ 8001c14 <wrap_0_2pi+0x70>
 8001bb6:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001bba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001bbe:	ee17 3a90 	vmov	r3, s15
 8001bc2:	60fb      	str	r3, [r7, #12]
    x -= (float32_t)n * MUL_2_PI;
 8001bc4:	68fb      	ldr	r3, [r7, #12]
 8001bc6:	ee07 3a90 	vmov	s15, r3
 8001bca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001bce:	ed9f 7a11 	vldr	s14, [pc, #68]	@ 8001c14 <wrap_0_2pi+0x70>
 8001bd2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001bd6:	ed97 7a01 	vldr	s14, [r7, #4]
 8001bda:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001bde:	edc7 7a01 	vstr	s15, [r7, #4]
    if (x < 0) x += MUL_2_PI;
 8001be2:	edd7 7a01 	vldr	s15, [r7, #4]
 8001be6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001bea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001bee:	d507      	bpl.n	8001c00 <wrap_0_2pi+0x5c>
 8001bf0:	edd7 7a01 	vldr	s15, [r7, #4]
 8001bf4:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8001c14 <wrap_0_2pi+0x70>
 8001bf8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001bfc:	edc7 7a01 	vstr	s15, [r7, #4]
    return x;
 8001c00:	687b      	ldr	r3, [r7, #4]
 8001c02:	ee07 3a90 	vmov	s15, r3
}
 8001c06:	eeb0 0a67 	vmov.f32	s0, s15
 8001c0a:	3714      	adds	r7, #20
 8001c0c:	46bd      	mov	sp, r7
 8001c0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c12:	4770      	bx	lr
 8001c14:	40c90fdb 	.word	0x40c90fdb

08001c18 <wrap_m1_1pi>:

inline float32_t wrap_m1_1pi(float32_t x)
{
 8001c18:	b480      	push	{r7}
 8001c1a:	b085      	sub	sp, #20
 8001c1c:	af00      	add	r7, sp, #0
 8001c1e:	ed87 0a01 	vstr	s0, [r7, #4]
    int32_t n = (int32_t)(x / MUL_2_PI);
 8001c22:	ed97 7a01 	vldr	s14, [r7, #4]
 8001c26:	eddf 6a22 	vldr	s13, [pc, #136]	@ 8001cb0 <wrap_m1_1pi+0x98>
 8001c2a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001c2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001c32:	ee17 3a90 	vmov	r3, s15
 8001c36:	60fb      	str	r3, [r7, #12]
    x -= (float32_t)n * MUL_2_PI;
 8001c38:	68fb      	ldr	r3, [r7, #12]
 8001c3a:	ee07 3a90 	vmov	s15, r3
 8001c3e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c42:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8001cb0 <wrap_m1_1pi+0x98>
 8001c46:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001c4a:	ed97 7a01 	vldr	s14, [r7, #4]
 8001c4e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001c52:	edc7 7a01 	vstr	s15, [r7, #4]
    if      (x < -PI) x += MUL_2_PI;
 8001c56:	edd7 7a01 	vldr	s15, [r7, #4]
 8001c5a:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 8001cb4 <wrap_m1_1pi+0x9c>
 8001c5e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001c62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c66:	d508      	bpl.n	8001c7a <wrap_m1_1pi+0x62>
 8001c68:	edd7 7a01 	vldr	s15, [r7, #4]
 8001c6c:	ed9f 7a10 	vldr	s14, [pc, #64]	@ 8001cb0 <wrap_m1_1pi+0x98>
 8001c70:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001c74:	edc7 7a01 	vstr	s15, [r7, #4]
 8001c78:	e010      	b.n	8001c9c <wrap_m1_1pi+0x84>
    else if (x >= PI) x -= MUL_2_PI;
 8001c7a:	edd7 7a01 	vldr	s15, [r7, #4]
 8001c7e:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8001cb8 <wrap_m1_1pi+0xa0>
 8001c82:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001c86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c8a:	db07      	blt.n	8001c9c <wrap_m1_1pi+0x84>
 8001c8c:	edd7 7a01 	vldr	s15, [r7, #4]
 8001c90:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8001cb0 <wrap_m1_1pi+0x98>
 8001c94:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001c98:	edc7 7a01 	vstr	s15, [r7, #4]
    return x;
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	ee07 3a90 	vmov	s15, r3
}
 8001ca2:	eeb0 0a67 	vmov.f32	s0, s15
 8001ca6:	3714      	adds	r7, #20
 8001ca8:	46bd      	mov	sp, r7
 8001caa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cae:	4770      	bx	lr
 8001cb0:	40c90fdb 	.word	0x40c90fdb
 8001cb4:	c0490fdb 	.word	0xc0490fdb
 8001cb8:	40490fdb 	.word	0x40490fdb

08001cbc <fast_fabsf>:

inline float32_t fast_fabsf(float32_t x)
{
 8001cbc:	b480      	push	{r7}
 8001cbe:	b085      	sub	sp, #20
 8001cc0:	af00      	add	r7, sp, #0
 8001cc2:	ed87 0a01 	vstr	s0, [r7, #4]
    union {
        float32_t f;
        uint32_t u;
    } v = { x };
 8001cc6:	687b      	ldr	r3, [r7, #4]
 8001cc8:	60fb      	str	r3, [r7, #12]
    v.u &= 0x7FFFFFFF;  // 清除最高位 sign bit
 8001cca:	68fb      	ldr	r3, [r7, #12]
 8001ccc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8001cd0:	60fb      	str	r3, [r7, #12]
    return v.f;
 8001cd2:	68fb      	ldr	r3, [r7, #12]
 8001cd4:	ee07 3a90 	vmov	s15, r3
}
 8001cd8:	eeb0 0a67 	vmov.f32	s0, s15
 8001cdc:	3714      	adds	r7, #20
 8001cde:	46bd      	mov	sp, r7
 8001ce0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ce4:	4770      	bx	lr
	...

08001ce8 <CLARKE_run_ideal>:
#include "motor/clarke.h"
#include "motor/basic.h"

inline void CLARKE_run_ideal(volatile CLARKE *clarke)
{
 8001ce8:	b480      	push	{r7}
 8001cea:	b083      	sub	sp, #12
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	6078      	str	r0, [r7, #4]
    clarke->Alpha = clarke->As;
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	681a      	ldr	r2, [r3, #0]
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	60da      	str	r2, [r3, #12]
    clarke->Beta = (clarke->As + clarke->Bs * 2.0f) * ONEbySQRT3;
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	ed93 7a00 	vldr	s14, [r3]
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	edd3 7a01 	vldr	s15, [r3, #4]
 8001d04:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8001d08:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d0c:	ed9f 7a06 	vldr	s14, [pc, #24]	@ 8001d28 <CLARKE_run_ideal+0x40>
 8001d10:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	edc3 7a04 	vstr	s15, [r3, #16]
}
 8001d1a:	bf00      	nop
 8001d1c:	370c      	adds	r7, #12
 8001d1e:	46bd      	mov	sp, r7
 8001d20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d24:	4770      	bx	lr
 8001d26:	bf00      	nop
 8001d28:	3f13cd3a 	.word	0x3f13cd3a

08001d2c <motor_120_hall_update>:
};
static const uint8_t motor_seq_index[] = {0xFF, 5, 3, 4, 1, 0, 2, 0xFF};

// 120 deg cntrol
void motor_120_hall_update(const MotorParameter *motor)
{
 8001d2c:	b580      	push	{r7, lr}
 8001d2e:	b084      	sub	sp, #16
 8001d30:	af00      	add	r7, sp, #0
 8001d32:	6078      	str	r0, [r7, #4]
    uint8_t idx = motor_seq_index[motor->exti_hall_curt];
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8001d3a:	b2db      	uxtb	r3, r3
 8001d3c:	461a      	mov	r2, r3
 8001d3e:	4b89      	ldr	r3, [pc, #548]	@ (8001f64 <motor_120_hall_update+0x238>)
 8001d40:	5c9b      	ldrb	r3, [r3, r2]
 8001d42:	73fb      	strb	r3, [r7, #15]
    if (motor->reverse) idx = (idx + 3) % 6; // CCW
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	f893 31a4 	ldrb.w	r3, [r3, #420]	@ 0x1a4
 8001d4a:	2b00      	cmp	r3, #0
 8001d4c:	d00d      	beq.n	8001d6a <motor_120_hall_update+0x3e>
 8001d4e:	7bfb      	ldrb	r3, [r7, #15]
 8001d50:	1cda      	adds	r2, r3, #3
 8001d52:	4b85      	ldr	r3, [pc, #532]	@ (8001f68 <motor_120_hall_update+0x23c>)
 8001d54:	fb83 3102 	smull	r3, r1, r3, r2
 8001d58:	17d3      	asrs	r3, r2, #31
 8001d5a:	1ac9      	subs	r1, r1, r3
 8001d5c:	460b      	mov	r3, r1
 8001d5e:	005b      	lsls	r3, r3, #1
 8001d60:	440b      	add	r3, r1
 8001d62:	005b      	lsls	r3, r3, #1
 8001d64:	1ad1      	subs	r1, r2, r3
 8001d66:	460b      	mov	r3, r1
 8001d68:	73fb      	strb	r3, [r7, #15]
    // idx = 5;
    uint8_t i;
    uint32_t compare = (uint32_t)((float32_t)TIM1_ARR * motor->pwm_duty_u);
 8001d6a:	687b      	ldr	r3, [r7, #4]
 8001d6c:	edd3 7a66 	vldr	s15, [r3, #408]	@ 0x198
 8001d70:	ed9f 7a7e 	vldr	s14, [pc, #504]	@ 8001f6c <motor_120_hall_update+0x240>
 8001d74:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d78:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001d7c:	ee17 3a90 	vmov	r3, s15
 8001d80:	60bb      	str	r3, [r7, #8]
    for (i = 0; i < 3; i++)
 8001d82:	2300      	movs	r3, #0
 8001d84:	73bb      	strb	r3, [r7, #14]
 8001d86:	e0e3      	b.n	8001f50 <motor_120_hall_update+0x224>
    {
        switch (motor_seq_map[idx][i])
 8001d88:	7bfa      	ldrb	r2, [r7, #15]
 8001d8a:	7bb9      	ldrb	r1, [r7, #14]
 8001d8c:	4878      	ldr	r0, [pc, #480]	@ (8001f70 <motor_120_hall_update+0x244>)
 8001d8e:	4613      	mov	r3, r2
 8001d90:	005b      	lsls	r3, r3, #1
 8001d92:	4413      	add	r3, r2
 8001d94:	4403      	add	r3, r0
 8001d96:	440b      	add	r3, r1
 8001d98:	f993 3000 	ldrsb.w	r3, [r3]
 8001d9c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001da0:	d05d      	beq.n	8001e5e <motor_120_hall_update+0x132>
 8001da2:	2b01      	cmp	r3, #1
 8001da4:	f040 80bc 	bne.w	8001f20 <motor_120_hall_update+0x1f4>
        {
            case HIGH_PASS:
            {
                __HAL_TIM_SET_COMPARE(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[i], compare);
 8001da8:	7bba      	ldrb	r2, [r7, #14]
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	3206      	adds	r2, #6
 8001dae:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001db2:	2b00      	cmp	r3, #0
 8001db4:	d105      	bne.n	8001dc2 <motor_120_hall_update+0x96>
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	695b      	ldr	r3, [r3, #20]
 8001dba:	681b      	ldr	r3, [r3, #0]
 8001dbc:	68ba      	ldr	r2, [r7, #8]
 8001dbe:	635a      	str	r2, [r3, #52]	@ 0x34
 8001dc0:	e038      	b.n	8001e34 <motor_120_hall_update+0x108>
 8001dc2:	7bba      	ldrb	r2, [r7, #14]
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	3206      	adds	r2, #6
 8001dc8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001dcc:	2b04      	cmp	r3, #4
 8001dce:	d105      	bne.n	8001ddc <motor_120_hall_update+0xb0>
 8001dd0:	687b      	ldr	r3, [r7, #4]
 8001dd2:	695b      	ldr	r3, [r3, #20]
 8001dd4:	681a      	ldr	r2, [r3, #0]
 8001dd6:	68bb      	ldr	r3, [r7, #8]
 8001dd8:	6393      	str	r3, [r2, #56]	@ 0x38
 8001dda:	e02b      	b.n	8001e34 <motor_120_hall_update+0x108>
 8001ddc:	7bba      	ldrb	r2, [r7, #14]
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	3206      	adds	r2, #6
 8001de2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001de6:	2b08      	cmp	r3, #8
 8001de8:	d105      	bne.n	8001df6 <motor_120_hall_update+0xca>
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	695b      	ldr	r3, [r3, #20]
 8001dee:	681a      	ldr	r2, [r3, #0]
 8001df0:	68bb      	ldr	r3, [r7, #8]
 8001df2:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8001df4:	e01e      	b.n	8001e34 <motor_120_hall_update+0x108>
 8001df6:	7bba      	ldrb	r2, [r7, #14]
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	3206      	adds	r2, #6
 8001dfc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e00:	2b0c      	cmp	r3, #12
 8001e02:	d105      	bne.n	8001e10 <motor_120_hall_update+0xe4>
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	695b      	ldr	r3, [r3, #20]
 8001e08:	681a      	ldr	r2, [r3, #0]
 8001e0a:	68bb      	ldr	r3, [r7, #8]
 8001e0c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001e0e:	e011      	b.n	8001e34 <motor_120_hall_update+0x108>
 8001e10:	7bba      	ldrb	r2, [r7, #14]
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	3206      	adds	r2, #6
 8001e16:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e1a:	2b10      	cmp	r3, #16
 8001e1c:	d105      	bne.n	8001e2a <motor_120_hall_update+0xfe>
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	695b      	ldr	r3, [r3, #20]
 8001e22:	681a      	ldr	r2, [r3, #0]
 8001e24:	68bb      	ldr	r3, [r7, #8]
 8001e26:	6493      	str	r3, [r2, #72]	@ 0x48
 8001e28:	e004      	b.n	8001e34 <motor_120_hall_update+0x108>
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	695b      	ldr	r3, [r3, #20]
 8001e2e:	681a      	ldr	r2, [r3, #0]
 8001e30:	68bb      	ldr	r3, [r7, #8]
 8001e32:	64d3      	str	r3, [r2, #76]	@ 0x4c
                HAL_TIM_PWM_Start(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[i]);
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	6958      	ldr	r0, [r3, #20]
 8001e38:	7bba      	ldrb	r2, [r7, #14]
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	3206      	adds	r2, #6
 8001e3e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e42:	4619      	mov	r1, r3
 8001e44:	f005 fcc4 	bl	80077d0 <HAL_TIM_PWM_Start>
                HAL_TIMEx_PWMN_Stop(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[i]);
 8001e48:	687b      	ldr	r3, [r7, #4]
 8001e4a:	6958      	ldr	r0, [r3, #20]
 8001e4c:	7bba      	ldrb	r2, [r7, #14]
 8001e4e:	687b      	ldr	r3, [r7, #4]
 8001e50:	3206      	adds	r2, #6
 8001e52:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e56:	4619      	mov	r1, r3
 8001e58:	f006 fdc2 	bl	80089e0 <HAL_TIMEx_PWMN_Stop>
                // HAL_GPIO_WritePin(motor->const_h.Coil_GPIOx[i], motor->const_h.Coil_GPIO_Pin_x[i],  GPIO_PIN_RESET);
                break;
 8001e5c:	e075      	b.n	8001f4a <motor_120_hall_update+0x21e>
            }
            case LOW_PASS:
            {
                HAL_TIM_PWM_Stop(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[i]);
 8001e5e:	687b      	ldr	r3, [r7, #4]
 8001e60:	6958      	ldr	r0, [r3, #20]
 8001e62:	7bba      	ldrb	r2, [r7, #14]
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	3206      	adds	r2, #6
 8001e68:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e6c:	4619      	mov	r1, r3
 8001e6e:	f005 fdaf 	bl	80079d0 <HAL_TIM_PWM_Stop>
                __HAL_TIM_SET_COMPARE(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[i], TIM1_ARR);
 8001e72:	7bba      	ldrb	r2, [r7, #14]
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	3206      	adds	r2, #6
 8001e78:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e7c:	2b00      	cmp	r3, #0
 8001e7e:	d106      	bne.n	8001e8e <motor_120_hall_update+0x162>
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	695b      	ldr	r3, [r3, #20]
 8001e84:	681b      	ldr	r3, [r3, #0]
 8001e86:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8001e8a:	635a      	str	r2, [r3, #52]	@ 0x34
 8001e8c:	e03d      	b.n	8001f0a <motor_120_hall_update+0x1de>
 8001e8e:	7bba      	ldrb	r2, [r7, #14]
 8001e90:	687b      	ldr	r3, [r7, #4]
 8001e92:	3206      	adds	r2, #6
 8001e94:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e98:	2b04      	cmp	r3, #4
 8001e9a:	d106      	bne.n	8001eaa <motor_120_hall_update+0x17e>
 8001e9c:	687b      	ldr	r3, [r7, #4]
 8001e9e:	695b      	ldr	r3, [r3, #20]
 8001ea0:	681a      	ldr	r2, [r3, #0]
 8001ea2:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001ea6:	6393      	str	r3, [r2, #56]	@ 0x38
 8001ea8:	e02f      	b.n	8001f0a <motor_120_hall_update+0x1de>
 8001eaa:	7bba      	ldrb	r2, [r7, #14]
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	3206      	adds	r2, #6
 8001eb0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001eb4:	2b08      	cmp	r3, #8
 8001eb6:	d106      	bne.n	8001ec6 <motor_120_hall_update+0x19a>
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	695b      	ldr	r3, [r3, #20]
 8001ebc:	681a      	ldr	r2, [r3, #0]
 8001ebe:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001ec2:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8001ec4:	e021      	b.n	8001f0a <motor_120_hall_update+0x1de>
 8001ec6:	7bba      	ldrb	r2, [r7, #14]
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	3206      	adds	r2, #6
 8001ecc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001ed0:	2b0c      	cmp	r3, #12
 8001ed2:	d106      	bne.n	8001ee2 <motor_120_hall_update+0x1b6>
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	695b      	ldr	r3, [r3, #20]
 8001ed8:	681a      	ldr	r2, [r3, #0]
 8001eda:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001ede:	6413      	str	r3, [r2, #64]	@ 0x40
 8001ee0:	e013      	b.n	8001f0a <motor_120_hall_update+0x1de>
 8001ee2:	7bba      	ldrb	r2, [r7, #14]
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	3206      	adds	r2, #6
 8001ee8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001eec:	2b10      	cmp	r3, #16
 8001eee:	d106      	bne.n	8001efe <motor_120_hall_update+0x1d2>
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	695b      	ldr	r3, [r3, #20]
 8001ef4:	681a      	ldr	r2, [r3, #0]
 8001ef6:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001efa:	6493      	str	r3, [r2, #72]	@ 0x48
 8001efc:	e005      	b.n	8001f0a <motor_120_hall_update+0x1de>
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	695b      	ldr	r3, [r3, #20]
 8001f02:	681a      	ldr	r2, [r3, #0]
 8001f04:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001f08:	64d3      	str	r3, [r2, #76]	@ 0x4c
                HAL_TIMEx_PWMN_Start(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[i]);
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	6958      	ldr	r0, [r3, #20]
 8001f0e:	7bba      	ldrb	r2, [r7, #14]
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	3206      	adds	r2, #6
 8001f14:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001f18:	4619      	mov	r1, r3
 8001f1a:	f006 fcad 	bl	8008878 <HAL_TIMEx_PWMN_Start>
                // HAL_GPIO_WritePin(motor->const_h.Coil_GPIOx[i], motor->const_h.Coil_GPIO_Pin_x[i],  GPIO_PIN_SET);
                break;
 8001f1e:	e014      	b.n	8001f4a <motor_120_hall_update+0x21e>
            }
            default:
            {
                HAL_TIM_PWM_Stop(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[i]);
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	6958      	ldr	r0, [r3, #20]
 8001f24:	7bba      	ldrb	r2, [r7, #14]
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	3206      	adds	r2, #6
 8001f2a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001f2e:	4619      	mov	r1, r3
 8001f30:	f005 fd4e 	bl	80079d0 <HAL_TIM_PWM_Stop>
                HAL_TIMEx_PWMN_Stop(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[i]);
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	6958      	ldr	r0, [r3, #20]
 8001f38:	7bba      	ldrb	r2, [r7, #14]
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	3206      	adds	r2, #6
 8001f3e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001f42:	4619      	mov	r1, r3
 8001f44:	f006 fd4c 	bl	80089e0 <HAL_TIMEx_PWMN_Stop>
                // HAL_GPIO_WritePin(motor->const_h.Coil_GPIOx[i], motor->const_h.Coil_GPIO_Pin_x[i],  GPIO_PIN_RESET);
                break;
 8001f48:	bf00      	nop
    for (i = 0; i < 3; i++)
 8001f4a:	7bbb      	ldrb	r3, [r7, #14]
 8001f4c:	3301      	adds	r3, #1
 8001f4e:	73bb      	strb	r3, [r7, #14]
 8001f50:	7bbb      	ldrb	r3, [r7, #14]
 8001f52:	2b02      	cmp	r3, #2
 8001f54:	f67f af18 	bls.w	8001d88 <motor_120_hall_update+0x5c>
            }
        }
    }
}
 8001f58:	bf00      	nop
 8001f5a:	bf00      	nop
 8001f5c:	3710      	adds	r7, #16
 8001f5e:	46bd      	mov	sp, r7
 8001f60:	bd80      	pop	{r7, pc}
 8001f62:	bf00      	nop
 8001f64:	0800c9f0 	.word	0x0800c9f0
 8001f68:	2aaaaaab 	.word	0x2aaaaaab
 8001f6c:	43fa0000 	.word	0x43fa0000
 8001f70:	0800c9dc 	.word	0x0800c9dc

08001f74 <motor_foc_hall_update>:
    return RESULT_OK(NULL);
}

// Thread - hallExti - 0
Result motor_foc_hall_update(MotorParameter *motor)
{
 8001f74:	b480      	push	{r7}
 8001f76:	b087      	sub	sp, #28
 8001f78:	af00      	add	r7, sp, #0
 8001f7a:	6078      	str	r0, [r7, #4]
 8001f7c:	6039      	str	r1, [r7, #0]
    float32_t htim_cnt = (float32_t)__HAL_TIM_GET_COUNTER(motor->const_h.ELE_htimx);
 8001f7e:	683b      	ldr	r3, [r7, #0]
 8001f80:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001f86:	ee07 3a90 	vmov	s15, r3
 8001f8a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001f8e:	edc7 7a05 	vstr	s15, [r7, #20]
    __HAL_TIM_SET_COUNTER(motor->const_h.ELE_htimx, 0);
 8001f92:	683b      	ldr	r3, [r7, #0]
 8001f94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	2200      	movs	r2, #0
 8001f9a:	625a      	str	r2, [r3, #36]	@ 0x24
    if (htim_cnt == 0U) htim_cnt = 1U;
 8001f9c:	edd7 7a05 	vldr	s15, [r7, #20]
 8001fa0:	eef5 7a40 	vcmp.f32	s15, #0.0
 8001fa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001fa8:	d102      	bne.n	8001fb0 <motor_foc_hall_update+0x3c>
 8001faa:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8001fae:	617b      	str	r3, [r7, #20]
    motor->rpm_fbk = motor->rpm_fbk_trans / htim_cnt;
 8001fb0:	683b      	ldr	r3, [r7, #0]
 8001fb2:	edd3 6a12 	vldr	s13, [r3, #72]	@ 0x48
 8001fb6:	ed97 7a05 	vldr	s14, [r7, #20]
 8001fba:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001fbe:	683b      	ldr	r3, [r7, #0]
 8001fc0:	edc3 7a16 	vstr	s15, [r3, #88]	@ 0x58
    motor->pwm_per_it_angle_itpl = motor->pwm_per_it_angle_itpl_trans / htim_cnt;
 8001fc4:	683b      	ldr	r3, [r7, #0]
 8001fc6:	edd3 6a13 	vldr	s13, [r3, #76]	@ 0x4c
 8001fca:	ed97 7a05 	vldr	s14, [r7, #20]
 8001fce:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001fd2:	683b      	ldr	r3, [r7, #0]
 8001fd4:	edc3 7a1c 	vstr	s15, [r3, #112]	@ 0x70

    uint16_t expected = (!motor->reverse)
 8001fd8:	683b      	ldr	r3, [r7, #0]
 8001fda:	f893 31a4 	ldrb.w	r3, [r3, #420]	@ 0x1a4
 8001fde:	f083 0301 	eor.w	r3, r3, #1
 8001fe2:	b2db      	uxtb	r3, r3
 8001fe4:	2b00      	cmp	r3, #0
 8001fe6:	d006      	beq.n	8001ff6 <motor_foc_hall_update+0x82>
        ? hall_seq_clw[motor->exti_hall_last]
 8001fe8:	683b      	ldr	r3, [r7, #0]
 8001fea:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8001fee:	461a      	mov	r2, r3
 8001ff0:	4b12      	ldr	r3, [pc, #72]	@ (800203c <motor_foc_hall_update+0xc8>)
 8001ff2:	5c9b      	ldrb	r3, [r3, r2]
 8001ff4:	e005      	b.n	8002002 <motor_foc_hall_update+0x8e>
        : hall_seq_ccw[motor->exti_hall_last];
 8001ff6:	683b      	ldr	r3, [r7, #0]
 8001ff8:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8001ffc:	461a      	mov	r2, r3
 8001ffe:	4b10      	ldr	r3, [pc, #64]	@ (8002040 <motor_foc_hall_update+0xcc>)
 8002000:	5c9b      	ldrb	r3, [r3, r2]
    uint16_t expected = (!motor->reverse)
 8002002:	827b      	strh	r3, [r7, #18]
    // if (hall_last == 0) // ? CHECK
    // {
    //     hall_last = expected;
    // }
    if (motor->exti_hall_curt == expected)
 8002004:	683b      	ldr	r3, [r7, #0]
 8002006:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 800200a:	b2db      	uxtb	r3, r3
 800200c:	461a      	mov	r2, r3
 800200e:	8a7b      	ldrh	r3, [r7, #18]
 8002010:	4293      	cmp	r3, r2
 8002012:	d107      	bne.n	8002024 <motor_foc_hall_update+0xb0>
    {
        // rotated
        motor->hall_angle_acc = 0;
 8002014:	683b      	ldr	r3, [r7, #0]
 8002016:	f04f 0200 	mov.w	r2, #0
 800201a:	669a      	str	r2, [r3, #104]	@ 0x68
        motor->pwm_it_angle_acc = 0;
 800201c:	683b      	ldr	r3, [r7, #0]
 800201e:	f04f 0200 	mov.w	r2, #0
 8002022:	675a      	str	r2, [r3, #116]	@ 0x74
    }
    
    return RESULT_OK(NULL);
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	2201      	movs	r2, #1
 8002028:	701a      	strb	r2, [r3, #0]
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	2200      	movs	r2, #0
 800202e:	605a      	str	r2, [r3, #4]
}
 8002030:	6878      	ldr	r0, [r7, #4]
 8002032:	371c      	adds	r7, #28
 8002034:	46bd      	mov	sp, r7
 8002036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800203a:	4770      	bx	lr
 800203c:	0800c9cc 	.word	0x0800c9cc
 8002040:	0800c9d4 	.word	0x0800c9d4

08002044 <stop_check>:

static inline void stop_check(MotorParameter *motor)
{
 8002044:	b480      	push	{r7}
 8002046:	b085      	sub	sp, #20
 8002048:	af00      	add	r7, sp, #0
 800204a:	6078      	str	r0, [r7, #4]
    // 停轉判斷
    // 現在與上一個霍爾的總和與之前的總和相同，視為馬達靜止不動
    uint8_t hall_current = motor->exti_hall_curt;
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8002052:	73fb      	strb	r3, [r7, #15]
    uint16_t hall_total = motor->pwm_hall_last * 10 + hall_current;
 8002054:	687b      	ldr	r3, [r7, #4]
 8002056:	f893 306c 	ldrb.w	r3, [r3, #108]	@ 0x6c
 800205a:	461a      	mov	r2, r3
 800205c:	0092      	lsls	r2, r2, #2
 800205e:	4413      	add	r3, r2
 8002060:	005b      	lsls	r3, r3, #1
 8002062:	b29a      	uxth	r2, r3
 8002064:	7bfb      	ldrb	r3, [r7, #15]
 8002066:	b29b      	uxth	r3, r3
 8002068:	4413      	add	r3, r2
 800206a:	81bb      	strh	r3, [r7, #12]
    if(hall_total == motor->pwm_hall_acc)
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	f8b3 306e 	ldrh.w	r3, [r3, #110]	@ 0x6e
 8002072:	b29b      	uxth	r3, r3
 8002074:	89ba      	ldrh	r2, [r7, #12]
 8002076:	429a      	cmp	r2, r3
 8002078:	d124      	bne.n	80020c4 <stop_check+0x80>
    {
        motor->spin_stop_acc++;
 800207a:	687b      	ldr	r3, [r7, #4]
 800207c:	f8b3 307a 	ldrh.w	r3, [r3, #122]	@ 0x7a
 8002080:	3301      	adds	r3, #1
 8002082:	b29a      	uxth	r2, r3
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	f8a3 207a 	strh.w	r2, [r3, #122]	@ 0x7a
        if (motor->spin_stop_acc >= MOTOR_STOP_TRI)
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	f8b3 307a 	ldrh.w	r3, [r3, #122]	@ 0x7a
 8002090:	2b31      	cmp	r3, #49	@ 0x31
 8002092:	d91b      	bls.n	80020cc <stop_check+0x88>
        {
            motor->spin_stop_acc = 0;
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	2200      	movs	r2, #0
 8002098:	f8a3 207a 	strh.w	r2, [r3, #122]	@ 0x7a
            // timerclockvalue_onecycle_electric = 0;   // 歸零一電氣週期之時間
            motor->pi_speed.i1 = 0;                     // 重置i控制舊值
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	f04f 0200 	mov.w	r2, #0
 80020a2:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
            motor->pi_speed.Fbk = 0;                    // 歸零速度實際值
 80020a6:	687b      	ldr	r3, [r7, #4]
 80020a8:	f04f 0200 	mov.w	r2, #0
 80020ac:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
            motor->pi_Iq.Out=0;
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	f04f 0200 	mov.w	r2, #0
 80020b6:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
            motor->pwm_it_angle_acc = 0.0f;
 80020ba:	687b      	ldr	r3, [r7, #4]
 80020bc:	f04f 0200 	mov.w	r2, #0
 80020c0:	675a      	str	r2, [r3, #116]	@ 0x74
 80020c2:	e003      	b.n	80020cc <stop_check+0x88>
        }
    }
    else
    {
        motor->spin_stop_acc = 0;
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	2200      	movs	r2, #0
 80020c8:	f8a3 207a 	strh.w	r2, [r3, #122]	@ 0x7a
    }
    motor->pwm_hall_acc = hall_total;
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	89ba      	ldrh	r2, [r7, #12]
 80020d0:	f8a3 206e 	strh.w	r2, [r3, #110]	@ 0x6e
    motor->pwm_hall_last = hall_current;
 80020d4:	687b      	ldr	r3, [r7, #4]
 80020d6:	7bfa      	ldrb	r2, [r7, #15]
 80020d8:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
}
 80020dc:	bf00      	nop
 80020de:	3714      	adds	r7, #20
 80020e0:	46bd      	mov	sp, r7
 80020e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020e6:	4770      	bx	lr

080020e8 <pi_speed>:

static inline void pi_speed(MotorParameter *motor)
{
 80020e8:	b580      	push	{r7, lr}
 80020ea:	b082      	sub	sp, #8
 80020ec:	af00      	add	r7, sp, #0
 80020ee:	6078      	str	r0, [r7, #4]
    // 計算 速度PI (每100個PWM中斷)
    // if(Speed.Fbk>0 && stop_flag==0)
    motor->pi_speed.Fbk = motor->rpm_fbk;
 80020f0:	687b      	ldr	r3, [r7, #4]
 80020f2:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
    PI_run(&motor->pi_speed);
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	3388      	adds	r3, #136	@ 0x88
 80020fe:	4618      	mov	r0, r3
 8002100:	f001 f852 	bl	80031a8 <PI_run>
    motor->pi_speed_cmd = clampf((motor->pi_speed_cmd + motor->pi_speed.Out), 0.15f, 0.2f);
 8002104:	687b      	ldr	r3, [r7, #4]
 8002106:	ed93 7a2f 	vldr	s14, [r3, #188]	@ 0xbc
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	edd3 7a24 	vldr	s15, [r3, #144]	@ 0x90
 8002110:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002114:	ed9f 1a08 	vldr	s2, [pc, #32]	@ 8002138 <pi_speed+0x50>
 8002118:	eddf 0a08 	vldr	s1, [pc, #32]	@ 800213c <pi_speed+0x54>
 800211c:	eeb0 0a67 	vmov.f32	s0, s15
 8002120:	f7ff fd16 	bl	8001b50 <clampf>
 8002124:	eef0 7a40 	vmov.f32	s15, s0
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
    // else if(Speed.Fbk==0 | stop_flag==1)
    //     motor->pi_speed_cmd=0.18;
}
 800212e:	bf00      	nop
 8002130:	3708      	adds	r7, #8
 8002132:	46bd      	mov	sp, r7
 8002134:	bd80      	pop	{r7, pc}
 8002136:	bf00      	nop
 8002138:	3e4ccccd 	.word	0x3e4ccccd
 800213c:	3e19999a 	.word	0x3e19999a

08002140 <angal_cal>:

static inline void angal_cal(MotorParameter *motor)
{
 8002140:	b580      	push	{r7, lr}
 8002142:	b082      	sub	sp, #8
 8002144:	af00      	add	r7, sp, #0
 8002146:	6078      	str	r0, [r7, #4]
    // ?
    if((motor->hall_angle_acc + motor->pwm_per_it_angle_itpl) < 60)
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	ed93 7a1a 	vldr	s14, [r3, #104]	@ 0x68
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	edd3 7a1c 	vldr	s15, [r3, #112]	@ 0x70
 8002154:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002158:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 80021bc <angal_cal+0x7c>
 800215c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002160:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002164:	d51a      	bpl.n	800219c <angal_cal+0x5c>
    {
        motor->hall_angle_acc += motor->pwm_per_it_angle_itpl;
 8002166:	687b      	ldr	r3, [r7, #4]
 8002168:	ed93 7a1c 	vldr	s14, [r3, #112]	@ 0x70
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	edd3 7a1a 	vldr	s15, [r3, #104]	@ 0x68
 8002172:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	edc3 7a1a 	vstr	s15, [r3, #104]	@ 0x68
        motor->hall_angle_acc = clampf(motor->hall_angle_acc, 0.0f, 60.0f);
 800217c:	687b      	ldr	r3, [r7, #4]
 800217e:	edd3 7a1a 	vldr	s15, [r3, #104]	@ 0x68
 8002182:	ed9f 1a0e 	vldr	s2, [pc, #56]	@ 80021bc <angal_cal+0x7c>
 8002186:	eddf 0a0e 	vldr	s1, [pc, #56]	@ 80021c0 <angal_cal+0x80>
 800218a:	eeb0 0a67 	vmov.f32	s0, s15
 800218e:	f7ff fcdf 	bl	8001b50 <clampf>
 8002192:	eef0 7a40 	vmov.f32	s15, s0
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	edc3 7a1a 	vstr	s15, [r3, #104]	@ 0x68
    }
    motor->pwm_it_angle_acc += motor->pwm_per_it_angle_itpl;
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	ed93 7a1c 	vldr	s14, [r3, #112]	@ 0x70
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	edd3 7a1d 	vldr	s15, [r3, #116]	@ 0x74
 80021a8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	edc3 7a1d 	vstr	s15, [r3, #116]	@ 0x74
}
 80021b2:	bf00      	nop
 80021b4:	3708      	adds	r7, #8
 80021b6:	46bd      	mov	sp, r7
 80021b8:	bd80      	pop	{r7, pc}
 80021ba:	bf00      	nop
 80021bc:	42700000 	.word	0x42700000
 80021c0:	00000000 	.word	0x00000000

080021c4 <vec_ctrl_clarke>:

// #define ADC_TO_CURRENT (3.3f / 4095.0f / 0.185f ) // ~ 0.004356 A/LSB
static inline Result vec_ctrl_clarke(MotorParameter *motor)
{
 80021c4:	b580      	push	{r7, lr}
 80021c6:	b08a      	sub	sp, #40	@ 0x28
 80021c8:	af00      	add	r7, sp, #0
 80021ca:	6078      	str	r0, [r7, #4]
 80021cc:	6039      	str	r1, [r7, #0]
    // I bata = (根號3/3)Ib - (根號3/3)Ic
    // (根號3/3) = 0.57735

    // 三相電流向量
    // RESULT_CHECK_RET_RES(adc_renew(&adc_test));
    RESULT_CHECK_RET_RES(adc_renew(motor->adc_u, &motor->clarke.As));
 80021ce:	683b      	ldr	r3, [r7, #0]
 80021d0:	6fd9      	ldr	r1, [r3, #124]	@ 0x7c
 80021d2:	683b      	ldr	r3, [r7, #0]
 80021d4:	f503 7294 	add.w	r2, r3, #296	@ 0x128
 80021d8:	f107 0318 	add.w	r3, r7, #24
 80021dc:	4618      	mov	r0, r3
 80021de:	f7ff f949 	bl	8001474 <adc_renew>
 80021e2:	7e3b      	ldrb	r3, [r7, #24]
 80021e4:	f083 0301 	eor.w	r3, r3, #1
 80021e8:	b2db      	uxtb	r3, r3
 80021ea:	2b00      	cmp	r3, #0
 80021ec:	d00c      	beq.n	8002208 <vec_ctrl_clarke+0x44>
 80021ee:	f997 201c 	ldrsb.w	r2, [r7, #28]
 80021f2:	4b2b      	ldr	r3, [pc, #172]	@ (80022a0 <vec_ctrl_clarke+0xdc>)
 80021f4:	701a      	strb	r2, [r3, #0]
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	461a      	mov	r2, r3
 80021fa:	f107 0318 	add.w	r3, r7, #24
 80021fe:	e893 0003 	ldmia.w	r3, {r0, r1}
 8002202:	e882 0003 	stmia.w	r2, {r0, r1}
    // PeriodFilter_w = (float32_t)PeriodStateVar_w;//0.9
    // motor->clarke.Cs =PeriodFilter_w;

    CLARKE_run_ideal(&motor->clarke);//Id.Out=CLAMP((Id.Out + Id.delta), 0.1, 0)
    return RESULT_OK(NULL);
}
 8002206:	e047      	b.n	8002298 <vec_ctrl_clarke+0xd4>
    RESULT_CHECK_RET_RES(adc_renew(motor->adc_v, &motor->clarke.Bs));
 8002208:	683b      	ldr	r3, [r7, #0]
 800220a:	f8d3 1080 	ldr.w	r1, [r3, #128]	@ 0x80
 800220e:	683b      	ldr	r3, [r7, #0]
 8002210:	f503 7296 	add.w	r2, r3, #300	@ 0x12c
 8002214:	f107 0310 	add.w	r3, r7, #16
 8002218:	4618      	mov	r0, r3
 800221a:	f7ff f92b 	bl	8001474 <adc_renew>
 800221e:	7c3b      	ldrb	r3, [r7, #16]
 8002220:	f083 0301 	eor.w	r3, r3, #1
 8002224:	b2db      	uxtb	r3, r3
 8002226:	2b00      	cmp	r3, #0
 8002228:	d00c      	beq.n	8002244 <vec_ctrl_clarke+0x80>
 800222a:	f997 2014 	ldrsb.w	r2, [r7, #20]
 800222e:	4b1c      	ldr	r3, [pc, #112]	@ (80022a0 <vec_ctrl_clarke+0xdc>)
 8002230:	701a      	strb	r2, [r3, #0]
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	461a      	mov	r2, r3
 8002236:	f107 0310 	add.w	r3, r7, #16
 800223a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800223e:	e882 0003 	stmia.w	r2, {r0, r1}
}
 8002242:	e029      	b.n	8002298 <vec_ctrl_clarke+0xd4>
    RESULT_CHECK_RET_RES(adc_renew(motor->adc_w, &motor->clarke.Cs));
 8002244:	683b      	ldr	r3, [r7, #0]
 8002246:	f8d3 1084 	ldr.w	r1, [r3, #132]	@ 0x84
 800224a:	683b      	ldr	r3, [r7, #0]
 800224c:	f503 7298 	add.w	r2, r3, #304	@ 0x130
 8002250:	f107 0308 	add.w	r3, r7, #8
 8002254:	4618      	mov	r0, r3
 8002256:	f7ff f90d 	bl	8001474 <adc_renew>
 800225a:	7a3b      	ldrb	r3, [r7, #8]
 800225c:	f083 0301 	eor.w	r3, r3, #1
 8002260:	b2db      	uxtb	r3, r3
 8002262:	2b00      	cmp	r3, #0
 8002264:	d00c      	beq.n	8002280 <vec_ctrl_clarke+0xbc>
 8002266:	f997 200c 	ldrsb.w	r2, [r7, #12]
 800226a:	4b0d      	ldr	r3, [pc, #52]	@ (80022a0 <vec_ctrl_clarke+0xdc>)
 800226c:	701a      	strb	r2, [r3, #0]
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	461a      	mov	r2, r3
 8002272:	f107 0308 	add.w	r3, r7, #8
 8002276:	e893 0003 	ldmia.w	r3, {r0, r1}
 800227a:	e882 0003 	stmia.w	r2, {r0, r1}
 800227e:	e00b      	b.n	8002298 <vec_ctrl_clarke+0xd4>
    CLARKE_run_ideal(&motor->clarke);//Id.Out=CLAMP((Id.Out + Id.delta), 0.1, 0)
 8002280:	683b      	ldr	r3, [r7, #0]
 8002282:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8002286:	4618      	mov	r0, r3
 8002288:	f7ff fd2e 	bl	8001ce8 <CLARKE_run_ideal>
    return RESULT_OK(NULL);
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	2201      	movs	r2, #1
 8002290:	701a      	strb	r2, [r3, #0]
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	2200      	movs	r2, #0
 8002296:	605a      	str	r2, [r3, #4]
}
 8002298:	6878      	ldr	r0, [r7, #4]
 800229a:	3728      	adds	r7, #40	@ 0x28
 800229c:	46bd      	mov	sp, r7
 800229e:	bd80      	pop	{r7, pc}
 80022a0:	20000994 	.word	0x20000994

080022a4 <vec_ctrl_park>:

static inline Result vec_ctrl_park(MotorParameter *motor)
{
 80022a4:	b580      	push	{r7, lr}
 80022a6:	b086      	sub	sp, #24
 80022a8:	af00      	add	r7, sp, #0
 80022aa:	6078      	str	r0, [r7, #4]
 80022ac:	6039      	str	r1, [r7, #0]
    // park
    // Id = I alpha cos(theta) + I bata sin(theta)
    motor->park.Alpha = motor->clarke.Alpha;
 80022ae:	683b      	ldr	r3, [r7, #0]
 80022b0:	f8d3 2134 	ldr.w	r2, [r3, #308]	@ 0x134
 80022b4:	683b      	ldr	r3, [r7, #0]
 80022b6:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
    motor->park.Beta = motor->clarke.Beta;
 80022ba:	683b      	ldr	r3, [r7, #0]
 80022bc:	f8d3 2138 	ldr.w	r2, [r3, #312]	@ 0x138
 80022c0:	683b      	ldr	r3, [r7, #0]
 80022c2:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    RESULT_CHECK_RET_RES(trigo_sin_cosf(
 80022c6:	683b      	ldr	r3, [r7, #0]
 80022c8:	ed93 7a18 	vldr	s14, [r3, #96]	@ 0x60
 80022cc:	683b      	ldr	r3, [r7, #0]
 80022ce:	edd3 7a1d 	vldr	s15, [r3, #116]	@ 0x74
 80022d2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80022d6:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8002340 <vec_ctrl_park+0x9c>
 80022da:	ee77 7a87 	vadd.f32	s15, s15, s14
 80022de:	683b      	ldr	r3, [r7, #0]
 80022e0:	f503 71a8 	add.w	r1, r3, #336	@ 0x150
 80022e4:	683b      	ldr	r3, [r7, #0]
 80022e6:	f503 72aa 	add.w	r2, r3, #340	@ 0x154
 80022ea:	f107 0308 	add.w	r3, r7, #8
 80022ee:	eeb0 0a67 	vmov.f32	s0, s15
 80022f2:	4618      	mov	r0, r3
 80022f4:	f001 f830 	bl	8003358 <trigo_sin_cosf>
 80022f8:	7a3b      	ldrb	r3, [r7, #8]
 80022fa:	f083 0301 	eor.w	r3, r3, #1
 80022fe:	b2db      	uxtb	r3, r3
 8002300:	2b00      	cmp	r3, #0
 8002302:	d00c      	beq.n	800231e <vec_ctrl_park+0x7a>
 8002304:	f997 200c 	ldrsb.w	r2, [r7, #12]
 8002308:	4b0e      	ldr	r3, [pc, #56]	@ (8002344 <vec_ctrl_park+0xa0>)
 800230a:	701a      	strb	r2, [r3, #0]
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	461a      	mov	r2, r3
 8002310:	f107 0308 	add.w	r3, r7, #8
 8002314:	e893 0003 	ldmia.w	r3, {r0, r1}
 8002318:	e882 0003 	stmia.w	r2, {r0, r1}
 800231c:	e00b      	b.n	8002336 <vec_ctrl_park+0x92>
        motor->exti_hall_angal + motor->pwm_it_angle_acc + DIV_PI_2 * 3.0f,
        &motor->park.Sine, &motor->park.Cosine
    ));
    PARK_run(&motor->park);
 800231e:	683b      	ldr	r3, [r7, #0]
 8002320:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 8002324:	4618      	mov	r0, r3
 8002326:	f000 fed7 	bl	80030d8 <PARK_run>
    // motor->park.Ds = PeriodFilter_id;
        
    // PeriodStateVar_iq += ( ( (float32_t)motor->park.Qs - (float32_t)PeriodFilter_iq)*(float32_t)PeriodKFilter );
    // PeriodFilter_iq = (float32_t)PeriodStateVar_iq;
    // motor->park.Qs = PeriodFilter_iq;
    return RESULT_OK(NULL);
 800232a:	687b      	ldr	r3, [r7, #4]
 800232c:	2201      	movs	r2, #1
 800232e:	701a      	strb	r2, [r3, #0]
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	2200      	movs	r2, #0
 8002334:	605a      	str	r2, [r3, #4]
}
 8002336:	6878      	ldr	r0, [r7, #4]
 8002338:	3718      	adds	r7, #24
 800233a:	46bd      	mov	sp, r7
 800233c:	bd80      	pop	{r7, pc}
 800233e:	bf00      	nop
 8002340:	4096cbe4 	.word	0x4096cbe4
 8002344:	20000994 	.word	0x20000994

08002348 <vec_ctrl_pi_id_iq>:

#define IQ_REF_ADD 0.0f
static inline void vec_ctrl_pi_id_iq(MotorParameter *motor)
{
 8002348:	b580      	push	{r7, lr}
 800234a:	b082      	sub	sp, #8
 800234c:	af00      	add	r7, sp, #0
 800234e:	6078      	str	r0, [r7, #4]
    // Id、Iq 之 PI 控制
    if(motor->pi_speed.Fbk > 0)
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	edd3 7a23 	vldr	s15, [r3, #140]	@ 0x8c
 8002356:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800235a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800235e:	dd3f      	ble.n	80023e0 <vec_ctrl_pi_id_iq+0x98>
    {
        motor->pi_Id.Ref = 0;
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	f04f 0200 	mov.w	r2, #0
 8002366:	f8c3 20f4 	str.w	r2, [r3, #244]	@ 0xf4
        motor->pi_Id.Fbk = motor->park.Ds;
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	f8d3 2148 	ldr.w	r2, [r3, #328]	@ 0x148
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	f8c3 20f8 	str.w	r2, [r3, #248]	@ 0xf8
        
        // Id.Fbk=CLAMP(( motor->park.Ds), 0.1, -0.1);
        
        PI_run(&motor->pi_Id); 
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	33f4      	adds	r3, #244	@ 0xf4
 800237a:	4618      	mov	r0, r3
 800237c:	f000 ff14 	bl	80031a8 <PI_run>
        // if(Id.Ref > Id.Fbk)
        //     Id.delta = 0.002;
        // else
        //     Id.delta = -0.002;
        
        motor->pi_Id.Out = clampf(motor->pi_Id.Out, -0.01f, 0.01f);//限制最大與最小參數
 8002380:	687b      	ldr	r3, [r7, #4]
 8002382:	edd3 7a3f 	vldr	s15, [r3, #252]	@ 0xfc
 8002386:	ed9f 1a1a 	vldr	s2, [pc, #104]	@ 80023f0 <vec_ctrl_pi_id_iq+0xa8>
 800238a:	eddf 0a1a 	vldr	s1, [pc, #104]	@ 80023f4 <vec_ctrl_pi_id_iq+0xac>
 800238e:	eeb0 0a67 	vmov.f32	s0, s15
 8002392:	f7ff fbdd 	bl	8001b50 <clampf>
 8002396:	eef0 7a40 	vmov.f32	s15, s0
 800239a:	687b      	ldr	r3, [r7, #4]
 800239c:	edc3 7a3f 	vstr	s15, [r3, #252]	@ 0xfc
        // motor->pi_Iq.delta = (motor->pi_Iq.Ref - motor->pi_Iq.Fbk) * (motor->pi_Iq.Kp);
        // motor->pi_Iq.delta = CLAMP((motor->pi_Iq.delta), 0.1, -0.1);//限制最大與最小參數
        // motor->pi_Iq.Out = CLAMP((motor->pi_Iq.Ref + motor->pi_Iq.delta), 0.75, 0);//限制最大與最小參數

        // motor->pi_Iq.Ref = motor->pi_speed_cmd + IQ_REF_ADD;  // 外環給轉矩命令
        motor->pi_Iq.Ref = 0.3f;
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	4a15      	ldr	r2, [pc, #84]	@ (80023f8 <vec_ctrl_pi_id_iq+0xb0>)
 80023a4:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
        motor->pi_Iq.Fbk = motor->park.Qs;                    // q 軸量測
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	f8d3 214c 	ldr.w	r2, [r3, #332]	@ 0x14c
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	f8c3 20c4 	str.w	r2, [r3, #196]	@ 0xc4
        PI_run(&motor->pi_Iq);                                // 統一用 PI_run + anti-windup
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	33c0      	adds	r3, #192	@ 0xc0
 80023b8:	4618      	mov	r0, r3
 80023ba:	f000 fef5 	bl	80031a8 <PI_run>
        // 視匯流排/過調制上限，做一次幅值限幅（可留在這或放到 Vqref 指派前）
        motor->pi_Iq.Out = clampf(motor->pi_Iq.Out, 0.0f, 0.75f);
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	edd3 7a32 	vldr	s15, [r3, #200]	@ 0xc8
 80023c4:	eeb6 1a08 	vmov.f32	s2, #104	@ 0x3f400000  0.750
 80023c8:	eddf 0a0c 	vldr	s1, [pc, #48]	@ 80023fc <vec_ctrl_pi_id_iq+0xb4>
 80023cc:	eeb0 0a67 	vmov.f32	s0, s15
 80023d0:	f7ff fbbe 	bl	8001b50 <clampf>
 80023d4:	eef0 7a40 	vmov.f32	s15, s0
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	edc3 7a32 	vstr	s15, [r3, #200]	@ 0xc8
    }
    else
    {
        motor->pi_Iq.Out = 0.18;
    }
}
 80023de:	e003      	b.n	80023e8 <vec_ctrl_pi_id_iq+0xa0>
        motor->pi_Iq.Out = 0.18;
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	4a07      	ldr	r2, [pc, #28]	@ (8002400 <vec_ctrl_pi_id_iq+0xb8>)
 80023e4:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
}
 80023e8:	bf00      	nop
 80023ea:	3708      	adds	r7, #8
 80023ec:	46bd      	mov	sp, r7
 80023ee:	bd80      	pop	{r7, pc}
 80023f0:	3c23d70a 	.word	0x3c23d70a
 80023f4:	bc23d70a 	.word	0xbc23d70a
 80023f8:	3e99999a 	.word	0x3e99999a
 80023fc:	00000000 	.word	0x00000000
 8002400:	3e3851ec 	.word	0x3e3851ec

08002404 <vec_ctrl_ipark>:

static inline Result vec_ctrl_ipark(MotorParameter *motor)
{
 8002404:	b580      	push	{r7, lr}
 8002406:	b086      	sub	sp, #24
 8002408:	af00      	add	r7, sp, #0
 800240a:	6078      	str	r0, [r7, #4]
 800240c:	6039      	str	r1, [r7, #0]
    // ipark
    // V alpha = Vd cos(theta) - Vq sin(theta)
    // V bata = Vd sin(theta) + Vq cos(theta)
    // ?
    motor->ipark.Vdref = clampf(motor->ipark.Vdref + motor->pi_Id.Out, -0.06f, 0.06f);
 800240e:	683b      	ldr	r3, [r7, #0]
 8002410:	ed93 7a59 	vldr	s14, [r3, #356]	@ 0x164
 8002414:	683b      	ldr	r3, [r7, #0]
 8002416:	edd3 7a3f 	vldr	s15, [r3, #252]	@ 0xfc
 800241a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800241e:	ed9f 1a35 	vldr	s2, [pc, #212]	@ 80024f4 <vec_ctrl_ipark+0xf0>
 8002422:	eddf 0a35 	vldr	s1, [pc, #212]	@ 80024f8 <vec_ctrl_ipark+0xf4>
 8002426:	eeb0 0a67 	vmov.f32	s0, s15
 800242a:	f7ff fb91 	bl	8001b50 <clampf>
 800242e:	eef0 7a40 	vmov.f32	s15, s0
 8002432:	683b      	ldr	r3, [r7, #0]
 8002434:	edc3 7a59 	vstr	s15, [r3, #356]	@ 0x164
    motor->ipark.Vqref = motor->pi_Iq.Out;
 8002438:	683b      	ldr	r3, [r7, #0]
 800243a:	f8d3 20c8 	ldr.w	r2, [r3, #200]	@ 0xc8
 800243e:	683b      	ldr	r3, [r7, #0]
 8002440:	f8c3 2168 	str.w	r2, [r3, #360]	@ 0x168
    motor->ipark.Sine = motor->park.Sine;
 8002444:	683b      	ldr	r3, [r7, #0]
 8002446:	f8d3 2150 	ldr.w	r2, [r3, #336]	@ 0x150
 800244a:	683b      	ldr	r3, [r7, #0]
 800244c:	f8c3 216c 	str.w	r2, [r3, #364]	@ 0x16c
    motor->ipark.Cosine = motor->park.Cosine;
 8002450:	683b      	ldr	r3, [r7, #0]
 8002452:	f8d3 2154 	ldr.w	r2, [r3, #340]	@ 0x154
 8002456:	683b      	ldr	r3, [r7, #0]
 8002458:	f8c3 2170 	str.w	r2, [r3, #368]	@ 0x170
    IPARK_run(&motor->ipark);
 800245c:	683b      	ldr	r3, [r7, #0]
 800245e:	f503 73ac 	add.w	r3, r3, #344	@ 0x158
 8002462:	4618      	mov	r0, r3
 8002464:	f000 fe6c 	bl	8003140 <IPARK_run>
    RESULT_CHECK_RET_RES(trigo_atan(motor->ipark.Alpha, motor->ipark.Beta, &motor->elec_theta_rad));
 8002468:	683b      	ldr	r3, [r7, #0]
 800246a:	edd3 7a56 	vldr	s15, [r3, #344]	@ 0x158
 800246e:	683b      	ldr	r3, [r7, #0]
 8002470:	ed93 7a57 	vldr	s14, [r3, #348]	@ 0x15c
 8002474:	683b      	ldr	r3, [r7, #0]
 8002476:	f503 72c6 	add.w	r2, r3, #396	@ 0x18c
 800247a:	f107 0308 	add.w	r3, r7, #8
 800247e:	4611      	mov	r1, r2
 8002480:	eef0 0a47 	vmov.f32	s1, s14
 8002484:	eeb0 0a67 	vmov.f32	s0, s15
 8002488:	4618      	mov	r0, r3
 800248a:	f000 ffed 	bl	8003468 <trigo_atan>
 800248e:	7a3b      	ldrb	r3, [r7, #8]
 8002490:	f083 0301 	eor.w	r3, r3, #1
 8002494:	b2db      	uxtb	r3, r3
 8002496:	2b00      	cmp	r3, #0
 8002498:	d00c      	beq.n	80024b4 <vec_ctrl_ipark+0xb0>
 800249a:	f997 200c 	ldrsb.w	r2, [r7, #12]
 800249e:	4b17      	ldr	r3, [pc, #92]	@ (80024fc <vec_ctrl_ipark+0xf8>)
 80024a0:	701a      	strb	r2, [r3, #0]
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	461a      	mov	r2, r3
 80024a6:	f107 0308 	add.w	r3, r7, #8
 80024aa:	e893 0003 	ldmia.w	r3, {r0, r1}
 80024ae:	e882 0003 	stmia.w	r2, {r0, r1}
 80024b2:	e01b      	b.n	80024ec <vec_ctrl_ipark+0xe8>
    motor->elec_theta_rad = wrap_0_2pi(motor->elec_theta_rad);
 80024b4:	683b      	ldr	r3, [r7, #0]
 80024b6:	edd3 7a63 	vldr	s15, [r3, #396]	@ 0x18c
 80024ba:	eeb0 0a67 	vmov.f32	s0, s15
 80024be:	f7ff fb71 	bl	8001ba4 <wrap_0_2pi>
 80024c2:	eef0 7a40 	vmov.f32	s15, s0
 80024c6:	683b      	ldr	r3, [r7, #0]
 80024c8:	edc3 7a63 	vstr	s15, [r3, #396]	@ 0x18c
    motor->elec_theta_deg = motor->elec_theta_rad * RAD_TO_DEG;
 80024cc:	683b      	ldr	r3, [r7, #0]
 80024ce:	edd3 7a63 	vldr	s15, [r3, #396]	@ 0x18c
 80024d2:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8002500 <vec_ctrl_ipark+0xfc>
 80024d6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80024da:	683b      	ldr	r3, [r7, #0]
 80024dc:	edc3 7a64 	vstr	s15, [r3, #400]	@ 0x190
    return RESULT_OK(NULL);
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	2201      	movs	r2, #1
 80024e4:	701a      	strb	r2, [r3, #0]
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	2200      	movs	r2, #0
 80024ea:	605a      	str	r2, [r3, #4]
}
 80024ec:	6878      	ldr	r0, [r7, #4]
 80024ee:	3718      	adds	r7, #24
 80024f0:	46bd      	mov	sp, r7
 80024f2:	bd80      	pop	{r7, pc}
 80024f4:	3d75c28f 	.word	0x3d75c28f
 80024f8:	bd75c28f 	.word	0xbd75c28f
 80024fc:	20000994 	.word	0x20000994
 8002500:	42652ee1 	.word	0x42652ee1

08002504 <vec_ctrl_svgen>:

static inline void vec_ctrl_svgen(MotorParameter *motor)
{
 8002504:	b580      	push	{r7, lr}
 8002506:	b082      	sub	sp, #8
 8002508:	af00      	add	r7, sp, #0
 800250a:	6078      	str	r0, [r7, #4]
    motor->svgendq.Ualpha = motor->ipark.Alpha;
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	f8d3 2158 	ldr.w	r2, [r3, #344]	@ 0x158
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	f8c3 2174 	str.w	r2, [r3, #372]	@ 0x174
    motor->svgendq.Ubeta = motor->ipark.Beta;
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	f8d3 215c 	ldr.w	r2, [r3, #348]	@ 0x15c
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
    SVGEN_run(&motor->svgendq);
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	f503 73ba 	add.w	r3, r3, #372	@ 0x174
 800252a:	4618      	mov	r0, r3
 800252c:	f000 feac 	bl	8003288 <SVGEN_run>
}
 8002530:	bf00      	nop
 8002532:	3708      	adds	r7, #8
 8002534:	46bd      	mov	sp, r7
 8002536:	bd80      	pop	{r7, pc}

08002538 <vec_ctrl_vref>:

static inline Result vec_ctrl_vref(MotorParameter *motor)
{
 8002538:	b580      	push	{r7, lr}
 800253a:	b08a      	sub	sp, #40	@ 0x28
 800253c:	af00      	add	r7, sp, #0
 800253e:	6078      	str	r0, [r7, #4]
 8002540:	6039      	str	r1, [r7, #0]
    //     else
    //         motor->svpwm_Vref=0;
    //     }
    // else
    arm_status status = arm_sqrt_f32(
        motor->svgendq.Ualpha * motor->svgendq.Ualpha 
 8002542:	683b      	ldr	r3, [r7, #0]
 8002544:	ed93 7a5d 	vldr	s14, [r3, #372]	@ 0x174
 8002548:	683b      	ldr	r3, [r7, #0]
 800254a:	edd3 7a5d 	vldr	s15, [r3, #372]	@ 0x174
 800254e:	ee27 7a27 	vmul.f32	s14, s14, s15
            + motor->svgendq.Ubeta * motor->svgendq.Ubeta,
 8002552:	683b      	ldr	r3, [r7, #0]
 8002554:	edd3 6a5e 	vldr	s13, [r3, #376]	@ 0x178
 8002558:	683b      	ldr	r3, [r7, #0]
 800255a:	edd3 7a5e 	vldr	s15, [r3, #376]	@ 0x178
 800255e:	ee66 7aa7 	vmul.f32	s15, s13, s15
    arm_status status = arm_sqrt_f32(
 8002562:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002566:	683b      	ldr	r3, [r7, #0]
 8002568:	f503 73ca 	add.w	r3, r3, #404	@ 0x194
 800256c:	edc7 7a08 	vstr	s15, [r7, #32]
 8002570:	61fb      	str	r3, [r7, #28]
 */
__STATIC_FORCEINLINE arm_status arm_sqrt_f32(
  float32_t in,
  float32_t * pOut)
  {
    if (in >= 0.0f)
 8002572:	edd7 7a08 	vldr	s15, [r7, #32]
 8002576:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800257a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800257e:	db0a      	blt.n	8002596 <vec_ctrl_vref+0x5e>
  #else
      *pOut = sqrtf(in);
  #endif

#else
      *pOut = sqrtf(in);
 8002580:	ed97 0a08 	vldr	s0, [r7, #32]
 8002584:	f00a f996 	bl	800c8b4 <sqrtf>
 8002588:	eef0 7a40 	vmov.f32	s15, s0
 800258c:	69fb      	ldr	r3, [r7, #28]
 800258e:	edc3 7a00 	vstr	s15, [r3]
#endif

      return (ARM_MATH_SUCCESS);
 8002592:	2300      	movs	r3, #0
 8002594:	e005      	b.n	80025a2 <vec_ctrl_vref+0x6a>
    }
    else
    {
      *pOut = 0.0f;
 8002596:	69fb      	ldr	r3, [r7, #28]
 8002598:	f04f 0200 	mov.w	r2, #0
 800259c:	601a      	str	r2, [r3, #0]
      return (ARM_MATH_ARGUMENT_ERROR);
 800259e:	f04f 33ff 	mov.w	r3, #4294967295
 80025a2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        &motor->svpwm_Vref
    );
    if (status != ARM_MATH_SUCCESS) return RESULT_ERROR(RES_ERR_FAIL);
 80025a6:	f997 3027 	ldrsb.w	r3, [r7, #39]	@ 0x27
 80025aa:	2b00      	cmp	r3, #0
 80025ac:	d008      	beq.n	80025c0 <vec_ctrl_vref+0x88>
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	461a      	mov	r2, r3
 80025b2:	2300      	movs	r3, #0
 80025b4:	6013      	str	r3, [r2, #0]
 80025b6:	6053      	str	r3, [r2, #4]
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	2201      	movs	r2, #1
 80025bc:	711a      	strb	r2, [r3, #4]
 80025be:	e005      	b.n	80025cc <vec_ctrl_vref+0x94>
    //		motor->elec_theta_deg      =  (int)motor_angle % 60;
    
    /*
        svpwm_interval = ((int)cmd_deg / 60) % 6;
        motor->elec_theta_deg      =  (int)cmd_deg % 60;*/
    return RESULT_OK(NULL);
 80025c0:	687b      	ldr	r3, [r7, #4]
 80025c2:	2201      	movs	r2, #1
 80025c4:	701a      	strb	r2, [r3, #0]
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	2200      	movs	r2, #0
 80025ca:	605a      	str	r2, [r3, #4]
}
 80025cc:	6878      	ldr	r0, [r7, #4]
 80025ce:	3728      	adds	r7, #40	@ 0x28
 80025d0:	46bd      	mov	sp, r7
 80025d2:	bd80      	pop	{r7, pc}

080025d4 <vec_ctrl_svpwm>:

float32_t thete_t[6];
static inline Result vec_ctrl_svpwm(MotorParameter *motor)
{
 80025d4:	b580      	push	{r7, lr}
 80025d6:	b092      	sub	sp, #72	@ 0x48
 80025d8:	af00      	add	r7, sp, #0
 80025da:	6078      	str	r0, [r7, #4]
 80025dc:	6039      	str	r1, [r7, #0]
    float32_t theta = motor->elec_theta_rad;
 80025de:	683b      	ldr	r3, [r7, #0]
 80025e0:	f8d3 318c 	ldr.w	r3, [r3, #396]	@ 0x18c
 80025e4:	647b      	str	r3, [r7, #68]	@ 0x44
    int32_t n = (int32_t)(theta / DIV_PI_3);
 80025e6:	ed97 7a11 	vldr	s14, [r7, #68]	@ 0x44
 80025ea:	eddf 6ad0 	vldr	s13, [pc, #832]	@ 800292c <vec_ctrl_svpwm+0x358>
 80025ee:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80025f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80025f6:	ee17 3a90 	vmov	r3, s15
 80025fa:	643b      	str	r3, [r7, #64]	@ 0x40
    theta -= (float32_t)n * DIV_PI_3;
 80025fc:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80025fe:	ee07 3a90 	vmov	s15, r3
 8002602:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002606:	ed9f 7ac9 	vldr	s14, [pc, #804]	@ 800292c <vec_ctrl_svpwm+0x358>
 800260a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800260e:	ed97 7a11 	vldr	s14, [r7, #68]	@ 0x44
 8002612:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002616:	edc7 7a11 	vstr	s15, [r7, #68]	@ 0x44
    if (theta < 0) theta += DIV_PI_3;
 800261a:	edd7 7a11 	vldr	s15, [r7, #68]	@ 0x44
 800261e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002622:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002626:	d507      	bpl.n	8002638 <vec_ctrl_svpwm+0x64>
 8002628:	edd7 7a11 	vldr	s15, [r7, #68]	@ 0x44
 800262c:	ed9f 7abf 	vldr	s14, [pc, #764]	@ 800292c <vec_ctrl_svpwm+0x358>
 8002630:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002634:	edc7 7a11 	vstr	s15, [r7, #68]	@ 0x44
    // ? CHECK
    float32_t T1, T2;
    if(!motor->reverse)
 8002638:	683b      	ldr	r3, [r7, #0]
 800263a:	f893 31a4 	ldrb.w	r3, [r3, #420]	@ 0x1a4
 800263e:	f083 0301 	eor.w	r3, r3, #1
 8002642:	b2db      	uxtb	r3, r3
 8002644:	2b00      	cmp	r3, #0
 8002646:	d040      	beq.n	80026ca <vec_ctrl_svpwm+0xf6>
    {
        RESULT_CHECK_RET_RES(trigo_sin_cosf(DIV_PI_3 - theta, &T1, NULL));
 8002648:	ed9f 7ab8 	vldr	s14, [pc, #736]	@ 800292c <vec_ctrl_svpwm+0x358>
 800264c:	edd7 7a11 	vldr	s15, [r7, #68]	@ 0x44
 8002650:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002654:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002658:	f107 0138 	add.w	r1, r7, #56	@ 0x38
 800265c:	2200      	movs	r2, #0
 800265e:	eeb0 0a67 	vmov.f32	s0, s15
 8002662:	4618      	mov	r0, r3
 8002664:	f000 fe78 	bl	8003358 <trigo_sin_cosf>
 8002668:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800266c:	f083 0301 	eor.w	r3, r3, #1
 8002670:	b2db      	uxtb	r3, r3
 8002672:	2b00      	cmp	r3, #0
 8002674:	d00c      	beq.n	8002690 <vec_ctrl_svpwm+0xbc>
 8002676:	f997 2028 	ldrsb.w	r2, [r7, #40]	@ 0x28
 800267a:	4bad      	ldr	r3, [pc, #692]	@ (8002930 <vec_ctrl_svpwm+0x35c>)
 800267c:	701a      	strb	r2, [r3, #0]
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	461a      	mov	r2, r3
 8002682:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002686:	e893 0003 	ldmia.w	r3, {r0, r1}
 800268a:	e882 0003 	stmia.w	r2, {r0, r1}
    }
    __HAL_TIM_SET_COMPARE(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[0], (uint32_t)((float32_t)TIM1_ARR * motor->pwm_duty_u));
    __HAL_TIM_SET_COMPARE(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[1], (uint32_t)((float32_t)TIM1_ARR * motor->pwm_duty_v));
    __HAL_TIM_SET_COMPARE(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[2], (uint32_t)((float32_t)TIM1_ARR * motor->pwm_duty_w));
    return RESULT_OK(NULL);
}
 800268e:	e28a      	b.n	8002ba6 <vec_ctrl_svpwm+0x5d2>
        RESULT_CHECK_RET_RES(trigo_sin_cosf(theta, &T2, NULL));
 8002690:	f107 031c 	add.w	r3, r7, #28
 8002694:	f107 0134 	add.w	r1, r7, #52	@ 0x34
 8002698:	2200      	movs	r2, #0
 800269a:	ed97 0a11 	vldr	s0, [r7, #68]	@ 0x44
 800269e:	4618      	mov	r0, r3
 80026a0:	f000 fe5a 	bl	8003358 <trigo_sin_cosf>
 80026a4:	7f3b      	ldrb	r3, [r7, #28]
 80026a6:	f083 0301 	eor.w	r3, r3, #1
 80026aa:	b2db      	uxtb	r3, r3
 80026ac:	2b00      	cmp	r3, #0
 80026ae:	d04c      	beq.n	800274a <vec_ctrl_svpwm+0x176>
 80026b0:	f997 2020 	ldrsb.w	r2, [r7, #32]
 80026b4:	4b9e      	ldr	r3, [pc, #632]	@ (8002930 <vec_ctrl_svpwm+0x35c>)
 80026b6:	701a      	strb	r2, [r3, #0]
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	461a      	mov	r2, r3
 80026bc:	f107 031c 	add.w	r3, r7, #28
 80026c0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80026c4:	e882 0003 	stmia.w	r2, {r0, r1}
 80026c8:	e26d      	b.n	8002ba6 <vec_ctrl_svpwm+0x5d2>
        RESULT_CHECK_RET_RES(trigo_sin_cosf(theta, &T1, NULL));
 80026ca:	f107 0314 	add.w	r3, r7, #20
 80026ce:	f107 0138 	add.w	r1, r7, #56	@ 0x38
 80026d2:	2200      	movs	r2, #0
 80026d4:	ed97 0a11 	vldr	s0, [r7, #68]	@ 0x44
 80026d8:	4618      	mov	r0, r3
 80026da:	f000 fe3d 	bl	8003358 <trigo_sin_cosf>
 80026de:	7d3b      	ldrb	r3, [r7, #20]
 80026e0:	f083 0301 	eor.w	r3, r3, #1
 80026e4:	b2db      	uxtb	r3, r3
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	d00c      	beq.n	8002704 <vec_ctrl_svpwm+0x130>
 80026ea:	f997 2018 	ldrsb.w	r2, [r7, #24]
 80026ee:	4b90      	ldr	r3, [pc, #576]	@ (8002930 <vec_ctrl_svpwm+0x35c>)
 80026f0:	701a      	strb	r2, [r3, #0]
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	461a      	mov	r2, r3
 80026f6:	f107 0314 	add.w	r3, r7, #20
 80026fa:	e893 0003 	ldmia.w	r3, {r0, r1}
 80026fe:	e882 0003 	stmia.w	r2, {r0, r1}
}
 8002702:	e250      	b.n	8002ba6 <vec_ctrl_svpwm+0x5d2>
        RESULT_CHECK_RET_RES(trigo_sin_cosf(DIV_PI_3 - theta, &T2, NULL));
 8002704:	ed9f 7a89 	vldr	s14, [pc, #548]	@ 800292c <vec_ctrl_svpwm+0x358>
 8002708:	edd7 7a11 	vldr	s15, [r7, #68]	@ 0x44
 800270c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002710:	f107 030c 	add.w	r3, r7, #12
 8002714:	f107 0134 	add.w	r1, r7, #52	@ 0x34
 8002718:	2200      	movs	r2, #0
 800271a:	eeb0 0a67 	vmov.f32	s0, s15
 800271e:	4618      	mov	r0, r3
 8002720:	f000 fe1a 	bl	8003358 <trigo_sin_cosf>
 8002724:	7b3b      	ldrb	r3, [r7, #12]
 8002726:	f083 0301 	eor.w	r3, r3, #1
 800272a:	b2db      	uxtb	r3, r3
 800272c:	2b00      	cmp	r3, #0
 800272e:	d00c      	beq.n	800274a <vec_ctrl_svpwm+0x176>
 8002730:	f997 2010 	ldrsb.w	r2, [r7, #16]
 8002734:	4b7e      	ldr	r3, [pc, #504]	@ (8002930 <vec_ctrl_svpwm+0x35c>)
 8002736:	701a      	strb	r2, [r3, #0]
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	461a      	mov	r2, r3
 800273c:	f107 030c 	add.w	r3, r7, #12
 8002740:	e893 0003 	ldmia.w	r3, {r0, r1}
 8002744:	e882 0003 	stmia.w	r2, {r0, r1}
 8002748:	e22d      	b.n	8002ba6 <vec_ctrl_svpwm+0x5d2>
    float32_t T0div2 = (1 - (T1 + T2)) / 2;
 800274a:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 800274e:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 8002752:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002756:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800275a:	ee37 7a67 	vsub.f32	s14, s14, s15
 800275e:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 8002762:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002766:	edc7 7a0f 	vstr	s15, [r7, #60]	@ 0x3c
    switch(motor->svgendq.Sector)
 800276a:	683b      	ldr	r3, [r7, #0]
 800276c:	f8b3 3188 	ldrh.w	r3, [r3, #392]	@ 0x188
 8002770:	3b01      	subs	r3, #1
 8002772:	2b05      	cmp	r3, #5
 8002774:	f200 80b2 	bhi.w	80028dc <vec_ctrl_svpwm+0x308>
 8002778:	a201      	add	r2, pc, #4	@ (adr r2, 8002780 <vec_ctrl_svpwm+0x1ac>)
 800277a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800277e:	bf00      	nop
 8002780:	0800283b 	.word	0x0800283b
 8002784:	080027cf 	.word	0x080027cf
 8002788:	08002805 	.word	0x08002805
 800278c:	080028a7 	.word	0x080028a7
 8002790:	08002871 	.word	0x08002871
 8002794:	08002799 	.word	0x08002799
            motor->pwm_duty_u = T0div2;
 8002798:	683b      	ldr	r3, [r7, #0]
 800279a:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800279c:	f8c3 2198 	str.w	r2, [r3, #408]	@ 0x198
            motor->pwm_duty_v = T0div2 + T1;
 80027a0:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 80027a4:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 80027a8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80027ac:	683b      	ldr	r3, [r7, #0]
 80027ae:	edc3 7a67 	vstr	s15, [r3, #412]	@ 0x19c
            motor->pwm_duty_w = T0div2 + T1 + T2;
 80027b2:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 80027b6:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 80027ba:	ee37 7a27 	vadd.f32	s14, s14, s15
 80027be:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 80027c2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80027c6:	683b      	ldr	r3, [r7, #0]
 80027c8:	edc3 7a68 	vstr	s15, [r3, #416]	@ 0x1a0
            break;
 80027cc:	e086      	b.n	80028dc <vec_ctrl_svpwm+0x308>
            motor->pwm_duty_u = T0div2 + T2;
 80027ce:	ed97 7a0d 	vldr	s14, [r7, #52]	@ 0x34
 80027d2:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 80027d6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80027da:	683b      	ldr	r3, [r7, #0]
 80027dc:	edc3 7a66 	vstr	s15, [r3, #408]	@ 0x198
            motor->pwm_duty_v = T0div2;
 80027e0:	683b      	ldr	r3, [r7, #0]
 80027e2:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80027e4:	f8c3 219c 	str.w	r2, [r3, #412]	@ 0x19c
            motor->pwm_duty_w = T0div2 + T1 + T2;
 80027e8:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 80027ec:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 80027f0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80027f4:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 80027f8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80027fc:	683b      	ldr	r3, [r7, #0]
 80027fe:	edc3 7a68 	vstr	s15, [r3, #416]	@ 0x1a0
            break;
 8002802:	e06b      	b.n	80028dc <vec_ctrl_svpwm+0x308>
            motor->pwm_duty_u = T0div2 + T1 + T2;
 8002804:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 8002808:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 800280c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8002810:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 8002814:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002818:	683b      	ldr	r3, [r7, #0]
 800281a:	edc3 7a66 	vstr	s15, [r3, #408]	@ 0x198
            motor->pwm_duty_v = T0div2;
 800281e:	683b      	ldr	r3, [r7, #0]
 8002820:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8002822:	f8c3 219c 	str.w	r2, [r3, #412]	@ 0x19c
            motor->pwm_duty_w = T0div2 + T1;
 8002826:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 800282a:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 800282e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002832:	683b      	ldr	r3, [r7, #0]
 8002834:	edc3 7a68 	vstr	s15, [r3, #416]	@ 0x1a0
            break;
 8002838:	e050      	b.n	80028dc <vec_ctrl_svpwm+0x308>
            motor->pwm_duty_u = T0div2 + T1 + T2;
 800283a:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 800283e:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 8002842:	ee37 7a27 	vadd.f32	s14, s14, s15
 8002846:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 800284a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800284e:	683b      	ldr	r3, [r7, #0]
 8002850:	edc3 7a66 	vstr	s15, [r3, #408]	@ 0x198
            motor->pwm_duty_v = T0div2 + T2;
 8002854:	ed97 7a0d 	vldr	s14, [r7, #52]	@ 0x34
 8002858:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 800285c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002860:	683b      	ldr	r3, [r7, #0]
 8002862:	edc3 7a67 	vstr	s15, [r3, #412]	@ 0x19c
            motor->pwm_duty_w = T0div2;
 8002866:	683b      	ldr	r3, [r7, #0]
 8002868:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800286a:	f8c3 21a0 	str.w	r2, [r3, #416]	@ 0x1a0
            break;
 800286e:	e035      	b.n	80028dc <vec_ctrl_svpwm+0x308>
            motor->pwm_duty_u = T0div2 + T1;
 8002870:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 8002874:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 8002878:	ee77 7a27 	vadd.f32	s15, s14, s15
 800287c:	683b      	ldr	r3, [r7, #0]
 800287e:	edc3 7a66 	vstr	s15, [r3, #408]	@ 0x198
            motor->pwm_duty_v = T0div2 + T1 + T2;
 8002882:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 8002886:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 800288a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800288e:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 8002892:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002896:	683b      	ldr	r3, [r7, #0]
 8002898:	edc3 7a67 	vstr	s15, [r3, #412]	@ 0x19c
            motor->pwm_duty_w = T0div2;
 800289c:	683b      	ldr	r3, [r7, #0]
 800289e:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80028a0:	f8c3 21a0 	str.w	r2, [r3, #416]	@ 0x1a0
            break;
 80028a4:	e01a      	b.n	80028dc <vec_ctrl_svpwm+0x308>
            motor->pwm_duty_u = T0div2;
 80028a6:	683b      	ldr	r3, [r7, #0]
 80028a8:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80028aa:	f8c3 2198 	str.w	r2, [r3, #408]	@ 0x198
            motor->pwm_duty_v = T0div2 + T1 + T2;
 80028ae:	ed97 7a0e 	vldr	s14, [r7, #56]	@ 0x38
 80028b2:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 80028b6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80028ba:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 80028be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80028c2:	683b      	ldr	r3, [r7, #0]
 80028c4:	edc3 7a67 	vstr	s15, [r3, #412]	@ 0x19c
            motor->pwm_duty_w = T0div2 + T2;
 80028c8:	ed97 7a0d 	vldr	s14, [r7, #52]	@ 0x34
 80028cc:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 80028d0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80028d4:	683b      	ldr	r3, [r7, #0]
 80028d6:	edc3 7a68 	vstr	s15, [r3, #416]	@ 0x1a0
            break;
 80028da:	bf00      	nop
    __HAL_TIM_SET_COMPARE(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[0], (uint32_t)((float32_t)TIM1_ARR * motor->pwm_duty_u));
 80028dc:	683b      	ldr	r3, [r7, #0]
 80028de:	699b      	ldr	r3, [r3, #24]
 80028e0:	2b00      	cmp	r3, #0
 80028e2:	d10f      	bne.n	8002904 <vec_ctrl_svpwm+0x330>
 80028e4:	683b      	ldr	r3, [r7, #0]
 80028e6:	edd3 7a66 	vldr	s15, [r3, #408]	@ 0x198
 80028ea:	ed9f 7a12 	vldr	s14, [pc, #72]	@ 8002934 <vec_ctrl_svpwm+0x360>
 80028ee:	ee67 7a87 	vmul.f32	s15, s15, s14
 80028f2:	683b      	ldr	r3, [r7, #0]
 80028f4:	695b      	ldr	r3, [r3, #20]
 80028f6:	681b      	ldr	r3, [r3, #0]
 80028f8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80028fc:	ee17 2a90 	vmov	r2, s15
 8002900:	635a      	str	r2, [r3, #52]	@ 0x34
 8002902:	e064      	b.n	80029ce <vec_ctrl_svpwm+0x3fa>
 8002904:	683b      	ldr	r3, [r7, #0]
 8002906:	699b      	ldr	r3, [r3, #24]
 8002908:	2b04      	cmp	r3, #4
 800290a:	d115      	bne.n	8002938 <vec_ctrl_svpwm+0x364>
 800290c:	683b      	ldr	r3, [r7, #0]
 800290e:	edd3 7a66 	vldr	s15, [r3, #408]	@ 0x198
 8002912:	ed9f 7a08 	vldr	s14, [pc, #32]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002916:	ee67 7a87 	vmul.f32	s15, s15, s14
 800291a:	683b      	ldr	r3, [r7, #0]
 800291c:	695b      	ldr	r3, [r3, #20]
 800291e:	681a      	ldr	r2, [r3, #0]
 8002920:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002924:	ee17 3a90 	vmov	r3, s15
 8002928:	6393      	str	r3, [r2, #56]	@ 0x38
 800292a:	e050      	b.n	80029ce <vec_ctrl_svpwm+0x3fa>
 800292c:	3f860a92 	.word	0x3f860a92
 8002930:	20000994 	.word	0x20000994
 8002934:	43fa0000 	.word	0x43fa0000
 8002938:	683b      	ldr	r3, [r7, #0]
 800293a:	699b      	ldr	r3, [r3, #24]
 800293c:	2b08      	cmp	r3, #8
 800293e:	d10f      	bne.n	8002960 <vec_ctrl_svpwm+0x38c>
 8002940:	683b      	ldr	r3, [r7, #0]
 8002942:	edd3 7a66 	vldr	s15, [r3, #408]	@ 0x198
 8002946:	ed1f 7a05 	vldr	s14, [pc, #-20]	@ 8002934 <vec_ctrl_svpwm+0x360>
 800294a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800294e:	683b      	ldr	r3, [r7, #0]
 8002950:	695b      	ldr	r3, [r3, #20]
 8002952:	681a      	ldr	r2, [r3, #0]
 8002954:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002958:	ee17 3a90 	vmov	r3, s15
 800295c:	63d3      	str	r3, [r2, #60]	@ 0x3c
 800295e:	e036      	b.n	80029ce <vec_ctrl_svpwm+0x3fa>
 8002960:	683b      	ldr	r3, [r7, #0]
 8002962:	699b      	ldr	r3, [r3, #24]
 8002964:	2b0c      	cmp	r3, #12
 8002966:	d10f      	bne.n	8002988 <vec_ctrl_svpwm+0x3b4>
 8002968:	683b      	ldr	r3, [r7, #0]
 800296a:	edd3 7a66 	vldr	s15, [r3, #408]	@ 0x198
 800296e:	ed1f 7a0f 	vldr	s14, [pc, #-60]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002972:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002976:	683b      	ldr	r3, [r7, #0]
 8002978:	695b      	ldr	r3, [r3, #20]
 800297a:	681a      	ldr	r2, [r3, #0]
 800297c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002980:	ee17 3a90 	vmov	r3, s15
 8002984:	6413      	str	r3, [r2, #64]	@ 0x40
 8002986:	e022      	b.n	80029ce <vec_ctrl_svpwm+0x3fa>
 8002988:	683b      	ldr	r3, [r7, #0]
 800298a:	699b      	ldr	r3, [r3, #24]
 800298c:	2b10      	cmp	r3, #16
 800298e:	d10f      	bne.n	80029b0 <vec_ctrl_svpwm+0x3dc>
 8002990:	683b      	ldr	r3, [r7, #0]
 8002992:	edd3 7a66 	vldr	s15, [r3, #408]	@ 0x198
 8002996:	ed1f 7a19 	vldr	s14, [pc, #-100]	@ 8002934 <vec_ctrl_svpwm+0x360>
 800299a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800299e:	683b      	ldr	r3, [r7, #0]
 80029a0:	695b      	ldr	r3, [r3, #20]
 80029a2:	681a      	ldr	r2, [r3, #0]
 80029a4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80029a8:	ee17 3a90 	vmov	r3, s15
 80029ac:	6493      	str	r3, [r2, #72]	@ 0x48
 80029ae:	e00e      	b.n	80029ce <vec_ctrl_svpwm+0x3fa>
 80029b0:	683b      	ldr	r3, [r7, #0]
 80029b2:	edd3 7a66 	vldr	s15, [r3, #408]	@ 0x198
 80029b6:	ed1f 7a21 	vldr	s14, [pc, #-132]	@ 8002934 <vec_ctrl_svpwm+0x360>
 80029ba:	ee67 7a87 	vmul.f32	s15, s15, s14
 80029be:	683b      	ldr	r3, [r7, #0]
 80029c0:	695b      	ldr	r3, [r3, #20]
 80029c2:	681a      	ldr	r2, [r3, #0]
 80029c4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80029c8:	ee17 3a90 	vmov	r3, s15
 80029cc:	64d3      	str	r3, [r2, #76]	@ 0x4c
    __HAL_TIM_SET_COMPARE(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[1], (uint32_t)((float32_t)TIM1_ARR * motor->pwm_duty_v));
 80029ce:	683b      	ldr	r3, [r7, #0]
 80029d0:	69db      	ldr	r3, [r3, #28]
 80029d2:	2b00      	cmp	r3, #0
 80029d4:	d10f      	bne.n	80029f6 <vec_ctrl_svpwm+0x422>
 80029d6:	683b      	ldr	r3, [r7, #0]
 80029d8:	edd3 7a67 	vldr	s15, [r3, #412]	@ 0x19c
 80029dc:	ed1f 7a2b 	vldr	s14, [pc, #-172]	@ 8002934 <vec_ctrl_svpwm+0x360>
 80029e0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80029e4:	683b      	ldr	r3, [r7, #0]
 80029e6:	695b      	ldr	r3, [r3, #20]
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80029ee:	ee17 2a90 	vmov	r2, s15
 80029f2:	635a      	str	r2, [r3, #52]	@ 0x34
 80029f4:	e05e      	b.n	8002ab4 <vec_ctrl_svpwm+0x4e0>
 80029f6:	683b      	ldr	r3, [r7, #0]
 80029f8:	69db      	ldr	r3, [r3, #28]
 80029fa:	2b04      	cmp	r3, #4
 80029fc:	d10f      	bne.n	8002a1e <vec_ctrl_svpwm+0x44a>
 80029fe:	683b      	ldr	r3, [r7, #0]
 8002a00:	edd3 7a67 	vldr	s15, [r3, #412]	@ 0x19c
 8002a04:	ed1f 7a35 	vldr	s14, [pc, #-212]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002a08:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002a0c:	683b      	ldr	r3, [r7, #0]
 8002a0e:	695b      	ldr	r3, [r3, #20]
 8002a10:	681a      	ldr	r2, [r3, #0]
 8002a12:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002a16:	ee17 3a90 	vmov	r3, s15
 8002a1a:	6393      	str	r3, [r2, #56]	@ 0x38
 8002a1c:	e04a      	b.n	8002ab4 <vec_ctrl_svpwm+0x4e0>
 8002a1e:	683b      	ldr	r3, [r7, #0]
 8002a20:	69db      	ldr	r3, [r3, #28]
 8002a22:	2b08      	cmp	r3, #8
 8002a24:	d10f      	bne.n	8002a46 <vec_ctrl_svpwm+0x472>
 8002a26:	683b      	ldr	r3, [r7, #0]
 8002a28:	edd3 7a67 	vldr	s15, [r3, #412]	@ 0x19c
 8002a2c:	ed1f 7a3f 	vldr	s14, [pc, #-252]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002a30:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002a34:	683b      	ldr	r3, [r7, #0]
 8002a36:	695b      	ldr	r3, [r3, #20]
 8002a38:	681a      	ldr	r2, [r3, #0]
 8002a3a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002a3e:	ee17 3a90 	vmov	r3, s15
 8002a42:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8002a44:	e036      	b.n	8002ab4 <vec_ctrl_svpwm+0x4e0>
 8002a46:	683b      	ldr	r3, [r7, #0]
 8002a48:	69db      	ldr	r3, [r3, #28]
 8002a4a:	2b0c      	cmp	r3, #12
 8002a4c:	d10f      	bne.n	8002a6e <vec_ctrl_svpwm+0x49a>
 8002a4e:	683b      	ldr	r3, [r7, #0]
 8002a50:	edd3 7a67 	vldr	s15, [r3, #412]	@ 0x19c
 8002a54:	ed1f 7a49 	vldr	s14, [pc, #-292]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002a58:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002a5c:	683b      	ldr	r3, [r7, #0]
 8002a5e:	695b      	ldr	r3, [r3, #20]
 8002a60:	681a      	ldr	r2, [r3, #0]
 8002a62:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002a66:	ee17 3a90 	vmov	r3, s15
 8002a6a:	6413      	str	r3, [r2, #64]	@ 0x40
 8002a6c:	e022      	b.n	8002ab4 <vec_ctrl_svpwm+0x4e0>
 8002a6e:	683b      	ldr	r3, [r7, #0]
 8002a70:	69db      	ldr	r3, [r3, #28]
 8002a72:	2b10      	cmp	r3, #16
 8002a74:	d10f      	bne.n	8002a96 <vec_ctrl_svpwm+0x4c2>
 8002a76:	683b      	ldr	r3, [r7, #0]
 8002a78:	edd3 7a67 	vldr	s15, [r3, #412]	@ 0x19c
 8002a7c:	ed1f 7a53 	vldr	s14, [pc, #-332]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002a80:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002a84:	683b      	ldr	r3, [r7, #0]
 8002a86:	695b      	ldr	r3, [r3, #20]
 8002a88:	681a      	ldr	r2, [r3, #0]
 8002a8a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002a8e:	ee17 3a90 	vmov	r3, s15
 8002a92:	6493      	str	r3, [r2, #72]	@ 0x48
 8002a94:	e00e      	b.n	8002ab4 <vec_ctrl_svpwm+0x4e0>
 8002a96:	683b      	ldr	r3, [r7, #0]
 8002a98:	edd3 7a67 	vldr	s15, [r3, #412]	@ 0x19c
 8002a9c:	ed1f 7a5b 	vldr	s14, [pc, #-364]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002aa0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002aa4:	683b      	ldr	r3, [r7, #0]
 8002aa6:	695b      	ldr	r3, [r3, #20]
 8002aa8:	681a      	ldr	r2, [r3, #0]
 8002aaa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002aae:	ee17 3a90 	vmov	r3, s15
 8002ab2:	64d3      	str	r3, [r2, #76]	@ 0x4c
    __HAL_TIM_SET_COMPARE(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[2], (uint32_t)((float32_t)TIM1_ARR * motor->pwm_duty_w));
 8002ab4:	683b      	ldr	r3, [r7, #0]
 8002ab6:	6a1b      	ldr	r3, [r3, #32]
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d10f      	bne.n	8002adc <vec_ctrl_svpwm+0x508>
 8002abc:	683b      	ldr	r3, [r7, #0]
 8002abe:	edd3 7a68 	vldr	s15, [r3, #416]	@ 0x1a0
 8002ac2:	ed1f 7a64 	vldr	s14, [pc, #-400]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002ac6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002aca:	683b      	ldr	r3, [r7, #0]
 8002acc:	695b      	ldr	r3, [r3, #20]
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002ad4:	ee17 2a90 	vmov	r2, s15
 8002ad8:	635a      	str	r2, [r3, #52]	@ 0x34
 8002ada:	e05e      	b.n	8002b9a <vec_ctrl_svpwm+0x5c6>
 8002adc:	683b      	ldr	r3, [r7, #0]
 8002ade:	6a1b      	ldr	r3, [r3, #32]
 8002ae0:	2b04      	cmp	r3, #4
 8002ae2:	d10f      	bne.n	8002b04 <vec_ctrl_svpwm+0x530>
 8002ae4:	683b      	ldr	r3, [r7, #0]
 8002ae6:	edd3 7a68 	vldr	s15, [r3, #416]	@ 0x1a0
 8002aea:	ed1f 7a6e 	vldr	s14, [pc, #-440]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002aee:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002af2:	683b      	ldr	r3, [r7, #0]
 8002af4:	695b      	ldr	r3, [r3, #20]
 8002af6:	681a      	ldr	r2, [r3, #0]
 8002af8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002afc:	ee17 3a90 	vmov	r3, s15
 8002b00:	6393      	str	r3, [r2, #56]	@ 0x38
 8002b02:	e04a      	b.n	8002b9a <vec_ctrl_svpwm+0x5c6>
 8002b04:	683b      	ldr	r3, [r7, #0]
 8002b06:	6a1b      	ldr	r3, [r3, #32]
 8002b08:	2b08      	cmp	r3, #8
 8002b0a:	d10f      	bne.n	8002b2c <vec_ctrl_svpwm+0x558>
 8002b0c:	683b      	ldr	r3, [r7, #0]
 8002b0e:	edd3 7a68 	vldr	s15, [r3, #416]	@ 0x1a0
 8002b12:	ed1f 7a78 	vldr	s14, [pc, #-480]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002b16:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b1a:	683b      	ldr	r3, [r7, #0]
 8002b1c:	695b      	ldr	r3, [r3, #20]
 8002b1e:	681a      	ldr	r2, [r3, #0]
 8002b20:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002b24:	ee17 3a90 	vmov	r3, s15
 8002b28:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8002b2a:	e036      	b.n	8002b9a <vec_ctrl_svpwm+0x5c6>
 8002b2c:	683b      	ldr	r3, [r7, #0]
 8002b2e:	6a1b      	ldr	r3, [r3, #32]
 8002b30:	2b0c      	cmp	r3, #12
 8002b32:	d10f      	bne.n	8002b54 <vec_ctrl_svpwm+0x580>
 8002b34:	683b      	ldr	r3, [r7, #0]
 8002b36:	edd3 7a68 	vldr	s15, [r3, #416]	@ 0x1a0
 8002b3a:	ed1f 7a82 	vldr	s14, [pc, #-520]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002b3e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b42:	683b      	ldr	r3, [r7, #0]
 8002b44:	695b      	ldr	r3, [r3, #20]
 8002b46:	681a      	ldr	r2, [r3, #0]
 8002b48:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002b4c:	ee17 3a90 	vmov	r3, s15
 8002b50:	6413      	str	r3, [r2, #64]	@ 0x40
 8002b52:	e022      	b.n	8002b9a <vec_ctrl_svpwm+0x5c6>
 8002b54:	683b      	ldr	r3, [r7, #0]
 8002b56:	6a1b      	ldr	r3, [r3, #32]
 8002b58:	2b10      	cmp	r3, #16
 8002b5a:	d10f      	bne.n	8002b7c <vec_ctrl_svpwm+0x5a8>
 8002b5c:	683b      	ldr	r3, [r7, #0]
 8002b5e:	edd3 7a68 	vldr	s15, [r3, #416]	@ 0x1a0
 8002b62:	ed1f 7a8c 	vldr	s14, [pc, #-560]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002b66:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b6a:	683b      	ldr	r3, [r7, #0]
 8002b6c:	695b      	ldr	r3, [r3, #20]
 8002b6e:	681a      	ldr	r2, [r3, #0]
 8002b70:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002b74:	ee17 3a90 	vmov	r3, s15
 8002b78:	6493      	str	r3, [r2, #72]	@ 0x48
 8002b7a:	e00e      	b.n	8002b9a <vec_ctrl_svpwm+0x5c6>
 8002b7c:	683b      	ldr	r3, [r7, #0]
 8002b7e:	edd3 7a68 	vldr	s15, [r3, #416]	@ 0x1a0
 8002b82:	ed1f 7a94 	vldr	s14, [pc, #-592]	@ 8002934 <vec_ctrl_svpwm+0x360>
 8002b86:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b8a:	683b      	ldr	r3, [r7, #0]
 8002b8c:	695b      	ldr	r3, [r3, #20]
 8002b8e:	681a      	ldr	r2, [r3, #0]
 8002b90:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002b94:	ee17 3a90 	vmov	r3, s15
 8002b98:	64d3      	str	r3, [r2, #76]	@ 0x4c
    return RESULT_OK(NULL);
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	2201      	movs	r2, #1
 8002b9e:	701a      	strb	r2, [r3, #0]
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	2200      	movs	r2, #0
 8002ba4:	605a      	str	r2, [r3, #4]
}
 8002ba6:	6878      	ldr	r0, [r7, #4]
 8002ba8:	3748      	adds	r7, #72	@ 0x48
 8002baa:	46bd      	mov	sp, r7
 8002bac:	bd80      	pop	{r7, pc}
 8002bae:	bf00      	nop

08002bb0 <motor_foc_pwm_pulse>:

#define CYCLE_CNT(id) ({cycle[id] = __HAL_TIM_GET_COUNTER(&htim2) - cycle[id-1];})
// FOC 20kHz
// Thread - pwmIt - 0
Result motor_foc_pwm_pulse(MotorParameter *motor)
{
 8002bb0:	b580      	push	{r7, lr}
 8002bb2:	b08e      	sub	sp, #56	@ 0x38
 8002bb4:	af00      	add	r7, sp, #0
 8002bb6:	6078      	str	r0, [r7, #4]
 8002bb8:	6039      	str	r1, [r7, #0]
    __HAL_TIM_SET_COUNTER(&htim2, 0);
 8002bba:	4b91      	ldr	r3, [pc, #580]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	2200      	movs	r2, #0
 8002bc0:	625a      	str	r2, [r3, #36]	@ 0x24
    if (motor->pwm_count % 100 == 0)
 8002bc2:	683b      	ldr	r3, [r7, #0]
 8002bc4:	f8b3 3078 	ldrh.w	r3, [r3, #120]	@ 0x78
 8002bc8:	4a8e      	ldr	r2, [pc, #568]	@ (8002e04 <motor_foc_pwm_pulse+0x254>)
 8002bca:	fba2 1203 	umull	r1, r2, r2, r3
 8002bce:	0952      	lsrs	r2, r2, #5
 8002bd0:	2164      	movs	r1, #100	@ 0x64
 8002bd2:	fb01 f202 	mul.w	r2, r1, r2
 8002bd6:	1a9b      	subs	r3, r3, r2
 8002bd8:	b29b      	uxth	r3, r3
 8002bda:	2b00      	cmp	r3, #0
 8002bdc:	d11a      	bne.n	8002c14 <motor_foc_pwm_pulse+0x64>
    {
        cycle[0] = __HAL_TIM_GET_COUNTER(&htim2);
 8002bde:	4b88      	ldr	r3, [pc, #544]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002be0:	681b      	ldr	r3, [r3, #0]
 8002be2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002be4:	4a88      	ldr	r2, [pc, #544]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002be6:	6013      	str	r3, [r2, #0]
        // Thread - pwmIt(100) - 1
        stop_check(motor);
 8002be8:	6838      	ldr	r0, [r7, #0]
 8002bea:	f7ff fa2b 	bl	8002044 <stop_check>
        CYCLE_CNT(1);
 8002bee:	4b84      	ldr	r3, [pc, #528]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002bf4:	4b84      	ldr	r3, [pc, #528]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	1ad3      	subs	r3, r2, r3
 8002bfa:	4a83      	ldr	r2, [pc, #524]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002bfc:	6053      	str	r3, [r2, #4]
        // Thread - pwmIt(100) - 2
        pi_speed(motor); // !
 8002bfe:	6838      	ldr	r0, [r7, #0]
 8002c00:	f7ff fa72 	bl	80020e8 <pi_speed>
        CYCLE_CNT(2);
 8002c04:	4b7e      	ldr	r3, [pc, #504]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002c0a:	4b7f      	ldr	r3, [pc, #508]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002c0c:	685b      	ldr	r3, [r3, #4]
 8002c0e:	1ad3      	subs	r3, r2, r3
 8002c10:	4a7d      	ldr	r2, [pc, #500]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002c12:	6093      	str	r3, [r2, #8]
    }
    // motor->pwm_count % 2 == 0
    if (motor->pwm_count % 2 == 0)
 8002c14:	683b      	ldr	r3, [r7, #0]
 8002c16:	f8b3 3078 	ldrh.w	r3, [r3, #120]	@ 0x78
 8002c1a:	f003 0301 	and.w	r3, r3, #1
 8002c1e:	b29b      	uxth	r3, r3
 8002c20:	2b00      	cmp	r3, #0
 8002c22:	f040 80cd 	bne.w	8002dc0 <motor_foc_pwm_pulse+0x210>
    {
        cycle[3] = __HAL_TIM_GET_COUNTER(&htim2);
 8002c26:	4b76      	ldr	r3, [pc, #472]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002c28:	681b      	ldr	r3, [r3, #0]
 8002c2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c2c:	4a76      	ldr	r2, [pc, #472]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002c2e:	60d3      	str	r3, [r2, #12]
        // Thread - pwmIt - 1
        angal_cal(motor);
 8002c30:	6838      	ldr	r0, [r7, #0]
 8002c32:	f7ff fa85 	bl	8002140 <angal_cal>
        CYCLE_CNT(4);
 8002c36:	4b72      	ldr	r3, [pc, #456]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002c38:	681b      	ldr	r3, [r3, #0]
 8002c3a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002c3c:	4b72      	ldr	r3, [pc, #456]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002c3e:	68db      	ldr	r3, [r3, #12]
 8002c40:	1ad3      	subs	r3, r2, r3
 8002c42:	4a71      	ldr	r2, [pc, #452]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002c44:	6113      	str	r3, [r2, #16]
        // Thread - pwmIt - 2
        RESULT_CHECK_RET_RES(vec_ctrl_clarke(motor));
 8002c46:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8002c4a:	6839      	ldr	r1, [r7, #0]
 8002c4c:	4618      	mov	r0, r3
 8002c4e:	f7ff fab9 	bl	80021c4 <vec_ctrl_clarke>
 8002c52:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8002c56:	f083 0301 	eor.w	r3, r3, #1
 8002c5a:	b2db      	uxtb	r3, r3
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	d00c      	beq.n	8002c7a <motor_foc_pwm_pulse+0xca>
 8002c60:	f997 202c 	ldrsb.w	r2, [r7, #44]	@ 0x2c
 8002c64:	4b69      	ldr	r3, [pc, #420]	@ (8002e0c <motor_foc_pwm_pulse+0x25c>)
 8002c66:	701a      	strb	r2, [r3, #0]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	461a      	mov	r2, r3
 8002c6c:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8002c70:	e893 0003 	ldmia.w	r3, {r0, r1}
 8002c74:	e882 0003 	stmia.w	r2, {r0, r1}
        motor->pwm_count = 0;
        motor->exti_hall_cnt = 0;
    }
    motor->pwm_count++;
    return RESULT_OK(NULL);
}
 8002c78:	e0be      	b.n	8002df8 <motor_foc_pwm_pulse+0x248>
        CYCLE_CNT(5);
 8002c7a:	4b61      	ldr	r3, [pc, #388]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002c7c:	681b      	ldr	r3, [r3, #0]
 8002c7e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002c80:	4b61      	ldr	r3, [pc, #388]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002c82:	691b      	ldr	r3, [r3, #16]
 8002c84:	1ad3      	subs	r3, r2, r3
 8002c86:	4a60      	ldr	r2, [pc, #384]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002c88:	6153      	str	r3, [r2, #20]
        RESULT_CHECK_RET_RES(vec_ctrl_park(motor));
 8002c8a:	f107 0320 	add.w	r3, r7, #32
 8002c8e:	6839      	ldr	r1, [r7, #0]
 8002c90:	4618      	mov	r0, r3
 8002c92:	f7ff fb07 	bl	80022a4 <vec_ctrl_park>
 8002c96:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002c9a:	f083 0301 	eor.w	r3, r3, #1
 8002c9e:	b2db      	uxtb	r3, r3
 8002ca0:	2b00      	cmp	r3, #0
 8002ca2:	d00c      	beq.n	8002cbe <motor_foc_pwm_pulse+0x10e>
 8002ca4:	f997 2024 	ldrsb.w	r2, [r7, #36]	@ 0x24
 8002ca8:	4b58      	ldr	r3, [pc, #352]	@ (8002e0c <motor_foc_pwm_pulse+0x25c>)
 8002caa:	701a      	strb	r2, [r3, #0]
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	461a      	mov	r2, r3
 8002cb0:	f107 0320 	add.w	r3, r7, #32
 8002cb4:	e893 0003 	ldmia.w	r3, {r0, r1}
 8002cb8:	e882 0003 	stmia.w	r2, {r0, r1}
}
 8002cbc:	e09c      	b.n	8002df8 <motor_foc_pwm_pulse+0x248>
        CYCLE_CNT(6);
 8002cbe:	4b50      	ldr	r3, [pc, #320]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002cc0:	681b      	ldr	r3, [r3, #0]
 8002cc2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002cc4:	4b50      	ldr	r3, [pc, #320]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002cc6:	695b      	ldr	r3, [r3, #20]
 8002cc8:	1ad3      	subs	r3, r2, r3
 8002cca:	4a4f      	ldr	r2, [pc, #316]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002ccc:	6193      	str	r3, [r2, #24]
        vec_ctrl_pi_id_iq(motor);
 8002cce:	6838      	ldr	r0, [r7, #0]
 8002cd0:	f7ff fb3a 	bl	8002348 <vec_ctrl_pi_id_iq>
        CYCLE_CNT(7);
 8002cd4:	4b4a      	ldr	r3, [pc, #296]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002cda:	4b4b      	ldr	r3, [pc, #300]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002cdc:	699b      	ldr	r3, [r3, #24]
 8002cde:	1ad3      	subs	r3, r2, r3
 8002ce0:	4a49      	ldr	r2, [pc, #292]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002ce2:	61d3      	str	r3, [r2, #28]
        RESULT_CHECK_RET_RES(vec_ctrl_ipark(motor)); // !
 8002ce4:	f107 0318 	add.w	r3, r7, #24
 8002ce8:	6839      	ldr	r1, [r7, #0]
 8002cea:	4618      	mov	r0, r3
 8002cec:	f7ff fb8a 	bl	8002404 <vec_ctrl_ipark>
 8002cf0:	7e3b      	ldrb	r3, [r7, #24]
 8002cf2:	f083 0301 	eor.w	r3, r3, #1
 8002cf6:	b2db      	uxtb	r3, r3
 8002cf8:	2b00      	cmp	r3, #0
 8002cfa:	d00c      	beq.n	8002d16 <motor_foc_pwm_pulse+0x166>
 8002cfc:	f997 201c 	ldrsb.w	r2, [r7, #28]
 8002d00:	4b42      	ldr	r3, [pc, #264]	@ (8002e0c <motor_foc_pwm_pulse+0x25c>)
 8002d02:	701a      	strb	r2, [r3, #0]
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	461a      	mov	r2, r3
 8002d08:	f107 0318 	add.w	r3, r7, #24
 8002d0c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8002d10:	e882 0003 	stmia.w	r2, {r0, r1}
}
 8002d14:	e070      	b.n	8002df8 <motor_foc_pwm_pulse+0x248>
        CYCLE_CNT(8);
 8002d16:	4b3a      	ldr	r3, [pc, #232]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002d1c:	4b3a      	ldr	r3, [pc, #232]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002d1e:	69db      	ldr	r3, [r3, #28]
 8002d20:	1ad3      	subs	r3, r2, r3
 8002d22:	4a39      	ldr	r2, [pc, #228]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002d24:	6213      	str	r3, [r2, #32]
        vec_ctrl_svgen(motor);
 8002d26:	6838      	ldr	r0, [r7, #0]
 8002d28:	f7ff fbec 	bl	8002504 <vec_ctrl_svgen>
        CYCLE_CNT(9);
 8002d2c:	4b34      	ldr	r3, [pc, #208]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002d32:	4b35      	ldr	r3, [pc, #212]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002d34:	6a1b      	ldr	r3, [r3, #32]
 8002d36:	1ad3      	subs	r3, r2, r3
 8002d38:	4a33      	ldr	r2, [pc, #204]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002d3a:	6253      	str	r3, [r2, #36]	@ 0x24
        RESULT_CHECK_RET_RES(vec_ctrl_vref(motor));  // !
 8002d3c:	f107 0310 	add.w	r3, r7, #16
 8002d40:	6839      	ldr	r1, [r7, #0]
 8002d42:	4618      	mov	r0, r3
 8002d44:	f7ff fbf8 	bl	8002538 <vec_ctrl_vref>
 8002d48:	7c3b      	ldrb	r3, [r7, #16]
 8002d4a:	f083 0301 	eor.w	r3, r3, #1
 8002d4e:	b2db      	uxtb	r3, r3
 8002d50:	2b00      	cmp	r3, #0
 8002d52:	d00c      	beq.n	8002d6e <motor_foc_pwm_pulse+0x1be>
 8002d54:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8002d58:	4b2c      	ldr	r3, [pc, #176]	@ (8002e0c <motor_foc_pwm_pulse+0x25c>)
 8002d5a:	701a      	strb	r2, [r3, #0]
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	461a      	mov	r2, r3
 8002d60:	f107 0310 	add.w	r3, r7, #16
 8002d64:	e893 0003 	ldmia.w	r3, {r0, r1}
 8002d68:	e882 0003 	stmia.w	r2, {r0, r1}
}
 8002d6c:	e044      	b.n	8002df8 <motor_foc_pwm_pulse+0x248>
        CYCLE_CNT(10);
 8002d6e:	4b24      	ldr	r3, [pc, #144]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002d74:	4b24      	ldr	r3, [pc, #144]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002d76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d78:	1ad3      	subs	r3, r2, r3
 8002d7a:	4a23      	ldr	r2, [pc, #140]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002d7c:	6293      	str	r3, [r2, #40]	@ 0x28
        RESULT_CHECK_RET_RES(vec_ctrl_svpwm(motor));
 8002d7e:	f107 0308 	add.w	r3, r7, #8
 8002d82:	6839      	ldr	r1, [r7, #0]
 8002d84:	4618      	mov	r0, r3
 8002d86:	f7ff fc25 	bl	80025d4 <vec_ctrl_svpwm>
 8002d8a:	7a3b      	ldrb	r3, [r7, #8]
 8002d8c:	f083 0301 	eor.w	r3, r3, #1
 8002d90:	b2db      	uxtb	r3, r3
 8002d92:	2b00      	cmp	r3, #0
 8002d94:	d00c      	beq.n	8002db0 <motor_foc_pwm_pulse+0x200>
 8002d96:	f997 200c 	ldrsb.w	r2, [r7, #12]
 8002d9a:	4b1c      	ldr	r3, [pc, #112]	@ (8002e0c <motor_foc_pwm_pulse+0x25c>)
 8002d9c:	701a      	strb	r2, [r3, #0]
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	461a      	mov	r2, r3
 8002da2:	f107 0308 	add.w	r3, r7, #8
 8002da6:	e893 0003 	ldmia.w	r3, {r0, r1}
 8002daa:	e882 0003 	stmia.w	r2, {r0, r1}
}
 8002dae:	e023      	b.n	8002df8 <motor_foc_pwm_pulse+0x248>
        CYCLE_CNT(11);
 8002db0:	4b13      	ldr	r3, [pc, #76]	@ (8002e00 <motor_foc_pwm_pulse+0x250>)
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002db6:	4b14      	ldr	r3, [pc, #80]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002db8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002dba:	1ad3      	subs	r3, r2, r3
 8002dbc:	4a12      	ldr	r2, [pc, #72]	@ (8002e08 <motor_foc_pwm_pulse+0x258>)
 8002dbe:	62d3      	str	r3, [r2, #44]	@ 0x2c
    if (motor->pwm_count >= 1000)
 8002dc0:	683b      	ldr	r3, [r7, #0]
 8002dc2:	f8b3 3078 	ldrh.w	r3, [r3, #120]	@ 0x78
 8002dc6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8002dca:	d307      	bcc.n	8002ddc <motor_foc_pwm_pulse+0x22c>
        motor->pwm_count = 0;
 8002dcc:	683b      	ldr	r3, [r7, #0]
 8002dce:	2200      	movs	r2, #0
 8002dd0:	f8a3 2078 	strh.w	r2, [r3, #120]	@ 0x78
        motor->exti_hall_cnt = 0;
 8002dd4:	683b      	ldr	r3, [r7, #0]
 8002dd6:	2200      	movs	r2, #0
 8002dd8:	f8a3 2064 	strh.w	r2, [r3, #100]	@ 0x64
    motor->pwm_count++;
 8002ddc:	683b      	ldr	r3, [r7, #0]
 8002dde:	f8b3 3078 	ldrh.w	r3, [r3, #120]	@ 0x78
 8002de2:	3301      	adds	r3, #1
 8002de4:	b29a      	uxth	r2, r3
 8002de6:	683b      	ldr	r3, [r7, #0]
 8002de8:	f8a3 2078 	strh.w	r2, [r3, #120]	@ 0x78
    return RESULT_OK(NULL);
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	2201      	movs	r2, #1
 8002df0:	701a      	strb	r2, [r3, #0]
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	2200      	movs	r2, #0
 8002df6:	605a      	str	r2, [r3, #4]
}
 8002df8:	6878      	ldr	r0, [r7, #4]
 8002dfa:	3738      	adds	r7, #56	@ 0x38
 8002dfc:	46bd      	mov	sp, r7
 8002dfe:	bd80      	pop	{r7, pc}
 8002e00:	20000588 	.word	0x20000588
 8002e04:	51eb851f 	.word	0x51eb851f
 8002e08:	200009a4 	.word	0x200009a4
 8002e0c:	20000994 	.word	0x20000994

08002e10 <motor_hall_exti>:
#include "motor/ctrl_foc.h"
#include "analog/adc1/main.h"
#include "motor/trigonometric.h"

void motor_hall_exti(MotorParameter *motor)
{
 8002e10:	b580      	push	{r7, lr}
 8002e12:	b088      	sub	sp, #32
 8002e14:	af00      	add	r7, sp, #0
 8002e16:	60f8      	str	r0, [r7, #12]
    motor->exti_hall_cnt++;
 8002e18:	68fb      	ldr	r3, [r7, #12]
 8002e1a:	f8b3 3064 	ldrh.w	r3, [r3, #100]	@ 0x64
 8002e1e:	b29b      	uxth	r3, r3
 8002e20:	3301      	adds	r3, #1
 8002e22:	b29a      	uxth	r2, r3
 8002e24:	68fb      	ldr	r3, [r7, #12]
 8002e26:	f8a3 2064 	strh.w	r2, [r3, #100]	@ 0x64
    uint8_t hall_last = motor->exti_hall_curt;
 8002e2a:	68fb      	ldr	r3, [r7, #12]
 8002e2c:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8002e30:	77bb      	strb	r3, [r7, #30]
    uint8_t hall_current =
          ((motor->const_h.Hall_GPIOx[0]->IDR & motor->const_h.Hall_GPIO_Pin_x[0]) ? 4U : 0U)
 8002e32:	68fb      	ldr	r3, [r7, #12]
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	691b      	ldr	r3, [r3, #16]
 8002e38:	68fa      	ldr	r2, [r7, #12]
 8002e3a:	8992      	ldrh	r2, [r2, #12]
 8002e3c:	4013      	ands	r3, r2
        | ((motor->const_h.Hall_GPIOx[1]->IDR & motor->const_h.Hall_GPIO_Pin_x[1]) ? 2U : 0U)
 8002e3e:	2b00      	cmp	r3, #0
 8002e40:	d001      	beq.n	8002e46 <motor_hall_exti+0x36>
 8002e42:	2204      	movs	r2, #4
 8002e44:	e000      	b.n	8002e48 <motor_hall_exti+0x38>
 8002e46:	2200      	movs	r2, #0
 8002e48:	68fb      	ldr	r3, [r7, #12]
 8002e4a:	685b      	ldr	r3, [r3, #4]
 8002e4c:	691b      	ldr	r3, [r3, #16]
 8002e4e:	68f9      	ldr	r1, [r7, #12]
 8002e50:	89c9      	ldrh	r1, [r1, #14]
 8002e52:	400b      	ands	r3, r1
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d001      	beq.n	8002e5c <motor_hall_exti+0x4c>
 8002e58:	2302      	movs	r3, #2
 8002e5a:	e000      	b.n	8002e5e <motor_hall_exti+0x4e>
 8002e5c:	2300      	movs	r3, #0
 8002e5e:	4313      	orrs	r3, r2
 8002e60:	b2db      	uxtb	r3, r3
        | ((motor->const_h.Hall_GPIOx[2]->IDR & motor->const_h.Hall_GPIO_Pin_x[2]) ? 1U : 0U);
 8002e62:	68fa      	ldr	r2, [r7, #12]
 8002e64:	6892      	ldr	r2, [r2, #8]
 8002e66:	6912      	ldr	r2, [r2, #16]
 8002e68:	68f9      	ldr	r1, [r7, #12]
 8002e6a:	8a09      	ldrh	r1, [r1, #16]
 8002e6c:	400a      	ands	r2, r1
 8002e6e:	2a00      	cmp	r2, #0
 8002e70:	d001      	beq.n	8002e76 <motor_hall_exti+0x66>
 8002e72:	2201      	movs	r2, #1
 8002e74:	e000      	b.n	8002e78 <motor_hall_exti+0x68>
 8002e76:	2200      	movs	r2, #0
    uint8_t hall_current =
 8002e78:	4313      	orrs	r3, r2
 8002e7a:	777b      	strb	r3, [r7, #29]
    motor->exti_hall_last = hall_last;
 8002e7c:	68fb      	ldr	r3, [r7, #12]
 8002e7e:	7fba      	ldrb	r2, [r7, #30]
 8002e80:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
    motor->exti_hall_curt = hall_current;
 8002e84:	68fb      	ldr	r3, [r7, #12]
 8002e86:	7f7a      	ldrb	r2, [r7, #29]
 8002e88:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
    if (hall_current == 0 || hall_current == 7) 
 8002e8c:	7f7b      	ldrb	r3, [r7, #29]
 8002e8e:	2b00      	cmp	r3, #0
 8002e90:	d002      	beq.n	8002e98 <motor_hall_exti+0x88>
 8002e92:	7f7b      	ldrb	r3, [r7, #29]
 8002e94:	2b07      	cmp	r3, #7
 8002e96:	d12c      	bne.n	8002ef2 <motor_hall_exti+0xe2>
    {
        uint8_t i;
        for (i = 0; i < 3; i++)
 8002e98:	2300      	movs	r3, #0
 8002e9a:	77fb      	strb	r3, [r7, #31]
 8002e9c:	e025      	b.n	8002eea <motor_hall_exti+0xda>
        {
            HAL_TIM_PWM_Stop(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[i]);
 8002e9e:	68fb      	ldr	r3, [r7, #12]
 8002ea0:	6958      	ldr	r0, [r3, #20]
 8002ea2:	7ffa      	ldrb	r2, [r7, #31]
 8002ea4:	68fb      	ldr	r3, [r7, #12]
 8002ea6:	3206      	adds	r2, #6
 8002ea8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002eac:	4619      	mov	r1, r3
 8002eae:	f004 fd8f 	bl	80079d0 <HAL_TIM_PWM_Stop>
            HAL_TIMEx_PWMN_Stop(motor->const_h.PWM_htimx, motor->const_h.PWM_TIM_CHANNEL_x[i]);
 8002eb2:	68fb      	ldr	r3, [r7, #12]
 8002eb4:	6958      	ldr	r0, [r3, #20]
 8002eb6:	7ffa      	ldrb	r2, [r7, #31]
 8002eb8:	68fb      	ldr	r3, [r7, #12]
 8002eba:	3206      	adds	r2, #6
 8002ebc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002ec0:	4619      	mov	r1, r3
 8002ec2:	f005 fd8d 	bl	80089e0 <HAL_TIMEx_PWMN_Stop>
            HAL_GPIO_WritePin(motor->const_h.Coil_GPIOx[i], motor->const_h.Coil_GPIO_Pin_x[i],  GPIO_PIN_RESET);
 8002ec6:	7ffb      	ldrb	r3, [r7, #31]
 8002ec8:	68fa      	ldr	r2, [r7, #12]
 8002eca:	330a      	adds	r3, #10
 8002ecc:	009b      	lsls	r3, r3, #2
 8002ece:	4413      	add	r3, r2
 8002ed0:	6858      	ldr	r0, [r3, #4]
 8002ed2:	7ffa      	ldrb	r2, [r7, #31]
 8002ed4:	68fb      	ldr	r3, [r7, #12]
 8002ed6:	321c      	adds	r2, #28
 8002ed8:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8002edc:	2200      	movs	r2, #0
 8002ede:	4619      	mov	r1, r3
 8002ee0:	f003 fac8 	bl	8006474 <HAL_GPIO_WritePin>
        for (i = 0; i < 3; i++)
 8002ee4:	7ffb      	ldrb	r3, [r7, #31]
 8002ee6:	3301      	adds	r3, #1
 8002ee8:	77fb      	strb	r3, [r7, #31]
 8002eea:	7ffb      	ldrb	r3, [r7, #31]
 8002eec:	2b02      	cmp	r3, #2
 8002eee:	d9d6      	bls.n	8002e9e <motor_hall_exti+0x8e>
        }
        return;
 8002ef0:	e02a      	b.n	8002f48 <motor_hall_exti+0x138>
    }
    RESULT_CHECK_RET_VOID(motor_hall_to_angle(hall_current, &motor->exti_hall_angal));
 8002ef2:	68fb      	ldr	r3, [r7, #12]
 8002ef4:	f103 0260 	add.w	r2, r3, #96	@ 0x60
 8002ef8:	f107 0314 	add.w	r3, r7, #20
 8002efc:	7f79      	ldrb	r1, [r7, #29]
 8002efe:	4618      	mov	r0, r3
 8002f00:	f7fe fdd4 	bl	8001aac <motor_hall_to_angle>
 8002f04:	7d3b      	ldrb	r3, [r7, #20]
 8002f06:	f083 0301 	eor.w	r3, r3, #1
 8002f0a:	b2db      	uxtb	r3, r3
 8002f0c:	2b00      	cmp	r3, #0
 8002f0e:	d004      	beq.n	8002f1a <motor_hall_exti+0x10a>
 8002f10:	f997 2018 	ldrsb.w	r2, [r7, #24]
 8002f14:	4b0e      	ldr	r3, [pc, #56]	@ (8002f50 <motor_hall_exti+0x140>)
 8002f16:	701a      	strb	r2, [r3, #0]
 8002f18:	e016      	b.n	8002f48 <motor_hall_exti+0x138>
    switch (motor->mode)
 8002f1a:	68fb      	ldr	r3, [r7, #12]
 8002f1c:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8002f20:	2b00      	cmp	r3, #0
 8002f22:	d002      	beq.n	8002f2a <motor_hall_exti+0x11a>
 8002f24:	2b01      	cmp	r3, #1
 8002f26:	d009      	beq.n	8002f3c <motor_hall_exti+0x12c>
 8002f28:	e00e      	b.n	8002f48 <motor_hall_exti+0x138>
    {
        case MOTOR_CTRL_120:
        {
            motor->pwm_duty_u = 1.0f;
 8002f2a:	68fb      	ldr	r3, [r7, #12]
 8002f2c:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8002f30:	f8c3 2198 	str.w	r2, [r3, #408]	@ 0x198
            motor_120_hall_update(motor);
 8002f34:	68f8      	ldr	r0, [r7, #12]
 8002f36:	f7fe fef9 	bl	8001d2c <motor_120_hall_update>
            break;
 8002f3a:	e005      	b.n	8002f48 <motor_hall_exti+0x138>
        }
        case MOTOR_CTRL_FOC:
        {
            motor_foc_hall_update(motor);
 8002f3c:	463b      	mov	r3, r7
 8002f3e:	68f9      	ldr	r1, [r7, #12]
 8002f40:	4618      	mov	r0, r3
 8002f42:	f7ff f817 	bl	8001f74 <motor_foc_hall_update>
            break;
 8002f46:	bf00      	nop
        }
    }
}
 8002f48:	3720      	adds	r7, #32
 8002f4a:	46bd      	mov	sp, r7
 8002f4c:	bd80      	pop	{r7, pc}
 8002f4e:	bf00      	nop
 8002f50:	20000994 	.word	0x20000994

08002f54 <motor_pwm_pulse>:

void motor_pwm_pulse(MotorParameter *motor)
{
 8002f54:	b580      	push	{r7, lr}
 8002f56:	b084      	sub	sp, #16
 8002f58:	af00      	add	r7, sp, #0
 8002f5a:	60f8      	str	r0, [r7, #12]
    switch (motor->mode)
 8002f5c:	68fb      	ldr	r3, [r7, #12]
 8002f5e:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d008      	beq.n	8002f78 <motor_pwm_pulse+0x24>
 8002f66:	2b01      	cmp	r3, #1
 8002f68:	d000      	beq.n	8002f6c <motor_pwm_pulse+0x18>
        {
            motor_foc_pwm_pulse(motor);
            break;
        }
    }
}
 8002f6a:	e006      	b.n	8002f7a <motor_pwm_pulse+0x26>
            motor_foc_pwm_pulse(motor);
 8002f6c:	463b      	mov	r3, r7
 8002f6e:	68f9      	ldr	r1, [r7, #12]
 8002f70:	4618      	mov	r0, r3
 8002f72:	f7ff fe1d 	bl	8002bb0 <motor_foc_pwm_pulse>
            break;
 8002f76:	e000      	b.n	8002f7a <motor_pwm_pulse+0x26>
            break;
 8002f78:	bf00      	nop
}
 8002f7a:	bf00      	nop
 8002f7c:	3710      	adds	r7, #16
 8002f7e:	46bd      	mov	sp, r7
 8002f80:	bd80      	pop	{r7, pc}
	...

08002f84 <motor_init>:

static void motor_init(MotorParameter *motor)
{
 8002f84:	b480      	push	{r7}
 8002f86:	b087      	sub	sp, #28
 8002f88:	af00      	add	r7, sp, #0
 8002f8a:	6078      	str	r0, [r7, #4]
    const float32_t TIM_tim_f =
        (float32_t)*motor->const_h.TIM_tim_clk /
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	ee07 3a90 	vmov	s15, r3
 8002f96:	eef8 6a67 	vcvt.f32.u32	s13, s15
        (float32_t)(motor->const_h.TIM_htimx->Init.Prescaler + 1U);
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002f9e:	685b      	ldr	r3, [r3, #4]
 8002fa0:	3301      	adds	r3, #1
 8002fa2:	ee07 3a90 	vmov	s15, r3
 8002fa6:	eeb8 7a67 	vcvt.f32.u32	s14, s15
    const float32_t TIM_tim_f =
 8002faa:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002fae:	edc7 7a05 	vstr	s15, [r7, #20]
    // ELE_tim_f：霍爾計時器的實際計數頻率 (Hz)
    // = ELE_timer_clock / (PSC + 1)
    const float32_t ELE_tim_f =
        (float32_t)*motor->const_h.ELE_tim_clk /
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	ee07 3a90 	vmov	s15, r3
 8002fbc:	eef8 6a67 	vcvt.f32.u32	s13, s15
        (float32_t)(motor->const_h.ELE_htimx->Init.Prescaler + 1U);
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fc4:	685b      	ldr	r3, [r3, #4]
 8002fc6:	3301      	adds	r3, #1
 8002fc8:	ee07 3a90 	vmov	s15, r3
 8002fcc:	eeb8 7a67 	vcvt.f32.u32	s14, s15
    const float32_t ELE_tim_f =
 8002fd0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002fd4:	edc7 7a04 	vstr	s15, [r7, #16]
    // TIM_tim_t：PWM 控制定時器每個計數週期的時間 (秒/計數)
    // = (PSC + 1) / TIM_timer_clock
    const float32_t TIM_tim_t =
        (float32_t)(motor->const_h.TIM_htimx->Init.Prescaler + 1U) /
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002fdc:	685b      	ldr	r3, [r3, #4]
 8002fde:	3301      	adds	r3, #1
 8002fe0:	ee07 3a90 	vmov	s15, r3
 8002fe4:	eef8 6a67 	vcvt.f32.u32	s13, s15
        (float32_t)*motor->const_h.TIM_tim_clk;
 8002fe8:	687b      	ldr	r3, [r7, #4]
 8002fea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	ee07 3a90 	vmov	s15, r3
 8002ff2:	eeb8 7a67 	vcvt.f32.u32	s14, s15
    const float32_t TIM_tim_t =
 8002ff6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002ffa:	edc7 7a03 	vstr	s15, [r7, #12]
    // ELE_tim_t：霍爾計時器每個計數週期的時間 (秒/計數)
    // = (PSC + 1) / ELE_timer_clock
    const float32_t ELE_tim_t =
        (float32_t)(motor->const_h.ELE_htimx->Init.Prescaler + 1U) /
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003002:	685b      	ldr	r3, [r3, #4]
 8003004:	3301      	adds	r3, #1
 8003006:	ee07 3a90 	vmov	s15, r3
 800300a:	eef8 6a67 	vcvt.f32.u32	s13, s15
        (float32_t)*motor->const_h.ELE_tim_clk;
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	ee07 3a90 	vmov	s15, r3
 8003018:	eeb8 7a67 	vcvt.f32.u32	s14, s15
    const float32_t ELE_tim_t =
 800301c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003020:	edc7 7a02 	vstr	s15, [r7, #8]
    motor->tim_it_freq = TIM_tim_f / motor->const_h.TIM_htimx->Init.Period;
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003028:	68db      	ldr	r3, [r3, #12]
 800302a:	ee07 3a90 	vmov	s15, r3
 800302e:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8003032:	edd7 6a05 	vldr	s13, [r7, #20]
 8003036:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	edc3 7a14 	vstr	s15, [r3, #80]	@ 0x50
    // rpm_fbk_trans：霍爾間隔 → 輸出軸轉速(RPM) 轉換常數
    // 公式：RPM = [ELE_tim_f * 60] / [6 × (POLE/2) × GEAR × htim_cnt]
    motor->rpm_fbk_trans =
        ELE_tim_f / (6.0f * (float32_t)MOTOR_42BLF01_POLE / 2.0f * MOTOR_42BLF01_GEAR) * 60.0f;
 8003040:	ed97 7a04 	vldr	s14, [r7, #16]
 8003044:	eddf 6a13 	vldr	s13, [pc, #76]	@ 8003094 <motor_init+0x110>
 8003048:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800304c:	ed9f 7a12 	vldr	s14, [pc, #72]	@ 8003098 <motor_init+0x114>
 8003050:	ee67 7a87 	vmul.f32	s15, s15, s14
    motor->rpm_fbk_trans =
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	edc3 7a12 	vstr	s15, [r3, #72]	@ 0x48
    // pwm_per_it_angle_itpl_trans：PWM 週期 → 電角度內插轉換常數
    // 公式：Δθ_elec(rad) = [ (TIM_tim_t * ARR) / ELE_tim_t ] × (π/3) / htim_cnt
    motor->pwm_per_it_angle_itpl_trans =
        TIM_tim_t / ELE_tim_t * (float32_t)(motor->const_h.TIM_htimx->Init.Period) * DIV_PI_3;
 800305a:	edd7 6a03 	vldr	s13, [r7, #12]
 800305e:	edd7 7a02 	vldr	s15, [r7, #8]
 8003062:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800306a:	68db      	ldr	r3, [r3, #12]
 800306c:	ee07 3a90 	vmov	s15, r3
 8003070:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003074:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003078:	ed9f 7a08 	vldr	s14, [pc, #32]	@ 800309c <motor_init+0x118>
 800307c:	ee67 7a87 	vmul.f32	s15, s15, s14
    motor->pwm_per_it_angle_itpl_trans =
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	edc3 7a13 	vstr	s15, [r3, #76]	@ 0x4c
}
 8003086:	bf00      	nop
 8003088:	371c      	adds	r7, #28
 800308a:	46bd      	mov	sp, r7
 800308c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003090:	4770      	bx	lr
 8003092:	bf00      	nop
 8003094:	42533334 	.word	0x42533334
 8003098:	42700000 	.word	0x42700000
 800309c:	3f860a92 	.word	0x3f860a92

080030a0 <StartMotorTask>:

void StartMotorTask(void *argument)
{
 80030a0:	b580      	push	{r7, lr}
 80030a2:	b082      	sub	sp, #8
 80030a4:	af00      	add	r7, sp, #0
 80030a6:	6078      	str	r0, [r7, #4]
    motor_init(&motor_h);
 80030a8:	4809      	ldr	r0, [pc, #36]	@ (80030d0 <StartMotorTask+0x30>)
 80030aa:	f7ff ff6b 	bl	8002f84 <motor_init>
    motor_h.pi_speed.Ref = 80.0f;
 80030ae:	4b08      	ldr	r3, [pc, #32]	@ (80030d0 <StartMotorTask+0x30>)
 80030b0:	4a08      	ldr	r2, [pc, #32]	@ (80030d4 <StartMotorTask+0x34>)
 80030b2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
    // motor_h.reverse = true;
    while(HAL_GetTick() < 3000) osDelay(10);
 80030b6:	e002      	b.n	80030be <StartMotorTask+0x1e>
 80030b8:	200a      	movs	r0, #10
 80030ba:	f006 fcfd 	bl	8009ab8 <osDelay>
 80030be:	f000 fc65 	bl	800398c <HAL_GetTick>
 80030c2:	4603      	mov	r3, r0
 80030c4:	f640 32b7 	movw	r2, #2999	@ 0xbb7
 80030c8:	4293      	cmp	r3, r2
 80030ca:	d9f5      	bls.n	80030b8 <StartMotorTask+0x18>

    // motor_h.mode = MOTOR_CTRL_FOC;
    // motor_foc_tim_setup(&motor_h);
    // motor_hall_exti(&motor_h);

    StopTask();
 80030cc:	f006 fced 	bl	8009aaa <osThreadExit>
 80030d0:	20000050 	.word	0x20000050
 80030d4:	42a00000 	.word	0x42a00000

080030d8 <PARK_run>:
 80030d8:	b480      	push	{r7}
 80030da:	b083      	sub	sp, #12
 80030dc:	af00      	add	r7, sp, #0
 80030de:	6078      	str	r0, [r7, #4]
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	ed93 7a00 	vldr	s14, [r3]
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	edd3 7a06 	vldr	s15, [r3, #24]
 80030ec:	ee27 7a27 	vmul.f32	s14, s14, s15
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	edd3 6a01 	vldr	s13, [r3, #4]
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	edd3 7a05 	vldr	s15, [r3, #20]
 80030fc:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8003100:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	edc3 7a03 	vstr	s15, [r3, #12]
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	ed93 7a01 	vldr	s14, [r3, #4]
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	edd3 7a06 	vldr	s15, [r3, #24]
 8003116:	ee27 7a27 	vmul.f32	s14, s14, s15
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	edd3 6a00 	vldr	s13, [r3]
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	edd3 7a05 	vldr	s15, [r3, #20]
 8003126:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800312a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	edc3 7a04 	vstr	s15, [r3, #16]
 8003134:	bf00      	nop
 8003136:	370c      	adds	r7, #12
 8003138:	46bd      	mov	sp, r7
 800313a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800313e:	4770      	bx	lr

08003140 <IPARK_run>:
 8003140:	b480      	push	{r7}
 8003142:	b083      	sub	sp, #12
 8003144:	af00      	add	r7, sp, #0
 8003146:	6078      	str	r0, [r7, #4]
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	ed93 7a03 	vldr	s14, [r3, #12]
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	edd3 7a06 	vldr	s15, [r3, #24]
 8003154:	ee27 7a27 	vmul.f32	s14, s14, s15
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	edd3 6a04 	vldr	s13, [r3, #16]
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	edd3 7a05 	vldr	s15, [r3, #20]
 8003164:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8003168:	ee77 7a67 	vsub.f32	s15, s14, s15
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	edc3 7a00 	vstr	s15, [r3]
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	ed93 7a04 	vldr	s14, [r3, #16]
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	edd3 7a06 	vldr	s15, [r3, #24]
 800317e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	edd3 6a03 	vldr	s13, [r3, #12]
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	edd3 7a05 	vldr	s15, [r3, #20]
 800318e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8003192:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	edc3 7a01 	vstr	s15, [r3, #4]
 800319c:	bf00      	nop
 800319e:	370c      	adds	r7, #12
 80031a0:	46bd      	mov	sp, r7
 80031a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031a6:	4770      	bx	lr

080031a8 <PI_run>:
#include "motor/pi.h"
#include "motor/basic.h"

void PI_run(volatile PI_CTRL *pi)
{
 80031a8:	b580      	push	{r7, lr}
 80031aa:	b082      	sub	sp, #8
 80031ac:	af00      	add	r7, sp, #0
 80031ae:	6078      	str	r0, [r7, #4]
    pi->up = pi->Kp * (pi->Ref - pi->Fbk);
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	ed93 7a03 	vldr	s14, [r3, #12]
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	edd3 6a00 	vldr	s13, [r3]
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	edd3 7a01 	vldr	s15, [r3, #4]
 80031c2:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80031c6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	edc3 7a07 	vstr	s15, [r3, #28]

    if (pi->Out == pi->v1)
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	ed93 7a02 	vldr	s14, [r3, #8]
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 80031dc:	eeb4 7a67 	vcmp.f32	s14, s15
 80031e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80031e4:	d110      	bne.n	8003208 <PI_run+0x60>
    {
        pi->ui = pi->Ki * pi->up + pi->i1;
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	ed93 7a04 	vldr	s14, [r3, #16]
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	edd3 7a07 	vldr	s15, [r3, #28]
 80031f2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 80031fc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	edc3 7a08 	vstr	s15, [r3, #32]
 8003206:	e003      	b.n	8003210 <PI_run+0x68>
    }
    else
    {
        pi->ui = pi->i1;
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800320c:	687b      	ldr	r3, [r7, #4]
 800320e:	621a      	str	r2, [r3, #32]
    }
    pi->i1 = pi->ui;
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	6a1a      	ldr	r2, [r3, #32]
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	629a      	str	r2, [r3, #40]	@ 0x28
    pi->v1 = pi->up + pi->ui;
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	ed93 7a07 	vldr	s14, [r3, #28]
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	edd3 7a08 	vldr	s15, [r3, #32]
 8003224:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	edc3 7a09 	vstr	s15, [r3, #36]	@ 0x24
    pi->Out = clampf(pi->v1, pi->Umin, pi->Umax);
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	ed93 7a06 	vldr	s14, [r3, #24]
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	edd3 6a05 	vldr	s13, [r3, #20]
 8003240:	eeb0 1a66 	vmov.f32	s2, s13
 8003244:	eef0 0a47 	vmov.f32	s1, s14
 8003248:	eeb0 0a67 	vmov.f32	s0, s15
 800324c:	f7fe fc80 	bl	8001b50 <clampf>
 8003250:	eef0 7a40 	vmov.f32	s15, s0
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	edc3 7a02 	vstr	s15, [r3, #8]
    pi->w1 = (pi->Out == pi->v1) ? 1.0f : 0.0f;
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	ed93 7a02 	vldr	s14, [r3, #8]
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 8003266:	eeb4 7a67 	vcmp.f32	s14, s15
 800326a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800326e:	d102      	bne.n	8003276 <PI_run+0xce>
 8003270:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8003274:	e001      	b.n	800327a <PI_run+0xd2>
 8003276:	f04f 0200 	mov.w	r2, #0
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	62da      	str	r2, [r3, #44]	@ 0x2c
}
 800327e:	bf00      	nop
 8003280:	3708      	adds	r7, #8
 8003282:	46bd      	mov	sp, r7
 8003284:	bd80      	pop	{r7, pc}
	...

08003288 <SVGEN_run>:
 8003288:	b480      	push	{r7}
 800328a:	b085      	sub	sp, #20
 800328c:	af00      	add	r7, sp, #0
 800328e:	6078      	str	r0, [r7, #4]
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	edd3 7a01 	vldr	s15, [r3, #4]
 8003296:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800329a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800329e:	edc7 7a03 	vstr	s15, [r7, #12]
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	edd3 7a00 	vldr	s15, [r3]
 80032a8:	ed9f 7a2a 	vldr	s14, [pc, #168]	@ 8003354 <SVGEN_run+0xcc>
 80032ac:	ee67 7a87 	vmul.f32	s15, s15, s14
 80032b0:	edc7 7a02 	vstr	s15, [r7, #8]
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	685a      	ldr	r2, [r3, #4]
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	609a      	str	r2, [r3, #8]
 80032bc:	ed97 7a02 	vldr	s14, [r7, #8]
 80032c0:	edd7 7a03 	vldr	s15, [r7, #12]
 80032c4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	edc3 7a03 	vstr	s15, [r3, #12]
 80032ce:	edd7 7a03 	vldr	s15, [r7, #12]
 80032d2:	eeb1 7a67 	vneg.f32	s14, s15
 80032d6:	edd7 7a02 	vldr	s15, [r7, #8]
 80032da:	ee77 7a67 	vsub.f32	s15, s14, s15
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	edc3 7a04 	vstr	s15, [r3, #16]
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	2200      	movs	r2, #0
 80032e8:	829a      	strh	r2, [r3, #20]
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	edd3 7a02 	vldr	s15, [r3, #8]
 80032f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80032f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80032f8:	dd06      	ble.n	8003308 <SVGEN_run+0x80>
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	8a9b      	ldrh	r3, [r3, #20]
 80032fe:	b29b      	uxth	r3, r3
 8003300:	3302      	adds	r3, #2
 8003302:	b29a      	uxth	r2, r3
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	829a      	strh	r2, [r3, #20]
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	edd3 7a03 	vldr	s15, [r3, #12]
 800330e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003312:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003316:	dd06      	ble.n	8003326 <SVGEN_run+0x9e>
 8003318:	687b      	ldr	r3, [r7, #4]
 800331a:	8a9b      	ldrh	r3, [r3, #20]
 800331c:	b29b      	uxth	r3, r3
 800331e:	3304      	adds	r3, #4
 8003320:	b29a      	uxth	r2, r3
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	829a      	strh	r2, [r3, #20]
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	edd3 7a04 	vldr	s15, [r3, #16]
 800332c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003334:	dc00      	bgt.n	8003338 <SVGEN_run+0xb0>
 8003336:	e006      	b.n	8003346 <SVGEN_run+0xbe>
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	8a9b      	ldrh	r3, [r3, #20]
 800333c:	b29b      	uxth	r3, r3
 800333e:	3301      	adds	r3, #1
 8003340:	b29a      	uxth	r2, r3
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	829a      	strh	r2, [r3, #20]
 8003346:	bf00      	nop
 8003348:	3714      	adds	r7, #20
 800334a:	46bd      	mov	sp, r7
 800334c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003350:	4770      	bx	lr
 8003352:	bf00      	nop
 8003354:	3f5db3d7 	.word	0x3f5db3d7

08003358 <trigo_sin_cosf>:
    .OutSize    = CORDIC_OUTSIZE_32BITS,
};
static CORDIC_ConfigTypeDef *cordic_currunt;

Result trigo_sin_cosf(float32_t theta, float32_t *sin, float32_t *cos)
{
 8003358:	b580      	push	{r7, lr}
 800335a:	b092      	sub	sp, #72	@ 0x48
 800335c:	af02      	add	r7, sp, #8
 800335e:	60f8      	str	r0, [r7, #12]
 8003360:	ed87 0a02 	vstr	s0, [r7, #8]
 8003364:	6079      	str	r1, [r7, #4]
 8003366:	603a      	str	r2, [r7, #0]
    if (cordic_currunt != &cordic_cfg_sin_cos)
 8003368:	4b3a      	ldr	r3, [pc, #232]	@ (8003454 <trigo_sin_cosf+0xfc>)
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	4a3a      	ldr	r2, [pc, #232]	@ (8003458 <trigo_sin_cosf+0x100>)
 800336e:	4293      	cmp	r3, r2
 8003370:	d01a      	beq.n	80033a8 <trigo_sin_cosf+0x50>
    {
        cordic_currunt = &cordic_cfg_sin_cos;
 8003372:	4b38      	ldr	r3, [pc, #224]	@ (8003454 <trigo_sin_cosf+0xfc>)
 8003374:	4a38      	ldr	r2, [pc, #224]	@ (8003458 <trigo_sin_cosf+0x100>)
 8003376:	601a      	str	r2, [r3, #0]
        ERROR_CHECK_HAL_RET_RES(HAL_CORDIC_Configure(&hcordic, cordic_currunt));
 8003378:	4b36      	ldr	r3, [pc, #216]	@ (8003454 <trigo_sin_cosf+0xfc>)
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	4619      	mov	r1, r3
 800337e:	4837      	ldr	r0, [pc, #220]	@ (800345c <trigo_sin_cosf+0x104>)
 8003380:	f001 fd8a 	bl	8004e98 <HAL_CORDIC_Configure>
 8003384:	4603      	mov	r3, r0
 8003386:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f
 800338a:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 800338e:	2b00      	cmp	r3, #0
 8003390:	d00a      	beq.n	80033a8 <trigo_sin_cosf+0x50>
 8003392:	f997 103f 	ldrsb.w	r1, [r7, #63]	@ 0x3f
 8003396:	68fb      	ldr	r3, [r7, #12]
 8003398:	461a      	mov	r2, r3
 800339a:	2300      	movs	r3, #0
 800339c:	6013      	str	r3, [r2, #0]
 800339e:	6053      	str	r3, [r2, #4]
 80033a0:	68fb      	ldr	r3, [r7, #12]
 80033a2:	460a      	mov	r2, r1
 80033a4:	711a      	strb	r2, [r3, #4]
 80033a6:	e050      	b.n	800344a <trigo_sin_cosf+0xf2>
    }
    int32_t in[2];
    in[0] = (int32_t)((wrap_m1_1pi(theta) / PI) * 2147483648.0f);
 80033a8:	ed97 0a02 	vldr	s0, [r7, #8]
 80033ac:	f7fe fc34 	bl	8001c18 <wrap_m1_1pi>
 80033b0:	eeb0 7a40 	vmov.f32	s14, s0
 80033b4:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8003460 <trigo_sin_cosf+0x108>
 80033b8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80033bc:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 8003464 <trigo_sin_cosf+0x10c>
 80033c0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80033c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80033c8:	ee17 3a90 	vmov	r3, s15
 80033cc:	637b      	str	r3, [r7, #52]	@ 0x34
    in[1] = 0x7FFFFFFF;
 80033ce:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 80033d2:	63bb      	str	r3, [r7, #56]	@ 0x38
    int32_t out[2];
    ERROR_CHECK_HAL_RET_RES(HAL_CORDIC_Calculate(&hcordic, in, out, 1, HAL_MAX_DELAY));
 80033d4:	f107 022c 	add.w	r2, r7, #44	@ 0x2c
 80033d8:	f107 0134 	add.w	r1, r7, #52	@ 0x34
 80033dc:	f04f 33ff 	mov.w	r3, #4294967295
 80033e0:	9300      	str	r3, [sp, #0]
 80033e2:	2301      	movs	r3, #1
 80033e4:	481d      	ldr	r0, [pc, #116]	@ (800345c <trigo_sin_cosf+0x104>)
 80033e6:	f001 fd93 	bl	8004f10 <HAL_CORDIC_Calculate>
 80033ea:	4603      	mov	r3, r0
 80033ec:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e
 80033f0:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 80033f4:	2b00      	cmp	r3, #0
 80033f6:	d00a      	beq.n	800340e <trigo_sin_cosf+0xb6>
 80033f8:	f997 103e 	ldrsb.w	r1, [r7, #62]	@ 0x3e
 80033fc:	68fb      	ldr	r3, [r7, #12]
 80033fe:	461a      	mov	r2, r3
 8003400:	2300      	movs	r3, #0
 8003402:	6013      	str	r3, [r2, #0]
 8003404:	6053      	str	r3, [r2, #4]
 8003406:	68fb      	ldr	r3, [r7, #12]
 8003408:	460a      	mov	r2, r1
 800340a:	711a      	strb	r2, [r3, #4]
 800340c:	e01d      	b.n	800344a <trigo_sin_cosf+0xf2>
    *sin = (float32_t)out[0] / 2147483648.0f;
 800340e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003410:	ee07 3a90 	vmov	s15, r3
 8003414:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003418:	eddf 6a12 	vldr	s13, [pc, #72]	@ 8003464 <trigo_sin_cosf+0x10c>
 800341c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	edc3 7a00 	vstr	s15, [r3]
    *cos = (float32_t)out[1] / 2147483648.0f;
 8003426:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003428:	ee07 3a90 	vmov	s15, r3
 800342c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003430:	eddf 6a0c 	vldr	s13, [pc, #48]	@ 8003464 <trigo_sin_cosf+0x10c>
 8003434:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8003438:	683b      	ldr	r3, [r7, #0]
 800343a:	edc3 7a00 	vstr	s15, [r3]
    return RESULT_OK(NULL);
 800343e:	68fb      	ldr	r3, [r7, #12]
 8003440:	2201      	movs	r2, #1
 8003442:	701a      	strb	r2, [r3, #0]
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	2200      	movs	r2, #0
 8003448:	605a      	str	r2, [r3, #4]
}
 800344a:	68f8      	ldr	r0, [r7, #12]
 800344c:	3740      	adds	r7, #64	@ 0x40
 800344e:	46bd      	mov	sp, r7
 8003450:	bd80      	pop	{r7, pc}
 8003452:	bf00      	nop
 8003454:	200009e4 	.word	0x200009e4
 8003458:	200001f8 	.word	0x200001f8
 800345c:	20000394 	.word	0x20000394
 8003460:	40490fdb 	.word	0x40490fdb
 8003464:	4f000000 	.word	0x4f000000

08003468 <trigo_atan>:

Result trigo_atan(float32_t x, float32_t y, float32_t *theta)
{
 8003468:	b580      	push	{r7, lr}
 800346a:	b098      	sub	sp, #96	@ 0x60
 800346c:	af02      	add	r7, sp, #8
 800346e:	60f8      	str	r0, [r7, #12]
 8003470:	ed87 0a02 	vstr	s0, [r7, #8]
 8003474:	edc7 0a01 	vstr	s1, [r7, #4]
 8003478:	6039      	str	r1, [r7, #0]
    if (cordic_currunt != &cordic_cfg_atan)
 800347a:	4b59      	ldr	r3, [pc, #356]	@ (80035e0 <trigo_atan+0x178>)
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	4a59      	ldr	r2, [pc, #356]	@ (80035e4 <trigo_atan+0x17c>)
 8003480:	4293      	cmp	r3, r2
 8003482:	d01a      	beq.n	80034ba <trigo_atan+0x52>
    {
        cordic_currunt = &cordic_cfg_atan;
 8003484:	4b56      	ldr	r3, [pc, #344]	@ (80035e0 <trigo_atan+0x178>)
 8003486:	4a57      	ldr	r2, [pc, #348]	@ (80035e4 <trigo_atan+0x17c>)
 8003488:	601a      	str	r2, [r3, #0]
        ERROR_CHECK_HAL_RET_RES(HAL_CORDIC_Configure(&hcordic, cordic_currunt));
 800348a:	4b55      	ldr	r3, [pc, #340]	@ (80035e0 <trigo_atan+0x178>)
 800348c:	681b      	ldr	r3, [r3, #0]
 800348e:	4619      	mov	r1, r3
 8003490:	4855      	ldr	r0, [pc, #340]	@ (80035e8 <trigo_atan+0x180>)
 8003492:	f001 fd01 	bl	8004e98 <HAL_CORDIC_Configure>
 8003496:	4603      	mov	r3, r0
 8003498:	f887 3053 	strb.w	r3, [r7, #83]	@ 0x53
 800349c:	f897 3053 	ldrb.w	r3, [r7, #83]	@ 0x53
 80034a0:	2b00      	cmp	r3, #0
 80034a2:	d00a      	beq.n	80034ba <trigo_atan+0x52>
 80034a4:	f997 1053 	ldrsb.w	r1, [r7, #83]	@ 0x53
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	461a      	mov	r2, r3
 80034ac:	2300      	movs	r3, #0
 80034ae:	6013      	str	r3, [r2, #0]
 80034b0:	6053      	str	r3, [r2, #4]
 80034b2:	68fb      	ldr	r3, [r7, #12]
 80034b4:	460a      	mov	r2, r1
 80034b6:	711a      	strb	r2, [r3, #4]
 80034b8:	e08e      	b.n	80035d8 <trigo_atan+0x170>
    }
    float32_t ax = fast_fabsf(x);
 80034ba:	ed97 0a02 	vldr	s0, [r7, #8]
 80034be:	f7fe fbfd 	bl	8001cbc <fast_fabsf>
 80034c2:	ed87 0a13 	vstr	s0, [r7, #76]	@ 0x4c
    float32_t ay = fast_fabsf(y);
 80034c6:	ed97 0a01 	vldr	s0, [r7, #4]
 80034ca:	f7fe fbf7 	bl	8001cbc <fast_fabsf>
 80034ce:	ed87 0a12 	vstr	s0, [r7, #72]	@ 0x48
    float32_t norm = (ax > ay) ? ax : ay;
 80034d2:	ed97 7a13 	vldr	s14, [r7, #76]	@ 0x4c
 80034d6:	edd7 7a12 	vldr	s15, [r7, #72]	@ 0x48
 80034da:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80034de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80034e2:	dd01      	ble.n	80034e8 <trigo_atan+0x80>
 80034e4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80034e6:	e000      	b.n	80034ea <trigo_atan+0x82>
 80034e8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80034ea:	647b      	str	r3, [r7, #68]	@ 0x44
    if (norm == 0.0f) return RESULT_ERROR(RES_ERR_DIV_0);
 80034ec:	edd7 7a11 	vldr	s15, [r7, #68]	@ 0x44
 80034f0:	eef5 7a40 	vcmp.f32	s15, #0.0
 80034f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80034f8:	d108      	bne.n	800350c <trigo_atan+0xa4>
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	461a      	mov	r2, r3
 80034fe:	2300      	movs	r3, #0
 8003500:	6013      	str	r3, [r2, #0]
 8003502:	6053      	str	r3, [r2, #4]
 8003504:	68fb      	ldr	r3, [r7, #12]
 8003506:	220b      	movs	r2, #11
 8003508:	711a      	strb	r2, [r3, #4]
 800350a:	e065      	b.n	80035d8 <trigo_atan+0x170>
    x /= norm;
 800350c:	edd7 6a02 	vldr	s13, [r7, #8]
 8003510:	ed97 7a11 	vldr	s14, [r7, #68]	@ 0x44
 8003514:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003518:	edc7 7a02 	vstr	s15, [r7, #8]
    y /= norm;
 800351c:	edd7 6a01 	vldr	s13, [r7, #4]
 8003520:	ed97 7a11 	vldr	s14, [r7, #68]	@ 0x44
 8003524:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003528:	edc7 7a01 	vstr	s15, [r7, #4]
    int32_t in[2], out;
    in[0] = (int32_t)(x * 2147483648.0f);  
 800352c:	edd7 7a02 	vldr	s15, [r7, #8]
 8003530:	ed9f 7a2e 	vldr	s14, [pc, #184]	@ 80035ec <trigo_atan+0x184>
 8003534:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003538:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800353c:	ee17 3a90 	vmov	r3, s15
 8003540:	63bb      	str	r3, [r7, #56]	@ 0x38
    in[1] = (int32_t)(y * 2147483648.0f);
 8003542:	edd7 7a01 	vldr	s15, [r7, #4]
 8003546:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 80035ec <trigo_atan+0x184>
 800354a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800354e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003552:	ee17 3a90 	vmov	r3, s15
 8003556:	63fb      	str	r3, [r7, #60]	@ 0x3c
    ERROR_CHECK_HAL_RET_RES(HAL_CORDIC_Calculate(&hcordic, in, &out, 1, HAL_MAX_DELAY));
 8003558:	f107 0234 	add.w	r2, r7, #52	@ 0x34
 800355c:	f107 0138 	add.w	r1, r7, #56	@ 0x38
 8003560:	f04f 33ff 	mov.w	r3, #4294967295
 8003564:	9300      	str	r3, [sp, #0]
 8003566:	2301      	movs	r3, #1
 8003568:	481f      	ldr	r0, [pc, #124]	@ (80035e8 <trigo_atan+0x180>)
 800356a:	f001 fcd1 	bl	8004f10 <HAL_CORDIC_Calculate>
 800356e:	4603      	mov	r3, r0
 8003570:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8003574:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 8003578:	2b00      	cmp	r3, #0
 800357a:	d00a      	beq.n	8003592 <trigo_atan+0x12a>
 800357c:	f997 1043 	ldrsb.w	r1, [r7, #67]	@ 0x43
 8003580:	68fb      	ldr	r3, [r7, #12]
 8003582:	461a      	mov	r2, r3
 8003584:	2300      	movs	r3, #0
 8003586:	6013      	str	r3, [r2, #0]
 8003588:	6053      	str	r3, [r2, #4]
 800358a:	68fb      	ldr	r3, [r7, #12]
 800358c:	460a      	mov	r2, r1
 800358e:	711a      	strb	r2, [r3, #4]
 8003590:	e022      	b.n	80035d8 <trigo_atan+0x170>
    float32_t angle = (float32_t)out / 2147483648.0f; // [-π, π)
 8003592:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003594:	ee07 3a90 	vmov	s15, r3
 8003598:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800359c:	eddf 6a13 	vldr	s13, [pc, #76]	@ 80035ec <trigo_atan+0x184>
 80035a0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80035a4:	edc7 7a15 	vstr	s15, [r7, #84]	@ 0x54
    if (angle < 0) angle += MUL_2_PI;
 80035a8:	edd7 7a15 	vldr	s15, [r7, #84]	@ 0x54
 80035ac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80035b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035b4:	d507      	bpl.n	80035c6 <trigo_atan+0x15e>
 80035b6:	edd7 7a15 	vldr	s15, [r7, #84]	@ 0x54
 80035ba:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 80035f0 <trigo_atan+0x188>
 80035be:	ee77 7a87 	vadd.f32	s15, s15, s14
 80035c2:	edc7 7a15 	vstr	s15, [r7, #84]	@ 0x54
    *theta = angle;
 80035c6:	683b      	ldr	r3, [r7, #0]
 80035c8:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 80035ca:	601a      	str	r2, [r3, #0]
    return RESULT_OK(NULL);
 80035cc:	68fb      	ldr	r3, [r7, #12]
 80035ce:	2201      	movs	r2, #1
 80035d0:	701a      	strb	r2, [r3, #0]
 80035d2:	68fb      	ldr	r3, [r7, #12]
 80035d4:	2200      	movs	r2, #0
 80035d6:	605a      	str	r2, [r3, #4]
}
 80035d8:	68f8      	ldr	r0, [r7, #12]
 80035da:	3758      	adds	r7, #88	@ 0x58
 80035dc:	46bd      	mov	sp, r7
 80035de:	bd80      	pop	{r7, pc}
 80035e0:	200009e4 	.word	0x200009e4
 80035e4:	20000214 	.word	0x20000214
 80035e8:	20000394 	.word	0x20000394
 80035ec:	4f000000 	.word	0x4f000000
 80035f0:	40c90fdb 	.word	0x40c90fdb

080035f4 <Reset_Handler>:
 80035f4:	480d      	ldr	r0, [pc, #52]	@ (800362c <LoopForever+0x2>)
 80035f6:	4685      	mov	sp, r0
 80035f8:	f7fd fcd6 	bl	8000fa8 <SystemInit>
 80035fc:	480c      	ldr	r0, [pc, #48]	@ (8003630 <LoopForever+0x6>)
 80035fe:	490d      	ldr	r1, [pc, #52]	@ (8003634 <LoopForever+0xa>)
 8003600:	4a0d      	ldr	r2, [pc, #52]	@ (8003638 <LoopForever+0xe>)
 8003602:	2300      	movs	r3, #0
 8003604:	e002      	b.n	800360c <LoopCopyDataInit>

08003606 <CopyDataInit>:
 8003606:	58d4      	ldr	r4, [r2, r3]
 8003608:	50c4      	str	r4, [r0, r3]
 800360a:	3304      	adds	r3, #4

0800360c <LoopCopyDataInit>:
 800360c:	18c4      	adds	r4, r0, r3
 800360e:	428c      	cmp	r4, r1
 8003610:	d3f9      	bcc.n	8003606 <CopyDataInit>
 8003612:	4a0a      	ldr	r2, [pc, #40]	@ (800363c <LoopForever+0x12>)
 8003614:	4c0a      	ldr	r4, [pc, #40]	@ (8003640 <LoopForever+0x16>)
 8003616:	2300      	movs	r3, #0
 8003618:	e001      	b.n	800361e <LoopFillZerobss>

0800361a <FillZerobss>:
 800361a:	6013      	str	r3, [r2, #0]
 800361c:	3204      	adds	r2, #4

0800361e <LoopFillZerobss>:
 800361e:	42a2      	cmp	r2, r4
 8003620:	d3fb      	bcc.n	800361a <FillZerobss>
 8003622:	f009 f8bd 	bl	800c7a0 <__libc_init_array>
 8003626:	f7fd fb0b 	bl	8000c40 <main>

0800362a <LoopForever>:
 800362a:	e7fe      	b.n	800362a <LoopForever>
 800362c:	20008000 	.word	0x20008000
 8003630:	20000000 	.word	0x20000000
 8003634:	200002a0 	.word	0x200002a0
 8003638:	0800ca34 	.word	0x0800ca34
 800363c:	200002a0 	.word	0x200002a0
 8003640:	200025b0 	.word	0x200025b0

08003644 <ADC1_2_IRQHandler>:
 8003644:	e7fe      	b.n	8003644 <ADC1_2_IRQHandler>
	...

08003648 <BSP_LED_Init>:
  *         This parameter can be one of following parameters:
  *           @arg  LED2
  * @retval BSP status
  */
int32_t BSP_LED_Init(Led_TypeDef Led)
{
 8003648:	b580      	push	{r7, lr}
 800364a:	b088      	sub	sp, #32
 800364c:	af00      	add	r7, sp, #0
 800364e:	4603      	mov	r3, r0
 8003650:	71fb      	strb	r3, [r7, #7]
  GPIO_InitTypeDef  gpio_init_structure;

  /* Enable the GPIO LED Clock */
  LED2_GPIO_CLK_ENABLE();
 8003652:	4b16      	ldr	r3, [pc, #88]	@ (80036ac <BSP_LED_Init+0x64>)
 8003654:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003656:	4a15      	ldr	r2, [pc, #84]	@ (80036ac <BSP_LED_Init+0x64>)
 8003658:	f043 0301 	orr.w	r3, r3, #1
 800365c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800365e:	4b13      	ldr	r3, [pc, #76]	@ (80036ac <BSP_LED_Init+0x64>)
 8003660:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003662:	f003 0301 	and.w	r3, r3, #1
 8003666:	60bb      	str	r3, [r7, #8]
 8003668:	68bb      	ldr	r3, [r7, #8]

  /* Configure the GPIO_LED pin */
  gpio_init_structure.Pin   = LED_PIN[Led];
 800366a:	2320      	movs	r3, #32
 800366c:	60fb      	str	r3, [r7, #12]
  gpio_init_structure.Mode  = GPIO_MODE_OUTPUT_PP;
 800366e:	2301      	movs	r3, #1
 8003670:	613b      	str	r3, [r7, #16]
  gpio_init_structure.Pull  = GPIO_NOPULL;
 8003672:	2300      	movs	r3, #0
 8003674:	617b      	str	r3, [r7, #20]
  gpio_init_structure.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003676:	2303      	movs	r3, #3
 8003678:	61bb      	str	r3, [r7, #24]

  HAL_GPIO_Init(LED_PORT[Led], &gpio_init_structure);
 800367a:	79fb      	ldrb	r3, [r7, #7]
 800367c:	4a0c      	ldr	r2, [pc, #48]	@ (80036b0 <BSP_LED_Init+0x68>)
 800367e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003682:	f107 020c 	add.w	r2, r7, #12
 8003686:	4611      	mov	r1, r2
 8003688:	4618      	mov	r0, r3
 800368a:	f002 fd71 	bl	8006170 <HAL_GPIO_Init>
  HAL_GPIO_WritePin(LED_PORT[Led], LED_PIN[Led], GPIO_PIN_RESET);
 800368e:	79fb      	ldrb	r3, [r7, #7]
 8003690:	4a07      	ldr	r2, [pc, #28]	@ (80036b0 <BSP_LED_Init+0x68>)
 8003692:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003696:	2120      	movs	r1, #32
 8003698:	2200      	movs	r2, #0
 800369a:	4618      	mov	r0, r3
 800369c:	f002 feea 	bl	8006474 <HAL_GPIO_WritePin>

  return BSP_ERROR_NONE;
 80036a0:	2300      	movs	r3, #0
}
 80036a2:	4618      	mov	r0, r3
 80036a4:	3720      	adds	r7, #32
 80036a6:	46bd      	mov	sp, r7
 80036a8:	bd80      	pop	{r7, pc}
 80036aa:	bf00      	nop
 80036ac:	40021000 	.word	0x40021000
 80036b0:	20000230 	.word	0x20000230

080036b4 <BSP_PB_Init>:
  *           @arg BUTTON_MODE_EXTI: Button will be connected to EXTI line
  *                                  with interrupt generation capability
  * @retval BSP status
  */
int32_t BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef ButtonMode)
{
 80036b4:	b580      	push	{r7, lr}
 80036b6:	b088      	sub	sp, #32
 80036b8:	af00      	add	r7, sp, #0
 80036ba:	4603      	mov	r3, r0
 80036bc:	460a      	mov	r2, r1
 80036be:	71fb      	strb	r3, [r7, #7]
 80036c0:	4613      	mov	r3, r2
 80036c2:	71bb      	strb	r3, [r7, #6]
  static BSP_EXTI_LineCallback ButtonCallback[BUTTONn] = {BUTTON_USER_EXTI_Callback};
  static uint32_t BSP_BUTTON_PRIO [BUTTONn] = {BSP_BUTTON_USER_IT_PRIORITY};
  static const uint32_t BUTTON_EXTI_LINE[BUTTONn] = {USER_BUTTON_EXTI_LINE};

  /* Enable the BUTTON Clock */
  USER_BUTTON_GPIO_CLK_ENABLE();
 80036c4:	4b2c      	ldr	r3, [pc, #176]	@ (8003778 <BSP_PB_Init+0xc4>)
 80036c6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80036c8:	4a2b      	ldr	r2, [pc, #172]	@ (8003778 <BSP_PB_Init+0xc4>)
 80036ca:	f043 0304 	orr.w	r3, r3, #4
 80036ce:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80036d0:	4b29      	ldr	r3, [pc, #164]	@ (8003778 <BSP_PB_Init+0xc4>)
 80036d2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80036d4:	f003 0304 	and.w	r3, r3, #4
 80036d8:	60bb      	str	r3, [r7, #8]
 80036da:	68bb      	ldr	r3, [r7, #8]

  gpio_init_structure.Pin = BUTTON_PIN[Button];
 80036dc:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80036e0:	60fb      	str	r3, [r7, #12]
  gpio_init_structure.Pull = GPIO_PULLDOWN;
 80036e2:	2302      	movs	r3, #2
 80036e4:	617b      	str	r3, [r7, #20]
  gpio_init_structure.Speed = GPIO_SPEED_FREQ_HIGH;
 80036e6:	2302      	movs	r3, #2
 80036e8:	61bb      	str	r3, [r7, #24]

  if(ButtonMode == BUTTON_MODE_GPIO)
 80036ea:	79bb      	ldrb	r3, [r7, #6]
 80036ec:	2b00      	cmp	r3, #0
 80036ee:	d10c      	bne.n	800370a <BSP_PB_Init+0x56>
  {
    /* Configure Button pin as input */
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 80036f0:	2300      	movs	r3, #0
 80036f2:	613b      	str	r3, [r7, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80036f4:	79fb      	ldrb	r3, [r7, #7]
 80036f6:	4a21      	ldr	r2, [pc, #132]	@ (800377c <BSP_PB_Init+0xc8>)
 80036f8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80036fc:	f107 020c 	add.w	r2, r7, #12
 8003700:	4611      	mov	r1, r2
 8003702:	4618      	mov	r0, r3
 8003704:	f002 fd34 	bl	8006170 <HAL_GPIO_Init>
 8003708:	e031      	b.n	800376e <BSP_PB_Init+0xba>
  }
  else /* (ButtonMode == BUTTON_MODE_EXTI) */
  {
    /* Configure Button pin as input with External interrupt */
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 800370a:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 800370e:	613b      	str	r3, [r7, #16]

    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003710:	79fb      	ldrb	r3, [r7, #7]
 8003712:	4a1a      	ldr	r2, [pc, #104]	@ (800377c <BSP_PB_Init+0xc8>)
 8003714:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003718:	f107 020c 	add.w	r2, r7, #12
 800371c:	4611      	mov	r1, r2
 800371e:	4618      	mov	r0, r3
 8003720:	f002 fd26 	bl	8006170 <HAL_GPIO_Init>

    (void)HAL_EXTI_GetHandle(&hpb_exti[Button], BUTTON_EXTI_LINE[Button]);
 8003724:	79fb      	ldrb	r3, [r7, #7]
 8003726:	00db      	lsls	r3, r3, #3
 8003728:	4a15      	ldr	r2, [pc, #84]	@ (8003780 <BSP_PB_Init+0xcc>)
 800372a:	441a      	add	r2, r3
 800372c:	79fb      	ldrb	r3, [r7, #7]
 800372e:	4915      	ldr	r1, [pc, #84]	@ (8003784 <BSP_PB_Init+0xd0>)
 8003730:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8003734:	4619      	mov	r1, r3
 8003736:	4610      	mov	r0, r2
 8003738:	f002 f825 	bl	8005786 <HAL_EXTI_GetHandle>
    (void)HAL_EXTI_RegisterCallback(&hpb_exti[Button],  HAL_EXTI_COMMON_CB_ID, ButtonCallback[Button]);
 800373c:	79fb      	ldrb	r3, [r7, #7]
 800373e:	00db      	lsls	r3, r3, #3
 8003740:	4a0f      	ldr	r2, [pc, #60]	@ (8003780 <BSP_PB_Init+0xcc>)
 8003742:	1898      	adds	r0, r3, r2
 8003744:	79fb      	ldrb	r3, [r7, #7]
 8003746:	4a10      	ldr	r2, [pc, #64]	@ (8003788 <BSP_PB_Init+0xd4>)
 8003748:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800374c:	461a      	mov	r2, r3
 800374e:	2100      	movs	r1, #0
 8003750:	f001 fffc 	bl	800574c <HAL_EXTI_RegisterCallback>

    /* Enable and set Button EXTI Interrupt to the lowest priority */
    HAL_NVIC_SetPriority((BUTTON_IRQn[Button]), BSP_BUTTON_PRIO[Button], 0x00);
 8003754:	2028      	movs	r0, #40	@ 0x28
 8003756:	79fb      	ldrb	r3, [r7, #7]
 8003758:	4a0c      	ldr	r2, [pc, #48]	@ (800378c <BSP_PB_Init+0xd8>)
 800375a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800375e:	2200      	movs	r2, #0
 8003760:	4619      	mov	r1, r3
 8003762:	f001 fd59 	bl	8005218 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((BUTTON_IRQn[Button]));
 8003766:	2328      	movs	r3, #40	@ 0x28
 8003768:	4618      	mov	r0, r3
 800376a:	f001 fd6f 	bl	800524c <HAL_NVIC_EnableIRQ>
  }

  return BSP_ERROR_NONE;
 800376e:	2300      	movs	r3, #0
}
 8003770:	4618      	mov	r0, r3
 8003772:	3720      	adds	r7, #32
 8003774:	46bd      	mov	sp, r7
 8003776:	bd80      	pop	{r7, pc}
 8003778:	40021000 	.word	0x40021000
 800377c:	20000234 	.word	0x20000234
 8003780:	200009e8 	.word	0x200009e8
 8003784:	0800c9f8 	.word	0x0800c9f8
 8003788:	2000023c 	.word	0x2000023c
 800378c:	20000240 	.word	0x20000240

08003790 <BSP_PB_IRQHandler>:
  * @brief  This function handles Push-Button interrupt requests.
  * @param  Button Specifies the pin connected EXTI line
  * @retval None
  */
void BSP_PB_IRQHandler(Button_TypeDef Button)
{
 8003790:	b580      	push	{r7, lr}
 8003792:	b082      	sub	sp, #8
 8003794:	af00      	add	r7, sp, #0
 8003796:	4603      	mov	r3, r0
 8003798:	71fb      	strb	r3, [r7, #7]
  HAL_EXTI_IRQHandler(&hpb_exti[Button]);
 800379a:	79fb      	ldrb	r3, [r7, #7]
 800379c:	00db      	lsls	r3, r3, #3
 800379e:	4a04      	ldr	r2, [pc, #16]	@ (80037b0 <BSP_PB_IRQHandler+0x20>)
 80037a0:	4413      	add	r3, r2
 80037a2:	4618      	mov	r0, r3
 80037a4:	f002 f804 	bl	80057b0 <HAL_EXTI_IRQHandler>
}
 80037a8:	bf00      	nop
 80037aa:	3708      	adds	r7, #8
 80037ac:	46bd      	mov	sp, r7
 80037ae:	bd80      	pop	{r7, pc}
 80037b0:	200009e8 	.word	0x200009e8

080037b4 <BSP_PB_Callback>:
  * @brief  BSP Push Button callback
  * @param  Button Specifies the pin connected EXTI line
  * @retval None.
  */
__weak void BSP_PB_Callback(Button_TypeDef Button)
{
 80037b4:	b480      	push	{r7}
 80037b6:	b083      	sub	sp, #12
 80037b8:	af00      	add	r7, sp, #0
 80037ba:	4603      	mov	r3, r0
 80037bc:	71fb      	strb	r3, [r7, #7]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Button);

  /* This function should be implemented by the user application.
     It is called into this driver when an event on Button is triggered. */
}
 80037be:	bf00      	nop
 80037c0:	370c      	adds	r7, #12
 80037c2:	46bd      	mov	sp, r7
 80037c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037c8:	4770      	bx	lr
	...

080037cc <BSP_COM_Init>:
  * @param  COM_Init Pointer to a UART_HandleTypeDef structure that contains the
  *                  configuration information for the specified USART peripheral.
  * @retval BSP error code
  */
int32_t BSP_COM_Init(COM_TypeDef COM, COM_InitTypeDef *COM_Init)
{
 80037cc:	b580      	push	{r7, lr}
 80037ce:	b084      	sub	sp, #16
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	4603      	mov	r3, r0
 80037d4:	6039      	str	r1, [r7, #0]
 80037d6:	71fb      	strb	r3, [r7, #7]
  int32_t ret = BSP_ERROR_NONE;
 80037d8:	2300      	movs	r3, #0
 80037da:	60fb      	str	r3, [r7, #12]

  if(COM > COMn)
 80037dc:	79fb      	ldrb	r3, [r7, #7]
 80037de:	2b01      	cmp	r3, #1
 80037e0:	d903      	bls.n	80037ea <BSP_COM_Init+0x1e>
  {
    ret = BSP_ERROR_WRONG_PARAM;
 80037e2:	f06f 0301 	mvn.w	r3, #1
 80037e6:	60fb      	str	r3, [r7, #12]
 80037e8:	e018      	b.n	800381c <BSP_COM_Init+0x50>
  }
  else
  {
#if (USE_HAL_UART_REGISTER_CALLBACKS == 0)
    /* Init the UART Msp */
    COM1_MspInit(&hcom_uart[COM]);
 80037ea:	79fb      	ldrb	r3, [r7, #7]
 80037ec:	2294      	movs	r2, #148	@ 0x94
 80037ee:	fb02 f303 	mul.w	r3, r2, r3
 80037f2:	4a0d      	ldr	r2, [pc, #52]	@ (8003828 <BSP_COM_Init+0x5c>)
 80037f4:	4413      	add	r3, r2
 80037f6:	4618      	mov	r0, r3
 80037f8:	f000 f852 	bl	80038a0 <COM1_MspInit>
        return BSP_ERROR_MSP_FAILURE;
      }
    }
#endif

    if(MX_LPUART1_Init(&hcom_uart[COM], COM_Init) != HAL_OK)
 80037fc:	79fb      	ldrb	r3, [r7, #7]
 80037fe:	2294      	movs	r2, #148	@ 0x94
 8003800:	fb02 f303 	mul.w	r3, r2, r3
 8003804:	4a08      	ldr	r2, [pc, #32]	@ (8003828 <BSP_COM_Init+0x5c>)
 8003806:	4413      	add	r3, r2
 8003808:	6839      	ldr	r1, [r7, #0]
 800380a:	4618      	mov	r0, r3
 800380c:	f000 f80e 	bl	800382c <MX_LPUART1_Init>
 8003810:	4603      	mov	r3, r0
 8003812:	2b00      	cmp	r3, #0
 8003814:	d002      	beq.n	800381c <BSP_COM_Init+0x50>
    {
      return BSP_ERROR_PERIPH_FAILURE;
 8003816:	f06f 0303 	mvn.w	r3, #3
 800381a:	e000      	b.n	800381e <BSP_COM_Init+0x52>
    }
  }

  return ret;
 800381c:	68fb      	ldr	r3, [r7, #12]
}
 800381e:	4618      	mov	r0, r3
 8003820:	3710      	adds	r7, #16
 8003822:	46bd      	mov	sp, r7
 8003824:	bd80      	pop	{r7, pc}
 8003826:	bf00      	nop
 8003828:	200009f0 	.word	0x200009f0

0800382c <MX_LPUART1_Init>:
  * @param  COM_Init Pointer to a UART_HandleTypeDef structure that contains the
  *                  configuration information for the specified USART peripheral.
  * @retval HAL error code
  */
__weak HAL_StatusTypeDef MX_LPUART1_Init(UART_HandleTypeDef *huart, MX_UART_InitTypeDef *COM_Init)
{
 800382c:	b580      	push	{r7, lr}
 800382e:	b082      	sub	sp, #8
 8003830:	af00      	add	r7, sp, #0
 8003832:	6078      	str	r0, [r7, #4]
 8003834:	6039      	str	r1, [r7, #0]
  /* USART configuration */
 huart->Instance          = COM_USART[COM1];
 8003836:	4b15      	ldr	r3, [pc, #84]	@ (800388c <MX_LPUART1_Init+0x60>)
 8003838:	681a      	ldr	r2, [r3, #0]
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	601a      	str	r2, [r3, #0]
 huart->Init.BaudRate     = COM_Init->BaudRate;
 800383e:	683b      	ldr	r3, [r7, #0]
 8003840:	681a      	ldr	r2, [r3, #0]
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	605a      	str	r2, [r3, #4]
 huart->Init.Mode         = UART_MODE_TX_RX;
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	220c      	movs	r2, #12
 800384a:	615a      	str	r2, [r3, #20]
 huart->Init.Parity       = (uint32_t)COM_Init->Parity;
 800384c:	683b      	ldr	r3, [r7, #0]
 800384e:	895b      	ldrh	r3, [r3, #10]
 8003850:	461a      	mov	r2, r3
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	611a      	str	r2, [r3, #16]
 huart->Init.WordLength   = COM_Init->WordLength;
 8003856:	683b      	ldr	r3, [r7, #0]
 8003858:	685a      	ldr	r2, [r3, #4]
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	609a      	str	r2, [r3, #8]
 huart->Init.StopBits     = (uint32_t)COM_Init->StopBits;
 800385e:	683b      	ldr	r3, [r7, #0]
 8003860:	891b      	ldrh	r3, [r3, #8]
 8003862:	461a      	mov	r2, r3
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	60da      	str	r2, [r3, #12]
 huart->Init.HwFlowCtl    = (uint32_t)COM_Init->HwFlowCtl;
 8003868:	683b      	ldr	r3, [r7, #0]
 800386a:	899b      	ldrh	r3, [r3, #12]
 800386c:	461a      	mov	r2, r3
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	619a      	str	r2, [r3, #24]
 huart->Init.OverSampling = UART_OVERSAMPLING_8;
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8003878:	61da      	str	r2, [r3, #28]

 return HAL_UART_Init(huart);
 800387a:	6878      	ldr	r0, [r7, #4]
 800387c:	f005 fa9a 	bl	8008db4 <HAL_UART_Init>
 8003880:	4603      	mov	r3, r0
}
 8003882:	4618      	mov	r0, r3
 8003884:	3708      	adds	r7, #8
 8003886:	46bd      	mov	sp, r7
 8003888:	bd80      	pop	{r7, pc}
 800388a:	bf00      	nop
 800388c:	20000238 	.word	0x20000238

08003890 <BUTTON_USER_EXTI_Callback>:
/**
  * @brief  Key EXTI line detection callbacks.
  * @retval BSP status
  */
static void BUTTON_USER_EXTI_Callback(void)
{
 8003890:	b580      	push	{r7, lr}
 8003892:	af00      	add	r7, sp, #0
  BSP_PB_Callback(BUTTON_USER);
 8003894:	2000      	movs	r0, #0
 8003896:	f7ff ff8d 	bl	80037b4 <BSP_PB_Callback>
}
 800389a:	bf00      	nop
 800389c:	bd80      	pop	{r7, pc}
	...

080038a0 <COM1_MspInit>:
  * @brief  Initializes COM1 MSP.
  * @param  huart UART handle
  * @retval BSP status
  */
static void COM1_MspInit(UART_HandleTypeDef *huart)
{
 80038a0:	b580      	push	{r7, lr}
 80038a2:	b08a      	sub	sp, #40	@ 0x28
 80038a4:	af00      	add	r7, sp, #0
 80038a6:	6078      	str	r0, [r7, #4]

  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);

  /* Enable GPIO clock */
  COM1_TX_GPIO_CLK_ENABLE();
 80038a8:	4b22      	ldr	r3, [pc, #136]	@ (8003934 <COM1_MspInit+0x94>)
 80038aa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80038ac:	4a21      	ldr	r2, [pc, #132]	@ (8003934 <COM1_MspInit+0x94>)
 80038ae:	f043 0301 	orr.w	r3, r3, #1
 80038b2:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80038b4:	4b1f      	ldr	r3, [pc, #124]	@ (8003934 <COM1_MspInit+0x94>)
 80038b6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80038b8:	f003 0301 	and.w	r3, r3, #1
 80038bc:	613b      	str	r3, [r7, #16]
 80038be:	693b      	ldr	r3, [r7, #16]
  COM1_RX_GPIO_CLK_ENABLE();
 80038c0:	4b1c      	ldr	r3, [pc, #112]	@ (8003934 <COM1_MspInit+0x94>)
 80038c2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80038c4:	4a1b      	ldr	r2, [pc, #108]	@ (8003934 <COM1_MspInit+0x94>)
 80038c6:	f043 0301 	orr.w	r3, r3, #1
 80038ca:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80038cc:	4b19      	ldr	r3, [pc, #100]	@ (8003934 <COM1_MspInit+0x94>)
 80038ce:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80038d0:	f003 0301 	and.w	r3, r3, #1
 80038d4:	60fb      	str	r3, [r7, #12]
 80038d6:	68fb      	ldr	r3, [r7, #12]

  /* Enable USART clock */
  COM1_CLK_ENABLE();
 80038d8:	4b16      	ldr	r3, [pc, #88]	@ (8003934 <COM1_MspInit+0x94>)
 80038da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038dc:	4a15      	ldr	r2, [pc, #84]	@ (8003934 <COM1_MspInit+0x94>)
 80038de:	f043 0301 	orr.w	r3, r3, #1
 80038e2:	65d3      	str	r3, [r2, #92]	@ 0x5c
 80038e4:	4b13      	ldr	r3, [pc, #76]	@ (8003934 <COM1_MspInit+0x94>)
 80038e6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038e8:	f003 0301 	and.w	r3, r3, #1
 80038ec:	60bb      	str	r3, [r7, #8]
 80038ee:	68bb      	ldr	r3, [r7, #8]

  /* Configure USART Tx as alternate function */
  gpio_init_structure.Pin       = COM1_TX_PIN;
 80038f0:	2304      	movs	r3, #4
 80038f2:	617b      	str	r3, [r7, #20]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80038f4:	2302      	movs	r3, #2
 80038f6:	61bb      	str	r3, [r7, #24]
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_HIGH;
 80038f8:	2302      	movs	r3, #2
 80038fa:	623b      	str	r3, [r7, #32]
  gpio_init_structure.Pull      = GPIO_PULLUP;
 80038fc:	2301      	movs	r3, #1
 80038fe:	61fb      	str	r3, [r7, #28]
  gpio_init_structure.Alternate = COM1_TX_AF;
 8003900:	230c      	movs	r3, #12
 8003902:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(COM1_TX_GPIO_PORT, &gpio_init_structure);
 8003904:	f107 0314 	add.w	r3, r7, #20
 8003908:	4619      	mov	r1, r3
 800390a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800390e:	f002 fc2f 	bl	8006170 <HAL_GPIO_Init>

  /* Configure USART Rx as alternate function */
  gpio_init_structure.Pin = COM1_RX_PIN;
 8003912:	2308      	movs	r3, #8
 8003914:	617b      	str	r3, [r7, #20]
  gpio_init_structure.Mode = GPIO_MODE_AF_PP;
 8003916:	2302      	movs	r3, #2
 8003918:	61bb      	str	r3, [r7, #24]
  gpio_init_structure.Alternate = COM1_RX_AF;
 800391a:	230c      	movs	r3, #12
 800391c:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(COM1_RX_GPIO_PORT, &gpio_init_structure);
 800391e:	f107 0314 	add.w	r3, r7, #20
 8003922:	4619      	mov	r1, r3
 8003924:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8003928:	f002 fc22 	bl	8006170 <HAL_GPIO_Init>
}
 800392c:	bf00      	nop
 800392e:	3728      	adds	r7, #40	@ 0x28
 8003930:	46bd      	mov	sp, r7
 8003932:	bd80      	pop	{r7, pc}
 8003934:	40021000 	.word	0x40021000

08003938 <HAL_Init>:
 8003938:	b580      	push	{r7, lr}
 800393a:	b082      	sub	sp, #8
 800393c:	af00      	add	r7, sp, #0
 800393e:	2300      	movs	r3, #0
 8003940:	71fb      	strb	r3, [r7, #7]
 8003942:	2003      	movs	r0, #3
 8003944:	f001 fc5d 	bl	8005202 <HAL_NVIC_SetPriorityGrouping>
 8003948:	200f      	movs	r0, #15
 800394a:	f7fd fa4b 	bl	8000de4 <HAL_InitTick>
 800394e:	4603      	mov	r3, r0
 8003950:	2b00      	cmp	r3, #0
 8003952:	d002      	beq.n	800395a <HAL_Init+0x22>
 8003954:	2301      	movs	r3, #1
 8003956:	71fb      	strb	r3, [r7, #7]
 8003958:	e001      	b.n	800395e <HAL_Init+0x26>
 800395a:	f7fd fa19 	bl	8000d90 <HAL_MspInit>
 800395e:	79fb      	ldrb	r3, [r7, #7]
 8003960:	4618      	mov	r0, r3
 8003962:	3708      	adds	r7, #8
 8003964:	46bd      	mov	sp, r7
 8003966:	bd80      	pop	{r7, pc}

08003968 <HAL_IncTick>:
 8003968:	b480      	push	{r7}
 800396a:	af00      	add	r7, sp, #0
 800396c:	4b05      	ldr	r3, [pc, #20]	@ (8003984 <HAL_IncTick+0x1c>)
 800396e:	681a      	ldr	r2, [r3, #0]
 8003970:	4b05      	ldr	r3, [pc, #20]	@ (8003988 <HAL_IncTick+0x20>)
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	4413      	add	r3, r2
 8003976:	4a03      	ldr	r2, [pc, #12]	@ (8003984 <HAL_IncTick+0x1c>)
 8003978:	6013      	str	r3, [r2, #0]
 800397a:	bf00      	nop
 800397c:	46bd      	mov	sp, r7
 800397e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003982:	4770      	bx	lr
 8003984:	20000a84 	.word	0x20000a84
 8003988:	20000248 	.word	0x20000248

0800398c <HAL_GetTick>:
 800398c:	b480      	push	{r7}
 800398e:	af00      	add	r7, sp, #0
 8003990:	4b03      	ldr	r3, [pc, #12]	@ (80039a0 <HAL_GetTick+0x14>)
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	4618      	mov	r0, r3
 8003996:	46bd      	mov	sp, r7
 8003998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800399c:	4770      	bx	lr
 800399e:	bf00      	nop
 80039a0:	20000a84 	.word	0x20000a84

080039a4 <LL_ADC_SetCommonClock>:
 80039a4:	b480      	push	{r7}
 80039a6:	b083      	sub	sp, #12
 80039a8:	af00      	add	r7, sp, #0
 80039aa:	6078      	str	r0, [r7, #4]
 80039ac:	6039      	str	r1, [r7, #0]
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	689b      	ldr	r3, [r3, #8]
 80039b2:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 80039b6:	683b      	ldr	r3, [r7, #0]
 80039b8:	431a      	orrs	r2, r3
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	609a      	str	r2, [r3, #8]
 80039be:	bf00      	nop
 80039c0:	370c      	adds	r7, #12
 80039c2:	46bd      	mov	sp, r7
 80039c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039c8:	4770      	bx	lr

080039ca <LL_ADC_SetCommonPathInternalCh>:
 80039ca:	b480      	push	{r7}
 80039cc:	b083      	sub	sp, #12
 80039ce:	af00      	add	r7, sp, #0
 80039d0:	6078      	str	r0, [r7, #4]
 80039d2:	6039      	str	r1, [r7, #0]
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	689b      	ldr	r3, [r3, #8]
 80039d8:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 80039dc:	683b      	ldr	r3, [r7, #0]
 80039de:	431a      	orrs	r2, r3
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	609a      	str	r2, [r3, #8]
 80039e4:	bf00      	nop
 80039e6:	370c      	adds	r7, #12
 80039e8:	46bd      	mov	sp, r7
 80039ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039ee:	4770      	bx	lr

080039f0 <LL_ADC_GetCommonPathInternalCh>:
 80039f0:	b480      	push	{r7}
 80039f2:	b083      	sub	sp, #12
 80039f4:	af00      	add	r7, sp, #0
 80039f6:	6078      	str	r0, [r7, #4]
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	689b      	ldr	r3, [r3, #8]
 80039fc:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 8003a00:	4618      	mov	r0, r3
 8003a02:	370c      	adds	r7, #12
 8003a04:	46bd      	mov	sp, r7
 8003a06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a0a:	4770      	bx	lr

08003a0c <LL_ADC_SetOffset>:
 8003a0c:	b480      	push	{r7}
 8003a0e:	b087      	sub	sp, #28
 8003a10:	af00      	add	r7, sp, #0
 8003a12:	60f8      	str	r0, [r7, #12]
 8003a14:	60b9      	str	r1, [r7, #8]
 8003a16:	607a      	str	r2, [r7, #4]
 8003a18:	603b      	str	r3, [r7, #0]
 8003a1a:	68fb      	ldr	r3, [r7, #12]
 8003a1c:	3360      	adds	r3, #96	@ 0x60
 8003a1e:	461a      	mov	r2, r3
 8003a20:	68bb      	ldr	r3, [r7, #8]
 8003a22:	009b      	lsls	r3, r3, #2
 8003a24:	4413      	add	r3, r2
 8003a26:	617b      	str	r3, [r7, #20]
 8003a28:	697b      	ldr	r3, [r7, #20]
 8003a2a:	681a      	ldr	r2, [r3, #0]
 8003a2c:	4b08      	ldr	r3, [pc, #32]	@ (8003a50 <LL_ADC_SetOffset+0x44>)
 8003a2e:	4013      	ands	r3, r2
 8003a30:	687a      	ldr	r2, [r7, #4]
 8003a32:	f002 41f8 	and.w	r1, r2, #2080374784	@ 0x7c000000
 8003a36:	683a      	ldr	r2, [r7, #0]
 8003a38:	430a      	orrs	r2, r1
 8003a3a:	4313      	orrs	r3, r2
 8003a3c:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8003a40:	697b      	ldr	r3, [r7, #20]
 8003a42:	601a      	str	r2, [r3, #0]
 8003a44:	bf00      	nop
 8003a46:	371c      	adds	r7, #28
 8003a48:	46bd      	mov	sp, r7
 8003a4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a4e:	4770      	bx	lr
 8003a50:	03fff000 	.word	0x03fff000

08003a54 <LL_ADC_GetOffsetChannel>:
 8003a54:	b480      	push	{r7}
 8003a56:	b085      	sub	sp, #20
 8003a58:	af00      	add	r7, sp, #0
 8003a5a:	6078      	str	r0, [r7, #4]
 8003a5c:	6039      	str	r1, [r7, #0]
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	3360      	adds	r3, #96	@ 0x60
 8003a62:	461a      	mov	r2, r3
 8003a64:	683b      	ldr	r3, [r7, #0]
 8003a66:	009b      	lsls	r3, r3, #2
 8003a68:	4413      	add	r3, r2
 8003a6a:	60fb      	str	r3, [r7, #12]
 8003a6c:	68fb      	ldr	r3, [r7, #12]
 8003a6e:	681b      	ldr	r3, [r3, #0]
 8003a70:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 8003a74:	4618      	mov	r0, r3
 8003a76:	3714      	adds	r7, #20
 8003a78:	46bd      	mov	sp, r7
 8003a7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a7e:	4770      	bx	lr

08003a80 <LL_ADC_SetOffsetState>:
 8003a80:	b480      	push	{r7}
 8003a82:	b087      	sub	sp, #28
 8003a84:	af00      	add	r7, sp, #0
 8003a86:	60f8      	str	r0, [r7, #12]
 8003a88:	60b9      	str	r1, [r7, #8]
 8003a8a:	607a      	str	r2, [r7, #4]
 8003a8c:	68fb      	ldr	r3, [r7, #12]
 8003a8e:	3360      	adds	r3, #96	@ 0x60
 8003a90:	461a      	mov	r2, r3
 8003a92:	68bb      	ldr	r3, [r7, #8]
 8003a94:	009b      	lsls	r3, r3, #2
 8003a96:	4413      	add	r3, r2
 8003a98:	617b      	str	r3, [r7, #20]
 8003a9a:	697b      	ldr	r3, [r7, #20]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	431a      	orrs	r2, r3
 8003aa6:	697b      	ldr	r3, [r7, #20]
 8003aa8:	601a      	str	r2, [r3, #0]
 8003aaa:	bf00      	nop
 8003aac:	371c      	adds	r7, #28
 8003aae:	46bd      	mov	sp, r7
 8003ab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ab4:	4770      	bx	lr

08003ab6 <LL_ADC_SetOffsetSign>:
 8003ab6:	b480      	push	{r7}
 8003ab8:	b087      	sub	sp, #28
 8003aba:	af00      	add	r7, sp, #0
 8003abc:	60f8      	str	r0, [r7, #12]
 8003abe:	60b9      	str	r1, [r7, #8]
 8003ac0:	607a      	str	r2, [r7, #4]
 8003ac2:	68fb      	ldr	r3, [r7, #12]
 8003ac4:	3360      	adds	r3, #96	@ 0x60
 8003ac6:	461a      	mov	r2, r3
 8003ac8:	68bb      	ldr	r3, [r7, #8]
 8003aca:	009b      	lsls	r3, r3, #2
 8003acc:	4413      	add	r3, r2
 8003ace:	617b      	str	r3, [r7, #20]
 8003ad0:	697b      	ldr	r3, [r7, #20]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	431a      	orrs	r2, r3
 8003adc:	697b      	ldr	r3, [r7, #20]
 8003ade:	601a      	str	r2, [r3, #0]
 8003ae0:	bf00      	nop
 8003ae2:	371c      	adds	r7, #28
 8003ae4:	46bd      	mov	sp, r7
 8003ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aea:	4770      	bx	lr

08003aec <LL_ADC_SetOffsetSaturation>:
 8003aec:	b480      	push	{r7}
 8003aee:	b087      	sub	sp, #28
 8003af0:	af00      	add	r7, sp, #0
 8003af2:	60f8      	str	r0, [r7, #12]
 8003af4:	60b9      	str	r1, [r7, #8]
 8003af6:	607a      	str	r2, [r7, #4]
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	3360      	adds	r3, #96	@ 0x60
 8003afc:	461a      	mov	r2, r3
 8003afe:	68bb      	ldr	r3, [r7, #8]
 8003b00:	009b      	lsls	r3, r3, #2
 8003b02:	4413      	add	r3, r2
 8003b04:	617b      	str	r3, [r7, #20]
 8003b06:	697b      	ldr	r3, [r7, #20]
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	431a      	orrs	r2, r3
 8003b12:	697b      	ldr	r3, [r7, #20]
 8003b14:	601a      	str	r2, [r3, #0]
 8003b16:	bf00      	nop
 8003b18:	371c      	adds	r7, #28
 8003b1a:	46bd      	mov	sp, r7
 8003b1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b20:	4770      	bx	lr

08003b22 <LL_ADC_SetSamplingTimeCommonConfig>:
 8003b22:	b480      	push	{r7}
 8003b24:	b083      	sub	sp, #12
 8003b26:	af00      	add	r7, sp, #0
 8003b28:	6078      	str	r0, [r7, #4]
 8003b2a:	6039      	str	r1, [r7, #0]
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	695b      	ldr	r3, [r3, #20]
 8003b30:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8003b34:	683b      	ldr	r3, [r7, #0]
 8003b36:	431a      	orrs	r2, r3
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	615a      	str	r2, [r3, #20]
 8003b3c:	bf00      	nop
 8003b3e:	370c      	adds	r7, #12
 8003b40:	46bd      	mov	sp, r7
 8003b42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b46:	4770      	bx	lr

08003b48 <LL_ADC_REG_IsTriggerSourceSWStart>:
 8003b48:	b480      	push	{r7}
 8003b4a:	b083      	sub	sp, #12
 8003b4c:	af00      	add	r7, sp, #0
 8003b4e:	6078      	str	r0, [r7, #4]
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	68db      	ldr	r3, [r3, #12]
 8003b54:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8003b58:	2b00      	cmp	r3, #0
 8003b5a:	d101      	bne.n	8003b60 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8003b5c:	2301      	movs	r3, #1
 8003b5e:	e000      	b.n	8003b62 <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8003b60:	2300      	movs	r3, #0
 8003b62:	4618      	mov	r0, r3
 8003b64:	370c      	adds	r7, #12
 8003b66:	46bd      	mov	sp, r7
 8003b68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b6c:	4770      	bx	lr

08003b6e <LL_ADC_REG_SetSequencerRanks>:
 8003b6e:	b480      	push	{r7}
 8003b70:	b087      	sub	sp, #28
 8003b72:	af00      	add	r7, sp, #0
 8003b74:	60f8      	str	r0, [r7, #12]
 8003b76:	60b9      	str	r1, [r7, #8]
 8003b78:	607a      	str	r2, [r7, #4]
 8003b7a:	68fb      	ldr	r3, [r7, #12]
 8003b7c:	3330      	adds	r3, #48	@ 0x30
 8003b7e:	461a      	mov	r2, r3
 8003b80:	68bb      	ldr	r3, [r7, #8]
 8003b82:	0a1b      	lsrs	r3, r3, #8
 8003b84:	009b      	lsls	r3, r3, #2
 8003b86:	f003 030c 	and.w	r3, r3, #12
 8003b8a:	4413      	add	r3, r2
 8003b8c:	617b      	str	r3, [r7, #20]
 8003b8e:	697b      	ldr	r3, [r7, #20]
 8003b90:	681a      	ldr	r2, [r3, #0]
 8003b92:	68bb      	ldr	r3, [r7, #8]
 8003b94:	f003 031f 	and.w	r3, r3, #31
 8003b98:	211f      	movs	r1, #31
 8003b9a:	fa01 f303 	lsl.w	r3, r1, r3
 8003b9e:	43db      	mvns	r3, r3
 8003ba0:	401a      	ands	r2, r3
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	0e9b      	lsrs	r3, r3, #26
 8003ba6:	f003 011f 	and.w	r1, r3, #31
 8003baa:	68bb      	ldr	r3, [r7, #8]
 8003bac:	f003 031f 	and.w	r3, r3, #31
 8003bb0:	fa01 f303 	lsl.w	r3, r1, r3
 8003bb4:	431a      	orrs	r2, r3
 8003bb6:	697b      	ldr	r3, [r7, #20]
 8003bb8:	601a      	str	r2, [r3, #0]
 8003bba:	bf00      	nop
 8003bbc:	371c      	adds	r7, #28
 8003bbe:	46bd      	mov	sp, r7
 8003bc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bc4:	4770      	bx	lr

08003bc6 <LL_ADC_SetChannelSamplingTime>:
 8003bc6:	b480      	push	{r7}
 8003bc8:	b087      	sub	sp, #28
 8003bca:	af00      	add	r7, sp, #0
 8003bcc:	60f8      	str	r0, [r7, #12]
 8003bce:	60b9      	str	r1, [r7, #8]
 8003bd0:	607a      	str	r2, [r7, #4]
 8003bd2:	68fb      	ldr	r3, [r7, #12]
 8003bd4:	3314      	adds	r3, #20
 8003bd6:	461a      	mov	r2, r3
 8003bd8:	68bb      	ldr	r3, [r7, #8]
 8003bda:	0e5b      	lsrs	r3, r3, #25
 8003bdc:	009b      	lsls	r3, r3, #2
 8003bde:	f003 0304 	and.w	r3, r3, #4
 8003be2:	4413      	add	r3, r2
 8003be4:	617b      	str	r3, [r7, #20]
 8003be6:	697b      	ldr	r3, [r7, #20]
 8003be8:	681a      	ldr	r2, [r3, #0]
 8003bea:	68bb      	ldr	r3, [r7, #8]
 8003bec:	0d1b      	lsrs	r3, r3, #20
 8003bee:	f003 031f 	and.w	r3, r3, #31
 8003bf2:	2107      	movs	r1, #7
 8003bf4:	fa01 f303 	lsl.w	r3, r1, r3
 8003bf8:	43db      	mvns	r3, r3
 8003bfa:	401a      	ands	r2, r3
 8003bfc:	68bb      	ldr	r3, [r7, #8]
 8003bfe:	0d1b      	lsrs	r3, r3, #20
 8003c00:	f003 031f 	and.w	r3, r3, #31
 8003c04:	6879      	ldr	r1, [r7, #4]
 8003c06:	fa01 f303 	lsl.w	r3, r1, r3
 8003c0a:	431a      	orrs	r2, r3
 8003c0c:	697b      	ldr	r3, [r7, #20]
 8003c0e:	601a      	str	r2, [r3, #0]
 8003c10:	bf00      	nop
 8003c12:	371c      	adds	r7, #28
 8003c14:	46bd      	mov	sp, r7
 8003c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c1a:	4770      	bx	lr

08003c1c <LL_ADC_SetChannelSingleDiff>:
 8003c1c:	b480      	push	{r7}
 8003c1e:	b085      	sub	sp, #20
 8003c20:	af00      	add	r7, sp, #0
 8003c22:	60f8      	str	r0, [r7, #12]
 8003c24:	60b9      	str	r1, [r7, #8]
 8003c26:	607a      	str	r2, [r7, #4]
 8003c28:	68fb      	ldr	r3, [r7, #12]
 8003c2a:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8003c2e:	68bb      	ldr	r3, [r7, #8]
 8003c30:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003c34:	43db      	mvns	r3, r3
 8003c36:	401a      	ands	r2, r3
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	f003 0318 	and.w	r3, r3, #24
 8003c3e:	4908      	ldr	r1, [pc, #32]	@ (8003c60 <LL_ADC_SetChannelSingleDiff+0x44>)
 8003c40:	40d9      	lsrs	r1, r3
 8003c42:	68bb      	ldr	r3, [r7, #8]
 8003c44:	400b      	ands	r3, r1
 8003c46:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003c4a:	431a      	orrs	r2, r3
 8003c4c:	68fb      	ldr	r3, [r7, #12]
 8003c4e:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 8003c52:	bf00      	nop
 8003c54:	3714      	adds	r7, #20
 8003c56:	46bd      	mov	sp, r7
 8003c58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c5c:	4770      	bx	lr
 8003c5e:	bf00      	nop
 8003c60:	0007ffff 	.word	0x0007ffff

08003c64 <LL_ADC_GetMultimode>:
 8003c64:	b480      	push	{r7}
 8003c66:	b083      	sub	sp, #12
 8003c68:	af00      	add	r7, sp, #0
 8003c6a:	6078      	str	r0, [r7, #4]
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	689b      	ldr	r3, [r3, #8]
 8003c70:	f003 031f 	and.w	r3, r3, #31
 8003c74:	4618      	mov	r0, r3
 8003c76:	370c      	adds	r7, #12
 8003c78:	46bd      	mov	sp, r7
 8003c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c7e:	4770      	bx	lr

08003c80 <LL_ADC_DisableDeepPowerDown>:
 8003c80:	b480      	push	{r7}
 8003c82:	b083      	sub	sp, #12
 8003c84:	af00      	add	r7, sp, #0
 8003c86:	6078      	str	r0, [r7, #4]
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	689b      	ldr	r3, [r3, #8]
 8003c8c:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 8003c90:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003c94:	687a      	ldr	r2, [r7, #4]
 8003c96:	6093      	str	r3, [r2, #8]
 8003c98:	bf00      	nop
 8003c9a:	370c      	adds	r7, #12
 8003c9c:	46bd      	mov	sp, r7
 8003c9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ca2:	4770      	bx	lr

08003ca4 <LL_ADC_IsDeepPowerDownEnabled>:
 8003ca4:	b480      	push	{r7}
 8003ca6:	b083      	sub	sp, #12
 8003ca8:	af00      	add	r7, sp, #0
 8003caa:	6078      	str	r0, [r7, #4]
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	689b      	ldr	r3, [r3, #8]
 8003cb0:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8003cb4:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8003cb8:	d101      	bne.n	8003cbe <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8003cba:	2301      	movs	r3, #1
 8003cbc:	e000      	b.n	8003cc0 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8003cbe:	2300      	movs	r3, #0
 8003cc0:	4618      	mov	r0, r3
 8003cc2:	370c      	adds	r7, #12
 8003cc4:	46bd      	mov	sp, r7
 8003cc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cca:	4770      	bx	lr

08003ccc <LL_ADC_EnableInternalRegulator>:
 8003ccc:	b480      	push	{r7}
 8003cce:	b083      	sub	sp, #12
 8003cd0:	af00      	add	r7, sp, #0
 8003cd2:	6078      	str	r0, [r7, #4]
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	689b      	ldr	r3, [r3, #8]
 8003cd8:	f023 4310 	bic.w	r3, r3, #2415919104	@ 0x90000000
 8003cdc:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003ce0:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	609a      	str	r2, [r3, #8]
 8003ce8:	bf00      	nop
 8003cea:	370c      	adds	r7, #12
 8003cec:	46bd      	mov	sp, r7
 8003cee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cf2:	4770      	bx	lr

08003cf4 <LL_ADC_IsInternalRegulatorEnabled>:
 8003cf4:	b480      	push	{r7}
 8003cf6:	b083      	sub	sp, #12
 8003cf8:	af00      	add	r7, sp, #0
 8003cfa:	6078      	str	r0, [r7, #4]
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	689b      	ldr	r3, [r3, #8]
 8003d00:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003d04:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003d08:	d101      	bne.n	8003d0e <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8003d0a:	2301      	movs	r3, #1
 8003d0c:	e000      	b.n	8003d10 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8003d0e:	2300      	movs	r3, #0
 8003d10:	4618      	mov	r0, r3
 8003d12:	370c      	adds	r7, #12
 8003d14:	46bd      	mov	sp, r7
 8003d16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d1a:	4770      	bx	lr

08003d1c <LL_ADC_Enable>:
 8003d1c:	b480      	push	{r7}
 8003d1e:	b083      	sub	sp, #12
 8003d20:	af00      	add	r7, sp, #0
 8003d22:	6078      	str	r0, [r7, #4]
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	689b      	ldr	r3, [r3, #8]
 8003d28:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003d2c:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003d30:	f043 0201 	orr.w	r2, r3, #1
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	609a      	str	r2, [r3, #8]
 8003d38:	bf00      	nop
 8003d3a:	370c      	adds	r7, #12
 8003d3c:	46bd      	mov	sp, r7
 8003d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d42:	4770      	bx	lr

08003d44 <LL_ADC_IsEnabled>:
 8003d44:	b480      	push	{r7}
 8003d46:	b083      	sub	sp, #12
 8003d48:	af00      	add	r7, sp, #0
 8003d4a:	6078      	str	r0, [r7, #4]
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	689b      	ldr	r3, [r3, #8]
 8003d50:	f003 0301 	and.w	r3, r3, #1
 8003d54:	2b01      	cmp	r3, #1
 8003d56:	d101      	bne.n	8003d5c <LL_ADC_IsEnabled+0x18>
 8003d58:	2301      	movs	r3, #1
 8003d5a:	e000      	b.n	8003d5e <LL_ADC_IsEnabled+0x1a>
 8003d5c:	2300      	movs	r3, #0
 8003d5e:	4618      	mov	r0, r3
 8003d60:	370c      	adds	r7, #12
 8003d62:	46bd      	mov	sp, r7
 8003d64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d68:	4770      	bx	lr

08003d6a <LL_ADC_REG_StartConversion>:
 8003d6a:	b480      	push	{r7}
 8003d6c:	b083      	sub	sp, #12
 8003d6e:	af00      	add	r7, sp, #0
 8003d70:	6078      	str	r0, [r7, #4]
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	689b      	ldr	r3, [r3, #8]
 8003d76:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003d7a:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003d7e:	f043 0204 	orr.w	r2, r3, #4
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	609a      	str	r2, [r3, #8]
 8003d86:	bf00      	nop
 8003d88:	370c      	adds	r7, #12
 8003d8a:	46bd      	mov	sp, r7
 8003d8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d90:	4770      	bx	lr

08003d92 <LL_ADC_REG_IsConversionOngoing>:
 8003d92:	b480      	push	{r7}
 8003d94:	b083      	sub	sp, #12
 8003d96:	af00      	add	r7, sp, #0
 8003d98:	6078      	str	r0, [r7, #4]
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	689b      	ldr	r3, [r3, #8]
 8003d9e:	f003 0304 	and.w	r3, r3, #4
 8003da2:	2b04      	cmp	r3, #4
 8003da4:	d101      	bne.n	8003daa <LL_ADC_REG_IsConversionOngoing+0x18>
 8003da6:	2301      	movs	r3, #1
 8003da8:	e000      	b.n	8003dac <LL_ADC_REG_IsConversionOngoing+0x1a>
 8003daa:	2300      	movs	r3, #0
 8003dac:	4618      	mov	r0, r3
 8003dae:	370c      	adds	r7, #12
 8003db0:	46bd      	mov	sp, r7
 8003db2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003db6:	4770      	bx	lr

08003db8 <LL_ADC_INJ_IsConversionOngoing>:
 8003db8:	b480      	push	{r7}
 8003dba:	b083      	sub	sp, #12
 8003dbc:	af00      	add	r7, sp, #0
 8003dbe:	6078      	str	r0, [r7, #4]
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	689b      	ldr	r3, [r3, #8]
 8003dc4:	f003 0308 	and.w	r3, r3, #8
 8003dc8:	2b08      	cmp	r3, #8
 8003dca:	d101      	bne.n	8003dd0 <LL_ADC_INJ_IsConversionOngoing+0x18>
 8003dcc:	2301      	movs	r3, #1
 8003dce:	e000      	b.n	8003dd2 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8003dd0:	2300      	movs	r3, #0
 8003dd2:	4618      	mov	r0, r3
 8003dd4:	370c      	adds	r7, #12
 8003dd6:	46bd      	mov	sp, r7
 8003dd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ddc:	4770      	bx	lr
	...

08003de0 <HAL_ADC_Init>:
 8003de0:	b590      	push	{r4, r7, lr}
 8003de2:	b089      	sub	sp, #36	@ 0x24
 8003de4:	af00      	add	r7, sp, #0
 8003de6:	6078      	str	r0, [r7, #4]
 8003de8:	2300      	movs	r3, #0
 8003dea:	77fb      	strb	r3, [r7, #31]
 8003dec:	2300      	movs	r3, #0
 8003dee:	60fb      	str	r3, [r7, #12]
 8003df0:	687b      	ldr	r3, [r7, #4]
 8003df2:	2b00      	cmp	r3, #0
 8003df4:	d101      	bne.n	8003dfa <HAL_ADC_Init+0x1a>
 8003df6:	2301      	movs	r3, #1
 8003df8:	e167      	b.n	80040ca <HAL_ADC_Init+0x2ea>
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	695b      	ldr	r3, [r3, #20]
 8003dfe:	2b00      	cmp	r3, #0
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d109      	bne.n	8003e1c <HAL_ADC_Init+0x3c>
 8003e08:	6878      	ldr	r0, [r7, #4]
 8003e0a:	f7fc fc47 	bl	800069c <HAL_ADC_MspInit>
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	2200      	movs	r2, #0
 8003e12:	661a      	str	r2, [r3, #96]	@ 0x60
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	2200      	movs	r2, #0
 8003e18:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	681b      	ldr	r3, [r3, #0]
 8003e20:	4618      	mov	r0, r3
 8003e22:	f7ff ff3f 	bl	8003ca4 <LL_ADC_IsDeepPowerDownEnabled>
 8003e26:	4603      	mov	r3, r0
 8003e28:	2b00      	cmp	r3, #0
 8003e2a:	d004      	beq.n	8003e36 <HAL_ADC_Init+0x56>
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	681b      	ldr	r3, [r3, #0]
 8003e30:	4618      	mov	r0, r3
 8003e32:	f7ff ff25 	bl	8003c80 <LL_ADC_DisableDeepPowerDown>
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	681b      	ldr	r3, [r3, #0]
 8003e3a:	4618      	mov	r0, r3
 8003e3c:	f7ff ff5a 	bl	8003cf4 <LL_ADC_IsInternalRegulatorEnabled>
 8003e40:	4603      	mov	r3, r0
 8003e42:	2b00      	cmp	r3, #0
 8003e44:	d115      	bne.n	8003e72 <HAL_ADC_Init+0x92>
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	681b      	ldr	r3, [r3, #0]
 8003e4a:	4618      	mov	r0, r3
 8003e4c:	f7ff ff3e 	bl	8003ccc <LL_ADC_EnableInternalRegulator>
 8003e50:	4ba0      	ldr	r3, [pc, #640]	@ (80040d4 <HAL_ADC_Init+0x2f4>)
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	099b      	lsrs	r3, r3, #6
 8003e56:	4aa0      	ldr	r2, [pc, #640]	@ (80040d8 <HAL_ADC_Init+0x2f8>)
 8003e58:	fba2 2303 	umull	r2, r3, r2, r3
 8003e5c:	099b      	lsrs	r3, r3, #6
 8003e5e:	3301      	adds	r3, #1
 8003e60:	005b      	lsls	r3, r3, #1
 8003e62:	60fb      	str	r3, [r7, #12]
 8003e64:	e002      	b.n	8003e6c <HAL_ADC_Init+0x8c>
 8003e66:	68fb      	ldr	r3, [r7, #12]
 8003e68:	3b01      	subs	r3, #1
 8003e6a:	60fb      	str	r3, [r7, #12]
 8003e6c:	68fb      	ldr	r3, [r7, #12]
 8003e6e:	2b00      	cmp	r3, #0
 8003e70:	d1f9      	bne.n	8003e66 <HAL_ADC_Init+0x86>
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	681b      	ldr	r3, [r3, #0]
 8003e76:	4618      	mov	r0, r3
 8003e78:	f7ff ff3c 	bl	8003cf4 <LL_ADC_IsInternalRegulatorEnabled>
 8003e7c:	4603      	mov	r3, r0
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	d10d      	bne.n	8003e9e <HAL_ADC_Init+0xbe>
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e86:	f043 0210 	orr.w	r2, r3, #16
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003e92:	f043 0201 	orr.w	r2, r3, #1
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	661a      	str	r2, [r3, #96]	@ 0x60
 8003e9a:	2301      	movs	r3, #1
 8003e9c:	77fb      	strb	r3, [r7, #31]
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	4618      	mov	r0, r3
 8003ea4:	f7ff ff75 	bl	8003d92 <LL_ADC_REG_IsConversionOngoing>
 8003ea8:	6178      	str	r0, [r7, #20]
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003eae:	f003 0310 	and.w	r3, r3, #16
 8003eb2:	2b00      	cmp	r3, #0
 8003eb4:	f040 8100 	bne.w	80040b8 <HAL_ADC_Init+0x2d8>
 8003eb8:	697b      	ldr	r3, [r7, #20]
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	f040 80fc 	bne.w	80040b8 <HAL_ADC_Init+0x2d8>
 8003ec0:	687b      	ldr	r3, [r7, #4]
 8003ec2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ec4:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 8003ec8:	f043 0202 	orr.w	r2, r3, #2
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	4618      	mov	r0, r3
 8003ed6:	f7ff ff35 	bl	8003d44 <LL_ADC_IsEnabled>
 8003eda:	4603      	mov	r3, r0
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	d111      	bne.n	8003f04 <HAL_ADC_Init+0x124>
 8003ee0:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8003ee4:	f7ff ff2e 	bl	8003d44 <LL_ADC_IsEnabled>
 8003ee8:	4604      	mov	r4, r0
 8003eea:	487c      	ldr	r0, [pc, #496]	@ (80040dc <HAL_ADC_Init+0x2fc>)
 8003eec:	f7ff ff2a 	bl	8003d44 <LL_ADC_IsEnabled>
 8003ef0:	4603      	mov	r3, r0
 8003ef2:	4323      	orrs	r3, r4
 8003ef4:	2b00      	cmp	r3, #0
 8003ef6:	d105      	bne.n	8003f04 <HAL_ADC_Init+0x124>
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	685b      	ldr	r3, [r3, #4]
 8003efc:	4619      	mov	r1, r3
 8003efe:	4878      	ldr	r0, [pc, #480]	@ (80040e0 <HAL_ADC_Init+0x300>)
 8003f00:	f7ff fd50 	bl	80039a4 <LL_ADC_SetCommonClock>
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	7f5b      	ldrb	r3, [r3, #29]
 8003f08:	035a      	lsls	r2, r3, #13
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003f0e:	431a      	orrs	r2, r3
 8003f10:	687b      	ldr	r3, [r7, #4]
 8003f12:	68db      	ldr	r3, [r3, #12]
 8003f14:	431a      	orrs	r2, r3
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	689b      	ldr	r3, [r3, #8]
 8003f1a:	431a      	orrs	r2, r3
 8003f1c:	687b      	ldr	r3, [r7, #4]
 8003f1e:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8003f22:	041b      	lsls	r3, r3, #16
 8003f24:	4313      	orrs	r3, r2
 8003f26:	61bb      	str	r3, [r7, #24]
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8003f2e:	2b01      	cmp	r3, #1
 8003f30:	d106      	bne.n	8003f40 <HAL_ADC_Init+0x160>
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003f36:	3b01      	subs	r3, #1
 8003f38:	045b      	lsls	r3, r3, #17
 8003f3a:	69ba      	ldr	r2, [r7, #24]
 8003f3c:	4313      	orrs	r3, r2
 8003f3e:	61bb      	str	r3, [r7, #24]
 8003f40:	687b      	ldr	r3, [r7, #4]
 8003f42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f44:	2b00      	cmp	r3, #0
 8003f46:	d009      	beq.n	8003f5c <HAL_ADC_Init+0x17c>
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f4c:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 8003f50:	687b      	ldr	r3, [r7, #4]
 8003f52:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003f54:	4313      	orrs	r3, r2
 8003f56:	69ba      	ldr	r2, [r7, #24]
 8003f58:	4313      	orrs	r3, r2
 8003f5a:	61bb      	str	r3, [r7, #24]
 8003f5c:	687b      	ldr	r3, [r7, #4]
 8003f5e:	681b      	ldr	r3, [r3, #0]
 8003f60:	68da      	ldr	r2, [r3, #12]
 8003f62:	4b60      	ldr	r3, [pc, #384]	@ (80040e4 <HAL_ADC_Init+0x304>)
 8003f64:	4013      	ands	r3, r2
 8003f66:	687a      	ldr	r2, [r7, #4]
 8003f68:	6812      	ldr	r2, [r2, #0]
 8003f6a:	69b9      	ldr	r1, [r7, #24]
 8003f6c:	430b      	orrs	r3, r1
 8003f6e:	60d3      	str	r3, [r2, #12]
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	681b      	ldr	r3, [r3, #0]
 8003f74:	691b      	ldr	r3, [r3, #16]
 8003f76:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	681b      	ldr	r3, [r3, #0]
 8003f82:	430a      	orrs	r2, r1
 8003f84:	611a      	str	r2, [r3, #16]
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	4618      	mov	r0, r3
 8003f8c:	f7ff ff14 	bl	8003db8 <LL_ADC_INJ_IsConversionOngoing>
 8003f90:	6138      	str	r0, [r7, #16]
 8003f92:	697b      	ldr	r3, [r7, #20]
 8003f94:	2b00      	cmp	r3, #0
 8003f96:	d16d      	bne.n	8004074 <HAL_ADC_Init+0x294>
 8003f98:	693b      	ldr	r3, [r7, #16]
 8003f9a:	2b00      	cmp	r3, #0
 8003f9c:	d16a      	bne.n	8004074 <HAL_ADC_Init+0x294>
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	7f1b      	ldrb	r3, [r3, #28]
 8003fa2:	039a      	lsls	r2, r3, #14
 8003fa4:	687b      	ldr	r3, [r7, #4]
 8003fa6:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8003faa:	005b      	lsls	r3, r3, #1
 8003fac:	4313      	orrs	r3, r2
 8003fae:	61bb      	str	r3, [r7, #24]
 8003fb0:	687b      	ldr	r3, [r7, #4]
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	68db      	ldr	r3, [r3, #12]
 8003fb6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8003fba:	f023 0302 	bic.w	r3, r3, #2
 8003fbe:	687a      	ldr	r2, [r7, #4]
 8003fc0:	6812      	ldr	r2, [r2, #0]
 8003fc2:	69b9      	ldr	r1, [r7, #24]
 8003fc4:	430b      	orrs	r3, r1
 8003fc6:	60d3      	str	r3, [r2, #12]
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	691b      	ldr	r3, [r3, #16]
 8003fcc:	2b00      	cmp	r3, #0
 8003fce:	d017      	beq.n	8004000 <HAL_ADC_Init+0x220>
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	691a      	ldr	r2, [r3, #16]
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	681b      	ldr	r3, [r3, #0]
 8003fda:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8003fde:	611a      	str	r2, [r3, #16]
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	681b      	ldr	r3, [r3, #0]
 8003fe4:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8003fe8:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8003fec:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8003ff0:	687a      	ldr	r2, [r7, #4]
 8003ff2:	6911      	ldr	r1, [r2, #16]
 8003ff4:	687a      	ldr	r2, [r7, #4]
 8003ff6:	6812      	ldr	r2, [r2, #0]
 8003ff8:	430b      	orrs	r3, r1
 8003ffa:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 8003ffe:	e013      	b.n	8004028 <HAL_ADC_Init+0x248>
 8004000:	687b      	ldr	r3, [r7, #4]
 8004002:	681b      	ldr	r3, [r3, #0]
 8004004:	691a      	ldr	r2, [r3, #16]
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800400e:	611a      	str	r2, [r3, #16]
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	681b      	ldr	r3, [r3, #0]
 8004014:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8004018:	687a      	ldr	r2, [r7, #4]
 800401a:	6812      	ldr	r2, [r2, #0]
 800401c:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8004020:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004024:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800402e:	2b01      	cmp	r3, #1
 8004030:	d118      	bne.n	8004064 <HAL_ADC_Init+0x284>
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	691b      	ldr	r3, [r3, #16]
 8004038:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800403c:	f023 0304 	bic.w	r3, r3, #4
 8004040:	687a      	ldr	r2, [r7, #4]
 8004042:	6c51      	ldr	r1, [r2, #68]	@ 0x44
 8004044:	687a      	ldr	r2, [r7, #4]
 8004046:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8004048:	4311      	orrs	r1, r2
 800404a:	687a      	ldr	r2, [r7, #4]
 800404c:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 800404e:	4311      	orrs	r1, r2
 8004050:	687a      	ldr	r2, [r7, #4]
 8004052:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8004054:	430a      	orrs	r2, r1
 8004056:	431a      	orrs	r2, r3
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	f042 0201 	orr.w	r2, r2, #1
 8004060:	611a      	str	r2, [r3, #16]
 8004062:	e007      	b.n	8004074 <HAL_ADC_Init+0x294>
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	681b      	ldr	r3, [r3, #0]
 8004068:	691a      	ldr	r2, [r3, #16]
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	f022 0201 	bic.w	r2, r2, #1
 8004072:	611a      	str	r2, [r3, #16]
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	695b      	ldr	r3, [r3, #20]
 8004078:	2b01      	cmp	r3, #1
 800407a:	d10c      	bne.n	8004096 <HAL_ADC_Init+0x2b6>
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	681b      	ldr	r3, [r3, #0]
 8004080:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004082:	f023 010f 	bic.w	r1, r3, #15
 8004086:	687b      	ldr	r3, [r7, #4]
 8004088:	6a1b      	ldr	r3, [r3, #32]
 800408a:	1e5a      	subs	r2, r3, #1
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	681b      	ldr	r3, [r3, #0]
 8004090:	430a      	orrs	r2, r1
 8004092:	631a      	str	r2, [r3, #48]	@ 0x30
 8004094:	e007      	b.n	80040a6 <HAL_ADC_Init+0x2c6>
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	681b      	ldr	r3, [r3, #0]
 800409a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800409c:	687b      	ldr	r3, [r7, #4]
 800409e:	681b      	ldr	r3, [r3, #0]
 80040a0:	f022 020f 	bic.w	r2, r2, #15
 80040a4:	631a      	str	r2, [r3, #48]	@ 0x30
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80040aa:	f023 0303 	bic.w	r3, r3, #3
 80040ae:	f043 0201 	orr.w	r2, r3, #1
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80040b6:	e007      	b.n	80040c8 <HAL_ADC_Init+0x2e8>
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80040bc:	f043 0210 	orr.w	r2, r3, #16
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	65da      	str	r2, [r3, #92]	@ 0x5c
 80040c4:	2301      	movs	r3, #1
 80040c6:	77fb      	strb	r3, [r7, #31]
 80040c8:	7ffb      	ldrb	r3, [r7, #31]
 80040ca:	4618      	mov	r0, r3
 80040cc:	3724      	adds	r7, #36	@ 0x24
 80040ce:	46bd      	mov	sp, r7
 80040d0:	bd90      	pop	{r4, r7, pc}
 80040d2:	bf00      	nop
 80040d4:	20000000 	.word	0x20000000
 80040d8:	053e2d63 	.word	0x053e2d63
 80040dc:	50000100 	.word	0x50000100
 80040e0:	50000300 	.word	0x50000300
 80040e4:	fff04007 	.word	0xfff04007

080040e8 <HAL_ADC_Start_DMA>:
 80040e8:	b580      	push	{r7, lr}
 80040ea:	b086      	sub	sp, #24
 80040ec:	af00      	add	r7, sp, #0
 80040ee:	60f8      	str	r0, [r7, #12]
 80040f0:	60b9      	str	r1, [r7, #8]
 80040f2:	607a      	str	r2, [r7, #4]
 80040f4:	4851      	ldr	r0, [pc, #324]	@ (800423c <HAL_ADC_Start_DMA+0x154>)
 80040f6:	f7ff fdb5 	bl	8003c64 <LL_ADC_GetMultimode>
 80040fa:	6138      	str	r0, [r7, #16]
 80040fc:	68fb      	ldr	r3, [r7, #12]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	4618      	mov	r0, r3
 8004102:	f7ff fe46 	bl	8003d92 <LL_ADC_REG_IsConversionOngoing>
 8004106:	4603      	mov	r3, r0
 8004108:	2b00      	cmp	r3, #0
 800410a:	f040 808f 	bne.w	800422c <HAL_ADC_Start_DMA+0x144>
 800410e:	68fb      	ldr	r3, [r7, #12]
 8004110:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8004114:	2b01      	cmp	r3, #1
 8004116:	d101      	bne.n	800411c <HAL_ADC_Start_DMA+0x34>
 8004118:	2302      	movs	r3, #2
 800411a:	e08a      	b.n	8004232 <HAL_ADC_Start_DMA+0x14a>
 800411c:	68fb      	ldr	r3, [r7, #12]
 800411e:	2201      	movs	r2, #1
 8004120:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004124:	693b      	ldr	r3, [r7, #16]
 8004126:	2b00      	cmp	r3, #0
 8004128:	d005      	beq.n	8004136 <HAL_ADC_Start_DMA+0x4e>
 800412a:	693b      	ldr	r3, [r7, #16]
 800412c:	2b05      	cmp	r3, #5
 800412e:	d002      	beq.n	8004136 <HAL_ADC_Start_DMA+0x4e>
 8004130:	693b      	ldr	r3, [r7, #16]
 8004132:	2b09      	cmp	r3, #9
 8004134:	d173      	bne.n	800421e <HAL_ADC_Start_DMA+0x136>
 8004136:	68f8      	ldr	r0, [r7, #12]
 8004138:	f000 fc98 	bl	8004a6c <ADC_Enable>
 800413c:	4603      	mov	r3, r0
 800413e:	75fb      	strb	r3, [r7, #23]
 8004140:	7dfb      	ldrb	r3, [r7, #23]
 8004142:	2b00      	cmp	r3, #0
 8004144:	d166      	bne.n	8004214 <HAL_ADC_Start_DMA+0x12c>
 8004146:	68fb      	ldr	r3, [r7, #12]
 8004148:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800414a:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 800414e:	f023 0301 	bic.w	r3, r3, #1
 8004152:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8004156:	68fb      	ldr	r3, [r7, #12]
 8004158:	65da      	str	r2, [r3, #92]	@ 0x5c
 800415a:	68fb      	ldr	r3, [r7, #12]
 800415c:	681b      	ldr	r3, [r3, #0]
 800415e:	4a38      	ldr	r2, [pc, #224]	@ (8004240 <HAL_ADC_Start_DMA+0x158>)
 8004160:	4293      	cmp	r3, r2
 8004162:	d002      	beq.n	800416a <HAL_ADC_Start_DMA+0x82>
 8004164:	68fb      	ldr	r3, [r7, #12]
 8004166:	681b      	ldr	r3, [r3, #0]
 8004168:	e001      	b.n	800416e <HAL_ADC_Start_DMA+0x86>
 800416a:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 800416e:	68fa      	ldr	r2, [r7, #12]
 8004170:	6812      	ldr	r2, [r2, #0]
 8004172:	4293      	cmp	r3, r2
 8004174:	d002      	beq.n	800417c <HAL_ADC_Start_DMA+0x94>
 8004176:	693b      	ldr	r3, [r7, #16]
 8004178:	2b00      	cmp	r3, #0
 800417a:	d105      	bne.n	8004188 <HAL_ADC_Start_DMA+0xa0>
 800417c:	68fb      	ldr	r3, [r7, #12]
 800417e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004180:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8004184:	68fb      	ldr	r3, [r7, #12]
 8004186:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004188:	68fb      	ldr	r3, [r7, #12]
 800418a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800418c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004190:	2b00      	cmp	r3, #0
 8004192:	d006      	beq.n	80041a2 <HAL_ADC_Start_DMA+0xba>
 8004194:	68fb      	ldr	r3, [r7, #12]
 8004196:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004198:	f023 0206 	bic.w	r2, r3, #6
 800419c:	68fb      	ldr	r3, [r7, #12]
 800419e:	661a      	str	r2, [r3, #96]	@ 0x60
 80041a0:	e002      	b.n	80041a8 <HAL_ADC_Start_DMA+0xc0>
 80041a2:	68fb      	ldr	r3, [r7, #12]
 80041a4:	2200      	movs	r2, #0
 80041a6:	661a      	str	r2, [r3, #96]	@ 0x60
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80041ac:	4a25      	ldr	r2, [pc, #148]	@ (8004244 <HAL_ADC_Start_DMA+0x15c>)
 80041ae:	62da      	str	r2, [r3, #44]	@ 0x2c
 80041b0:	68fb      	ldr	r3, [r7, #12]
 80041b2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80041b4:	4a24      	ldr	r2, [pc, #144]	@ (8004248 <HAL_ADC_Start_DMA+0x160>)
 80041b6:	631a      	str	r2, [r3, #48]	@ 0x30
 80041b8:	68fb      	ldr	r3, [r7, #12]
 80041ba:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80041bc:	4a23      	ldr	r2, [pc, #140]	@ (800424c <HAL_ADC_Start_DMA+0x164>)
 80041be:	635a      	str	r2, [r3, #52]	@ 0x34
 80041c0:	68fb      	ldr	r3, [r7, #12]
 80041c2:	681b      	ldr	r3, [r3, #0]
 80041c4:	221c      	movs	r2, #28
 80041c6:	601a      	str	r2, [r3, #0]
 80041c8:	68fb      	ldr	r3, [r7, #12]
 80041ca:	2200      	movs	r2, #0
 80041cc:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80041d0:	68fb      	ldr	r3, [r7, #12]
 80041d2:	681b      	ldr	r3, [r3, #0]
 80041d4:	685a      	ldr	r2, [r3, #4]
 80041d6:	68fb      	ldr	r3, [r7, #12]
 80041d8:	681b      	ldr	r3, [r3, #0]
 80041da:	f042 0210 	orr.w	r2, r2, #16
 80041de:	605a      	str	r2, [r3, #4]
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	68da      	ldr	r2, [r3, #12]
 80041e6:	68fb      	ldr	r3, [r7, #12]
 80041e8:	681b      	ldr	r3, [r3, #0]
 80041ea:	f042 0201 	orr.w	r2, r2, #1
 80041ee:	60da      	str	r2, [r3, #12]
 80041f0:	68fb      	ldr	r3, [r7, #12]
 80041f2:	6d58      	ldr	r0, [r3, #84]	@ 0x54
 80041f4:	68fb      	ldr	r3, [r7, #12]
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	3340      	adds	r3, #64	@ 0x40
 80041fa:	4619      	mov	r1, r3
 80041fc:	68ba      	ldr	r2, [r7, #8]
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	f001 f8da 	bl	80053b8 <HAL_DMA_Start_IT>
 8004204:	4603      	mov	r3, r0
 8004206:	75fb      	strb	r3, [r7, #23]
 8004208:	68fb      	ldr	r3, [r7, #12]
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	4618      	mov	r0, r3
 800420e:	f7ff fdac 	bl	8003d6a <LL_ADC_REG_StartConversion>
 8004212:	e00d      	b.n	8004230 <HAL_ADC_Start_DMA+0x148>
 8004214:	68fb      	ldr	r3, [r7, #12]
 8004216:	2200      	movs	r2, #0
 8004218:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 800421c:	e008      	b.n	8004230 <HAL_ADC_Start_DMA+0x148>
 800421e:	2301      	movs	r3, #1
 8004220:	75fb      	strb	r3, [r7, #23]
 8004222:	68fb      	ldr	r3, [r7, #12]
 8004224:	2200      	movs	r2, #0
 8004226:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 800422a:	e001      	b.n	8004230 <HAL_ADC_Start_DMA+0x148>
 800422c:	2302      	movs	r3, #2
 800422e:	75fb      	strb	r3, [r7, #23]
 8004230:	7dfb      	ldrb	r3, [r7, #23]
 8004232:	4618      	mov	r0, r3
 8004234:	3718      	adds	r7, #24
 8004236:	46bd      	mov	sp, r7
 8004238:	bd80      	pop	{r7, pc}
 800423a:	bf00      	nop
 800423c:	50000300 	.word	0x50000300
 8004240:	50000100 	.word	0x50000100
 8004244:	08004b79 	.word	0x08004b79
 8004248:	08004c51 	.word	0x08004c51
 800424c:	08004c6d 	.word	0x08004c6d

08004250 <HAL_ADC_ConvCpltCallback>:
 8004250:	b480      	push	{r7}
 8004252:	b083      	sub	sp, #12
 8004254:	af00      	add	r7, sp, #0
 8004256:	6078      	str	r0, [r7, #4]
 8004258:	bf00      	nop
 800425a:	370c      	adds	r7, #12
 800425c:	46bd      	mov	sp, r7
 800425e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004262:	4770      	bx	lr

08004264 <HAL_ADC_ConvHalfCpltCallback>:
 8004264:	b480      	push	{r7}
 8004266:	b083      	sub	sp, #12
 8004268:	af00      	add	r7, sp, #0
 800426a:	6078      	str	r0, [r7, #4]
 800426c:	bf00      	nop
 800426e:	370c      	adds	r7, #12
 8004270:	46bd      	mov	sp, r7
 8004272:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004276:	4770      	bx	lr

08004278 <HAL_ADC_ErrorCallback>:
 8004278:	b480      	push	{r7}
 800427a:	b083      	sub	sp, #12
 800427c:	af00      	add	r7, sp, #0
 800427e:	6078      	str	r0, [r7, #4]
 8004280:	bf00      	nop
 8004282:	370c      	adds	r7, #12
 8004284:	46bd      	mov	sp, r7
 8004286:	f85d 7b04 	ldr.w	r7, [sp], #4
 800428a:	4770      	bx	lr

0800428c <HAL_ADC_ConfigChannel>:
 800428c:	b580      	push	{r7, lr}
 800428e:	b0b6      	sub	sp, #216	@ 0xd8
 8004290:	af00      	add	r7, sp, #0
 8004292:	6078      	str	r0, [r7, #4]
 8004294:	6039      	str	r1, [r7, #0]
 8004296:	2300      	movs	r3, #0
 8004298:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 800429c:	2300      	movs	r3, #0
 800429e:	60fb      	str	r3, [r7, #12]
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80042a6:	2b01      	cmp	r3, #1
 80042a8:	d101      	bne.n	80042ae <HAL_ADC_ConfigChannel+0x22>
 80042aa:	2302      	movs	r3, #2
 80042ac:	e3c8      	b.n	8004a40 <HAL_ADC_ConfigChannel+0x7b4>
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	2201      	movs	r2, #1
 80042b2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	681b      	ldr	r3, [r3, #0]
 80042ba:	4618      	mov	r0, r3
 80042bc:	f7ff fd69 	bl	8003d92 <LL_ADC_REG_IsConversionOngoing>
 80042c0:	4603      	mov	r3, r0
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	f040 83ad 	bne.w	8004a22 <HAL_ADC_ConfigChannel+0x796>
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	6818      	ldr	r0, [r3, #0]
 80042cc:	683b      	ldr	r3, [r7, #0]
 80042ce:	6859      	ldr	r1, [r3, #4]
 80042d0:	683b      	ldr	r3, [r7, #0]
 80042d2:	681b      	ldr	r3, [r3, #0]
 80042d4:	461a      	mov	r2, r3
 80042d6:	f7ff fc4a 	bl	8003b6e <LL_ADC_REG_SetSequencerRanks>
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	681b      	ldr	r3, [r3, #0]
 80042de:	4618      	mov	r0, r3
 80042e0:	f7ff fd57 	bl	8003d92 <LL_ADC_REG_IsConversionOngoing>
 80042e4:	f8c7 00d0 	str.w	r0, [r7, #208]	@ 0xd0
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	681b      	ldr	r3, [r3, #0]
 80042ec:	4618      	mov	r0, r3
 80042ee:	f7ff fd63 	bl	8003db8 <LL_ADC_INJ_IsConversionOngoing>
 80042f2:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 80042f6:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	f040 81d9 	bne.w	80046b2 <HAL_ADC_ConfigChannel+0x426>
 8004300:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8004304:	2b00      	cmp	r3, #0
 8004306:	f040 81d4 	bne.w	80046b2 <HAL_ADC_ConfigChannel+0x426>
 800430a:	683b      	ldr	r3, [r7, #0]
 800430c:	689b      	ldr	r3, [r3, #8]
 800430e:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8004312:	d10f      	bne.n	8004334 <HAL_ADC_ConfigChannel+0xa8>
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	6818      	ldr	r0, [r3, #0]
 8004318:	683b      	ldr	r3, [r7, #0]
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	2200      	movs	r2, #0
 800431e:	4619      	mov	r1, r3
 8004320:	f7ff fc51 	bl	8003bc6 <LL_ADC_SetChannelSamplingTime>
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	681b      	ldr	r3, [r3, #0]
 8004328:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 800432c:	4618      	mov	r0, r3
 800432e:	f7ff fbf8 	bl	8003b22 <LL_ADC_SetSamplingTimeCommonConfig>
 8004332:	e00e      	b.n	8004352 <HAL_ADC_ConfigChannel+0xc6>
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	6818      	ldr	r0, [r3, #0]
 8004338:	683b      	ldr	r3, [r7, #0]
 800433a:	6819      	ldr	r1, [r3, #0]
 800433c:	683b      	ldr	r3, [r7, #0]
 800433e:	689b      	ldr	r3, [r3, #8]
 8004340:	461a      	mov	r2, r3
 8004342:	f7ff fc40 	bl	8003bc6 <LL_ADC_SetChannelSamplingTime>
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	681b      	ldr	r3, [r3, #0]
 800434a:	2100      	movs	r1, #0
 800434c:	4618      	mov	r0, r3
 800434e:	f7ff fbe8 	bl	8003b22 <LL_ADC_SetSamplingTimeCommonConfig>
 8004352:	683b      	ldr	r3, [r7, #0]
 8004354:	695a      	ldr	r2, [r3, #20]
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	68db      	ldr	r3, [r3, #12]
 800435c:	08db      	lsrs	r3, r3, #3
 800435e:	f003 0303 	and.w	r3, r3, #3
 8004362:	005b      	lsls	r3, r3, #1
 8004364:	fa02 f303 	lsl.w	r3, r2, r3
 8004368:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800436c:	683b      	ldr	r3, [r7, #0]
 800436e:	691b      	ldr	r3, [r3, #16]
 8004370:	2b04      	cmp	r3, #4
 8004372:	d022      	beq.n	80043ba <HAL_ADC_ConfigChannel+0x12e>
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	6818      	ldr	r0, [r3, #0]
 8004378:	683b      	ldr	r3, [r7, #0]
 800437a:	6919      	ldr	r1, [r3, #16]
 800437c:	683b      	ldr	r3, [r7, #0]
 800437e:	681a      	ldr	r2, [r3, #0]
 8004380:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8004384:	f7ff fb42 	bl	8003a0c <LL_ADC_SetOffset>
 8004388:	687b      	ldr	r3, [r7, #4]
 800438a:	6818      	ldr	r0, [r3, #0]
 800438c:	683b      	ldr	r3, [r7, #0]
 800438e:	6919      	ldr	r1, [r3, #16]
 8004390:	683b      	ldr	r3, [r7, #0]
 8004392:	699b      	ldr	r3, [r3, #24]
 8004394:	461a      	mov	r2, r3
 8004396:	f7ff fb8e 	bl	8003ab6 <LL_ADC_SetOffsetSign>
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	6818      	ldr	r0, [r3, #0]
 800439e:	683b      	ldr	r3, [r7, #0]
 80043a0:	6919      	ldr	r1, [r3, #16]
 80043a2:	683b      	ldr	r3, [r7, #0]
 80043a4:	7f1b      	ldrb	r3, [r3, #28]
 80043a6:	2b01      	cmp	r3, #1
 80043a8:	d102      	bne.n	80043b0 <HAL_ADC_ConfigChannel+0x124>
 80043aa:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80043ae:	e000      	b.n	80043b2 <HAL_ADC_ConfigChannel+0x126>
 80043b0:	2300      	movs	r3, #0
 80043b2:	461a      	mov	r2, r3
 80043b4:	f7ff fb9a 	bl	8003aec <LL_ADC_SetOffsetSaturation>
 80043b8:	e17b      	b.n	80046b2 <HAL_ADC_ConfigChannel+0x426>
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	681b      	ldr	r3, [r3, #0]
 80043be:	2100      	movs	r1, #0
 80043c0:	4618      	mov	r0, r3
 80043c2:	f7ff fb47 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 80043c6:	4603      	mov	r3, r0
 80043c8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80043cc:	2b00      	cmp	r3, #0
 80043ce:	d10a      	bne.n	80043e6 <HAL_ADC_ConfigChannel+0x15a>
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	681b      	ldr	r3, [r3, #0]
 80043d4:	2100      	movs	r1, #0
 80043d6:	4618      	mov	r0, r3
 80043d8:	f7ff fb3c 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 80043dc:	4603      	mov	r3, r0
 80043de:	0e9b      	lsrs	r3, r3, #26
 80043e0:	f003 021f 	and.w	r2, r3, #31
 80043e4:	e01e      	b.n	8004424 <HAL_ADC_ConfigChannel+0x198>
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	2100      	movs	r1, #0
 80043ec:	4618      	mov	r0, r3
 80043ee:	f7ff fb31 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 80043f2:	4603      	mov	r3, r0
 80043f4:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 80043f8:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 80043fc:	fa93 f3a3 	rbit	r3, r3
 8004400:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8004404:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8004408:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800440c:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8004410:	2b00      	cmp	r3, #0
 8004412:	d101      	bne.n	8004418 <HAL_ADC_ConfigChannel+0x18c>
 8004414:	2320      	movs	r3, #32
 8004416:	e004      	b.n	8004422 <HAL_ADC_ConfigChannel+0x196>
 8004418:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800441c:	fab3 f383 	clz	r3, r3
 8004420:	b2db      	uxtb	r3, r3
 8004422:	461a      	mov	r2, r3
 8004424:	683b      	ldr	r3, [r7, #0]
 8004426:	681b      	ldr	r3, [r3, #0]
 8004428:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800442c:	2b00      	cmp	r3, #0
 800442e:	d105      	bne.n	800443c <HAL_ADC_ConfigChannel+0x1b0>
 8004430:	683b      	ldr	r3, [r7, #0]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	0e9b      	lsrs	r3, r3, #26
 8004436:	f003 031f 	and.w	r3, r3, #31
 800443a:	e018      	b.n	800446e <HAL_ADC_ConfigChannel+0x1e2>
 800443c:	683b      	ldr	r3, [r7, #0]
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004444:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8004448:	fa93 f3a3 	rbit	r3, r3
 800444c:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8004450:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004454:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004458:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800445c:	2b00      	cmp	r3, #0
 800445e:	d101      	bne.n	8004464 <HAL_ADC_ConfigChannel+0x1d8>
 8004460:	2320      	movs	r3, #32
 8004462:	e004      	b.n	800446e <HAL_ADC_ConfigChannel+0x1e2>
 8004464:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8004468:	fab3 f383 	clz	r3, r3
 800446c:	b2db      	uxtb	r3, r3
 800446e:	429a      	cmp	r2, r3
 8004470:	d106      	bne.n	8004480 <HAL_ADC_ConfigChannel+0x1f4>
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	681b      	ldr	r3, [r3, #0]
 8004476:	2200      	movs	r2, #0
 8004478:	2100      	movs	r1, #0
 800447a:	4618      	mov	r0, r3
 800447c:	f7ff fb00 	bl	8003a80 <LL_ADC_SetOffsetState>
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	2101      	movs	r1, #1
 8004486:	4618      	mov	r0, r3
 8004488:	f7ff fae4 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 800448c:	4603      	mov	r3, r0
 800448e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004492:	2b00      	cmp	r3, #0
 8004494:	d10a      	bne.n	80044ac <HAL_ADC_ConfigChannel+0x220>
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	681b      	ldr	r3, [r3, #0]
 800449a:	2101      	movs	r1, #1
 800449c:	4618      	mov	r0, r3
 800449e:	f7ff fad9 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 80044a2:	4603      	mov	r3, r0
 80044a4:	0e9b      	lsrs	r3, r3, #26
 80044a6:	f003 021f 	and.w	r2, r3, #31
 80044aa:	e01e      	b.n	80044ea <HAL_ADC_ConfigChannel+0x25e>
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	2101      	movs	r1, #1
 80044b2:	4618      	mov	r0, r3
 80044b4:	f7ff face 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 80044b8:	4603      	mov	r3, r0
 80044ba:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80044be:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 80044c2:	fa93 f3a3 	rbit	r3, r3
 80044c6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80044ca:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80044ce:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80044d2:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 80044d6:	2b00      	cmp	r3, #0
 80044d8:	d101      	bne.n	80044de <HAL_ADC_ConfigChannel+0x252>
 80044da:	2320      	movs	r3, #32
 80044dc:	e004      	b.n	80044e8 <HAL_ADC_ConfigChannel+0x25c>
 80044de:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 80044e2:	fab3 f383 	clz	r3, r3
 80044e6:	b2db      	uxtb	r3, r3
 80044e8:	461a      	mov	r2, r3
 80044ea:	683b      	ldr	r3, [r7, #0]
 80044ec:	681b      	ldr	r3, [r3, #0]
 80044ee:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80044f2:	2b00      	cmp	r3, #0
 80044f4:	d105      	bne.n	8004502 <HAL_ADC_ConfigChannel+0x276>
 80044f6:	683b      	ldr	r3, [r7, #0]
 80044f8:	681b      	ldr	r3, [r3, #0]
 80044fa:	0e9b      	lsrs	r3, r3, #26
 80044fc:	f003 031f 	and.w	r3, r3, #31
 8004500:	e018      	b.n	8004534 <HAL_ADC_ConfigChannel+0x2a8>
 8004502:	683b      	ldr	r3, [r7, #0]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800450a:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800450e:	fa93 f3a3 	rbit	r3, r3
 8004512:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8004516:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800451a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800451e:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8004522:	2b00      	cmp	r3, #0
 8004524:	d101      	bne.n	800452a <HAL_ADC_ConfigChannel+0x29e>
 8004526:	2320      	movs	r3, #32
 8004528:	e004      	b.n	8004534 <HAL_ADC_ConfigChannel+0x2a8>
 800452a:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800452e:	fab3 f383 	clz	r3, r3
 8004532:	b2db      	uxtb	r3, r3
 8004534:	429a      	cmp	r2, r3
 8004536:	d106      	bne.n	8004546 <HAL_ADC_ConfigChannel+0x2ba>
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	2200      	movs	r2, #0
 800453e:	2101      	movs	r1, #1
 8004540:	4618      	mov	r0, r3
 8004542:	f7ff fa9d 	bl	8003a80 <LL_ADC_SetOffsetState>
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	2102      	movs	r1, #2
 800454c:	4618      	mov	r0, r3
 800454e:	f7ff fa81 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 8004552:	4603      	mov	r3, r0
 8004554:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004558:	2b00      	cmp	r3, #0
 800455a:	d10a      	bne.n	8004572 <HAL_ADC_ConfigChannel+0x2e6>
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	2102      	movs	r1, #2
 8004562:	4618      	mov	r0, r3
 8004564:	f7ff fa76 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 8004568:	4603      	mov	r3, r0
 800456a:	0e9b      	lsrs	r3, r3, #26
 800456c:	f003 021f 	and.w	r2, r3, #31
 8004570:	e01e      	b.n	80045b0 <HAL_ADC_ConfigChannel+0x324>
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	681b      	ldr	r3, [r3, #0]
 8004576:	2102      	movs	r1, #2
 8004578:	4618      	mov	r0, r3
 800457a:	f7ff fa6b 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 800457e:	4603      	mov	r3, r0
 8004580:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004584:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004588:	fa93 f3a3 	rbit	r3, r3
 800458c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004590:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8004594:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004598:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800459c:	2b00      	cmp	r3, #0
 800459e:	d101      	bne.n	80045a4 <HAL_ADC_ConfigChannel+0x318>
 80045a0:	2320      	movs	r3, #32
 80045a2:	e004      	b.n	80045ae <HAL_ADC_ConfigChannel+0x322>
 80045a4:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 80045a8:	fab3 f383 	clz	r3, r3
 80045ac:	b2db      	uxtb	r3, r3
 80045ae:	461a      	mov	r2, r3
 80045b0:	683b      	ldr	r3, [r7, #0]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80045b8:	2b00      	cmp	r3, #0
 80045ba:	d105      	bne.n	80045c8 <HAL_ADC_ConfigChannel+0x33c>
 80045bc:	683b      	ldr	r3, [r7, #0]
 80045be:	681b      	ldr	r3, [r3, #0]
 80045c0:	0e9b      	lsrs	r3, r3, #26
 80045c2:	f003 031f 	and.w	r3, r3, #31
 80045c6:	e016      	b.n	80045f6 <HAL_ADC_ConfigChannel+0x36a>
 80045c8:	683b      	ldr	r3, [r7, #0]
 80045ca:	681b      	ldr	r3, [r3, #0]
 80045cc:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80045d0:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80045d4:	fa93 f3a3 	rbit	r3, r3
 80045d8:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80045da:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 80045dc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80045e0:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	d101      	bne.n	80045ec <HAL_ADC_ConfigChannel+0x360>
 80045e8:	2320      	movs	r3, #32
 80045ea:	e004      	b.n	80045f6 <HAL_ADC_ConfigChannel+0x36a>
 80045ec:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80045f0:	fab3 f383 	clz	r3, r3
 80045f4:	b2db      	uxtb	r3, r3
 80045f6:	429a      	cmp	r2, r3
 80045f8:	d106      	bne.n	8004608 <HAL_ADC_ConfigChannel+0x37c>
 80045fa:	687b      	ldr	r3, [r7, #4]
 80045fc:	681b      	ldr	r3, [r3, #0]
 80045fe:	2200      	movs	r2, #0
 8004600:	2102      	movs	r1, #2
 8004602:	4618      	mov	r0, r3
 8004604:	f7ff fa3c 	bl	8003a80 <LL_ADC_SetOffsetState>
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	681b      	ldr	r3, [r3, #0]
 800460c:	2103      	movs	r1, #3
 800460e:	4618      	mov	r0, r3
 8004610:	f7ff fa20 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 8004614:	4603      	mov	r3, r0
 8004616:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800461a:	2b00      	cmp	r3, #0
 800461c:	d10a      	bne.n	8004634 <HAL_ADC_ConfigChannel+0x3a8>
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	2103      	movs	r1, #3
 8004624:	4618      	mov	r0, r3
 8004626:	f7ff fa15 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 800462a:	4603      	mov	r3, r0
 800462c:	0e9b      	lsrs	r3, r3, #26
 800462e:	f003 021f 	and.w	r2, r3, #31
 8004632:	e017      	b.n	8004664 <HAL_ADC_ConfigChannel+0x3d8>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	2103      	movs	r1, #3
 800463a:	4618      	mov	r0, r3
 800463c:	f7ff fa0a 	bl	8003a54 <LL_ADC_GetOffsetChannel>
 8004640:	4603      	mov	r3, r0
 8004642:	677b      	str	r3, [r7, #116]	@ 0x74
 8004644:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004646:	fa93 f3a3 	rbit	r3, r3
 800464a:	673b      	str	r3, [r7, #112]	@ 0x70
 800464c:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800464e:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004650:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004652:	2b00      	cmp	r3, #0
 8004654:	d101      	bne.n	800465a <HAL_ADC_ConfigChannel+0x3ce>
 8004656:	2320      	movs	r3, #32
 8004658:	e003      	b.n	8004662 <HAL_ADC_ConfigChannel+0x3d6>
 800465a:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800465c:	fab3 f383 	clz	r3, r3
 8004660:	b2db      	uxtb	r3, r3
 8004662:	461a      	mov	r2, r3
 8004664:	683b      	ldr	r3, [r7, #0]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800466c:	2b00      	cmp	r3, #0
 800466e:	d105      	bne.n	800467c <HAL_ADC_ConfigChannel+0x3f0>
 8004670:	683b      	ldr	r3, [r7, #0]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	0e9b      	lsrs	r3, r3, #26
 8004676:	f003 031f 	and.w	r3, r3, #31
 800467a:	e011      	b.n	80046a0 <HAL_ADC_ConfigChannel+0x414>
 800467c:	683b      	ldr	r3, [r7, #0]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004682:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8004684:	fa93 f3a3 	rbit	r3, r3
 8004688:	667b      	str	r3, [r7, #100]	@ 0x64
 800468a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800468c:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800468e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8004690:	2b00      	cmp	r3, #0
 8004692:	d101      	bne.n	8004698 <HAL_ADC_ConfigChannel+0x40c>
 8004694:	2320      	movs	r3, #32
 8004696:	e003      	b.n	80046a0 <HAL_ADC_ConfigChannel+0x414>
 8004698:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800469a:	fab3 f383 	clz	r3, r3
 800469e:	b2db      	uxtb	r3, r3
 80046a0:	429a      	cmp	r2, r3
 80046a2:	d106      	bne.n	80046b2 <HAL_ADC_ConfigChannel+0x426>
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	681b      	ldr	r3, [r3, #0]
 80046a8:	2200      	movs	r2, #0
 80046aa:	2103      	movs	r1, #3
 80046ac:	4618      	mov	r0, r3
 80046ae:	f7ff f9e7 	bl	8003a80 <LL_ADC_SetOffsetState>
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	681b      	ldr	r3, [r3, #0]
 80046b6:	4618      	mov	r0, r3
 80046b8:	f7ff fb44 	bl	8003d44 <LL_ADC_IsEnabled>
 80046bc:	4603      	mov	r3, r0
 80046be:	2b00      	cmp	r3, #0
 80046c0:	f040 8140 	bne.w	8004944 <HAL_ADC_ConfigChannel+0x6b8>
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	6818      	ldr	r0, [r3, #0]
 80046c8:	683b      	ldr	r3, [r7, #0]
 80046ca:	6819      	ldr	r1, [r3, #0]
 80046cc:	683b      	ldr	r3, [r7, #0]
 80046ce:	68db      	ldr	r3, [r3, #12]
 80046d0:	461a      	mov	r2, r3
 80046d2:	f7ff faa3 	bl	8003c1c <LL_ADC_SetChannelSingleDiff>
 80046d6:	683b      	ldr	r3, [r7, #0]
 80046d8:	68db      	ldr	r3, [r3, #12]
 80046da:	4a8f      	ldr	r2, [pc, #572]	@ (8004918 <HAL_ADC_ConfigChannel+0x68c>)
 80046dc:	4293      	cmp	r3, r2
 80046de:	f040 8131 	bne.w	8004944 <HAL_ADC_ConfigChannel+0x6b8>
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	6818      	ldr	r0, [r3, #0]
 80046e6:	683b      	ldr	r3, [r7, #0]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80046ee:	2b00      	cmp	r3, #0
 80046f0:	d10b      	bne.n	800470a <HAL_ADC_ConfigChannel+0x47e>
 80046f2:	683b      	ldr	r3, [r7, #0]
 80046f4:	681b      	ldr	r3, [r3, #0]
 80046f6:	0e9b      	lsrs	r3, r3, #26
 80046f8:	3301      	adds	r3, #1
 80046fa:	f003 031f 	and.w	r3, r3, #31
 80046fe:	2b09      	cmp	r3, #9
 8004700:	bf94      	ite	ls
 8004702:	2301      	movls	r3, #1
 8004704:	2300      	movhi	r3, #0
 8004706:	b2db      	uxtb	r3, r3
 8004708:	e019      	b.n	800473e <HAL_ADC_ConfigChannel+0x4b2>
 800470a:	683b      	ldr	r3, [r7, #0]
 800470c:	681b      	ldr	r3, [r3, #0]
 800470e:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004710:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004712:	fa93 f3a3 	rbit	r3, r3
 8004716:	65bb      	str	r3, [r7, #88]	@ 0x58
 8004718:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800471a:	663b      	str	r3, [r7, #96]	@ 0x60
 800471c:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800471e:	2b00      	cmp	r3, #0
 8004720:	d101      	bne.n	8004726 <HAL_ADC_ConfigChannel+0x49a>
 8004722:	2320      	movs	r3, #32
 8004724:	e003      	b.n	800472e <HAL_ADC_ConfigChannel+0x4a2>
 8004726:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004728:	fab3 f383 	clz	r3, r3
 800472c:	b2db      	uxtb	r3, r3
 800472e:	3301      	adds	r3, #1
 8004730:	f003 031f 	and.w	r3, r3, #31
 8004734:	2b09      	cmp	r3, #9
 8004736:	bf94      	ite	ls
 8004738:	2301      	movls	r3, #1
 800473a:	2300      	movhi	r3, #0
 800473c:	b2db      	uxtb	r3, r3
 800473e:	2b00      	cmp	r3, #0
 8004740:	d079      	beq.n	8004836 <HAL_ADC_ConfigChannel+0x5aa>
 8004742:	683b      	ldr	r3, [r7, #0]
 8004744:	681b      	ldr	r3, [r3, #0]
 8004746:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800474a:	2b00      	cmp	r3, #0
 800474c:	d107      	bne.n	800475e <HAL_ADC_ConfigChannel+0x4d2>
 800474e:	683b      	ldr	r3, [r7, #0]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	0e9b      	lsrs	r3, r3, #26
 8004754:	3301      	adds	r3, #1
 8004756:	069b      	lsls	r3, r3, #26
 8004758:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800475c:	e015      	b.n	800478a <HAL_ADC_ConfigChannel+0x4fe>
 800475e:	683b      	ldr	r3, [r7, #0]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	653b      	str	r3, [r7, #80]	@ 0x50
 8004764:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004766:	fa93 f3a3 	rbit	r3, r3
 800476a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800476c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800476e:	657b      	str	r3, [r7, #84]	@ 0x54
 8004770:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004772:	2b00      	cmp	r3, #0
 8004774:	d101      	bne.n	800477a <HAL_ADC_ConfigChannel+0x4ee>
 8004776:	2320      	movs	r3, #32
 8004778:	e003      	b.n	8004782 <HAL_ADC_ConfigChannel+0x4f6>
 800477a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800477c:	fab3 f383 	clz	r3, r3
 8004780:	b2db      	uxtb	r3, r3
 8004782:	3301      	adds	r3, #1
 8004784:	069b      	lsls	r3, r3, #26
 8004786:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800478a:	683b      	ldr	r3, [r7, #0]
 800478c:	681b      	ldr	r3, [r3, #0]
 800478e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004792:	2b00      	cmp	r3, #0
 8004794:	d109      	bne.n	80047aa <HAL_ADC_ConfigChannel+0x51e>
 8004796:	683b      	ldr	r3, [r7, #0]
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	0e9b      	lsrs	r3, r3, #26
 800479c:	3301      	adds	r3, #1
 800479e:	f003 031f 	and.w	r3, r3, #31
 80047a2:	2101      	movs	r1, #1
 80047a4:	fa01 f303 	lsl.w	r3, r1, r3
 80047a8:	e017      	b.n	80047da <HAL_ADC_ConfigChannel+0x54e>
 80047aa:	683b      	ldr	r3, [r7, #0]
 80047ac:	681b      	ldr	r3, [r3, #0]
 80047ae:	647b      	str	r3, [r7, #68]	@ 0x44
 80047b0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80047b2:	fa93 f3a3 	rbit	r3, r3
 80047b6:	643b      	str	r3, [r7, #64]	@ 0x40
 80047b8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80047ba:	64bb      	str	r3, [r7, #72]	@ 0x48
 80047bc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80047be:	2b00      	cmp	r3, #0
 80047c0:	d101      	bne.n	80047c6 <HAL_ADC_ConfigChannel+0x53a>
 80047c2:	2320      	movs	r3, #32
 80047c4:	e003      	b.n	80047ce <HAL_ADC_ConfigChannel+0x542>
 80047c6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80047c8:	fab3 f383 	clz	r3, r3
 80047cc:	b2db      	uxtb	r3, r3
 80047ce:	3301      	adds	r3, #1
 80047d0:	f003 031f 	and.w	r3, r3, #31
 80047d4:	2101      	movs	r1, #1
 80047d6:	fa01 f303 	lsl.w	r3, r1, r3
 80047da:	ea42 0103 	orr.w	r1, r2, r3
 80047de:	683b      	ldr	r3, [r7, #0]
 80047e0:	681b      	ldr	r3, [r3, #0]
 80047e2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80047e6:	2b00      	cmp	r3, #0
 80047e8:	d10a      	bne.n	8004800 <HAL_ADC_ConfigChannel+0x574>
 80047ea:	683b      	ldr	r3, [r7, #0]
 80047ec:	681b      	ldr	r3, [r3, #0]
 80047ee:	0e9b      	lsrs	r3, r3, #26
 80047f0:	3301      	adds	r3, #1
 80047f2:	f003 021f 	and.w	r2, r3, #31
 80047f6:	4613      	mov	r3, r2
 80047f8:	005b      	lsls	r3, r3, #1
 80047fa:	4413      	add	r3, r2
 80047fc:	051b      	lsls	r3, r3, #20
 80047fe:	e018      	b.n	8004832 <HAL_ADC_ConfigChannel+0x5a6>
 8004800:	683b      	ldr	r3, [r7, #0]
 8004802:	681b      	ldr	r3, [r3, #0]
 8004804:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004806:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004808:	fa93 f3a3 	rbit	r3, r3
 800480c:	637b      	str	r3, [r7, #52]	@ 0x34
 800480e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004810:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004812:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004814:	2b00      	cmp	r3, #0
 8004816:	d101      	bne.n	800481c <HAL_ADC_ConfigChannel+0x590>
 8004818:	2320      	movs	r3, #32
 800481a:	e003      	b.n	8004824 <HAL_ADC_ConfigChannel+0x598>
 800481c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800481e:	fab3 f383 	clz	r3, r3
 8004822:	b2db      	uxtb	r3, r3
 8004824:	3301      	adds	r3, #1
 8004826:	f003 021f 	and.w	r2, r3, #31
 800482a:	4613      	mov	r3, r2
 800482c:	005b      	lsls	r3, r3, #1
 800482e:	4413      	add	r3, r2
 8004830:	051b      	lsls	r3, r3, #20
 8004832:	430b      	orrs	r3, r1
 8004834:	e081      	b.n	800493a <HAL_ADC_ConfigChannel+0x6ae>
 8004836:	683b      	ldr	r3, [r7, #0]
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800483e:	2b00      	cmp	r3, #0
 8004840:	d107      	bne.n	8004852 <HAL_ADC_ConfigChannel+0x5c6>
 8004842:	683b      	ldr	r3, [r7, #0]
 8004844:	681b      	ldr	r3, [r3, #0]
 8004846:	0e9b      	lsrs	r3, r3, #26
 8004848:	3301      	adds	r3, #1
 800484a:	069b      	lsls	r3, r3, #26
 800484c:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004850:	e015      	b.n	800487e <HAL_ADC_ConfigChannel+0x5f2>
 8004852:	683b      	ldr	r3, [r7, #0]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004858:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800485a:	fa93 f3a3 	rbit	r3, r3
 800485e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004860:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004862:	633b      	str	r3, [r7, #48]	@ 0x30
 8004864:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004866:	2b00      	cmp	r3, #0
 8004868:	d101      	bne.n	800486e <HAL_ADC_ConfigChannel+0x5e2>
 800486a:	2320      	movs	r3, #32
 800486c:	e003      	b.n	8004876 <HAL_ADC_ConfigChannel+0x5ea>
 800486e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004870:	fab3 f383 	clz	r3, r3
 8004874:	b2db      	uxtb	r3, r3
 8004876:	3301      	adds	r3, #1
 8004878:	069b      	lsls	r3, r3, #26
 800487a:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800487e:	683b      	ldr	r3, [r7, #0]
 8004880:	681b      	ldr	r3, [r3, #0]
 8004882:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004886:	2b00      	cmp	r3, #0
 8004888:	d109      	bne.n	800489e <HAL_ADC_ConfigChannel+0x612>
 800488a:	683b      	ldr	r3, [r7, #0]
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	0e9b      	lsrs	r3, r3, #26
 8004890:	3301      	adds	r3, #1
 8004892:	f003 031f 	and.w	r3, r3, #31
 8004896:	2101      	movs	r1, #1
 8004898:	fa01 f303 	lsl.w	r3, r1, r3
 800489c:	e017      	b.n	80048ce <HAL_ADC_ConfigChannel+0x642>
 800489e:	683b      	ldr	r3, [r7, #0]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	623b      	str	r3, [r7, #32]
 80048a4:	6a3b      	ldr	r3, [r7, #32]
 80048a6:	fa93 f3a3 	rbit	r3, r3
 80048aa:	61fb      	str	r3, [r7, #28]
 80048ac:	69fb      	ldr	r3, [r7, #28]
 80048ae:	627b      	str	r3, [r7, #36]	@ 0x24
 80048b0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d101      	bne.n	80048ba <HAL_ADC_ConfigChannel+0x62e>
 80048b6:	2320      	movs	r3, #32
 80048b8:	e003      	b.n	80048c2 <HAL_ADC_ConfigChannel+0x636>
 80048ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048bc:	fab3 f383 	clz	r3, r3
 80048c0:	b2db      	uxtb	r3, r3
 80048c2:	3301      	adds	r3, #1
 80048c4:	f003 031f 	and.w	r3, r3, #31
 80048c8:	2101      	movs	r1, #1
 80048ca:	fa01 f303 	lsl.w	r3, r1, r3
 80048ce:	ea42 0103 	orr.w	r1, r2, r3
 80048d2:	683b      	ldr	r3, [r7, #0]
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80048da:	2b00      	cmp	r3, #0
 80048dc:	d10d      	bne.n	80048fa <HAL_ADC_ConfigChannel+0x66e>
 80048de:	683b      	ldr	r3, [r7, #0]
 80048e0:	681b      	ldr	r3, [r3, #0]
 80048e2:	0e9b      	lsrs	r3, r3, #26
 80048e4:	3301      	adds	r3, #1
 80048e6:	f003 021f 	and.w	r2, r3, #31
 80048ea:	4613      	mov	r3, r2
 80048ec:	005b      	lsls	r3, r3, #1
 80048ee:	4413      	add	r3, r2
 80048f0:	3b1e      	subs	r3, #30
 80048f2:	051b      	lsls	r3, r3, #20
 80048f4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80048f8:	e01e      	b.n	8004938 <HAL_ADC_ConfigChannel+0x6ac>
 80048fa:	683b      	ldr	r3, [r7, #0]
 80048fc:	681b      	ldr	r3, [r3, #0]
 80048fe:	617b      	str	r3, [r7, #20]
 8004900:	697b      	ldr	r3, [r7, #20]
 8004902:	fa93 f3a3 	rbit	r3, r3
 8004906:	613b      	str	r3, [r7, #16]
 8004908:	693b      	ldr	r3, [r7, #16]
 800490a:	61bb      	str	r3, [r7, #24]
 800490c:	69bb      	ldr	r3, [r7, #24]
 800490e:	2b00      	cmp	r3, #0
 8004910:	d104      	bne.n	800491c <HAL_ADC_ConfigChannel+0x690>
 8004912:	2320      	movs	r3, #32
 8004914:	e006      	b.n	8004924 <HAL_ADC_ConfigChannel+0x698>
 8004916:	bf00      	nop
 8004918:	407f0000 	.word	0x407f0000
 800491c:	69bb      	ldr	r3, [r7, #24]
 800491e:	fab3 f383 	clz	r3, r3
 8004922:	b2db      	uxtb	r3, r3
 8004924:	3301      	adds	r3, #1
 8004926:	f003 021f 	and.w	r2, r3, #31
 800492a:	4613      	mov	r3, r2
 800492c:	005b      	lsls	r3, r3, #1
 800492e:	4413      	add	r3, r2
 8004930:	3b1e      	subs	r3, #30
 8004932:	051b      	lsls	r3, r3, #20
 8004934:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8004938:	430b      	orrs	r3, r1
 800493a:	683a      	ldr	r2, [r7, #0]
 800493c:	6892      	ldr	r2, [r2, #8]
 800493e:	4619      	mov	r1, r3
 8004940:	f7ff f941 	bl	8003bc6 <LL_ADC_SetChannelSamplingTime>
 8004944:	683b      	ldr	r3, [r7, #0]
 8004946:	681a      	ldr	r2, [r3, #0]
 8004948:	4b3f      	ldr	r3, [pc, #252]	@ (8004a48 <HAL_ADC_ConfigChannel+0x7bc>)
 800494a:	4013      	ands	r3, r2
 800494c:	2b00      	cmp	r3, #0
 800494e:	d071      	beq.n	8004a34 <HAL_ADC_ConfigChannel+0x7a8>
 8004950:	483e      	ldr	r0, [pc, #248]	@ (8004a4c <HAL_ADC_ConfigChannel+0x7c0>)
 8004952:	f7ff f84d 	bl	80039f0 <LL_ADC_GetCommonPathInternalCh>
 8004956:	f8c7 00c4 	str.w	r0, [r7, #196]	@ 0xc4
 800495a:	683b      	ldr	r3, [r7, #0]
 800495c:	681b      	ldr	r3, [r3, #0]
 800495e:	4a3c      	ldr	r2, [pc, #240]	@ (8004a50 <HAL_ADC_ConfigChannel+0x7c4>)
 8004960:	4293      	cmp	r3, r2
 8004962:	d004      	beq.n	800496e <HAL_ADC_ConfigChannel+0x6e2>
 8004964:	683b      	ldr	r3, [r7, #0]
 8004966:	681b      	ldr	r3, [r3, #0]
 8004968:	4a3a      	ldr	r2, [pc, #232]	@ (8004a54 <HAL_ADC_ConfigChannel+0x7c8>)
 800496a:	4293      	cmp	r3, r2
 800496c:	d127      	bne.n	80049be <HAL_ADC_ConfigChannel+0x732>
 800496e:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8004972:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8004976:	2b00      	cmp	r3, #0
 8004978:	d121      	bne.n	80049be <HAL_ADC_ConfigChannel+0x732>
 800497a:	687b      	ldr	r3, [r7, #4]
 800497c:	681b      	ldr	r3, [r3, #0]
 800497e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8004982:	d157      	bne.n	8004a34 <HAL_ADC_ConfigChannel+0x7a8>
 8004984:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8004988:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800498c:	4619      	mov	r1, r3
 800498e:	482f      	ldr	r0, [pc, #188]	@ (8004a4c <HAL_ADC_ConfigChannel+0x7c0>)
 8004990:	f7ff f81b 	bl	80039ca <LL_ADC_SetCommonPathInternalCh>
 8004994:	4b30      	ldr	r3, [pc, #192]	@ (8004a58 <HAL_ADC_ConfigChannel+0x7cc>)
 8004996:	681b      	ldr	r3, [r3, #0]
 8004998:	099b      	lsrs	r3, r3, #6
 800499a:	4a30      	ldr	r2, [pc, #192]	@ (8004a5c <HAL_ADC_ConfigChannel+0x7d0>)
 800499c:	fba2 2303 	umull	r2, r3, r2, r3
 80049a0:	099b      	lsrs	r3, r3, #6
 80049a2:	1c5a      	adds	r2, r3, #1
 80049a4:	4613      	mov	r3, r2
 80049a6:	005b      	lsls	r3, r3, #1
 80049a8:	4413      	add	r3, r2
 80049aa:	009b      	lsls	r3, r3, #2
 80049ac:	60fb      	str	r3, [r7, #12]
 80049ae:	e002      	b.n	80049b6 <HAL_ADC_ConfigChannel+0x72a>
 80049b0:	68fb      	ldr	r3, [r7, #12]
 80049b2:	3b01      	subs	r3, #1
 80049b4:	60fb      	str	r3, [r7, #12]
 80049b6:	68fb      	ldr	r3, [r7, #12]
 80049b8:	2b00      	cmp	r3, #0
 80049ba:	d1f9      	bne.n	80049b0 <HAL_ADC_ConfigChannel+0x724>
 80049bc:	e03a      	b.n	8004a34 <HAL_ADC_ConfigChannel+0x7a8>
 80049be:	683b      	ldr	r3, [r7, #0]
 80049c0:	681b      	ldr	r3, [r3, #0]
 80049c2:	4a27      	ldr	r2, [pc, #156]	@ (8004a60 <HAL_ADC_ConfigChannel+0x7d4>)
 80049c4:	4293      	cmp	r3, r2
 80049c6:	d113      	bne.n	80049f0 <HAL_ADC_ConfigChannel+0x764>
 80049c8:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80049cc:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80049d0:	2b00      	cmp	r3, #0
 80049d2:	d10d      	bne.n	80049f0 <HAL_ADC_ConfigChannel+0x764>
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	681b      	ldr	r3, [r3, #0]
 80049d8:	4a22      	ldr	r2, [pc, #136]	@ (8004a64 <HAL_ADC_ConfigChannel+0x7d8>)
 80049da:	4293      	cmp	r3, r2
 80049dc:	d02a      	beq.n	8004a34 <HAL_ADC_ConfigChannel+0x7a8>
 80049de:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80049e2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80049e6:	4619      	mov	r1, r3
 80049e8:	4818      	ldr	r0, [pc, #96]	@ (8004a4c <HAL_ADC_ConfigChannel+0x7c0>)
 80049ea:	f7fe ffee 	bl	80039ca <LL_ADC_SetCommonPathInternalCh>
 80049ee:	e021      	b.n	8004a34 <HAL_ADC_ConfigChannel+0x7a8>
 80049f0:	683b      	ldr	r3, [r7, #0]
 80049f2:	681b      	ldr	r3, [r3, #0]
 80049f4:	4a1c      	ldr	r2, [pc, #112]	@ (8004a68 <HAL_ADC_ConfigChannel+0x7dc>)
 80049f6:	4293      	cmp	r3, r2
 80049f8:	d11c      	bne.n	8004a34 <HAL_ADC_ConfigChannel+0x7a8>
 80049fa:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80049fe:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004a02:	2b00      	cmp	r3, #0
 8004a04:	d116      	bne.n	8004a34 <HAL_ADC_ConfigChannel+0x7a8>
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	681b      	ldr	r3, [r3, #0]
 8004a0a:	4a16      	ldr	r2, [pc, #88]	@ (8004a64 <HAL_ADC_ConfigChannel+0x7d8>)
 8004a0c:	4293      	cmp	r3, r2
 8004a0e:	d011      	beq.n	8004a34 <HAL_ADC_ConfigChannel+0x7a8>
 8004a10:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8004a14:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8004a18:	4619      	mov	r1, r3
 8004a1a:	480c      	ldr	r0, [pc, #48]	@ (8004a4c <HAL_ADC_ConfigChannel+0x7c0>)
 8004a1c:	f7fe ffd5 	bl	80039ca <LL_ADC_SetCommonPathInternalCh>
 8004a20:	e008      	b.n	8004a34 <HAL_ADC_ConfigChannel+0x7a8>
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004a26:	f043 0220 	orr.w	r2, r3, #32
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004a2e:	2301      	movs	r3, #1
 8004a30:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8004a34:	687b      	ldr	r3, [r7, #4]
 8004a36:	2200      	movs	r2, #0
 8004a38:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004a3c:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 8004a40:	4618      	mov	r0, r3
 8004a42:	37d8      	adds	r7, #216	@ 0xd8
 8004a44:	46bd      	mov	sp, r7
 8004a46:	bd80      	pop	{r7, pc}
 8004a48:	80080000 	.word	0x80080000
 8004a4c:	50000300 	.word	0x50000300
 8004a50:	c3210000 	.word	0xc3210000
 8004a54:	90c00010 	.word	0x90c00010
 8004a58:	20000000 	.word	0x20000000
 8004a5c:	053e2d63 	.word	0x053e2d63
 8004a60:	c7520000 	.word	0xc7520000
 8004a64:	50000100 	.word	0x50000100
 8004a68:	cb840000 	.word	0xcb840000

08004a6c <ADC_Enable>:
 8004a6c:	b580      	push	{r7, lr}
 8004a6e:	b084      	sub	sp, #16
 8004a70:	af00      	add	r7, sp, #0
 8004a72:	6078      	str	r0, [r7, #4]
 8004a74:	2300      	movs	r3, #0
 8004a76:	60bb      	str	r3, [r7, #8]
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	4618      	mov	r0, r3
 8004a7e:	f7ff f961 	bl	8003d44 <LL_ADC_IsEnabled>
 8004a82:	4603      	mov	r3, r0
 8004a84:	2b00      	cmp	r3, #0
 8004a86:	d169      	bne.n	8004b5c <ADC_Enable+0xf0>
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	681b      	ldr	r3, [r3, #0]
 8004a8c:	689a      	ldr	r2, [r3, #8]
 8004a8e:	4b36      	ldr	r3, [pc, #216]	@ (8004b68 <ADC_Enable+0xfc>)
 8004a90:	4013      	ands	r3, r2
 8004a92:	2b00      	cmp	r3, #0
 8004a94:	d00d      	beq.n	8004ab2 <ADC_Enable+0x46>
 8004a96:	687b      	ldr	r3, [r7, #4]
 8004a98:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004a9a:	f043 0210 	orr.w	r2, r3, #16
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004aa2:	687b      	ldr	r3, [r7, #4]
 8004aa4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004aa6:	f043 0201 	orr.w	r2, r3, #1
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	661a      	str	r2, [r3, #96]	@ 0x60
 8004aae:	2301      	movs	r3, #1
 8004ab0:	e055      	b.n	8004b5e <ADC_Enable+0xf2>
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	681b      	ldr	r3, [r3, #0]
 8004ab6:	4618      	mov	r0, r3
 8004ab8:	f7ff f930 	bl	8003d1c <LL_ADC_Enable>
 8004abc:	482b      	ldr	r0, [pc, #172]	@ (8004b6c <ADC_Enable+0x100>)
 8004abe:	f7fe ff97 	bl	80039f0 <LL_ADC_GetCommonPathInternalCh>
 8004ac2:	4603      	mov	r3, r0
 8004ac4:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8004ac8:	2b00      	cmp	r3, #0
 8004aca:	d013      	beq.n	8004af4 <ADC_Enable+0x88>
 8004acc:	4b28      	ldr	r3, [pc, #160]	@ (8004b70 <ADC_Enable+0x104>)
 8004ace:	681b      	ldr	r3, [r3, #0]
 8004ad0:	099b      	lsrs	r3, r3, #6
 8004ad2:	4a28      	ldr	r2, [pc, #160]	@ (8004b74 <ADC_Enable+0x108>)
 8004ad4:	fba2 2303 	umull	r2, r3, r2, r3
 8004ad8:	099b      	lsrs	r3, r3, #6
 8004ada:	1c5a      	adds	r2, r3, #1
 8004adc:	4613      	mov	r3, r2
 8004ade:	005b      	lsls	r3, r3, #1
 8004ae0:	4413      	add	r3, r2
 8004ae2:	009b      	lsls	r3, r3, #2
 8004ae4:	60bb      	str	r3, [r7, #8]
 8004ae6:	e002      	b.n	8004aee <ADC_Enable+0x82>
 8004ae8:	68bb      	ldr	r3, [r7, #8]
 8004aea:	3b01      	subs	r3, #1
 8004aec:	60bb      	str	r3, [r7, #8]
 8004aee:	68bb      	ldr	r3, [r7, #8]
 8004af0:	2b00      	cmp	r3, #0
 8004af2:	d1f9      	bne.n	8004ae8 <ADC_Enable+0x7c>
 8004af4:	f7fe ff4a 	bl	800398c <HAL_GetTick>
 8004af8:	60f8      	str	r0, [r7, #12]
 8004afa:	e028      	b.n	8004b4e <ADC_Enable+0xe2>
 8004afc:	687b      	ldr	r3, [r7, #4]
 8004afe:	681b      	ldr	r3, [r3, #0]
 8004b00:	4618      	mov	r0, r3
 8004b02:	f7ff f91f 	bl	8003d44 <LL_ADC_IsEnabled>
 8004b06:	4603      	mov	r3, r0
 8004b08:	2b00      	cmp	r3, #0
 8004b0a:	d104      	bne.n	8004b16 <ADC_Enable+0xaa>
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	4618      	mov	r0, r3
 8004b12:	f7ff f903 	bl	8003d1c <LL_ADC_Enable>
 8004b16:	f7fe ff39 	bl	800398c <HAL_GetTick>
 8004b1a:	4602      	mov	r2, r0
 8004b1c:	68fb      	ldr	r3, [r7, #12]
 8004b1e:	1ad3      	subs	r3, r2, r3
 8004b20:	2b02      	cmp	r3, #2
 8004b22:	d914      	bls.n	8004b4e <ADC_Enable+0xe2>
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	681b      	ldr	r3, [r3, #0]
 8004b28:	681b      	ldr	r3, [r3, #0]
 8004b2a:	f003 0301 	and.w	r3, r3, #1
 8004b2e:	2b01      	cmp	r3, #1
 8004b30:	d00d      	beq.n	8004b4e <ADC_Enable+0xe2>
 8004b32:	687b      	ldr	r3, [r7, #4]
 8004b34:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004b36:	f043 0210 	orr.w	r2, r3, #16
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004b3e:	687b      	ldr	r3, [r7, #4]
 8004b40:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004b42:	f043 0201 	orr.w	r2, r3, #1
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	661a      	str	r2, [r3, #96]	@ 0x60
 8004b4a:	2301      	movs	r3, #1
 8004b4c:	e007      	b.n	8004b5e <ADC_Enable+0xf2>
 8004b4e:	687b      	ldr	r3, [r7, #4]
 8004b50:	681b      	ldr	r3, [r3, #0]
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	f003 0301 	and.w	r3, r3, #1
 8004b58:	2b01      	cmp	r3, #1
 8004b5a:	d1cf      	bne.n	8004afc <ADC_Enable+0x90>
 8004b5c:	2300      	movs	r3, #0
 8004b5e:	4618      	mov	r0, r3
 8004b60:	3710      	adds	r7, #16
 8004b62:	46bd      	mov	sp, r7
 8004b64:	bd80      	pop	{r7, pc}
 8004b66:	bf00      	nop
 8004b68:	8000003f 	.word	0x8000003f
 8004b6c:	50000300 	.word	0x50000300
 8004b70:	20000000 	.word	0x20000000
 8004b74:	053e2d63 	.word	0x053e2d63

08004b78 <ADC_DMAConvCplt>:
 8004b78:	b580      	push	{r7, lr}
 8004b7a:	b084      	sub	sp, #16
 8004b7c:	af00      	add	r7, sp, #0
 8004b7e:	6078      	str	r0, [r7, #4]
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004b84:	60fb      	str	r3, [r7, #12]
 8004b86:	68fb      	ldr	r3, [r7, #12]
 8004b88:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004b8a:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8004b8e:	2b00      	cmp	r3, #0
 8004b90:	d14b      	bne.n	8004c2a <ADC_DMAConvCplt+0xb2>
 8004b92:	68fb      	ldr	r3, [r7, #12]
 8004b94:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004b96:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8004b9a:	68fb      	ldr	r3, [r7, #12]
 8004b9c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004b9e:	68fb      	ldr	r3, [r7, #12]
 8004ba0:	681b      	ldr	r3, [r3, #0]
 8004ba2:	681b      	ldr	r3, [r3, #0]
 8004ba4:	f003 0308 	and.w	r3, r3, #8
 8004ba8:	2b00      	cmp	r3, #0
 8004baa:	d021      	beq.n	8004bf0 <ADC_DMAConvCplt+0x78>
 8004bac:	68fb      	ldr	r3, [r7, #12]
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	4618      	mov	r0, r3
 8004bb2:	f7fe ffc9 	bl	8003b48 <LL_ADC_REG_IsTriggerSourceSWStart>
 8004bb6:	4603      	mov	r3, r0
 8004bb8:	2b00      	cmp	r3, #0
 8004bba:	d032      	beq.n	8004c22 <ADC_DMAConvCplt+0xaa>
 8004bbc:	68fb      	ldr	r3, [r7, #12]
 8004bbe:	681b      	ldr	r3, [r3, #0]
 8004bc0:	68db      	ldr	r3, [r3, #12]
 8004bc2:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004bc6:	2b00      	cmp	r3, #0
 8004bc8:	d12b      	bne.n	8004c22 <ADC_DMAConvCplt+0xaa>
 8004bca:	68fb      	ldr	r3, [r7, #12]
 8004bcc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004bce:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004bd2:	68fb      	ldr	r3, [r7, #12]
 8004bd4:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004bd6:	68fb      	ldr	r3, [r7, #12]
 8004bd8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004bda:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004bde:	2b00      	cmp	r3, #0
 8004be0:	d11f      	bne.n	8004c22 <ADC_DMAConvCplt+0xaa>
 8004be2:	68fb      	ldr	r3, [r7, #12]
 8004be4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004be6:	f043 0201 	orr.w	r2, r3, #1
 8004bea:	68fb      	ldr	r3, [r7, #12]
 8004bec:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004bee:	e018      	b.n	8004c22 <ADC_DMAConvCplt+0xaa>
 8004bf0:	68fb      	ldr	r3, [r7, #12]
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	68db      	ldr	r3, [r3, #12]
 8004bf6:	f003 0302 	and.w	r3, r3, #2
 8004bfa:	2b00      	cmp	r3, #0
 8004bfc:	d111      	bne.n	8004c22 <ADC_DMAConvCplt+0xaa>
 8004bfe:	68fb      	ldr	r3, [r7, #12]
 8004c00:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004c02:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004c06:	68fb      	ldr	r3, [r7, #12]
 8004c08:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004c0a:	68fb      	ldr	r3, [r7, #12]
 8004c0c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004c0e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	d105      	bne.n	8004c22 <ADC_DMAConvCplt+0xaa>
 8004c16:	68fb      	ldr	r3, [r7, #12]
 8004c18:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004c1a:	f043 0201 	orr.w	r2, r3, #1
 8004c1e:	68fb      	ldr	r3, [r7, #12]
 8004c20:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004c22:	68f8      	ldr	r0, [r7, #12]
 8004c24:	f7ff fb14 	bl	8004250 <HAL_ADC_ConvCpltCallback>
 8004c28:	e00e      	b.n	8004c48 <ADC_DMAConvCplt+0xd0>
 8004c2a:	68fb      	ldr	r3, [r7, #12]
 8004c2c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004c2e:	f003 0310 	and.w	r3, r3, #16
 8004c32:	2b00      	cmp	r3, #0
 8004c34:	d003      	beq.n	8004c3e <ADC_DMAConvCplt+0xc6>
 8004c36:	68f8      	ldr	r0, [r7, #12]
 8004c38:	f7ff fb1e 	bl	8004278 <HAL_ADC_ErrorCallback>
 8004c3c:	e004      	b.n	8004c48 <ADC_DMAConvCplt+0xd0>
 8004c3e:	68fb      	ldr	r3, [r7, #12]
 8004c40:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004c42:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004c44:	6878      	ldr	r0, [r7, #4]
 8004c46:	4798      	blx	r3
 8004c48:	bf00      	nop
 8004c4a:	3710      	adds	r7, #16
 8004c4c:	46bd      	mov	sp, r7
 8004c4e:	bd80      	pop	{r7, pc}

08004c50 <ADC_DMAHalfConvCplt>:
 8004c50:	b580      	push	{r7, lr}
 8004c52:	b084      	sub	sp, #16
 8004c54:	af00      	add	r7, sp, #0
 8004c56:	6078      	str	r0, [r7, #4]
 8004c58:	687b      	ldr	r3, [r7, #4]
 8004c5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004c5c:	60fb      	str	r3, [r7, #12]
 8004c5e:	68f8      	ldr	r0, [r7, #12]
 8004c60:	f7ff fb00 	bl	8004264 <HAL_ADC_ConvHalfCpltCallback>
 8004c64:	bf00      	nop
 8004c66:	3710      	adds	r7, #16
 8004c68:	46bd      	mov	sp, r7
 8004c6a:	bd80      	pop	{r7, pc}

08004c6c <ADC_DMAError>:
 8004c6c:	b580      	push	{r7, lr}
 8004c6e:	b084      	sub	sp, #16
 8004c70:	af00      	add	r7, sp, #0
 8004c72:	6078      	str	r0, [r7, #4]
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004c78:	60fb      	str	r3, [r7, #12]
 8004c7a:	68fb      	ldr	r3, [r7, #12]
 8004c7c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004c7e:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8004c82:	68fb      	ldr	r3, [r7, #12]
 8004c84:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004c86:	68fb      	ldr	r3, [r7, #12]
 8004c88:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004c8a:	f043 0204 	orr.w	r2, r3, #4
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	661a      	str	r2, [r3, #96]	@ 0x60
 8004c92:	68f8      	ldr	r0, [r7, #12]
 8004c94:	f7ff faf0 	bl	8004278 <HAL_ADC_ErrorCallback>
 8004c98:	bf00      	nop
 8004c9a:	3710      	adds	r7, #16
 8004c9c:	46bd      	mov	sp, r7
 8004c9e:	bd80      	pop	{r7, pc}

08004ca0 <LL_ADC_IsEnabled>:
 8004ca0:	b480      	push	{r7}
 8004ca2:	b083      	sub	sp, #12
 8004ca4:	af00      	add	r7, sp, #0
 8004ca6:	6078      	str	r0, [r7, #4]
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	689b      	ldr	r3, [r3, #8]
 8004cac:	f003 0301 	and.w	r3, r3, #1
 8004cb0:	2b01      	cmp	r3, #1
 8004cb2:	d101      	bne.n	8004cb8 <LL_ADC_IsEnabled+0x18>
 8004cb4:	2301      	movs	r3, #1
 8004cb6:	e000      	b.n	8004cba <LL_ADC_IsEnabled+0x1a>
 8004cb8:	2300      	movs	r3, #0
 8004cba:	4618      	mov	r0, r3
 8004cbc:	370c      	adds	r7, #12
 8004cbe:	46bd      	mov	sp, r7
 8004cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cc4:	4770      	bx	lr

08004cc6 <LL_ADC_REG_IsConversionOngoing>:
 8004cc6:	b480      	push	{r7}
 8004cc8:	b083      	sub	sp, #12
 8004cca:	af00      	add	r7, sp, #0
 8004ccc:	6078      	str	r0, [r7, #4]
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	689b      	ldr	r3, [r3, #8]
 8004cd2:	f003 0304 	and.w	r3, r3, #4
 8004cd6:	2b04      	cmp	r3, #4
 8004cd8:	d101      	bne.n	8004cde <LL_ADC_REG_IsConversionOngoing+0x18>
 8004cda:	2301      	movs	r3, #1
 8004cdc:	e000      	b.n	8004ce0 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8004cde:	2300      	movs	r3, #0
 8004ce0:	4618      	mov	r0, r3
 8004ce2:	370c      	adds	r7, #12
 8004ce4:	46bd      	mov	sp, r7
 8004ce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cea:	4770      	bx	lr

08004cec <HAL_ADCEx_MultiModeConfigChannel>:
 8004cec:	b590      	push	{r4, r7, lr}
 8004cee:	b0a1      	sub	sp, #132	@ 0x84
 8004cf0:	af00      	add	r7, sp, #0
 8004cf2:	6078      	str	r0, [r7, #4]
 8004cf4:	6039      	str	r1, [r7, #0]
 8004cf6:	2300      	movs	r3, #0
 8004cf8:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8004d02:	2b01      	cmp	r3, #1
 8004d04:	d101      	bne.n	8004d0a <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 8004d06:	2302      	movs	r3, #2
 8004d08:	e08b      	b.n	8004e22 <HAL_ADCEx_MultiModeConfigChannel+0x136>
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	2201      	movs	r2, #1
 8004d0e:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004d12:	2300      	movs	r3, #0
 8004d14:	667b      	str	r3, [r7, #100]	@ 0x64
 8004d16:	2300      	movs	r3, #0
 8004d18:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	681b      	ldr	r3, [r3, #0]
 8004d1e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8004d22:	d102      	bne.n	8004d2a <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 8004d24:	4b41      	ldr	r3, [pc, #260]	@ (8004e2c <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8004d26:	60bb      	str	r3, [r7, #8]
 8004d28:	e001      	b.n	8004d2e <HAL_ADCEx_MultiModeConfigChannel+0x42>
 8004d2a:	2300      	movs	r3, #0
 8004d2c:	60bb      	str	r3, [r7, #8]
 8004d2e:	68bb      	ldr	r3, [r7, #8]
 8004d30:	2b00      	cmp	r3, #0
 8004d32:	d10b      	bne.n	8004d4c <HAL_ADCEx_MultiModeConfigChannel+0x60>
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004d38:	f043 0220 	orr.w	r2, r3, #32
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	2200      	movs	r2, #0
 8004d44:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004d48:	2301      	movs	r3, #1
 8004d4a:	e06a      	b.n	8004e22 <HAL_ADCEx_MultiModeConfigChannel+0x136>
 8004d4c:	68bb      	ldr	r3, [r7, #8]
 8004d4e:	4618      	mov	r0, r3
 8004d50:	f7ff ffb9 	bl	8004cc6 <LL_ADC_REG_IsConversionOngoing>
 8004d54:	67b8      	str	r0, [r7, #120]	@ 0x78
 8004d56:	687b      	ldr	r3, [r7, #4]
 8004d58:	681b      	ldr	r3, [r3, #0]
 8004d5a:	4618      	mov	r0, r3
 8004d5c:	f7ff ffb3 	bl	8004cc6 <LL_ADC_REG_IsConversionOngoing>
 8004d60:	4603      	mov	r3, r0
 8004d62:	2b00      	cmp	r3, #0
 8004d64:	d14c      	bne.n	8004e00 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 8004d66:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004d68:	2b00      	cmp	r3, #0
 8004d6a:	d149      	bne.n	8004e00 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 8004d6c:	4b30      	ldr	r3, [pc, #192]	@ (8004e30 <HAL_ADCEx_MultiModeConfigChannel+0x144>)
 8004d6e:	677b      	str	r3, [r7, #116]	@ 0x74
 8004d70:	683b      	ldr	r3, [r7, #0]
 8004d72:	681b      	ldr	r3, [r3, #0]
 8004d74:	2b00      	cmp	r3, #0
 8004d76:	d028      	beq.n	8004dca <HAL_ADCEx_MultiModeConfigChannel+0xde>
 8004d78:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004d7a:	689b      	ldr	r3, [r3, #8]
 8004d7c:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004d80:	683b      	ldr	r3, [r7, #0]
 8004d82:	6859      	ldr	r1, [r3, #4]
 8004d84:	687b      	ldr	r3, [r7, #4]
 8004d86:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8004d8a:	035b      	lsls	r3, r3, #13
 8004d8c:	430b      	orrs	r3, r1
 8004d8e:	431a      	orrs	r2, r3
 8004d90:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004d92:	609a      	str	r2, [r3, #8]
 8004d94:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8004d98:	f7ff ff82 	bl	8004ca0 <LL_ADC_IsEnabled>
 8004d9c:	4604      	mov	r4, r0
 8004d9e:	4823      	ldr	r0, [pc, #140]	@ (8004e2c <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8004da0:	f7ff ff7e 	bl	8004ca0 <LL_ADC_IsEnabled>
 8004da4:	4603      	mov	r3, r0
 8004da6:	4323      	orrs	r3, r4
 8004da8:	2b00      	cmp	r3, #0
 8004daa:	d133      	bne.n	8004e14 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8004dac:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004dae:	689b      	ldr	r3, [r3, #8]
 8004db0:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 8004db4:	f023 030f 	bic.w	r3, r3, #15
 8004db8:	683a      	ldr	r2, [r7, #0]
 8004dba:	6811      	ldr	r1, [r2, #0]
 8004dbc:	683a      	ldr	r2, [r7, #0]
 8004dbe:	6892      	ldr	r2, [r2, #8]
 8004dc0:	430a      	orrs	r2, r1
 8004dc2:	431a      	orrs	r2, r3
 8004dc4:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004dc6:	609a      	str	r2, [r3, #8]
 8004dc8:	e024      	b.n	8004e14 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8004dca:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004dcc:	689b      	ldr	r3, [r3, #8]
 8004dce:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004dd2:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004dd4:	609a      	str	r2, [r3, #8]
 8004dd6:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8004dda:	f7ff ff61 	bl	8004ca0 <LL_ADC_IsEnabled>
 8004dde:	4604      	mov	r4, r0
 8004de0:	4812      	ldr	r0, [pc, #72]	@ (8004e2c <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8004de2:	f7ff ff5d 	bl	8004ca0 <LL_ADC_IsEnabled>
 8004de6:	4603      	mov	r3, r0
 8004de8:	4323      	orrs	r3, r4
 8004dea:	2b00      	cmp	r3, #0
 8004dec:	d112      	bne.n	8004e14 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8004dee:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004df0:	689b      	ldr	r3, [r3, #8]
 8004df2:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 8004df6:	f023 030f 	bic.w	r3, r3, #15
 8004dfa:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8004dfc:	6093      	str	r3, [r2, #8]
 8004dfe:	e009      	b.n	8004e14 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004e04:	f043 0220 	orr.w	r2, r3, #32
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004e0c:	2301      	movs	r3, #1
 8004e0e:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8004e12:	e000      	b.n	8004e16 <HAL_ADCEx_MultiModeConfigChannel+0x12a>
 8004e14:	bf00      	nop
 8004e16:	687b      	ldr	r3, [r7, #4]
 8004e18:	2200      	movs	r2, #0
 8004e1a:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004e1e:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 8004e22:	4618      	mov	r0, r3
 8004e24:	3784      	adds	r7, #132	@ 0x84
 8004e26:	46bd      	mov	sp, r7
 8004e28:	bd90      	pop	{r4, r7, pc}
 8004e2a:	bf00      	nop
 8004e2c:	50000100 	.word	0x50000100
 8004e30:	50000300 	.word	0x50000300

08004e34 <HAL_CORDIC_Init>:
 8004e34:	b580      	push	{r7, lr}
 8004e36:	b082      	sub	sp, #8
 8004e38:	af00      	add	r7, sp, #0
 8004e3a:	6078      	str	r0, [r7, #4]
 8004e3c:	687b      	ldr	r3, [r7, #4]
 8004e3e:	2b00      	cmp	r3, #0
 8004e40:	d101      	bne.n	8004e46 <HAL_CORDIC_Init+0x12>
 8004e42:	2301      	movs	r3, #1
 8004e44:	e023      	b.n	8004e8e <HAL_CORDIC_Init+0x5a>
 8004e46:	687b      	ldr	r3, [r7, #4]
 8004e48:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8004e4c:	b2db      	uxtb	r3, r3
 8004e4e:	2b00      	cmp	r3, #0
 8004e50:	d106      	bne.n	8004e60 <HAL_CORDIC_Init+0x2c>
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	2200      	movs	r2, #0
 8004e56:	f883 2020 	strb.w	r2, [r3, #32]
 8004e5a:	6878      	ldr	r0, [r7, #4]
 8004e5c:	f7fb fce6 	bl	800082c <HAL_CORDIC_MspInit>
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	2200      	movs	r2, #0
 8004e64:	625a      	str	r2, [r3, #36]	@ 0x24
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	2200      	movs	r2, #0
 8004e6a:	605a      	str	r2, [r3, #4]
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	2200      	movs	r2, #0
 8004e70:	609a      	str	r2, [r3, #8]
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	2200      	movs	r2, #0
 8004e76:	60da      	str	r2, [r3, #12]
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	2200      	movs	r2, #0
 8004e7c:	611a      	str	r2, [r3, #16]
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	2200      	movs	r2, #0
 8004e82:	615a      	str	r2, [r3, #20]
 8004e84:	687b      	ldr	r3, [r7, #4]
 8004e86:	2201      	movs	r2, #1
 8004e88:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8004e8c:	2300      	movs	r3, #0
 8004e8e:	4618      	mov	r0, r3
 8004e90:	3708      	adds	r7, #8
 8004e92:	46bd      	mov	sp, r7
 8004e94:	bd80      	pop	{r7, pc}
	...

08004e98 <HAL_CORDIC_Configure>:
 8004e98:	b480      	push	{r7}
 8004e9a:	b085      	sub	sp, #20
 8004e9c:	af00      	add	r7, sp, #0
 8004e9e:	6078      	str	r0, [r7, #4]
 8004ea0:	6039      	str	r1, [r7, #0]
 8004ea2:	2300      	movs	r3, #0
 8004ea4:	73fb      	strb	r3, [r7, #15]
 8004ea6:	687b      	ldr	r3, [r7, #4]
 8004ea8:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8004eac:	b2db      	uxtb	r3, r3
 8004eae:	2b01      	cmp	r3, #1
 8004eb0:	d11d      	bne.n	8004eee <HAL_CORDIC_Configure+0x56>
 8004eb2:	687b      	ldr	r3, [r7, #4]
 8004eb4:	681b      	ldr	r3, [r3, #0]
 8004eb6:	681a      	ldr	r2, [r3, #0]
 8004eb8:	4b14      	ldr	r3, [pc, #80]	@ (8004f0c <HAL_CORDIC_Configure+0x74>)
 8004eba:	4013      	ands	r3, r2
 8004ebc:	683a      	ldr	r2, [r7, #0]
 8004ebe:	6811      	ldr	r1, [r2, #0]
 8004ec0:	683a      	ldr	r2, [r7, #0]
 8004ec2:	6992      	ldr	r2, [r2, #24]
 8004ec4:	4311      	orrs	r1, r2
 8004ec6:	683a      	ldr	r2, [r7, #0]
 8004ec8:	6852      	ldr	r2, [r2, #4]
 8004eca:	4311      	orrs	r1, r2
 8004ecc:	683a      	ldr	r2, [r7, #0]
 8004ece:	6912      	ldr	r2, [r2, #16]
 8004ed0:	4311      	orrs	r1, r2
 8004ed2:	683a      	ldr	r2, [r7, #0]
 8004ed4:	6952      	ldr	r2, [r2, #20]
 8004ed6:	4311      	orrs	r1, r2
 8004ed8:	683a      	ldr	r2, [r7, #0]
 8004eda:	6892      	ldr	r2, [r2, #8]
 8004edc:	4311      	orrs	r1, r2
 8004ede:	683a      	ldr	r2, [r7, #0]
 8004ee0:	68d2      	ldr	r2, [r2, #12]
 8004ee2:	4311      	orrs	r1, r2
 8004ee4:	687a      	ldr	r2, [r7, #4]
 8004ee6:	6812      	ldr	r2, [r2, #0]
 8004ee8:	430b      	orrs	r3, r1
 8004eea:	6013      	str	r3, [r2, #0]
 8004eec:	e007      	b.n	8004efe <HAL_CORDIC_Configure+0x66>
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ef2:	f043 0202 	orr.w	r2, r3, #2
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	625a      	str	r2, [r3, #36]	@ 0x24
 8004efa:	2301      	movs	r3, #1
 8004efc:	73fb      	strb	r3, [r7, #15]
 8004efe:	7bfb      	ldrb	r3, [r7, #15]
 8004f00:	4618      	mov	r0, r3
 8004f02:	3714      	adds	r7, #20
 8004f04:	46bd      	mov	sp, r7
 8004f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f0a:	4770      	bx	lr
 8004f0c:	ff87f800 	.word	0xff87f800

08004f10 <HAL_CORDIC_Calculate>:
 8004f10:	b580      	push	{r7, lr}
 8004f12:	b088      	sub	sp, #32
 8004f14:	af00      	add	r7, sp, #0
 8004f16:	60f8      	str	r0, [r7, #12]
 8004f18:	60b9      	str	r1, [r7, #8]
 8004f1a:	607a      	str	r2, [r7, #4]
 8004f1c:	603b      	str	r3, [r7, #0]
 8004f1e:	68bb      	ldr	r3, [r7, #8]
 8004f20:	617b      	str	r3, [r7, #20]
 8004f22:	687b      	ldr	r3, [r7, #4]
 8004f24:	613b      	str	r3, [r7, #16]
 8004f26:	68bb      	ldr	r3, [r7, #8]
 8004f28:	2b00      	cmp	r3, #0
 8004f2a:	d005      	beq.n	8004f38 <HAL_CORDIC_Calculate+0x28>
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	2b00      	cmp	r3, #0
 8004f30:	d002      	beq.n	8004f38 <HAL_CORDIC_Calculate+0x28>
 8004f32:	683b      	ldr	r3, [r7, #0]
 8004f34:	2b00      	cmp	r3, #0
 8004f36:	d107      	bne.n	8004f48 <HAL_CORDIC_Calculate+0x38>
 8004f38:	68fb      	ldr	r3, [r7, #12]
 8004f3a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f3c:	f043 0201 	orr.w	r2, r3, #1
 8004f40:	68fb      	ldr	r3, [r7, #12]
 8004f42:	625a      	str	r2, [r3, #36]	@ 0x24
 8004f44:	2301      	movs	r3, #1
 8004f46:	e058      	b.n	8004ffa <HAL_CORDIC_Calculate+0xea>
 8004f48:	68fb      	ldr	r3, [r7, #12]
 8004f4a:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8004f4e:	b2db      	uxtb	r3, r3
 8004f50:	2b01      	cmp	r3, #1
 8004f52:	d14b      	bne.n	8004fec <HAL_CORDIC_Calculate+0xdc>
 8004f54:	68fb      	ldr	r3, [r7, #12]
 8004f56:	2200      	movs	r2, #0
 8004f58:	625a      	str	r2, [r3, #36]	@ 0x24
 8004f5a:	68fb      	ldr	r3, [r7, #12]
 8004f5c:	2202      	movs	r2, #2
 8004f5e:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8004f62:	f7fe fd13 	bl	800398c <HAL_GetTick>
 8004f66:	61b8      	str	r0, [r7, #24]
 8004f68:	f107 0314 	add.w	r3, r7, #20
 8004f6c:	4619      	mov	r1, r3
 8004f6e:	68f8      	ldr	r0, [r7, #12]
 8004f70:	f000 f847 	bl	8005002 <CORDIC_WriteInDataIncrementPtr>
 8004f74:	683b      	ldr	r3, [r7, #0]
 8004f76:	3b01      	subs	r3, #1
 8004f78:	61fb      	str	r3, [r7, #28]
 8004f7a:	e028      	b.n	8004fce <HAL_CORDIC_Calculate+0xbe>
 8004f7c:	f107 0314 	add.w	r3, r7, #20
 8004f80:	4619      	mov	r1, r3
 8004f82:	68f8      	ldr	r0, [r7, #12]
 8004f84:	f000 f83d 	bl	8005002 <CORDIC_WriteInDataIncrementPtr>
 8004f88:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004f8a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f8e:	d010      	beq.n	8004fb2 <HAL_CORDIC_Calculate+0xa2>
 8004f90:	f7fe fcfc 	bl	800398c <HAL_GetTick>
 8004f94:	4602      	mov	r2, r0
 8004f96:	69bb      	ldr	r3, [r7, #24]
 8004f98:	1ad3      	subs	r3, r2, r3
 8004f9a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8004f9c:	429a      	cmp	r2, r3
 8004f9e:	d208      	bcs.n	8004fb2 <HAL_CORDIC_Calculate+0xa2>
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	2204      	movs	r2, #4
 8004fa4:	625a      	str	r2, [r3, #36]	@ 0x24
 8004fa6:	68fb      	ldr	r3, [r7, #12]
 8004fa8:	2201      	movs	r2, #1
 8004faa:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8004fae:	2301      	movs	r3, #1
 8004fb0:	e023      	b.n	8004ffa <HAL_CORDIC_Calculate+0xea>
 8004fb2:	68fb      	ldr	r3, [r7, #12]
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	681b      	ldr	r3, [r3, #0]
 8004fb8:	2b00      	cmp	r3, #0
 8004fba:	dae5      	bge.n	8004f88 <HAL_CORDIC_Calculate+0x78>
 8004fbc:	f107 0310 	add.w	r3, r7, #16
 8004fc0:	4619      	mov	r1, r3
 8004fc2:	68f8      	ldr	r0, [r7, #12]
 8004fc4:	f000 f846 	bl	8005054 <CORDIC_ReadOutDataIncrementPtr>
 8004fc8:	69fb      	ldr	r3, [r7, #28]
 8004fca:	3b01      	subs	r3, #1
 8004fcc:	61fb      	str	r3, [r7, #28]
 8004fce:	69fb      	ldr	r3, [r7, #28]
 8004fd0:	2b00      	cmp	r3, #0
 8004fd2:	d1d3      	bne.n	8004f7c <HAL_CORDIC_Calculate+0x6c>
 8004fd4:	f107 0310 	add.w	r3, r7, #16
 8004fd8:	4619      	mov	r1, r3
 8004fda:	68f8      	ldr	r0, [r7, #12]
 8004fdc:	f000 f83a 	bl	8005054 <CORDIC_ReadOutDataIncrementPtr>
 8004fe0:	68fb      	ldr	r3, [r7, #12]
 8004fe2:	2201      	movs	r2, #1
 8004fe4:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8004fe8:	2300      	movs	r3, #0
 8004fea:	e006      	b.n	8004ffa <HAL_CORDIC_Calculate+0xea>
 8004fec:	68fb      	ldr	r3, [r7, #12]
 8004fee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ff0:	f043 0202 	orr.w	r2, r3, #2
 8004ff4:	68fb      	ldr	r3, [r7, #12]
 8004ff6:	625a      	str	r2, [r3, #36]	@ 0x24
 8004ff8:	2301      	movs	r3, #1
 8004ffa:	4618      	mov	r0, r3
 8004ffc:	3720      	adds	r7, #32
 8004ffe:	46bd      	mov	sp, r7
 8005000:	bd80      	pop	{r7, pc}

08005002 <CORDIC_WriteInDataIncrementPtr>:
 8005002:	b480      	push	{r7}
 8005004:	b083      	sub	sp, #12
 8005006:	af00      	add	r7, sp, #0
 8005008:	6078      	str	r0, [r7, #4]
 800500a:	6039      	str	r1, [r7, #0]
 800500c:	683b      	ldr	r3, [r7, #0]
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	681a      	ldr	r2, [r3, #0]
 8005012:	687b      	ldr	r3, [r7, #4]
 8005014:	681b      	ldr	r3, [r3, #0]
 8005016:	605a      	str	r2, [r3, #4]
 8005018:	683b      	ldr	r3, [r7, #0]
 800501a:	681b      	ldr	r3, [r3, #0]
 800501c:	1d1a      	adds	r2, r3, #4
 800501e:	683b      	ldr	r3, [r7, #0]
 8005020:	601a      	str	r2, [r3, #0]
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	681b      	ldr	r3, [r3, #0]
 8005028:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800502c:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8005030:	d10a      	bne.n	8005048 <CORDIC_WriteInDataIncrementPtr+0x46>
 8005032:	683b      	ldr	r3, [r7, #0]
 8005034:	681b      	ldr	r3, [r3, #0]
 8005036:	681a      	ldr	r2, [r3, #0]
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	681b      	ldr	r3, [r3, #0]
 800503c:	605a      	str	r2, [r3, #4]
 800503e:	683b      	ldr	r3, [r7, #0]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	1d1a      	adds	r2, r3, #4
 8005044:	683b      	ldr	r3, [r7, #0]
 8005046:	601a      	str	r2, [r3, #0]
 8005048:	bf00      	nop
 800504a:	370c      	adds	r7, #12
 800504c:	46bd      	mov	sp, r7
 800504e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005052:	4770      	bx	lr

08005054 <CORDIC_ReadOutDataIncrementPtr>:
 8005054:	b480      	push	{r7}
 8005056:	b083      	sub	sp, #12
 8005058:	af00      	add	r7, sp, #0
 800505a:	6078      	str	r0, [r7, #4]
 800505c:	6039      	str	r1, [r7, #0]
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	681b      	ldr	r3, [r3, #0]
 8005062:	689a      	ldr	r2, [r3, #8]
 8005064:	683b      	ldr	r3, [r7, #0]
 8005066:	681b      	ldr	r3, [r3, #0]
 8005068:	601a      	str	r2, [r3, #0]
 800506a:	683b      	ldr	r3, [r7, #0]
 800506c:	681b      	ldr	r3, [r3, #0]
 800506e:	1d1a      	adds	r2, r3, #4
 8005070:	683b      	ldr	r3, [r7, #0]
 8005072:	601a      	str	r2, [r3, #0]
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	681b      	ldr	r3, [r3, #0]
 800507a:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800507e:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8005082:	d10a      	bne.n	800509a <CORDIC_ReadOutDataIncrementPtr+0x46>
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	689a      	ldr	r2, [r3, #8]
 800508a:	683b      	ldr	r3, [r7, #0]
 800508c:	681b      	ldr	r3, [r3, #0]
 800508e:	601a      	str	r2, [r3, #0]
 8005090:	683b      	ldr	r3, [r7, #0]
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	1d1a      	adds	r2, r3, #4
 8005096:	683b      	ldr	r3, [r7, #0]
 8005098:	601a      	str	r2, [r3, #0]
 800509a:	bf00      	nop
 800509c:	370c      	adds	r7, #12
 800509e:	46bd      	mov	sp, r7
 80050a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050a4:	4770      	bx	lr
	...

080050a8 <__NVIC_SetPriorityGrouping>:
 80050a8:	b480      	push	{r7}
 80050aa:	b085      	sub	sp, #20
 80050ac:	af00      	add	r7, sp, #0
 80050ae:	6078      	str	r0, [r7, #4]
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	f003 0307 	and.w	r3, r3, #7
 80050b6:	60fb      	str	r3, [r7, #12]
 80050b8:	4b0c      	ldr	r3, [pc, #48]	@ (80050ec <__NVIC_SetPriorityGrouping+0x44>)
 80050ba:	68db      	ldr	r3, [r3, #12]
 80050bc:	60bb      	str	r3, [r7, #8]
 80050be:	68ba      	ldr	r2, [r7, #8]
 80050c0:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80050c4:	4013      	ands	r3, r2
 80050c6:	60bb      	str	r3, [r7, #8]
 80050c8:	68fb      	ldr	r3, [r7, #12]
 80050ca:	021a      	lsls	r2, r3, #8
 80050cc:	68bb      	ldr	r3, [r7, #8]
 80050ce:	4313      	orrs	r3, r2
 80050d0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80050d4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80050d8:	60bb      	str	r3, [r7, #8]
 80050da:	4a04      	ldr	r2, [pc, #16]	@ (80050ec <__NVIC_SetPriorityGrouping+0x44>)
 80050dc:	68bb      	ldr	r3, [r7, #8]
 80050de:	60d3      	str	r3, [r2, #12]
 80050e0:	bf00      	nop
 80050e2:	3714      	adds	r7, #20
 80050e4:	46bd      	mov	sp, r7
 80050e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050ea:	4770      	bx	lr
 80050ec:	e000ed00 	.word	0xe000ed00

080050f0 <__NVIC_GetPriorityGrouping>:
 80050f0:	b480      	push	{r7}
 80050f2:	af00      	add	r7, sp, #0
 80050f4:	4b04      	ldr	r3, [pc, #16]	@ (8005108 <__NVIC_GetPriorityGrouping+0x18>)
 80050f6:	68db      	ldr	r3, [r3, #12]
 80050f8:	0a1b      	lsrs	r3, r3, #8
 80050fa:	f003 0307 	and.w	r3, r3, #7
 80050fe:	4618      	mov	r0, r3
 8005100:	46bd      	mov	sp, r7
 8005102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005106:	4770      	bx	lr
 8005108:	e000ed00 	.word	0xe000ed00

0800510c <__NVIC_EnableIRQ>:
 800510c:	b480      	push	{r7}
 800510e:	b083      	sub	sp, #12
 8005110:	af00      	add	r7, sp, #0
 8005112:	4603      	mov	r3, r0
 8005114:	71fb      	strb	r3, [r7, #7]
 8005116:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800511a:	2b00      	cmp	r3, #0
 800511c:	db0b      	blt.n	8005136 <__NVIC_EnableIRQ+0x2a>
 800511e:	79fb      	ldrb	r3, [r7, #7]
 8005120:	f003 021f 	and.w	r2, r3, #31
 8005124:	4907      	ldr	r1, [pc, #28]	@ (8005144 <__NVIC_EnableIRQ+0x38>)
 8005126:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800512a:	095b      	lsrs	r3, r3, #5
 800512c:	2001      	movs	r0, #1
 800512e:	fa00 f202 	lsl.w	r2, r0, r2
 8005132:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8005136:	bf00      	nop
 8005138:	370c      	adds	r7, #12
 800513a:	46bd      	mov	sp, r7
 800513c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005140:	4770      	bx	lr
 8005142:	bf00      	nop
 8005144:	e000e100 	.word	0xe000e100

08005148 <__NVIC_SetPriority>:
 8005148:	b480      	push	{r7}
 800514a:	b083      	sub	sp, #12
 800514c:	af00      	add	r7, sp, #0
 800514e:	4603      	mov	r3, r0
 8005150:	6039      	str	r1, [r7, #0]
 8005152:	71fb      	strb	r3, [r7, #7]
 8005154:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005158:	2b00      	cmp	r3, #0
 800515a:	db0a      	blt.n	8005172 <__NVIC_SetPriority+0x2a>
 800515c:	683b      	ldr	r3, [r7, #0]
 800515e:	b2da      	uxtb	r2, r3
 8005160:	490c      	ldr	r1, [pc, #48]	@ (8005194 <__NVIC_SetPriority+0x4c>)
 8005162:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005166:	0112      	lsls	r2, r2, #4
 8005168:	b2d2      	uxtb	r2, r2
 800516a:	440b      	add	r3, r1
 800516c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8005170:	e00a      	b.n	8005188 <__NVIC_SetPriority+0x40>
 8005172:	683b      	ldr	r3, [r7, #0]
 8005174:	b2da      	uxtb	r2, r3
 8005176:	4908      	ldr	r1, [pc, #32]	@ (8005198 <__NVIC_SetPriority+0x50>)
 8005178:	79fb      	ldrb	r3, [r7, #7]
 800517a:	f003 030f 	and.w	r3, r3, #15
 800517e:	3b04      	subs	r3, #4
 8005180:	0112      	lsls	r2, r2, #4
 8005182:	b2d2      	uxtb	r2, r2
 8005184:	440b      	add	r3, r1
 8005186:	761a      	strb	r2, [r3, #24]
 8005188:	bf00      	nop
 800518a:	370c      	adds	r7, #12
 800518c:	46bd      	mov	sp, r7
 800518e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005192:	4770      	bx	lr
 8005194:	e000e100 	.word	0xe000e100
 8005198:	e000ed00 	.word	0xe000ed00

0800519c <NVIC_EncodePriority>:
 800519c:	b480      	push	{r7}
 800519e:	b089      	sub	sp, #36	@ 0x24
 80051a0:	af00      	add	r7, sp, #0
 80051a2:	60f8      	str	r0, [r7, #12]
 80051a4:	60b9      	str	r1, [r7, #8]
 80051a6:	607a      	str	r2, [r7, #4]
 80051a8:	68fb      	ldr	r3, [r7, #12]
 80051aa:	f003 0307 	and.w	r3, r3, #7
 80051ae:	61fb      	str	r3, [r7, #28]
 80051b0:	69fb      	ldr	r3, [r7, #28]
 80051b2:	f1c3 0307 	rsb	r3, r3, #7
 80051b6:	2b04      	cmp	r3, #4
 80051b8:	bf28      	it	cs
 80051ba:	2304      	movcs	r3, #4
 80051bc:	61bb      	str	r3, [r7, #24]
 80051be:	69fb      	ldr	r3, [r7, #28]
 80051c0:	3304      	adds	r3, #4
 80051c2:	2b06      	cmp	r3, #6
 80051c4:	d902      	bls.n	80051cc <NVIC_EncodePriority+0x30>
 80051c6:	69fb      	ldr	r3, [r7, #28]
 80051c8:	3b03      	subs	r3, #3
 80051ca:	e000      	b.n	80051ce <NVIC_EncodePriority+0x32>
 80051cc:	2300      	movs	r3, #0
 80051ce:	617b      	str	r3, [r7, #20]
 80051d0:	f04f 32ff 	mov.w	r2, #4294967295
 80051d4:	69bb      	ldr	r3, [r7, #24]
 80051d6:	fa02 f303 	lsl.w	r3, r2, r3
 80051da:	43da      	mvns	r2, r3
 80051dc:	68bb      	ldr	r3, [r7, #8]
 80051de:	401a      	ands	r2, r3
 80051e0:	697b      	ldr	r3, [r7, #20]
 80051e2:	409a      	lsls	r2, r3
 80051e4:	f04f 31ff 	mov.w	r1, #4294967295
 80051e8:	697b      	ldr	r3, [r7, #20]
 80051ea:	fa01 f303 	lsl.w	r3, r1, r3
 80051ee:	43d9      	mvns	r1, r3
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	400b      	ands	r3, r1
 80051f4:	4313      	orrs	r3, r2
 80051f6:	4618      	mov	r0, r3
 80051f8:	3724      	adds	r7, #36	@ 0x24
 80051fa:	46bd      	mov	sp, r7
 80051fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005200:	4770      	bx	lr

08005202 <HAL_NVIC_SetPriorityGrouping>:
 8005202:	b580      	push	{r7, lr}
 8005204:	b082      	sub	sp, #8
 8005206:	af00      	add	r7, sp, #0
 8005208:	6078      	str	r0, [r7, #4]
 800520a:	6878      	ldr	r0, [r7, #4]
 800520c:	f7ff ff4c 	bl	80050a8 <__NVIC_SetPriorityGrouping>
 8005210:	bf00      	nop
 8005212:	3708      	adds	r7, #8
 8005214:	46bd      	mov	sp, r7
 8005216:	bd80      	pop	{r7, pc}

08005218 <HAL_NVIC_SetPriority>:
 8005218:	b580      	push	{r7, lr}
 800521a:	b086      	sub	sp, #24
 800521c:	af00      	add	r7, sp, #0
 800521e:	4603      	mov	r3, r0
 8005220:	60b9      	str	r1, [r7, #8]
 8005222:	607a      	str	r2, [r7, #4]
 8005224:	73fb      	strb	r3, [r7, #15]
 8005226:	f7ff ff63 	bl	80050f0 <__NVIC_GetPriorityGrouping>
 800522a:	6178      	str	r0, [r7, #20]
 800522c:	687a      	ldr	r2, [r7, #4]
 800522e:	68b9      	ldr	r1, [r7, #8]
 8005230:	6978      	ldr	r0, [r7, #20]
 8005232:	f7ff ffb3 	bl	800519c <NVIC_EncodePriority>
 8005236:	4602      	mov	r2, r0
 8005238:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800523c:	4611      	mov	r1, r2
 800523e:	4618      	mov	r0, r3
 8005240:	f7ff ff82 	bl	8005148 <__NVIC_SetPriority>
 8005244:	bf00      	nop
 8005246:	3718      	adds	r7, #24
 8005248:	46bd      	mov	sp, r7
 800524a:	bd80      	pop	{r7, pc}

0800524c <HAL_NVIC_EnableIRQ>:
 800524c:	b580      	push	{r7, lr}
 800524e:	b082      	sub	sp, #8
 8005250:	af00      	add	r7, sp, #0
 8005252:	4603      	mov	r3, r0
 8005254:	71fb      	strb	r3, [r7, #7]
 8005256:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800525a:	4618      	mov	r0, r3
 800525c:	f7ff ff56 	bl	800510c <__NVIC_EnableIRQ>
 8005260:	bf00      	nop
 8005262:	3708      	adds	r7, #8
 8005264:	46bd      	mov	sp, r7
 8005266:	bd80      	pop	{r7, pc}

08005268 <HAL_DMA_Init>:
 8005268:	b580      	push	{r7, lr}
 800526a:	b084      	sub	sp, #16
 800526c:	af00      	add	r7, sp, #0
 800526e:	6078      	str	r0, [r7, #4]
 8005270:	687b      	ldr	r3, [r7, #4]
 8005272:	2b00      	cmp	r3, #0
 8005274:	d101      	bne.n	800527a <HAL_DMA_Init+0x12>
 8005276:	2301      	movs	r3, #1
 8005278:	e08d      	b.n	8005396 <HAL_DMA_Init+0x12e>
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	681b      	ldr	r3, [r3, #0]
 800527e:	461a      	mov	r2, r3
 8005280:	4b47      	ldr	r3, [pc, #284]	@ (80053a0 <HAL_DMA_Init+0x138>)
 8005282:	429a      	cmp	r2, r3
 8005284:	d80f      	bhi.n	80052a6 <HAL_DMA_Init+0x3e>
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	681b      	ldr	r3, [r3, #0]
 800528a:	461a      	mov	r2, r3
 800528c:	4b45      	ldr	r3, [pc, #276]	@ (80053a4 <HAL_DMA_Init+0x13c>)
 800528e:	4413      	add	r3, r2
 8005290:	4a45      	ldr	r2, [pc, #276]	@ (80053a8 <HAL_DMA_Init+0x140>)
 8005292:	fba2 2303 	umull	r2, r3, r2, r3
 8005296:	091b      	lsrs	r3, r3, #4
 8005298:	009a      	lsls	r2, r3, #2
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	645a      	str	r2, [r3, #68]	@ 0x44
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	4a42      	ldr	r2, [pc, #264]	@ (80053ac <HAL_DMA_Init+0x144>)
 80052a2:	641a      	str	r2, [r3, #64]	@ 0x40
 80052a4:	e00e      	b.n	80052c4 <HAL_DMA_Init+0x5c>
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	681b      	ldr	r3, [r3, #0]
 80052aa:	461a      	mov	r2, r3
 80052ac:	4b40      	ldr	r3, [pc, #256]	@ (80053b0 <HAL_DMA_Init+0x148>)
 80052ae:	4413      	add	r3, r2
 80052b0:	4a3d      	ldr	r2, [pc, #244]	@ (80053a8 <HAL_DMA_Init+0x140>)
 80052b2:	fba2 2303 	umull	r2, r3, r2, r3
 80052b6:	091b      	lsrs	r3, r3, #4
 80052b8:	009a      	lsls	r2, r3, #2
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	645a      	str	r2, [r3, #68]	@ 0x44
 80052be:	687b      	ldr	r3, [r7, #4]
 80052c0:	4a3c      	ldr	r2, [pc, #240]	@ (80053b4 <HAL_DMA_Init+0x14c>)
 80052c2:	641a      	str	r2, [r3, #64]	@ 0x40
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	2202      	movs	r2, #2
 80052c8:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 80052cc:	687b      	ldr	r3, [r7, #4]
 80052ce:	681b      	ldr	r3, [r3, #0]
 80052d0:	681b      	ldr	r3, [r3, #0]
 80052d2:	60fb      	str	r3, [r7, #12]
 80052d4:	68fb      	ldr	r3, [r7, #12]
 80052d6:	f423 43ff 	bic.w	r3, r3, #32640	@ 0x7f80
 80052da:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80052de:	60fb      	str	r3, [r7, #12]
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	689a      	ldr	r2, [r3, #8]
 80052e4:	687b      	ldr	r3, [r7, #4]
 80052e6:	68db      	ldr	r3, [r3, #12]
 80052e8:	431a      	orrs	r2, r3
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	691b      	ldr	r3, [r3, #16]
 80052ee:	431a      	orrs	r2, r3
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	695b      	ldr	r3, [r3, #20]
 80052f4:	431a      	orrs	r2, r3
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	699b      	ldr	r3, [r3, #24]
 80052fa:	431a      	orrs	r2, r3
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	69db      	ldr	r3, [r3, #28]
 8005300:	431a      	orrs	r2, r3
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	6a1b      	ldr	r3, [r3, #32]
 8005306:	4313      	orrs	r3, r2
 8005308:	68fa      	ldr	r2, [r7, #12]
 800530a:	4313      	orrs	r3, r2
 800530c:	60fb      	str	r3, [r7, #12]
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	68fa      	ldr	r2, [r7, #12]
 8005314:	601a      	str	r2, [r3, #0]
 8005316:	6878      	ldr	r0, [r7, #4]
 8005318:	f000 f9b6 	bl	8005688 <DMA_CalcDMAMUXChannelBaseAndMask>
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	689b      	ldr	r3, [r3, #8]
 8005320:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005324:	d102      	bne.n	800532c <HAL_DMA_Init+0xc4>
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	2200      	movs	r2, #0
 800532a:	605a      	str	r2, [r3, #4]
 800532c:	687b      	ldr	r3, [r7, #4]
 800532e:	685a      	ldr	r2, [r3, #4]
 8005330:	687b      	ldr	r3, [r7, #4]
 8005332:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005334:	b2d2      	uxtb	r2, r2
 8005336:	601a      	str	r2, [r3, #0]
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800533c:	687a      	ldr	r2, [r7, #4]
 800533e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005340:	605a      	str	r2, [r3, #4]
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	685b      	ldr	r3, [r3, #4]
 8005346:	2b00      	cmp	r3, #0
 8005348:	d010      	beq.n	800536c <HAL_DMA_Init+0x104>
 800534a:	687b      	ldr	r3, [r7, #4]
 800534c:	685b      	ldr	r3, [r3, #4]
 800534e:	2b04      	cmp	r3, #4
 8005350:	d80c      	bhi.n	800536c <HAL_DMA_Init+0x104>
 8005352:	6878      	ldr	r0, [r7, #4]
 8005354:	f000 f9d6 	bl	8005704 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800535c:	2200      	movs	r2, #0
 800535e:	601a      	str	r2, [r3, #0]
 8005360:	687b      	ldr	r3, [r7, #4]
 8005362:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005364:	687a      	ldr	r2, [r7, #4]
 8005366:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8005368:	605a      	str	r2, [r3, #4]
 800536a:	e008      	b.n	800537e <HAL_DMA_Init+0x116>
 800536c:	687b      	ldr	r3, [r7, #4]
 800536e:	2200      	movs	r2, #0
 8005370:	655a      	str	r2, [r3, #84]	@ 0x54
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	2200      	movs	r2, #0
 8005376:	659a      	str	r2, [r3, #88]	@ 0x58
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	2200      	movs	r2, #0
 800537c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800537e:	687b      	ldr	r3, [r7, #4]
 8005380:	2200      	movs	r2, #0
 8005382:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	2201      	movs	r2, #1
 8005388:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	2200      	movs	r2, #0
 8005390:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005394:	2300      	movs	r3, #0
 8005396:	4618      	mov	r0, r3
 8005398:	3710      	adds	r7, #16
 800539a:	46bd      	mov	sp, r7
 800539c:	bd80      	pop	{r7, pc}
 800539e:	bf00      	nop
 80053a0:	40020407 	.word	0x40020407
 80053a4:	bffdfff8 	.word	0xbffdfff8
 80053a8:	cccccccd 	.word	0xcccccccd
 80053ac:	40020000 	.word	0x40020000
 80053b0:	bffdfbf8 	.word	0xbffdfbf8
 80053b4:	40020400 	.word	0x40020400

080053b8 <HAL_DMA_Start_IT>:
 80053b8:	b580      	push	{r7, lr}
 80053ba:	b086      	sub	sp, #24
 80053bc:	af00      	add	r7, sp, #0
 80053be:	60f8      	str	r0, [r7, #12]
 80053c0:	60b9      	str	r1, [r7, #8]
 80053c2:	607a      	str	r2, [r7, #4]
 80053c4:	603b      	str	r3, [r7, #0]
 80053c6:	2300      	movs	r3, #0
 80053c8:	75fb      	strb	r3, [r7, #23]
 80053ca:	68fb      	ldr	r3, [r7, #12]
 80053cc:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80053d0:	2b01      	cmp	r3, #1
 80053d2:	d101      	bne.n	80053d8 <HAL_DMA_Start_IT+0x20>
 80053d4:	2302      	movs	r3, #2
 80053d6:	e066      	b.n	80054a6 <HAL_DMA_Start_IT+0xee>
 80053d8:	68fb      	ldr	r3, [r7, #12]
 80053da:	2201      	movs	r2, #1
 80053dc:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80053e0:	68fb      	ldr	r3, [r7, #12]
 80053e2:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80053e6:	b2db      	uxtb	r3, r3
 80053e8:	2b01      	cmp	r3, #1
 80053ea:	d155      	bne.n	8005498 <HAL_DMA_Start_IT+0xe0>
 80053ec:	68fb      	ldr	r3, [r7, #12]
 80053ee:	2202      	movs	r2, #2
 80053f0:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 80053f4:	68fb      	ldr	r3, [r7, #12]
 80053f6:	2200      	movs	r2, #0
 80053f8:	63da      	str	r2, [r3, #60]	@ 0x3c
 80053fa:	68fb      	ldr	r3, [r7, #12]
 80053fc:	681b      	ldr	r3, [r3, #0]
 80053fe:	681a      	ldr	r2, [r3, #0]
 8005400:	68fb      	ldr	r3, [r7, #12]
 8005402:	681b      	ldr	r3, [r3, #0]
 8005404:	f022 0201 	bic.w	r2, r2, #1
 8005408:	601a      	str	r2, [r3, #0]
 800540a:	683b      	ldr	r3, [r7, #0]
 800540c:	687a      	ldr	r2, [r7, #4]
 800540e:	68b9      	ldr	r1, [r7, #8]
 8005410:	68f8      	ldr	r0, [r7, #12]
 8005412:	f000 f8fb 	bl	800560c <DMA_SetConfig>
 8005416:	68fb      	ldr	r3, [r7, #12]
 8005418:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800541a:	2b00      	cmp	r3, #0
 800541c:	d008      	beq.n	8005430 <HAL_DMA_Start_IT+0x78>
 800541e:	68fb      	ldr	r3, [r7, #12]
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	681a      	ldr	r2, [r3, #0]
 8005424:	68fb      	ldr	r3, [r7, #12]
 8005426:	681b      	ldr	r3, [r3, #0]
 8005428:	f042 020e 	orr.w	r2, r2, #14
 800542c:	601a      	str	r2, [r3, #0]
 800542e:	e00f      	b.n	8005450 <HAL_DMA_Start_IT+0x98>
 8005430:	68fb      	ldr	r3, [r7, #12]
 8005432:	681b      	ldr	r3, [r3, #0]
 8005434:	681a      	ldr	r2, [r3, #0]
 8005436:	68fb      	ldr	r3, [r7, #12]
 8005438:	681b      	ldr	r3, [r3, #0]
 800543a:	f022 0204 	bic.w	r2, r2, #4
 800543e:	601a      	str	r2, [r3, #0]
 8005440:	68fb      	ldr	r3, [r7, #12]
 8005442:	681b      	ldr	r3, [r3, #0]
 8005444:	681a      	ldr	r2, [r3, #0]
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	f042 020a 	orr.w	r2, r2, #10
 800544e:	601a      	str	r2, [r3, #0]
 8005450:	68fb      	ldr	r3, [r7, #12]
 8005452:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005454:	681b      	ldr	r3, [r3, #0]
 8005456:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800545a:	2b00      	cmp	r3, #0
 800545c:	d007      	beq.n	800546e <HAL_DMA_Start_IT+0xb6>
 800545e:	68fb      	ldr	r3, [r7, #12]
 8005460:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005462:	681a      	ldr	r2, [r3, #0]
 8005464:	68fb      	ldr	r3, [r7, #12]
 8005466:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005468:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800546c:	601a      	str	r2, [r3, #0]
 800546e:	68fb      	ldr	r3, [r7, #12]
 8005470:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005472:	2b00      	cmp	r3, #0
 8005474:	d007      	beq.n	8005486 <HAL_DMA_Start_IT+0xce>
 8005476:	68fb      	ldr	r3, [r7, #12]
 8005478:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800547a:	681a      	ldr	r2, [r3, #0]
 800547c:	68fb      	ldr	r3, [r7, #12]
 800547e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005480:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005484:	601a      	str	r2, [r3, #0]
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	681a      	ldr	r2, [r3, #0]
 800548c:	68fb      	ldr	r3, [r7, #12]
 800548e:	681b      	ldr	r3, [r3, #0]
 8005490:	f042 0201 	orr.w	r2, r2, #1
 8005494:	601a      	str	r2, [r3, #0]
 8005496:	e005      	b.n	80054a4 <HAL_DMA_Start_IT+0xec>
 8005498:	68fb      	ldr	r3, [r7, #12]
 800549a:	2200      	movs	r2, #0
 800549c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80054a0:	2302      	movs	r3, #2
 80054a2:	75fb      	strb	r3, [r7, #23]
 80054a4:	7dfb      	ldrb	r3, [r7, #23]
 80054a6:	4618      	mov	r0, r3
 80054a8:	3718      	adds	r7, #24
 80054aa:	46bd      	mov	sp, r7
 80054ac:	bd80      	pop	{r7, pc}

080054ae <HAL_DMA_IRQHandler>:
 80054ae:	b580      	push	{r7, lr}
 80054b0:	b084      	sub	sp, #16
 80054b2:	af00      	add	r7, sp, #0
 80054b4:	6078      	str	r0, [r7, #4]
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	60fb      	str	r3, [r7, #12]
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	681b      	ldr	r3, [r3, #0]
 80054c2:	681b      	ldr	r3, [r3, #0]
 80054c4:	60bb      	str	r3, [r7, #8]
 80054c6:	687b      	ldr	r3, [r7, #4]
 80054c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80054ca:	f003 031f 	and.w	r3, r3, #31
 80054ce:	2204      	movs	r2, #4
 80054d0:	409a      	lsls	r2, r3
 80054d2:	68fb      	ldr	r3, [r7, #12]
 80054d4:	4013      	ands	r3, r2
 80054d6:	2b00      	cmp	r3, #0
 80054d8:	d026      	beq.n	8005528 <HAL_DMA_IRQHandler+0x7a>
 80054da:	68bb      	ldr	r3, [r7, #8]
 80054dc:	f003 0304 	and.w	r3, r3, #4
 80054e0:	2b00      	cmp	r3, #0
 80054e2:	d021      	beq.n	8005528 <HAL_DMA_IRQHandler+0x7a>
 80054e4:	687b      	ldr	r3, [r7, #4]
 80054e6:	681b      	ldr	r3, [r3, #0]
 80054e8:	681b      	ldr	r3, [r3, #0]
 80054ea:	f003 0320 	and.w	r3, r3, #32
 80054ee:	2b00      	cmp	r3, #0
 80054f0:	d107      	bne.n	8005502 <HAL_DMA_IRQHandler+0x54>
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	681a      	ldr	r2, [r3, #0]
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	681b      	ldr	r3, [r3, #0]
 80054fc:	f022 0204 	bic.w	r2, r2, #4
 8005500:	601a      	str	r2, [r3, #0]
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005506:	f003 021f 	and.w	r2, r3, #31
 800550a:	687b      	ldr	r3, [r7, #4]
 800550c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800550e:	2104      	movs	r1, #4
 8005510:	fa01 f202 	lsl.w	r2, r1, r2
 8005514:	605a      	str	r2, [r3, #4]
 8005516:	687b      	ldr	r3, [r7, #4]
 8005518:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800551a:	2b00      	cmp	r3, #0
 800551c:	d071      	beq.n	8005602 <HAL_DMA_IRQHandler+0x154>
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005522:	6878      	ldr	r0, [r7, #4]
 8005524:	4798      	blx	r3
 8005526:	e06c      	b.n	8005602 <HAL_DMA_IRQHandler+0x154>
 8005528:	687b      	ldr	r3, [r7, #4]
 800552a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800552c:	f003 031f 	and.w	r3, r3, #31
 8005530:	2202      	movs	r2, #2
 8005532:	409a      	lsls	r2, r3
 8005534:	68fb      	ldr	r3, [r7, #12]
 8005536:	4013      	ands	r3, r2
 8005538:	2b00      	cmp	r3, #0
 800553a:	d02e      	beq.n	800559a <HAL_DMA_IRQHandler+0xec>
 800553c:	68bb      	ldr	r3, [r7, #8]
 800553e:	f003 0302 	and.w	r3, r3, #2
 8005542:	2b00      	cmp	r3, #0
 8005544:	d029      	beq.n	800559a <HAL_DMA_IRQHandler+0xec>
 8005546:	687b      	ldr	r3, [r7, #4]
 8005548:	681b      	ldr	r3, [r3, #0]
 800554a:	681b      	ldr	r3, [r3, #0]
 800554c:	f003 0320 	and.w	r3, r3, #32
 8005550:	2b00      	cmp	r3, #0
 8005552:	d10b      	bne.n	800556c <HAL_DMA_IRQHandler+0xbe>
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	681a      	ldr	r2, [r3, #0]
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	f022 020a 	bic.w	r2, r2, #10
 8005562:	601a      	str	r2, [r3, #0]
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	2201      	movs	r2, #1
 8005568:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005570:	f003 021f 	and.w	r2, r3, #31
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005578:	2102      	movs	r1, #2
 800557a:	fa01 f202 	lsl.w	r2, r1, r2
 800557e:	605a      	str	r2, [r3, #4]
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	2200      	movs	r2, #0
 8005584:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005588:	687b      	ldr	r3, [r7, #4]
 800558a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800558c:	2b00      	cmp	r3, #0
 800558e:	d038      	beq.n	8005602 <HAL_DMA_IRQHandler+0x154>
 8005590:	687b      	ldr	r3, [r7, #4]
 8005592:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005594:	6878      	ldr	r0, [r7, #4]
 8005596:	4798      	blx	r3
 8005598:	e033      	b.n	8005602 <HAL_DMA_IRQHandler+0x154>
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800559e:	f003 031f 	and.w	r3, r3, #31
 80055a2:	2208      	movs	r2, #8
 80055a4:	409a      	lsls	r2, r3
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	4013      	ands	r3, r2
 80055aa:	2b00      	cmp	r3, #0
 80055ac:	d02a      	beq.n	8005604 <HAL_DMA_IRQHandler+0x156>
 80055ae:	68bb      	ldr	r3, [r7, #8]
 80055b0:	f003 0308 	and.w	r3, r3, #8
 80055b4:	2b00      	cmp	r3, #0
 80055b6:	d025      	beq.n	8005604 <HAL_DMA_IRQHandler+0x156>
 80055b8:	687b      	ldr	r3, [r7, #4]
 80055ba:	681b      	ldr	r3, [r3, #0]
 80055bc:	681a      	ldr	r2, [r3, #0]
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	681b      	ldr	r3, [r3, #0]
 80055c2:	f022 020e 	bic.w	r2, r2, #14
 80055c6:	601a      	str	r2, [r3, #0]
 80055c8:	687b      	ldr	r3, [r7, #4]
 80055ca:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80055cc:	f003 021f 	and.w	r2, r3, #31
 80055d0:	687b      	ldr	r3, [r7, #4]
 80055d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80055d4:	2101      	movs	r1, #1
 80055d6:	fa01 f202 	lsl.w	r2, r1, r2
 80055da:	605a      	str	r2, [r3, #4]
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	2201      	movs	r2, #1
 80055e0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80055e2:	687b      	ldr	r3, [r7, #4]
 80055e4:	2201      	movs	r2, #1
 80055e6:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 80055ea:	687b      	ldr	r3, [r7, #4]
 80055ec:	2200      	movs	r2, #0
 80055ee:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80055f2:	687b      	ldr	r3, [r7, #4]
 80055f4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80055f6:	2b00      	cmp	r3, #0
 80055f8:	d004      	beq.n	8005604 <HAL_DMA_IRQHandler+0x156>
 80055fa:	687b      	ldr	r3, [r7, #4]
 80055fc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80055fe:	6878      	ldr	r0, [r7, #4]
 8005600:	4798      	blx	r3
 8005602:	bf00      	nop
 8005604:	bf00      	nop
 8005606:	3710      	adds	r7, #16
 8005608:	46bd      	mov	sp, r7
 800560a:	bd80      	pop	{r7, pc}

0800560c <DMA_SetConfig>:
 800560c:	b480      	push	{r7}
 800560e:	b085      	sub	sp, #20
 8005610:	af00      	add	r7, sp, #0
 8005612:	60f8      	str	r0, [r7, #12]
 8005614:	60b9      	str	r1, [r7, #8]
 8005616:	607a      	str	r2, [r7, #4]
 8005618:	603b      	str	r3, [r7, #0]
 800561a:	68fb      	ldr	r3, [r7, #12]
 800561c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800561e:	68fa      	ldr	r2, [r7, #12]
 8005620:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005622:	605a      	str	r2, [r3, #4]
 8005624:	68fb      	ldr	r3, [r7, #12]
 8005626:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005628:	2b00      	cmp	r3, #0
 800562a:	d004      	beq.n	8005636 <DMA_SetConfig+0x2a>
 800562c:	68fb      	ldr	r3, [r7, #12]
 800562e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005630:	68fa      	ldr	r2, [r7, #12]
 8005632:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8005634:	605a      	str	r2, [r3, #4]
 8005636:	68fb      	ldr	r3, [r7, #12]
 8005638:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800563a:	f003 021f 	and.w	r2, r3, #31
 800563e:	68fb      	ldr	r3, [r7, #12]
 8005640:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005642:	2101      	movs	r1, #1
 8005644:	fa01 f202 	lsl.w	r2, r1, r2
 8005648:	605a      	str	r2, [r3, #4]
 800564a:	68fb      	ldr	r3, [r7, #12]
 800564c:	681b      	ldr	r3, [r3, #0]
 800564e:	683a      	ldr	r2, [r7, #0]
 8005650:	605a      	str	r2, [r3, #4]
 8005652:	68fb      	ldr	r3, [r7, #12]
 8005654:	689b      	ldr	r3, [r3, #8]
 8005656:	2b10      	cmp	r3, #16
 8005658:	d108      	bne.n	800566c <DMA_SetConfig+0x60>
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	687a      	ldr	r2, [r7, #4]
 8005660:	609a      	str	r2, [r3, #8]
 8005662:	68fb      	ldr	r3, [r7, #12]
 8005664:	681b      	ldr	r3, [r3, #0]
 8005666:	68ba      	ldr	r2, [r7, #8]
 8005668:	60da      	str	r2, [r3, #12]
 800566a:	e007      	b.n	800567c <DMA_SetConfig+0x70>
 800566c:	68fb      	ldr	r3, [r7, #12]
 800566e:	681b      	ldr	r3, [r3, #0]
 8005670:	68ba      	ldr	r2, [r7, #8]
 8005672:	609a      	str	r2, [r3, #8]
 8005674:	68fb      	ldr	r3, [r7, #12]
 8005676:	681b      	ldr	r3, [r3, #0]
 8005678:	687a      	ldr	r2, [r7, #4]
 800567a:	60da      	str	r2, [r3, #12]
 800567c:	bf00      	nop
 800567e:	3714      	adds	r7, #20
 8005680:	46bd      	mov	sp, r7
 8005682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005686:	4770      	bx	lr

08005688 <DMA_CalcDMAMUXChannelBaseAndMask>:
 8005688:	b480      	push	{r7}
 800568a:	b087      	sub	sp, #28
 800568c:	af00      	add	r7, sp, #0
 800568e:	6078      	str	r0, [r7, #4]
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	461a      	mov	r2, r3
 8005696:	4b16      	ldr	r3, [pc, #88]	@ (80056f0 <DMA_CalcDMAMUXChannelBaseAndMask+0x68>)
 8005698:	429a      	cmp	r2, r3
 800569a:	d802      	bhi.n	80056a2 <DMA_CalcDMAMUXChannelBaseAndMask+0x1a>
 800569c:	4b15      	ldr	r3, [pc, #84]	@ (80056f4 <DMA_CalcDMAMUXChannelBaseAndMask+0x6c>)
 800569e:	617b      	str	r3, [r7, #20]
 80056a0:	e001      	b.n	80056a6 <DMA_CalcDMAMUXChannelBaseAndMask+0x1e>
 80056a2:	4b15      	ldr	r3, [pc, #84]	@ (80056f8 <DMA_CalcDMAMUXChannelBaseAndMask+0x70>)
 80056a4:	617b      	str	r3, [r7, #20]
 80056a6:	697b      	ldr	r3, [r7, #20]
 80056a8:	613b      	str	r3, [r7, #16]
 80056aa:	687b      	ldr	r3, [r7, #4]
 80056ac:	681b      	ldr	r3, [r3, #0]
 80056ae:	b2db      	uxtb	r3, r3
 80056b0:	3b08      	subs	r3, #8
 80056b2:	4a12      	ldr	r2, [pc, #72]	@ (80056fc <DMA_CalcDMAMUXChannelBaseAndMask+0x74>)
 80056b4:	fba2 2303 	umull	r2, r3, r2, r3
 80056b8:	091b      	lsrs	r3, r3, #4
 80056ba:	60fb      	str	r3, [r7, #12]
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80056c0:	089b      	lsrs	r3, r3, #2
 80056c2:	009a      	lsls	r2, r3, #2
 80056c4:	693b      	ldr	r3, [r7, #16]
 80056c6:	4413      	add	r3, r2
 80056c8:	461a      	mov	r2, r3
 80056ca:	687b      	ldr	r3, [r7, #4]
 80056cc:	649a      	str	r2, [r3, #72]	@ 0x48
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	4a0b      	ldr	r2, [pc, #44]	@ (8005700 <DMA_CalcDMAMUXChannelBaseAndMask+0x78>)
 80056d2:	64da      	str	r2, [r3, #76]	@ 0x4c
 80056d4:	68fb      	ldr	r3, [r7, #12]
 80056d6:	f003 031f 	and.w	r3, r3, #31
 80056da:	2201      	movs	r2, #1
 80056dc:	409a      	lsls	r2, r3
 80056de:	687b      	ldr	r3, [r7, #4]
 80056e0:	651a      	str	r2, [r3, #80]	@ 0x50
 80056e2:	bf00      	nop
 80056e4:	371c      	adds	r7, #28
 80056e6:	46bd      	mov	sp, r7
 80056e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056ec:	4770      	bx	lr
 80056ee:	bf00      	nop
 80056f0:	40020407 	.word	0x40020407
 80056f4:	40020800 	.word	0x40020800
 80056f8:	40020820 	.word	0x40020820
 80056fc:	cccccccd 	.word	0xcccccccd
 8005700:	40020880 	.word	0x40020880

08005704 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8005704:	b480      	push	{r7}
 8005706:	b085      	sub	sp, #20
 8005708:	af00      	add	r7, sp, #0
 800570a:	6078      	str	r0, [r7, #4]
 800570c:	687b      	ldr	r3, [r7, #4]
 800570e:	685b      	ldr	r3, [r3, #4]
 8005710:	b2db      	uxtb	r3, r3
 8005712:	60fb      	str	r3, [r7, #12]
 8005714:	68fa      	ldr	r2, [r7, #12]
 8005716:	4b0b      	ldr	r3, [pc, #44]	@ (8005744 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 8005718:	4413      	add	r3, r2
 800571a:	009b      	lsls	r3, r3, #2
 800571c:	461a      	mov	r2, r3
 800571e:	687b      	ldr	r3, [r7, #4]
 8005720:	655a      	str	r2, [r3, #84]	@ 0x54
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	4a08      	ldr	r2, [pc, #32]	@ (8005748 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 8005726:	659a      	str	r2, [r3, #88]	@ 0x58
 8005728:	68fb      	ldr	r3, [r7, #12]
 800572a:	3b01      	subs	r3, #1
 800572c:	f003 031f 	and.w	r3, r3, #31
 8005730:	2201      	movs	r2, #1
 8005732:	409a      	lsls	r2, r3
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	65da      	str	r2, [r3, #92]	@ 0x5c
 8005738:	bf00      	nop
 800573a:	3714      	adds	r7, #20
 800573c:	46bd      	mov	sp, r7
 800573e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005742:	4770      	bx	lr
 8005744:	1000823f 	.word	0x1000823f
 8005748:	40020940 	.word	0x40020940

0800574c <HAL_EXTI_RegisterCallback>:
 800574c:	b480      	push	{r7}
 800574e:	b087      	sub	sp, #28
 8005750:	af00      	add	r7, sp, #0
 8005752:	60f8      	str	r0, [r7, #12]
 8005754:	460b      	mov	r3, r1
 8005756:	607a      	str	r2, [r7, #4]
 8005758:	72fb      	strb	r3, [r7, #11]
 800575a:	2300      	movs	r3, #0
 800575c:	75fb      	strb	r3, [r7, #23]
 800575e:	7afb      	ldrb	r3, [r7, #11]
 8005760:	2b00      	cmp	r3, #0
 8005762:	d103      	bne.n	800576c <HAL_EXTI_RegisterCallback+0x20>
 8005764:	68fb      	ldr	r3, [r7, #12]
 8005766:	687a      	ldr	r2, [r7, #4]
 8005768:	605a      	str	r2, [r3, #4]
 800576a:	e005      	b.n	8005778 <HAL_EXTI_RegisterCallback+0x2c>
 800576c:	68fb      	ldr	r3, [r7, #12]
 800576e:	2200      	movs	r2, #0
 8005770:	605a      	str	r2, [r3, #4]
 8005772:	2301      	movs	r3, #1
 8005774:	75fb      	strb	r3, [r7, #23]
 8005776:	bf00      	nop
 8005778:	7dfb      	ldrb	r3, [r7, #23]
 800577a:	4618      	mov	r0, r3
 800577c:	371c      	adds	r7, #28
 800577e:	46bd      	mov	sp, r7
 8005780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005784:	4770      	bx	lr

08005786 <HAL_EXTI_GetHandle>:
 8005786:	b480      	push	{r7}
 8005788:	b083      	sub	sp, #12
 800578a:	af00      	add	r7, sp, #0
 800578c:	6078      	str	r0, [r7, #4]
 800578e:	6039      	str	r1, [r7, #0]
 8005790:	687b      	ldr	r3, [r7, #4]
 8005792:	2b00      	cmp	r3, #0
 8005794:	d101      	bne.n	800579a <HAL_EXTI_GetHandle+0x14>
 8005796:	2301      	movs	r3, #1
 8005798:	e003      	b.n	80057a2 <HAL_EXTI_GetHandle+0x1c>
 800579a:	687b      	ldr	r3, [r7, #4]
 800579c:	683a      	ldr	r2, [r7, #0]
 800579e:	601a      	str	r2, [r3, #0]
 80057a0:	2300      	movs	r3, #0
 80057a2:	4618      	mov	r0, r3
 80057a4:	370c      	adds	r7, #12
 80057a6:	46bd      	mov	sp, r7
 80057a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057ac:	4770      	bx	lr
	...

080057b0 <HAL_EXTI_IRQHandler>:
 80057b0:	b580      	push	{r7, lr}
 80057b2:	b086      	sub	sp, #24
 80057b4:	af00      	add	r7, sp, #0
 80057b6:	6078      	str	r0, [r7, #4]
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	681b      	ldr	r3, [r3, #0]
 80057bc:	0c1b      	lsrs	r3, r3, #16
 80057be:	f003 0301 	and.w	r3, r3, #1
 80057c2:	617b      	str	r3, [r7, #20]
 80057c4:	687b      	ldr	r3, [r7, #4]
 80057c6:	681b      	ldr	r3, [r3, #0]
 80057c8:	f003 031f 	and.w	r3, r3, #31
 80057cc:	2201      	movs	r2, #1
 80057ce:	fa02 f303 	lsl.w	r3, r2, r3
 80057d2:	613b      	str	r3, [r7, #16]
 80057d4:	697b      	ldr	r3, [r7, #20]
 80057d6:	015a      	lsls	r2, r3, #5
 80057d8:	4b0c      	ldr	r3, [pc, #48]	@ (800580c <HAL_EXTI_IRQHandler+0x5c>)
 80057da:	4413      	add	r3, r2
 80057dc:	60fb      	str	r3, [r7, #12]
 80057de:	68fb      	ldr	r3, [r7, #12]
 80057e0:	681b      	ldr	r3, [r3, #0]
 80057e2:	693a      	ldr	r2, [r7, #16]
 80057e4:	4013      	ands	r3, r2
 80057e6:	60bb      	str	r3, [r7, #8]
 80057e8:	68bb      	ldr	r3, [r7, #8]
 80057ea:	2b00      	cmp	r3, #0
 80057ec:	d009      	beq.n	8005802 <HAL_EXTI_IRQHandler+0x52>
 80057ee:	68fb      	ldr	r3, [r7, #12]
 80057f0:	693a      	ldr	r2, [r7, #16]
 80057f2:	601a      	str	r2, [r3, #0]
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	685b      	ldr	r3, [r3, #4]
 80057f8:	2b00      	cmp	r3, #0
 80057fa:	d002      	beq.n	8005802 <HAL_EXTI_IRQHandler+0x52>
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	685b      	ldr	r3, [r3, #4]
 8005800:	4798      	blx	r3
 8005802:	bf00      	nop
 8005804:	3718      	adds	r7, #24
 8005806:	46bd      	mov	sp, r7
 8005808:	bd80      	pop	{r7, pc}
 800580a:	bf00      	nop
 800580c:	40010414 	.word	0x40010414

08005810 <HAL_FDCAN_Init>:
 8005810:	b580      	push	{r7, lr}
 8005812:	b084      	sub	sp, #16
 8005814:	af00      	add	r7, sp, #0
 8005816:	6078      	str	r0, [r7, #4]
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	2b00      	cmp	r3, #0
 800581c:	d101      	bne.n	8005822 <HAL_FDCAN_Init+0x12>
 800581e:	2301      	movs	r3, #1
 8005820:	e147      	b.n	8005ab2 <HAL_FDCAN_Init+0x2a2>
 8005822:	687b      	ldr	r3, [r7, #4]
 8005824:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8005828:	b2db      	uxtb	r3, r3
 800582a:	2b00      	cmp	r3, #0
 800582c:	d106      	bne.n	800583c <HAL_FDCAN_Init+0x2c>
 800582e:	687b      	ldr	r3, [r7, #4]
 8005830:	2200      	movs	r2, #0
 8005832:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8005836:	6878      	ldr	r0, [r7, #4]
 8005838:	f7fb f8f4 	bl	8000a24 <HAL_FDCAN_MspInit>
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	699a      	ldr	r2, [r3, #24]
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	681b      	ldr	r3, [r3, #0]
 8005846:	f022 0210 	bic.w	r2, r2, #16
 800584a:	619a      	str	r2, [r3, #24]
 800584c:	f7fe f89e 	bl	800398c <HAL_GetTick>
 8005850:	60f8      	str	r0, [r7, #12]
 8005852:	e012      	b.n	800587a <HAL_FDCAN_Init+0x6a>
 8005854:	f7fe f89a 	bl	800398c <HAL_GetTick>
 8005858:	4602      	mov	r2, r0
 800585a:	68fb      	ldr	r3, [r7, #12]
 800585c:	1ad3      	subs	r3, r2, r3
 800585e:	2b0a      	cmp	r3, #10
 8005860:	d90b      	bls.n	800587a <HAL_FDCAN_Init+0x6a>
 8005862:	687b      	ldr	r3, [r7, #4]
 8005864:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005866:	f043 0201 	orr.w	r2, r3, #1
 800586a:	687b      	ldr	r3, [r7, #4]
 800586c:	661a      	str	r2, [r3, #96]	@ 0x60
 800586e:	687b      	ldr	r3, [r7, #4]
 8005870:	2203      	movs	r2, #3
 8005872:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8005876:	2301      	movs	r3, #1
 8005878:	e11b      	b.n	8005ab2 <HAL_FDCAN_Init+0x2a2>
 800587a:	687b      	ldr	r3, [r7, #4]
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	699b      	ldr	r3, [r3, #24]
 8005880:	f003 0308 	and.w	r3, r3, #8
 8005884:	2b08      	cmp	r3, #8
 8005886:	d0e5      	beq.n	8005854 <HAL_FDCAN_Init+0x44>
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	699a      	ldr	r2, [r3, #24]
 800588e:	687b      	ldr	r3, [r7, #4]
 8005890:	681b      	ldr	r3, [r3, #0]
 8005892:	f042 0201 	orr.w	r2, r2, #1
 8005896:	619a      	str	r2, [r3, #24]
 8005898:	f7fe f878 	bl	800398c <HAL_GetTick>
 800589c:	60f8      	str	r0, [r7, #12]
 800589e:	e012      	b.n	80058c6 <HAL_FDCAN_Init+0xb6>
 80058a0:	f7fe f874 	bl	800398c <HAL_GetTick>
 80058a4:	4602      	mov	r2, r0
 80058a6:	68fb      	ldr	r3, [r7, #12]
 80058a8:	1ad3      	subs	r3, r2, r3
 80058aa:	2b0a      	cmp	r3, #10
 80058ac:	d90b      	bls.n	80058c6 <HAL_FDCAN_Init+0xb6>
 80058ae:	687b      	ldr	r3, [r7, #4]
 80058b0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80058b2:	f043 0201 	orr.w	r2, r3, #1
 80058b6:	687b      	ldr	r3, [r7, #4]
 80058b8:	661a      	str	r2, [r3, #96]	@ 0x60
 80058ba:	687b      	ldr	r3, [r7, #4]
 80058bc:	2203      	movs	r2, #3
 80058be:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80058c2:	2301      	movs	r3, #1
 80058c4:	e0f5      	b.n	8005ab2 <HAL_FDCAN_Init+0x2a2>
 80058c6:	687b      	ldr	r3, [r7, #4]
 80058c8:	681b      	ldr	r3, [r3, #0]
 80058ca:	699b      	ldr	r3, [r3, #24]
 80058cc:	f003 0301 	and.w	r3, r3, #1
 80058d0:	2b00      	cmp	r3, #0
 80058d2:	d0e5      	beq.n	80058a0 <HAL_FDCAN_Init+0x90>
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	681b      	ldr	r3, [r3, #0]
 80058d8:	699a      	ldr	r2, [r3, #24]
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	f042 0202 	orr.w	r2, r2, #2
 80058e2:	619a      	str	r2, [r3, #24]
 80058e4:	687b      	ldr	r3, [r7, #4]
 80058e6:	681b      	ldr	r3, [r3, #0]
 80058e8:	4a74      	ldr	r2, [pc, #464]	@ (8005abc <HAL_FDCAN_Init+0x2ac>)
 80058ea:	4293      	cmp	r3, r2
 80058ec:	d103      	bne.n	80058f6 <HAL_FDCAN_Init+0xe6>
 80058ee:	4a74      	ldr	r2, [pc, #464]	@ (8005ac0 <HAL_FDCAN_Init+0x2b0>)
 80058f0:	687b      	ldr	r3, [r7, #4]
 80058f2:	685b      	ldr	r3, [r3, #4]
 80058f4:	6013      	str	r3, [r2, #0]
 80058f6:	687b      	ldr	r3, [r7, #4]
 80058f8:	7c1b      	ldrb	r3, [r3, #16]
 80058fa:	2b01      	cmp	r3, #1
 80058fc:	d108      	bne.n	8005910 <HAL_FDCAN_Init+0x100>
 80058fe:	687b      	ldr	r3, [r7, #4]
 8005900:	681b      	ldr	r3, [r3, #0]
 8005902:	699a      	ldr	r2, [r3, #24]
 8005904:	687b      	ldr	r3, [r7, #4]
 8005906:	681b      	ldr	r3, [r3, #0]
 8005908:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800590c:	619a      	str	r2, [r3, #24]
 800590e:	e007      	b.n	8005920 <HAL_FDCAN_Init+0x110>
 8005910:	687b      	ldr	r3, [r7, #4]
 8005912:	681b      	ldr	r3, [r3, #0]
 8005914:	699a      	ldr	r2, [r3, #24]
 8005916:	687b      	ldr	r3, [r7, #4]
 8005918:	681b      	ldr	r3, [r3, #0]
 800591a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800591e:	619a      	str	r2, [r3, #24]
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	7c5b      	ldrb	r3, [r3, #17]
 8005924:	2b01      	cmp	r3, #1
 8005926:	d108      	bne.n	800593a <HAL_FDCAN_Init+0x12a>
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	681b      	ldr	r3, [r3, #0]
 800592c:	699a      	ldr	r2, [r3, #24]
 800592e:	687b      	ldr	r3, [r7, #4]
 8005930:	681b      	ldr	r3, [r3, #0]
 8005932:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005936:	619a      	str	r2, [r3, #24]
 8005938:	e007      	b.n	800594a <HAL_FDCAN_Init+0x13a>
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	699a      	ldr	r2, [r3, #24]
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8005948:	619a      	str	r2, [r3, #24]
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	7c9b      	ldrb	r3, [r3, #18]
 800594e:	2b01      	cmp	r3, #1
 8005950:	d108      	bne.n	8005964 <HAL_FDCAN_Init+0x154>
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	681b      	ldr	r3, [r3, #0]
 8005956:	699a      	ldr	r2, [r3, #24]
 8005958:	687b      	ldr	r3, [r7, #4]
 800595a:	681b      	ldr	r3, [r3, #0]
 800595c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8005960:	619a      	str	r2, [r3, #24]
 8005962:	e007      	b.n	8005974 <HAL_FDCAN_Init+0x164>
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	681b      	ldr	r3, [r3, #0]
 8005968:	699a      	ldr	r2, [r3, #24]
 800596a:	687b      	ldr	r3, [r7, #4]
 800596c:	681b      	ldr	r3, [r3, #0]
 800596e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8005972:	619a      	str	r2, [r3, #24]
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	681b      	ldr	r3, [r3, #0]
 8005978:	699b      	ldr	r3, [r3, #24]
 800597a:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 800597e:	687b      	ldr	r3, [r7, #4]
 8005980:	689a      	ldr	r2, [r3, #8]
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	430a      	orrs	r2, r1
 8005988:	619a      	str	r2, [r3, #24]
 800598a:	687b      	ldr	r3, [r7, #4]
 800598c:	681b      	ldr	r3, [r3, #0]
 800598e:	699a      	ldr	r2, [r3, #24]
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	681b      	ldr	r3, [r3, #0]
 8005994:	f022 02a4 	bic.w	r2, r2, #164	@ 0xa4
 8005998:	619a      	str	r2, [r3, #24]
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	681b      	ldr	r3, [r3, #0]
 800599e:	691a      	ldr	r2, [r3, #16]
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	681b      	ldr	r3, [r3, #0]
 80059a4:	f022 0210 	bic.w	r2, r2, #16
 80059a8:	611a      	str	r2, [r3, #16]
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	68db      	ldr	r3, [r3, #12]
 80059ae:	2b01      	cmp	r3, #1
 80059b0:	d108      	bne.n	80059c4 <HAL_FDCAN_Init+0x1b4>
 80059b2:	687b      	ldr	r3, [r7, #4]
 80059b4:	681b      	ldr	r3, [r3, #0]
 80059b6:	699a      	ldr	r2, [r3, #24]
 80059b8:	687b      	ldr	r3, [r7, #4]
 80059ba:	681b      	ldr	r3, [r3, #0]
 80059bc:	f042 0204 	orr.w	r2, r2, #4
 80059c0:	619a      	str	r2, [r3, #24]
 80059c2:	e02c      	b.n	8005a1e <HAL_FDCAN_Init+0x20e>
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	68db      	ldr	r3, [r3, #12]
 80059c8:	2b00      	cmp	r3, #0
 80059ca:	d028      	beq.n	8005a1e <HAL_FDCAN_Init+0x20e>
 80059cc:	687b      	ldr	r3, [r7, #4]
 80059ce:	68db      	ldr	r3, [r3, #12]
 80059d0:	2b02      	cmp	r3, #2
 80059d2:	d01c      	beq.n	8005a0e <HAL_FDCAN_Init+0x1fe>
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	681b      	ldr	r3, [r3, #0]
 80059d8:	699a      	ldr	r2, [r3, #24]
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	681b      	ldr	r3, [r3, #0]
 80059de:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80059e2:	619a      	str	r2, [r3, #24]
 80059e4:	687b      	ldr	r3, [r7, #4]
 80059e6:	681b      	ldr	r3, [r3, #0]
 80059e8:	691a      	ldr	r2, [r3, #16]
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	681b      	ldr	r3, [r3, #0]
 80059ee:	f042 0210 	orr.w	r2, r2, #16
 80059f2:	611a      	str	r2, [r3, #16]
 80059f4:	687b      	ldr	r3, [r7, #4]
 80059f6:	68db      	ldr	r3, [r3, #12]
 80059f8:	2b03      	cmp	r3, #3
 80059fa:	d110      	bne.n	8005a1e <HAL_FDCAN_Init+0x20e>
 80059fc:	687b      	ldr	r3, [r7, #4]
 80059fe:	681b      	ldr	r3, [r3, #0]
 8005a00:	699a      	ldr	r2, [r3, #24]
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	681b      	ldr	r3, [r3, #0]
 8005a06:	f042 0220 	orr.w	r2, r2, #32
 8005a0a:	619a      	str	r2, [r3, #24]
 8005a0c:	e007      	b.n	8005a1e <HAL_FDCAN_Init+0x20e>
 8005a0e:	687b      	ldr	r3, [r7, #4]
 8005a10:	681b      	ldr	r3, [r3, #0]
 8005a12:	699a      	ldr	r2, [r3, #24]
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	681b      	ldr	r3, [r3, #0]
 8005a18:	f042 0220 	orr.w	r2, r2, #32
 8005a1c:	619a      	str	r2, [r3, #24]
 8005a1e:	687b      	ldr	r3, [r7, #4]
 8005a20:	699b      	ldr	r3, [r3, #24]
 8005a22:	3b01      	subs	r3, #1
 8005a24:	065a      	lsls	r2, r3, #25
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	69db      	ldr	r3, [r3, #28]
 8005a2a:	3b01      	subs	r3, #1
 8005a2c:	021b      	lsls	r3, r3, #8
 8005a2e:	431a      	orrs	r2, r3
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	6a1b      	ldr	r3, [r3, #32]
 8005a34:	3b01      	subs	r3, #1
 8005a36:	ea42 0103 	orr.w	r1, r2, r3
 8005a3a:	687b      	ldr	r3, [r7, #4]
 8005a3c:	695b      	ldr	r3, [r3, #20]
 8005a3e:	3b01      	subs	r3, #1
 8005a40:	041a      	lsls	r2, r3, #16
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	430a      	orrs	r2, r1
 8005a48:	61da      	str	r2, [r3, #28]
 8005a4a:	687b      	ldr	r3, [r7, #4]
 8005a4c:	689b      	ldr	r3, [r3, #8]
 8005a4e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8005a52:	d115      	bne.n	8005a80 <HAL_FDCAN_Init+0x270>
 8005a54:	687b      	ldr	r3, [r7, #4]
 8005a56:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005a58:	1e5a      	subs	r2, r3, #1
 8005a5a:	687b      	ldr	r3, [r7, #4]
 8005a5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005a5e:	3b01      	subs	r3, #1
 8005a60:	021b      	lsls	r3, r3, #8
 8005a62:	431a      	orrs	r2, r3
 8005a64:	687b      	ldr	r3, [r7, #4]
 8005a66:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005a68:	3b01      	subs	r3, #1
 8005a6a:	011b      	lsls	r3, r3, #4
 8005a6c:	ea42 0103 	orr.w	r1, r2, r3
 8005a70:	687b      	ldr	r3, [r7, #4]
 8005a72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005a74:	3b01      	subs	r3, #1
 8005a76:	041a      	lsls	r2, r3, #16
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	681b      	ldr	r3, [r3, #0]
 8005a7c:	430a      	orrs	r2, r1
 8005a7e:	60da      	str	r2, [r3, #12]
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	681b      	ldr	r3, [r3, #0]
 8005a84:	f8d3 10c0 	ldr.w	r1, [r3, #192]	@ 0xc0
 8005a88:	687b      	ldr	r3, [r7, #4]
 8005a8a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	681b      	ldr	r3, [r3, #0]
 8005a90:	430a      	orrs	r2, r1
 8005a92:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 8005a96:	6878      	ldr	r0, [r7, #4]
 8005a98:	f000 fb14 	bl	80060c4 <FDCAN_CalcultateRamBlockAddresses>
 8005a9c:	687b      	ldr	r3, [r7, #4]
 8005a9e:	2200      	movs	r2, #0
 8005aa0:	659a      	str	r2, [r3, #88]	@ 0x58
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	2200      	movs	r2, #0
 8005aa6:	661a      	str	r2, [r3, #96]	@ 0x60
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	2201      	movs	r2, #1
 8005aac:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8005ab0:	2300      	movs	r3, #0
 8005ab2:	4618      	mov	r0, r3
 8005ab4:	3710      	adds	r7, #16
 8005ab6:	46bd      	mov	sp, r7
 8005ab8:	bd80      	pop	{r7, pc}
 8005aba:	bf00      	nop
 8005abc:	40006400 	.word	0x40006400
 8005ac0:	40006500 	.word	0x40006500

08005ac4 <HAL_FDCAN_GetRxMessage>:
 8005ac4:	b480      	push	{r7}
 8005ac6:	b08b      	sub	sp, #44	@ 0x2c
 8005ac8:	af00      	add	r7, sp, #0
 8005aca:	60f8      	str	r0, [r7, #12]
 8005acc:	60b9      	str	r1, [r7, #8]
 8005ace:	607a      	str	r2, [r7, #4]
 8005ad0:	603b      	str	r3, [r7, #0]
 8005ad2:	2300      	movs	r3, #0
 8005ad4:	61fb      	str	r3, [r7, #28]
 8005ad6:	68fb      	ldr	r3, [r7, #12]
 8005ad8:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8005adc:	76fb      	strb	r3, [r7, #27]
 8005ade:	7efb      	ldrb	r3, [r7, #27]
 8005ae0:	2b02      	cmp	r3, #2
 8005ae2:	f040 80e8 	bne.w	8005cb6 <HAL_FDCAN_GetRxMessage+0x1f2>
 8005ae6:	68bb      	ldr	r3, [r7, #8]
 8005ae8:	2b40      	cmp	r3, #64	@ 0x40
 8005aea:	d137      	bne.n	8005b5c <HAL_FDCAN_GetRxMessage+0x98>
 8005aec:	68fb      	ldr	r3, [r7, #12]
 8005aee:	681b      	ldr	r3, [r3, #0]
 8005af0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005af4:	f003 030f 	and.w	r3, r3, #15
 8005af8:	2b00      	cmp	r3, #0
 8005afa:	d107      	bne.n	8005b0c <HAL_FDCAN_GetRxMessage+0x48>
 8005afc:	68fb      	ldr	r3, [r7, #12]
 8005afe:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005b00:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8005b04:	68fb      	ldr	r3, [r7, #12]
 8005b06:	661a      	str	r2, [r3, #96]	@ 0x60
 8005b08:	2301      	movs	r3, #1
 8005b0a:	e0db      	b.n	8005cc4 <HAL_FDCAN_GetRxMessage+0x200>
 8005b0c:	68fb      	ldr	r3, [r7, #12]
 8005b0e:	681b      	ldr	r3, [r3, #0]
 8005b10:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005b14:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8005b18:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8005b1c:	d10a      	bne.n	8005b34 <HAL_FDCAN_GetRxMessage+0x70>
 8005b1e:	68fb      	ldr	r3, [r7, #12]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8005b26:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005b2a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005b2e:	d101      	bne.n	8005b34 <HAL_FDCAN_GetRxMessage+0x70>
 8005b30:	2301      	movs	r3, #1
 8005b32:	61fb      	str	r3, [r7, #28]
 8005b34:	68fb      	ldr	r3, [r7, #12]
 8005b36:	681b      	ldr	r3, [r3, #0]
 8005b38:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005b3c:	0a1b      	lsrs	r3, r3, #8
 8005b3e:	f003 0303 	and.w	r3, r3, #3
 8005b42:	69fa      	ldr	r2, [r7, #28]
 8005b44:	4413      	add	r3, r2
 8005b46:	61fb      	str	r3, [r7, #28]
 8005b48:	68fb      	ldr	r3, [r7, #12]
 8005b4a:	6c99      	ldr	r1, [r3, #72]	@ 0x48
 8005b4c:	69fa      	ldr	r2, [r7, #28]
 8005b4e:	4613      	mov	r3, r2
 8005b50:	00db      	lsls	r3, r3, #3
 8005b52:	4413      	add	r3, r2
 8005b54:	00db      	lsls	r3, r3, #3
 8005b56:	440b      	add	r3, r1
 8005b58:	627b      	str	r3, [r7, #36]	@ 0x24
 8005b5a:	e036      	b.n	8005bca <HAL_FDCAN_GetRxMessage+0x106>
 8005b5c:	68fb      	ldr	r3, [r7, #12]
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005b64:	f003 030f 	and.w	r3, r3, #15
 8005b68:	2b00      	cmp	r3, #0
 8005b6a:	d107      	bne.n	8005b7c <HAL_FDCAN_GetRxMessage+0xb8>
 8005b6c:	68fb      	ldr	r3, [r7, #12]
 8005b6e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005b70:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8005b74:	68fb      	ldr	r3, [r7, #12]
 8005b76:	661a      	str	r2, [r3, #96]	@ 0x60
 8005b78:	2301      	movs	r3, #1
 8005b7a:	e0a3      	b.n	8005cc4 <HAL_FDCAN_GetRxMessage+0x200>
 8005b7c:	68fb      	ldr	r3, [r7, #12]
 8005b7e:	681b      	ldr	r3, [r3, #0]
 8005b80:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005b84:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8005b88:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8005b8c:	d10a      	bne.n	8005ba4 <HAL_FDCAN_GetRxMessage+0xe0>
 8005b8e:	68fb      	ldr	r3, [r7, #12]
 8005b90:	681b      	ldr	r3, [r3, #0]
 8005b92:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8005b96:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005b9a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005b9e:	d101      	bne.n	8005ba4 <HAL_FDCAN_GetRxMessage+0xe0>
 8005ba0:	2301      	movs	r3, #1
 8005ba2:	61fb      	str	r3, [r7, #28]
 8005ba4:	68fb      	ldr	r3, [r7, #12]
 8005ba6:	681b      	ldr	r3, [r3, #0]
 8005ba8:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005bac:	0a1b      	lsrs	r3, r3, #8
 8005bae:	f003 0303 	and.w	r3, r3, #3
 8005bb2:	69fa      	ldr	r2, [r7, #28]
 8005bb4:	4413      	add	r3, r2
 8005bb6:	61fb      	str	r3, [r7, #28]
 8005bb8:	68fb      	ldr	r3, [r7, #12]
 8005bba:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8005bbc:	69fa      	ldr	r2, [r7, #28]
 8005bbe:	4613      	mov	r3, r2
 8005bc0:	00db      	lsls	r3, r3, #3
 8005bc2:	4413      	add	r3, r2
 8005bc4:	00db      	lsls	r3, r3, #3
 8005bc6:	440b      	add	r3, r1
 8005bc8:	627b      	str	r3, [r7, #36]	@ 0x24
 8005bca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005bcc:	681b      	ldr	r3, [r3, #0]
 8005bce:	f003 4280 	and.w	r2, r3, #1073741824	@ 0x40000000
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	605a      	str	r2, [r3, #4]
 8005bd6:	687b      	ldr	r3, [r7, #4]
 8005bd8:	685b      	ldr	r3, [r3, #4]
 8005bda:	2b00      	cmp	r3, #0
 8005bdc:	d107      	bne.n	8005bee <HAL_FDCAN_GetRxMessage+0x12a>
 8005bde:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005be0:	681b      	ldr	r3, [r3, #0]
 8005be2:	0c9b      	lsrs	r3, r3, #18
 8005be4:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8005be8:	687b      	ldr	r3, [r7, #4]
 8005bea:	601a      	str	r2, [r3, #0]
 8005bec:	e005      	b.n	8005bfa <HAL_FDCAN_GetRxMessage+0x136>
 8005bee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005bf0:	681b      	ldr	r3, [r3, #0]
 8005bf2:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 8005bf6:	687b      	ldr	r3, [r7, #4]
 8005bf8:	601a      	str	r2, [r3, #0]
 8005bfa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005bfc:	681b      	ldr	r3, [r3, #0]
 8005bfe:	f003 5200 	and.w	r2, r3, #536870912	@ 0x20000000
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	609a      	str	r2, [r3, #8]
 8005c06:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c08:	681b      	ldr	r3, [r3, #0]
 8005c0a:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 8005c0e:	687b      	ldr	r3, [r7, #4]
 8005c10:	611a      	str	r2, [r3, #16]
 8005c12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c14:	3304      	adds	r3, #4
 8005c16:	627b      	str	r3, [r7, #36]	@ 0x24
 8005c18:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c1a:	681b      	ldr	r3, [r3, #0]
 8005c1c:	b29a      	uxth	r2, r3
 8005c1e:	687b      	ldr	r3, [r7, #4]
 8005c20:	61da      	str	r2, [r3, #28]
 8005c22:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c24:	681b      	ldr	r3, [r3, #0]
 8005c26:	0c1b      	lsrs	r3, r3, #16
 8005c28:	f003 020f 	and.w	r2, r3, #15
 8005c2c:	687b      	ldr	r3, [r7, #4]
 8005c2e:	60da      	str	r2, [r3, #12]
 8005c30:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	f403 1280 	and.w	r2, r3, #1048576	@ 0x100000
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	615a      	str	r2, [r3, #20]
 8005c3c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c3e:	681b      	ldr	r3, [r3, #0]
 8005c40:	f403 1200 	and.w	r2, r3, #2097152	@ 0x200000
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	619a      	str	r2, [r3, #24]
 8005c48:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c4a:	681b      	ldr	r3, [r3, #0]
 8005c4c:	0e1b      	lsrs	r3, r3, #24
 8005c4e:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	621a      	str	r2, [r3, #32]
 8005c56:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	0fda      	lsrs	r2, r3, #31
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	625a      	str	r2, [r3, #36]	@ 0x24
 8005c60:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c62:	3304      	adds	r3, #4
 8005c64:	627b      	str	r3, [r7, #36]	@ 0x24
 8005c66:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c68:	617b      	str	r3, [r7, #20]
 8005c6a:	2300      	movs	r3, #0
 8005c6c:	623b      	str	r3, [r7, #32]
 8005c6e:	e00a      	b.n	8005c86 <HAL_FDCAN_GetRxMessage+0x1c2>
 8005c70:	697a      	ldr	r2, [r7, #20]
 8005c72:	6a3b      	ldr	r3, [r7, #32]
 8005c74:	441a      	add	r2, r3
 8005c76:	6839      	ldr	r1, [r7, #0]
 8005c78:	6a3b      	ldr	r3, [r7, #32]
 8005c7a:	440b      	add	r3, r1
 8005c7c:	7812      	ldrb	r2, [r2, #0]
 8005c7e:	701a      	strb	r2, [r3, #0]
 8005c80:	6a3b      	ldr	r3, [r7, #32]
 8005c82:	3301      	adds	r3, #1
 8005c84:	623b      	str	r3, [r7, #32]
 8005c86:	687b      	ldr	r3, [r7, #4]
 8005c88:	68db      	ldr	r3, [r3, #12]
 8005c8a:	4a11      	ldr	r2, [pc, #68]	@ (8005cd0 <HAL_FDCAN_GetRxMessage+0x20c>)
 8005c8c:	5cd3      	ldrb	r3, [r2, r3]
 8005c8e:	461a      	mov	r2, r3
 8005c90:	6a3b      	ldr	r3, [r7, #32]
 8005c92:	4293      	cmp	r3, r2
 8005c94:	d3ec      	bcc.n	8005c70 <HAL_FDCAN_GetRxMessage+0x1ac>
 8005c96:	68bb      	ldr	r3, [r7, #8]
 8005c98:	2b40      	cmp	r3, #64	@ 0x40
 8005c9a:	d105      	bne.n	8005ca8 <HAL_FDCAN_GetRxMessage+0x1e4>
 8005c9c:	68fb      	ldr	r3, [r7, #12]
 8005c9e:	681b      	ldr	r3, [r3, #0]
 8005ca0:	69fa      	ldr	r2, [r7, #28]
 8005ca2:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8005ca6:	e004      	b.n	8005cb2 <HAL_FDCAN_GetRxMessage+0x1ee>
 8005ca8:	68fb      	ldr	r3, [r7, #12]
 8005caa:	681b      	ldr	r3, [r3, #0]
 8005cac:	69fa      	ldr	r2, [r7, #28]
 8005cae:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 8005cb2:	2300      	movs	r3, #0
 8005cb4:	e006      	b.n	8005cc4 <HAL_FDCAN_GetRxMessage+0x200>
 8005cb6:	68fb      	ldr	r3, [r7, #12]
 8005cb8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005cba:	f043 0208 	orr.w	r2, r3, #8
 8005cbe:	68fb      	ldr	r3, [r7, #12]
 8005cc0:	661a      	str	r2, [r3, #96]	@ 0x60
 8005cc2:	2301      	movs	r3, #1
 8005cc4:	4618      	mov	r0, r3
 8005cc6:	372c      	adds	r7, #44	@ 0x2c
 8005cc8:	46bd      	mov	sp, r7
 8005cca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cce:	4770      	bx	lr
 8005cd0:	0800c9fc 	.word	0x0800c9fc

08005cd4 <HAL_FDCAN_GetTxEvent>:
 8005cd4:	b480      	push	{r7}
 8005cd6:	b087      	sub	sp, #28
 8005cd8:	af00      	add	r7, sp, #0
 8005cda:	6078      	str	r0, [r7, #4]
 8005cdc:	6039      	str	r1, [r7, #0]
 8005cde:	687b      	ldr	r3, [r7, #4]
 8005ce0:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8005ce4:	75fb      	strb	r3, [r7, #23]
 8005ce6:	7dfb      	ldrb	r3, [r7, #23]
 8005ce8:	2b02      	cmp	r3, #2
 8005cea:	d16e      	bne.n	8005dca <HAL_FDCAN_GetTxEvent+0xf6>
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	681b      	ldr	r3, [r3, #0]
 8005cf0:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8005cf4:	f003 0307 	and.w	r3, r3, #7
 8005cf8:	2b00      	cmp	r3, #0
 8005cfa:	d107      	bne.n	8005d0c <HAL_FDCAN_GetTxEvent+0x38>
 8005cfc:	687b      	ldr	r3, [r7, #4]
 8005cfe:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005d00:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8005d04:	687b      	ldr	r3, [r7, #4]
 8005d06:	661a      	str	r2, [r3, #96]	@ 0x60
 8005d08:	2301      	movs	r3, #1
 8005d0a:	e065      	b.n	8005dd8 <HAL_FDCAN_GetTxEvent+0x104>
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	681b      	ldr	r3, [r3, #0]
 8005d10:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8005d14:	0a1b      	lsrs	r3, r3, #8
 8005d16:	f003 0303 	and.w	r3, r3, #3
 8005d1a:	613b      	str	r3, [r7, #16]
 8005d1c:	687b      	ldr	r3, [r7, #4]
 8005d1e:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8005d20:	693b      	ldr	r3, [r7, #16]
 8005d22:	00db      	lsls	r3, r3, #3
 8005d24:	4413      	add	r3, r2
 8005d26:	60fb      	str	r3, [r7, #12]
 8005d28:	68fb      	ldr	r3, [r7, #12]
 8005d2a:	681b      	ldr	r3, [r3, #0]
 8005d2c:	f003 4280 	and.w	r2, r3, #1073741824	@ 0x40000000
 8005d30:	683b      	ldr	r3, [r7, #0]
 8005d32:	605a      	str	r2, [r3, #4]
 8005d34:	683b      	ldr	r3, [r7, #0]
 8005d36:	685b      	ldr	r3, [r3, #4]
 8005d38:	2b00      	cmp	r3, #0
 8005d3a:	d107      	bne.n	8005d4c <HAL_FDCAN_GetTxEvent+0x78>
 8005d3c:	68fb      	ldr	r3, [r7, #12]
 8005d3e:	681b      	ldr	r3, [r3, #0]
 8005d40:	0c9b      	lsrs	r3, r3, #18
 8005d42:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8005d46:	683b      	ldr	r3, [r7, #0]
 8005d48:	601a      	str	r2, [r3, #0]
 8005d4a:	e005      	b.n	8005d58 <HAL_FDCAN_GetTxEvent+0x84>
 8005d4c:	68fb      	ldr	r3, [r7, #12]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 8005d54:	683b      	ldr	r3, [r7, #0]
 8005d56:	601a      	str	r2, [r3, #0]
 8005d58:	68fb      	ldr	r3, [r7, #12]
 8005d5a:	681b      	ldr	r3, [r3, #0]
 8005d5c:	f003 5200 	and.w	r2, r3, #536870912	@ 0x20000000
 8005d60:	683b      	ldr	r3, [r7, #0]
 8005d62:	609a      	str	r2, [r3, #8]
 8005d64:	68fb      	ldr	r3, [r7, #12]
 8005d66:	681b      	ldr	r3, [r3, #0]
 8005d68:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 8005d6c:	683b      	ldr	r3, [r7, #0]
 8005d6e:	611a      	str	r2, [r3, #16]
 8005d70:	68fb      	ldr	r3, [r7, #12]
 8005d72:	3304      	adds	r3, #4
 8005d74:	60fb      	str	r3, [r7, #12]
 8005d76:	68fb      	ldr	r3, [r7, #12]
 8005d78:	681b      	ldr	r3, [r3, #0]
 8005d7a:	b29a      	uxth	r2, r3
 8005d7c:	683b      	ldr	r3, [r7, #0]
 8005d7e:	61da      	str	r2, [r3, #28]
 8005d80:	68fb      	ldr	r3, [r7, #12]
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	0c1b      	lsrs	r3, r3, #16
 8005d86:	f003 020f 	and.w	r2, r3, #15
 8005d8a:	683b      	ldr	r3, [r7, #0]
 8005d8c:	60da      	str	r2, [r3, #12]
 8005d8e:	68fb      	ldr	r3, [r7, #12]
 8005d90:	681b      	ldr	r3, [r3, #0]
 8005d92:	f403 1280 	and.w	r2, r3, #1048576	@ 0x100000
 8005d96:	683b      	ldr	r3, [r7, #0]
 8005d98:	615a      	str	r2, [r3, #20]
 8005d9a:	68fb      	ldr	r3, [r7, #12]
 8005d9c:	681b      	ldr	r3, [r3, #0]
 8005d9e:	f403 1200 	and.w	r2, r3, #2097152	@ 0x200000
 8005da2:	683b      	ldr	r3, [r7, #0]
 8005da4:	619a      	str	r2, [r3, #24]
 8005da6:	68fb      	ldr	r3, [r7, #12]
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	f403 0240 	and.w	r2, r3, #12582912	@ 0xc00000
 8005dae:	683b      	ldr	r3, [r7, #0]
 8005db0:	625a      	str	r2, [r3, #36]	@ 0x24
 8005db2:	68fb      	ldr	r3, [r7, #12]
 8005db4:	681b      	ldr	r3, [r3, #0]
 8005db6:	0e1a      	lsrs	r2, r3, #24
 8005db8:	683b      	ldr	r3, [r7, #0]
 8005dba:	621a      	str	r2, [r3, #32]
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	681b      	ldr	r3, [r3, #0]
 8005dc0:	693a      	ldr	r2, [r7, #16]
 8005dc2:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
 8005dc6:	2300      	movs	r3, #0
 8005dc8:	e006      	b.n	8005dd8 <HAL_FDCAN_GetTxEvent+0x104>
 8005dca:	687b      	ldr	r3, [r7, #4]
 8005dcc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005dce:	f043 0208 	orr.w	r2, r3, #8
 8005dd2:	687b      	ldr	r3, [r7, #4]
 8005dd4:	661a      	str	r2, [r3, #96]	@ 0x60
 8005dd6:	2301      	movs	r3, #1
 8005dd8:	4618      	mov	r0, r3
 8005dda:	371c      	adds	r7, #28
 8005ddc:	46bd      	mov	sp, r7
 8005dde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005de2:	4770      	bx	lr

08005de4 <HAL_FDCAN_IRQHandler>:
 8005de4:	b580      	push	{r7, lr}
 8005de6:	b08c      	sub	sp, #48	@ 0x30
 8005de8:	af00      	add	r7, sp, #0
 8005dea:	6078      	str	r0, [r7, #4]
 8005dec:	687b      	ldr	r3, [r7, #4]
 8005dee:	681b      	ldr	r3, [r3, #0]
 8005df0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005df2:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8005df6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	681b      	ldr	r3, [r3, #0]
 8005dfc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005dfe:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005e00:	4013      	ands	r3, r2
 8005e02:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005e04:	687b      	ldr	r3, [r7, #4]
 8005e06:	681b      	ldr	r3, [r3, #0]
 8005e08:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005e0a:	f003 0307 	and.w	r3, r3, #7
 8005e0e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	681b      	ldr	r3, [r3, #0]
 8005e14:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e16:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8005e18:	4013      	ands	r3, r2
 8005e1a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005e1c:	687b      	ldr	r3, [r7, #4]
 8005e1e:	681b      	ldr	r3, [r3, #0]
 8005e20:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005e22:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8005e26:	627b      	str	r3, [r7, #36]	@ 0x24
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e2e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005e30:	4013      	ands	r3, r2
 8005e32:	627b      	str	r3, [r7, #36]	@ 0x24
 8005e34:	687b      	ldr	r3, [r7, #4]
 8005e36:	681b      	ldr	r3, [r3, #0]
 8005e38:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005e3a:	f403 0371 	and.w	r3, r3, #15794176	@ 0xf10000
 8005e3e:	623b      	str	r3, [r7, #32]
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	681b      	ldr	r3, [r3, #0]
 8005e44:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e46:	6a3a      	ldr	r2, [r7, #32]
 8005e48:	4013      	ands	r3, r2
 8005e4a:	623b      	str	r3, [r7, #32]
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005e52:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8005e56:	61fb      	str	r3, [r7, #28]
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	681b      	ldr	r3, [r3, #0]
 8005e5c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e5e:	69fa      	ldr	r2, [r7, #28]
 8005e60:	4013      	ands	r3, r2
 8005e62:	61fb      	str	r3, [r7, #28]
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	681b      	ldr	r3, [r3, #0]
 8005e68:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e6a:	61bb      	str	r3, [r7, #24]
 8005e6c:	687b      	ldr	r3, [r7, #4]
 8005e6e:	681b      	ldr	r3, [r3, #0]
 8005e70:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005e72:	617b      	str	r3, [r7, #20]
 8005e74:	697b      	ldr	r3, [r7, #20]
 8005e76:	099b      	lsrs	r3, r3, #6
 8005e78:	f003 0301 	and.w	r3, r3, #1
 8005e7c:	2b00      	cmp	r3, #0
 8005e7e:	d00c      	beq.n	8005e9a <HAL_FDCAN_IRQHandler+0xb6>
 8005e80:	69bb      	ldr	r3, [r7, #24]
 8005e82:	099b      	lsrs	r3, r3, #6
 8005e84:	f003 0301 	and.w	r3, r3, #1
 8005e88:	2b00      	cmp	r3, #0
 8005e8a:	d006      	beq.n	8005e9a <HAL_FDCAN_IRQHandler+0xb6>
 8005e8c:	687b      	ldr	r3, [r7, #4]
 8005e8e:	681b      	ldr	r3, [r3, #0]
 8005e90:	2240      	movs	r2, #64	@ 0x40
 8005e92:	651a      	str	r2, [r3, #80]	@ 0x50
 8005e94:	6878      	ldr	r0, [r7, #4]
 8005e96:	f000 f901 	bl	800609c <HAL_FDCAN_HighPriorityMessageCallback>
 8005e9a:	697b      	ldr	r3, [r7, #20]
 8005e9c:	0a1b      	lsrs	r3, r3, #8
 8005e9e:	f003 0301 	and.w	r3, r3, #1
 8005ea2:	2b00      	cmp	r3, #0
 8005ea4:	d01a      	beq.n	8005edc <HAL_FDCAN_IRQHandler+0xf8>
 8005ea6:	69bb      	ldr	r3, [r7, #24]
 8005ea8:	0a1b      	lsrs	r3, r3, #8
 8005eaa:	f003 0301 	and.w	r3, r3, #1
 8005eae:	2b00      	cmp	r3, #0
 8005eb0:	d014      	beq.n	8005edc <HAL_FDCAN_IRQHandler+0xf8>
 8005eb2:	687b      	ldr	r3, [r7, #4]
 8005eb4:	681b      	ldr	r3, [r3, #0]
 8005eb6:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8005eba:	613b      	str	r3, [r7, #16]
 8005ebc:	687b      	ldr	r3, [r7, #4]
 8005ebe:	681b      	ldr	r3, [r3, #0]
 8005ec0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005ec4:	693a      	ldr	r2, [r7, #16]
 8005ec6:	4013      	ands	r3, r2
 8005ec8:	613b      	str	r3, [r7, #16]
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	681b      	ldr	r3, [r3, #0]
 8005ece:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8005ed2:	651a      	str	r2, [r3, #80]	@ 0x50
 8005ed4:	6939      	ldr	r1, [r7, #16]
 8005ed6:	6878      	ldr	r0, [r7, #4]
 8005ed8:	f000 f8c1 	bl	800605e <HAL_FDCAN_TxBufferAbortCallback>
 8005edc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005ede:	2b00      	cmp	r3, #0
 8005ee0:	d007      	beq.n	8005ef2 <HAL_FDCAN_IRQHandler+0x10e>
 8005ee2:	687b      	ldr	r3, [r7, #4]
 8005ee4:	681b      	ldr	r3, [r3, #0]
 8005ee6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005ee8:	651a      	str	r2, [r3, #80]	@ 0x50
 8005eea:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8005eec:	6878      	ldr	r0, [r7, #4]
 8005eee:	f7fb fc61 	bl	80017b4 <HAL_FDCAN_TxEventFifoCallback>
 8005ef2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005ef4:	2b00      	cmp	r3, #0
 8005ef6:	d007      	beq.n	8005f08 <HAL_FDCAN_IRQHandler+0x124>
 8005ef8:	687b      	ldr	r3, [r7, #4]
 8005efa:	681b      	ldr	r3, [r3, #0]
 8005efc:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8005efe:	651a      	str	r2, [r3, #80]	@ 0x50
 8005f00:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005f02:	6878      	ldr	r0, [r7, #4]
 8005f04:	f7fb fc7c 	bl	8001800 <HAL_FDCAN_RxFifo0Callback>
 8005f08:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005f0a:	2b00      	cmp	r3, #0
 8005f0c:	d007      	beq.n	8005f1e <HAL_FDCAN_IRQHandler+0x13a>
 8005f0e:	687b      	ldr	r3, [r7, #4]
 8005f10:	681b      	ldr	r3, [r3, #0]
 8005f12:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005f14:	651a      	str	r2, [r3, #80]	@ 0x50
 8005f16:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8005f18:	6878      	ldr	r0, [r7, #4]
 8005f1a:	f7fb fce1 	bl	80018e0 <HAL_FDCAN_RxFifo1Callback>
 8005f1e:	697b      	ldr	r3, [r7, #20]
 8005f20:	0a5b      	lsrs	r3, r3, #9
 8005f22:	f003 0301 	and.w	r3, r3, #1
 8005f26:	2b00      	cmp	r3, #0
 8005f28:	d00d      	beq.n	8005f46 <HAL_FDCAN_IRQHandler+0x162>
 8005f2a:	69bb      	ldr	r3, [r7, #24]
 8005f2c:	0a5b      	lsrs	r3, r3, #9
 8005f2e:	f003 0301 	and.w	r3, r3, #1
 8005f32:	2b00      	cmp	r3, #0
 8005f34:	d007      	beq.n	8005f46 <HAL_FDCAN_IRQHandler+0x162>
 8005f36:	687b      	ldr	r3, [r7, #4]
 8005f38:	681b      	ldr	r3, [r3, #0]
 8005f3a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005f3e:	651a      	str	r2, [r3, #80]	@ 0x50
 8005f40:	6878      	ldr	r0, [r7, #4]
 8005f42:	f000 f882 	bl	800604a <HAL_FDCAN_TxFifoEmptyCallback>
 8005f46:	697b      	ldr	r3, [r7, #20]
 8005f48:	09db      	lsrs	r3, r3, #7
 8005f4a:	f003 0301 	and.w	r3, r3, #1
 8005f4e:	2b00      	cmp	r3, #0
 8005f50:	d019      	beq.n	8005f86 <HAL_FDCAN_IRQHandler+0x1a2>
 8005f52:	69bb      	ldr	r3, [r7, #24]
 8005f54:	09db      	lsrs	r3, r3, #7
 8005f56:	f003 0301 	and.w	r3, r3, #1
 8005f5a:	2b00      	cmp	r3, #0
 8005f5c:	d013      	beq.n	8005f86 <HAL_FDCAN_IRQHandler+0x1a2>
 8005f5e:	687b      	ldr	r3, [r7, #4]
 8005f60:	681b      	ldr	r3, [r3, #0]
 8005f62:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8005f66:	60fb      	str	r3, [r7, #12]
 8005f68:	687b      	ldr	r3, [r7, #4]
 8005f6a:	681b      	ldr	r3, [r3, #0]
 8005f6c:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8005f70:	68fa      	ldr	r2, [r7, #12]
 8005f72:	4013      	ands	r3, r2
 8005f74:	60fb      	str	r3, [r7, #12]
 8005f76:	687b      	ldr	r3, [r7, #4]
 8005f78:	681b      	ldr	r3, [r3, #0]
 8005f7a:	2280      	movs	r2, #128	@ 0x80
 8005f7c:	651a      	str	r2, [r3, #80]	@ 0x50
 8005f7e:	68f9      	ldr	r1, [r7, #12]
 8005f80:	6878      	ldr	r0, [r7, #4]
 8005f82:	f7fb fc32 	bl	80017ea <HAL_FDCAN_TxBufferCompleteCallback>
 8005f86:	697b      	ldr	r3, [r7, #20]
 8005f88:	0b5b      	lsrs	r3, r3, #13
 8005f8a:	f003 0301 	and.w	r3, r3, #1
 8005f8e:	2b00      	cmp	r3, #0
 8005f90:	d00d      	beq.n	8005fae <HAL_FDCAN_IRQHandler+0x1ca>
 8005f92:	69bb      	ldr	r3, [r7, #24]
 8005f94:	0b5b      	lsrs	r3, r3, #13
 8005f96:	f003 0301 	and.w	r3, r3, #1
 8005f9a:	2b00      	cmp	r3, #0
 8005f9c:	d007      	beq.n	8005fae <HAL_FDCAN_IRQHandler+0x1ca>
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	681b      	ldr	r3, [r3, #0]
 8005fa2:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8005fa6:	651a      	str	r2, [r3, #80]	@ 0x50
 8005fa8:	6878      	ldr	r0, [r7, #4]
 8005faa:	f000 f863 	bl	8006074 <HAL_FDCAN_TimestampWraparoundCallback>
 8005fae:	697b      	ldr	r3, [r7, #20]
 8005fb0:	0bdb      	lsrs	r3, r3, #15
 8005fb2:	f003 0301 	and.w	r3, r3, #1
 8005fb6:	2b00      	cmp	r3, #0
 8005fb8:	d00d      	beq.n	8005fd6 <HAL_FDCAN_IRQHandler+0x1f2>
 8005fba:	69bb      	ldr	r3, [r7, #24]
 8005fbc:	0bdb      	lsrs	r3, r3, #15
 8005fbe:	f003 0301 	and.w	r3, r3, #1
 8005fc2:	2b00      	cmp	r3, #0
 8005fc4:	d007      	beq.n	8005fd6 <HAL_FDCAN_IRQHandler+0x1f2>
 8005fc6:	687b      	ldr	r3, [r7, #4]
 8005fc8:	681b      	ldr	r3, [r3, #0]
 8005fca:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8005fce:	651a      	str	r2, [r3, #80]	@ 0x50
 8005fd0:	6878      	ldr	r0, [r7, #4]
 8005fd2:	f000 f859 	bl	8006088 <HAL_FDCAN_TimeoutOccurredCallback>
 8005fd6:	697b      	ldr	r3, [r7, #20]
 8005fd8:	0b9b      	lsrs	r3, r3, #14
 8005fda:	f003 0301 	and.w	r3, r3, #1
 8005fde:	2b00      	cmp	r3, #0
 8005fe0:	d010      	beq.n	8006004 <HAL_FDCAN_IRQHandler+0x220>
 8005fe2:	69bb      	ldr	r3, [r7, #24]
 8005fe4:	0b9b      	lsrs	r3, r3, #14
 8005fe6:	f003 0301 	and.w	r3, r3, #1
 8005fea:	2b00      	cmp	r3, #0
 8005fec:	d00a      	beq.n	8006004 <HAL_FDCAN_IRQHandler+0x220>
 8005fee:	687b      	ldr	r3, [r7, #4]
 8005ff0:	681b      	ldr	r3, [r3, #0]
 8005ff2:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8005ff6:	651a      	str	r2, [r3, #80]	@ 0x50
 8005ff8:	687b      	ldr	r3, [r7, #4]
 8005ffa:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005ffc:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8006000:	687b      	ldr	r3, [r7, #4]
 8006002:	661a      	str	r2, [r3, #96]	@ 0x60
 8006004:	69fb      	ldr	r3, [r7, #28]
 8006006:	2b00      	cmp	r3, #0
 8006008:	d007      	beq.n	800601a <HAL_FDCAN_IRQHandler+0x236>
 800600a:	687b      	ldr	r3, [r7, #4]
 800600c:	681b      	ldr	r3, [r3, #0]
 800600e:	69fa      	ldr	r2, [r7, #28]
 8006010:	651a      	str	r2, [r3, #80]	@ 0x50
 8006012:	69f9      	ldr	r1, [r7, #28]
 8006014:	6878      	ldr	r0, [r7, #4]
 8006016:	f7fb fbb1 	bl	800177c <HAL_FDCAN_ErrorStatusCallback>
 800601a:	6a3b      	ldr	r3, [r7, #32]
 800601c:	2b00      	cmp	r3, #0
 800601e:	d009      	beq.n	8006034 <HAL_FDCAN_IRQHandler+0x250>
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	681b      	ldr	r3, [r3, #0]
 8006024:	6a3a      	ldr	r2, [r7, #32]
 8006026:	651a      	str	r2, [r3, #80]	@ 0x50
 8006028:	687b      	ldr	r3, [r7, #4]
 800602a:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800602c:	6a3b      	ldr	r3, [r7, #32]
 800602e:	431a      	orrs	r2, r3
 8006030:	687b      	ldr	r3, [r7, #4]
 8006032:	661a      	str	r2, [r3, #96]	@ 0x60
 8006034:	687b      	ldr	r3, [r7, #4]
 8006036:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006038:	2b00      	cmp	r3, #0
 800603a:	d002      	beq.n	8006042 <HAL_FDCAN_IRQHandler+0x25e>
 800603c:	6878      	ldr	r0, [r7, #4]
 800603e:	f000 f837 	bl	80060b0 <HAL_FDCAN_ErrorCallback>
 8006042:	bf00      	nop
 8006044:	3730      	adds	r7, #48	@ 0x30
 8006046:	46bd      	mov	sp, r7
 8006048:	bd80      	pop	{r7, pc}

0800604a <HAL_FDCAN_TxFifoEmptyCallback>:
 800604a:	b480      	push	{r7}
 800604c:	b083      	sub	sp, #12
 800604e:	af00      	add	r7, sp, #0
 8006050:	6078      	str	r0, [r7, #4]
 8006052:	bf00      	nop
 8006054:	370c      	adds	r7, #12
 8006056:	46bd      	mov	sp, r7
 8006058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800605c:	4770      	bx	lr

0800605e <HAL_FDCAN_TxBufferAbortCallback>:
 800605e:	b480      	push	{r7}
 8006060:	b083      	sub	sp, #12
 8006062:	af00      	add	r7, sp, #0
 8006064:	6078      	str	r0, [r7, #4]
 8006066:	6039      	str	r1, [r7, #0]
 8006068:	bf00      	nop
 800606a:	370c      	adds	r7, #12
 800606c:	46bd      	mov	sp, r7
 800606e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006072:	4770      	bx	lr

08006074 <HAL_FDCAN_TimestampWraparoundCallback>:
 8006074:	b480      	push	{r7}
 8006076:	b083      	sub	sp, #12
 8006078:	af00      	add	r7, sp, #0
 800607a:	6078      	str	r0, [r7, #4]
 800607c:	bf00      	nop
 800607e:	370c      	adds	r7, #12
 8006080:	46bd      	mov	sp, r7
 8006082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006086:	4770      	bx	lr

08006088 <HAL_FDCAN_TimeoutOccurredCallback>:
 8006088:	b480      	push	{r7}
 800608a:	b083      	sub	sp, #12
 800608c:	af00      	add	r7, sp, #0
 800608e:	6078      	str	r0, [r7, #4]
 8006090:	bf00      	nop
 8006092:	370c      	adds	r7, #12
 8006094:	46bd      	mov	sp, r7
 8006096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800609a:	4770      	bx	lr

0800609c <HAL_FDCAN_HighPriorityMessageCallback>:
 800609c:	b480      	push	{r7}
 800609e:	b083      	sub	sp, #12
 80060a0:	af00      	add	r7, sp, #0
 80060a2:	6078      	str	r0, [r7, #4]
 80060a4:	bf00      	nop
 80060a6:	370c      	adds	r7, #12
 80060a8:	46bd      	mov	sp, r7
 80060aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060ae:	4770      	bx	lr

080060b0 <HAL_FDCAN_ErrorCallback>:
 80060b0:	b480      	push	{r7}
 80060b2:	b083      	sub	sp, #12
 80060b4:	af00      	add	r7, sp, #0
 80060b6:	6078      	str	r0, [r7, #4]
 80060b8:	bf00      	nop
 80060ba:	370c      	adds	r7, #12
 80060bc:	46bd      	mov	sp, r7
 80060be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060c2:	4770      	bx	lr

080060c4 <FDCAN_CalcultateRamBlockAddresses>:
 80060c4:	b480      	push	{r7}
 80060c6:	b085      	sub	sp, #20
 80060c8:	af00      	add	r7, sp, #0
 80060ca:	6078      	str	r0, [r7, #4]
 80060cc:	4b27      	ldr	r3, [pc, #156]	@ (800616c <FDCAN_CalcultateRamBlockAddresses+0xa8>)
 80060ce:	60bb      	str	r3, [r7, #8]
 80060d0:	687b      	ldr	r3, [r7, #4]
 80060d2:	68ba      	ldr	r2, [r7, #8]
 80060d4:	641a      	str	r2, [r3, #64]	@ 0x40
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80060de:	f423 11f8 	bic.w	r1, r3, #2031616	@ 0x1f0000
 80060e2:	687b      	ldr	r3, [r7, #4]
 80060e4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80060e6:	041a      	lsls	r2, r3, #16
 80060e8:	687b      	ldr	r3, [r7, #4]
 80060ea:	681b      	ldr	r3, [r3, #0]
 80060ec:	430a      	orrs	r2, r1
 80060ee:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80060f2:	68bb      	ldr	r3, [r7, #8]
 80060f4:	f103 0270 	add.w	r2, r3, #112	@ 0x70
 80060f8:	687b      	ldr	r3, [r7, #4]
 80060fa:	645a      	str	r2, [r3, #68]	@ 0x44
 80060fc:	687b      	ldr	r3, [r7, #4]
 80060fe:	681b      	ldr	r3, [r3, #0]
 8006100:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006104:	f023 6170 	bic.w	r1, r3, #251658240	@ 0xf000000
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800610c:	061a      	lsls	r2, r3, #24
 800610e:	687b      	ldr	r3, [r7, #4]
 8006110:	681b      	ldr	r3, [r3, #0]
 8006112:	430a      	orrs	r2, r1
 8006114:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006118:	68bb      	ldr	r3, [r7, #8]
 800611a:	f103 02b0 	add.w	r2, r3, #176	@ 0xb0
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	649a      	str	r2, [r3, #72]	@ 0x48
 8006122:	68bb      	ldr	r3, [r7, #8]
 8006124:	f503 72c4 	add.w	r2, r3, #392	@ 0x188
 8006128:	687b      	ldr	r3, [r7, #4]
 800612a:	64da      	str	r2, [r3, #76]	@ 0x4c
 800612c:	68bb      	ldr	r3, [r7, #8]
 800612e:	f503 7218 	add.w	r2, r3, #608	@ 0x260
 8006132:	687b      	ldr	r3, [r7, #4]
 8006134:	651a      	str	r2, [r3, #80]	@ 0x50
 8006136:	68bb      	ldr	r3, [r7, #8]
 8006138:	f503 721e 	add.w	r2, r3, #632	@ 0x278
 800613c:	687b      	ldr	r3, [r7, #4]
 800613e:	655a      	str	r2, [r3, #84]	@ 0x54
 8006140:	68bb      	ldr	r3, [r7, #8]
 8006142:	60fb      	str	r3, [r7, #12]
 8006144:	e005      	b.n	8006152 <FDCAN_CalcultateRamBlockAddresses+0x8e>
 8006146:	68fb      	ldr	r3, [r7, #12]
 8006148:	2200      	movs	r2, #0
 800614a:	601a      	str	r2, [r3, #0]
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	3304      	adds	r3, #4
 8006150:	60fb      	str	r3, [r7, #12]
 8006152:	68bb      	ldr	r3, [r7, #8]
 8006154:	f503 7354 	add.w	r3, r3, #848	@ 0x350
 8006158:	68fa      	ldr	r2, [r7, #12]
 800615a:	429a      	cmp	r2, r3
 800615c:	d3f3      	bcc.n	8006146 <FDCAN_CalcultateRamBlockAddresses+0x82>
 800615e:	bf00      	nop
 8006160:	bf00      	nop
 8006162:	3714      	adds	r7, #20
 8006164:	46bd      	mov	sp, r7
 8006166:	f85d 7b04 	ldr.w	r7, [sp], #4
 800616a:	4770      	bx	lr
 800616c:	4000a400 	.word	0x4000a400

08006170 <HAL_GPIO_Init>:
 8006170:	b480      	push	{r7}
 8006172:	b087      	sub	sp, #28
 8006174:	af00      	add	r7, sp, #0
 8006176:	6078      	str	r0, [r7, #4]
 8006178:	6039      	str	r1, [r7, #0]
 800617a:	2300      	movs	r3, #0
 800617c:	617b      	str	r3, [r7, #20]
 800617e:	e15a      	b.n	8006436 <HAL_GPIO_Init+0x2c6>
 8006180:	683b      	ldr	r3, [r7, #0]
 8006182:	681a      	ldr	r2, [r3, #0]
 8006184:	2101      	movs	r1, #1
 8006186:	697b      	ldr	r3, [r7, #20]
 8006188:	fa01 f303 	lsl.w	r3, r1, r3
 800618c:	4013      	ands	r3, r2
 800618e:	60fb      	str	r3, [r7, #12]
 8006190:	68fb      	ldr	r3, [r7, #12]
 8006192:	2b00      	cmp	r3, #0
 8006194:	f000 814c 	beq.w	8006430 <HAL_GPIO_Init+0x2c0>
 8006198:	683b      	ldr	r3, [r7, #0]
 800619a:	685b      	ldr	r3, [r3, #4]
 800619c:	f003 0303 	and.w	r3, r3, #3
 80061a0:	2b01      	cmp	r3, #1
 80061a2:	d005      	beq.n	80061b0 <HAL_GPIO_Init+0x40>
 80061a4:	683b      	ldr	r3, [r7, #0]
 80061a6:	685b      	ldr	r3, [r3, #4]
 80061a8:	f003 0303 	and.w	r3, r3, #3
 80061ac:	2b02      	cmp	r3, #2
 80061ae:	d130      	bne.n	8006212 <HAL_GPIO_Init+0xa2>
 80061b0:	687b      	ldr	r3, [r7, #4]
 80061b2:	689b      	ldr	r3, [r3, #8]
 80061b4:	613b      	str	r3, [r7, #16]
 80061b6:	697b      	ldr	r3, [r7, #20]
 80061b8:	005b      	lsls	r3, r3, #1
 80061ba:	2203      	movs	r2, #3
 80061bc:	fa02 f303 	lsl.w	r3, r2, r3
 80061c0:	43db      	mvns	r3, r3
 80061c2:	693a      	ldr	r2, [r7, #16]
 80061c4:	4013      	ands	r3, r2
 80061c6:	613b      	str	r3, [r7, #16]
 80061c8:	683b      	ldr	r3, [r7, #0]
 80061ca:	68da      	ldr	r2, [r3, #12]
 80061cc:	697b      	ldr	r3, [r7, #20]
 80061ce:	005b      	lsls	r3, r3, #1
 80061d0:	fa02 f303 	lsl.w	r3, r2, r3
 80061d4:	693a      	ldr	r2, [r7, #16]
 80061d6:	4313      	orrs	r3, r2
 80061d8:	613b      	str	r3, [r7, #16]
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	693a      	ldr	r2, [r7, #16]
 80061de:	609a      	str	r2, [r3, #8]
 80061e0:	687b      	ldr	r3, [r7, #4]
 80061e2:	685b      	ldr	r3, [r3, #4]
 80061e4:	613b      	str	r3, [r7, #16]
 80061e6:	2201      	movs	r2, #1
 80061e8:	697b      	ldr	r3, [r7, #20]
 80061ea:	fa02 f303 	lsl.w	r3, r2, r3
 80061ee:	43db      	mvns	r3, r3
 80061f0:	693a      	ldr	r2, [r7, #16]
 80061f2:	4013      	ands	r3, r2
 80061f4:	613b      	str	r3, [r7, #16]
 80061f6:	683b      	ldr	r3, [r7, #0]
 80061f8:	685b      	ldr	r3, [r3, #4]
 80061fa:	091b      	lsrs	r3, r3, #4
 80061fc:	f003 0201 	and.w	r2, r3, #1
 8006200:	697b      	ldr	r3, [r7, #20]
 8006202:	fa02 f303 	lsl.w	r3, r2, r3
 8006206:	693a      	ldr	r2, [r7, #16]
 8006208:	4313      	orrs	r3, r2
 800620a:	613b      	str	r3, [r7, #16]
 800620c:	687b      	ldr	r3, [r7, #4]
 800620e:	693a      	ldr	r2, [r7, #16]
 8006210:	605a      	str	r2, [r3, #4]
 8006212:	683b      	ldr	r3, [r7, #0]
 8006214:	685b      	ldr	r3, [r3, #4]
 8006216:	f003 0303 	and.w	r3, r3, #3
 800621a:	2b03      	cmp	r3, #3
 800621c:	d017      	beq.n	800624e <HAL_GPIO_Init+0xde>
 800621e:	687b      	ldr	r3, [r7, #4]
 8006220:	68db      	ldr	r3, [r3, #12]
 8006222:	613b      	str	r3, [r7, #16]
 8006224:	697b      	ldr	r3, [r7, #20]
 8006226:	005b      	lsls	r3, r3, #1
 8006228:	2203      	movs	r2, #3
 800622a:	fa02 f303 	lsl.w	r3, r2, r3
 800622e:	43db      	mvns	r3, r3
 8006230:	693a      	ldr	r2, [r7, #16]
 8006232:	4013      	ands	r3, r2
 8006234:	613b      	str	r3, [r7, #16]
 8006236:	683b      	ldr	r3, [r7, #0]
 8006238:	689a      	ldr	r2, [r3, #8]
 800623a:	697b      	ldr	r3, [r7, #20]
 800623c:	005b      	lsls	r3, r3, #1
 800623e:	fa02 f303 	lsl.w	r3, r2, r3
 8006242:	693a      	ldr	r2, [r7, #16]
 8006244:	4313      	orrs	r3, r2
 8006246:	613b      	str	r3, [r7, #16]
 8006248:	687b      	ldr	r3, [r7, #4]
 800624a:	693a      	ldr	r2, [r7, #16]
 800624c:	60da      	str	r2, [r3, #12]
 800624e:	683b      	ldr	r3, [r7, #0]
 8006250:	685b      	ldr	r3, [r3, #4]
 8006252:	f003 0303 	and.w	r3, r3, #3
 8006256:	2b02      	cmp	r3, #2
 8006258:	d123      	bne.n	80062a2 <HAL_GPIO_Init+0x132>
 800625a:	697b      	ldr	r3, [r7, #20]
 800625c:	08da      	lsrs	r2, r3, #3
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	3208      	adds	r2, #8
 8006262:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006266:	613b      	str	r3, [r7, #16]
 8006268:	697b      	ldr	r3, [r7, #20]
 800626a:	f003 0307 	and.w	r3, r3, #7
 800626e:	009b      	lsls	r3, r3, #2
 8006270:	220f      	movs	r2, #15
 8006272:	fa02 f303 	lsl.w	r3, r2, r3
 8006276:	43db      	mvns	r3, r3
 8006278:	693a      	ldr	r2, [r7, #16]
 800627a:	4013      	ands	r3, r2
 800627c:	613b      	str	r3, [r7, #16]
 800627e:	683b      	ldr	r3, [r7, #0]
 8006280:	691a      	ldr	r2, [r3, #16]
 8006282:	697b      	ldr	r3, [r7, #20]
 8006284:	f003 0307 	and.w	r3, r3, #7
 8006288:	009b      	lsls	r3, r3, #2
 800628a:	fa02 f303 	lsl.w	r3, r2, r3
 800628e:	693a      	ldr	r2, [r7, #16]
 8006290:	4313      	orrs	r3, r2
 8006292:	613b      	str	r3, [r7, #16]
 8006294:	697b      	ldr	r3, [r7, #20]
 8006296:	08da      	lsrs	r2, r3, #3
 8006298:	687b      	ldr	r3, [r7, #4]
 800629a:	3208      	adds	r2, #8
 800629c:	6939      	ldr	r1, [r7, #16]
 800629e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	681b      	ldr	r3, [r3, #0]
 80062a6:	613b      	str	r3, [r7, #16]
 80062a8:	697b      	ldr	r3, [r7, #20]
 80062aa:	005b      	lsls	r3, r3, #1
 80062ac:	2203      	movs	r2, #3
 80062ae:	fa02 f303 	lsl.w	r3, r2, r3
 80062b2:	43db      	mvns	r3, r3
 80062b4:	693a      	ldr	r2, [r7, #16]
 80062b6:	4013      	ands	r3, r2
 80062b8:	613b      	str	r3, [r7, #16]
 80062ba:	683b      	ldr	r3, [r7, #0]
 80062bc:	685b      	ldr	r3, [r3, #4]
 80062be:	f003 0203 	and.w	r2, r3, #3
 80062c2:	697b      	ldr	r3, [r7, #20]
 80062c4:	005b      	lsls	r3, r3, #1
 80062c6:	fa02 f303 	lsl.w	r3, r2, r3
 80062ca:	693a      	ldr	r2, [r7, #16]
 80062cc:	4313      	orrs	r3, r2
 80062ce:	613b      	str	r3, [r7, #16]
 80062d0:	687b      	ldr	r3, [r7, #4]
 80062d2:	693a      	ldr	r2, [r7, #16]
 80062d4:	601a      	str	r2, [r3, #0]
 80062d6:	683b      	ldr	r3, [r7, #0]
 80062d8:	685b      	ldr	r3, [r3, #4]
 80062da:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80062de:	2b00      	cmp	r3, #0
 80062e0:	f000 80a6 	beq.w	8006430 <HAL_GPIO_Init+0x2c0>
 80062e4:	4b5b      	ldr	r3, [pc, #364]	@ (8006454 <HAL_GPIO_Init+0x2e4>)
 80062e6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80062e8:	4a5a      	ldr	r2, [pc, #360]	@ (8006454 <HAL_GPIO_Init+0x2e4>)
 80062ea:	f043 0301 	orr.w	r3, r3, #1
 80062ee:	6613      	str	r3, [r2, #96]	@ 0x60
 80062f0:	4b58      	ldr	r3, [pc, #352]	@ (8006454 <HAL_GPIO_Init+0x2e4>)
 80062f2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80062f4:	f003 0301 	and.w	r3, r3, #1
 80062f8:	60bb      	str	r3, [r7, #8]
 80062fa:	68bb      	ldr	r3, [r7, #8]
 80062fc:	4a56      	ldr	r2, [pc, #344]	@ (8006458 <HAL_GPIO_Init+0x2e8>)
 80062fe:	697b      	ldr	r3, [r7, #20]
 8006300:	089b      	lsrs	r3, r3, #2
 8006302:	3302      	adds	r3, #2
 8006304:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006308:	613b      	str	r3, [r7, #16]
 800630a:	697b      	ldr	r3, [r7, #20]
 800630c:	f003 0303 	and.w	r3, r3, #3
 8006310:	009b      	lsls	r3, r3, #2
 8006312:	220f      	movs	r2, #15
 8006314:	fa02 f303 	lsl.w	r3, r2, r3
 8006318:	43db      	mvns	r3, r3
 800631a:	693a      	ldr	r2, [r7, #16]
 800631c:	4013      	ands	r3, r2
 800631e:	613b      	str	r3, [r7, #16]
 8006320:	687b      	ldr	r3, [r7, #4]
 8006322:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8006326:	d01f      	beq.n	8006368 <HAL_GPIO_Init+0x1f8>
 8006328:	687b      	ldr	r3, [r7, #4]
 800632a:	4a4c      	ldr	r2, [pc, #304]	@ (800645c <HAL_GPIO_Init+0x2ec>)
 800632c:	4293      	cmp	r3, r2
 800632e:	d019      	beq.n	8006364 <HAL_GPIO_Init+0x1f4>
 8006330:	687b      	ldr	r3, [r7, #4]
 8006332:	4a4b      	ldr	r2, [pc, #300]	@ (8006460 <HAL_GPIO_Init+0x2f0>)
 8006334:	4293      	cmp	r3, r2
 8006336:	d013      	beq.n	8006360 <HAL_GPIO_Init+0x1f0>
 8006338:	687b      	ldr	r3, [r7, #4]
 800633a:	4a4a      	ldr	r2, [pc, #296]	@ (8006464 <HAL_GPIO_Init+0x2f4>)
 800633c:	4293      	cmp	r3, r2
 800633e:	d00d      	beq.n	800635c <HAL_GPIO_Init+0x1ec>
 8006340:	687b      	ldr	r3, [r7, #4]
 8006342:	4a49      	ldr	r2, [pc, #292]	@ (8006468 <HAL_GPIO_Init+0x2f8>)
 8006344:	4293      	cmp	r3, r2
 8006346:	d007      	beq.n	8006358 <HAL_GPIO_Init+0x1e8>
 8006348:	687b      	ldr	r3, [r7, #4]
 800634a:	4a48      	ldr	r2, [pc, #288]	@ (800646c <HAL_GPIO_Init+0x2fc>)
 800634c:	4293      	cmp	r3, r2
 800634e:	d101      	bne.n	8006354 <HAL_GPIO_Init+0x1e4>
 8006350:	2305      	movs	r3, #5
 8006352:	e00a      	b.n	800636a <HAL_GPIO_Init+0x1fa>
 8006354:	2306      	movs	r3, #6
 8006356:	e008      	b.n	800636a <HAL_GPIO_Init+0x1fa>
 8006358:	2304      	movs	r3, #4
 800635a:	e006      	b.n	800636a <HAL_GPIO_Init+0x1fa>
 800635c:	2303      	movs	r3, #3
 800635e:	e004      	b.n	800636a <HAL_GPIO_Init+0x1fa>
 8006360:	2302      	movs	r3, #2
 8006362:	e002      	b.n	800636a <HAL_GPIO_Init+0x1fa>
 8006364:	2301      	movs	r3, #1
 8006366:	e000      	b.n	800636a <HAL_GPIO_Init+0x1fa>
 8006368:	2300      	movs	r3, #0
 800636a:	697a      	ldr	r2, [r7, #20]
 800636c:	f002 0203 	and.w	r2, r2, #3
 8006370:	0092      	lsls	r2, r2, #2
 8006372:	4093      	lsls	r3, r2
 8006374:	693a      	ldr	r2, [r7, #16]
 8006376:	4313      	orrs	r3, r2
 8006378:	613b      	str	r3, [r7, #16]
 800637a:	4937      	ldr	r1, [pc, #220]	@ (8006458 <HAL_GPIO_Init+0x2e8>)
 800637c:	697b      	ldr	r3, [r7, #20]
 800637e:	089b      	lsrs	r3, r3, #2
 8006380:	3302      	adds	r3, #2
 8006382:	693a      	ldr	r2, [r7, #16]
 8006384:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006388:	4b39      	ldr	r3, [pc, #228]	@ (8006470 <HAL_GPIO_Init+0x300>)
 800638a:	689b      	ldr	r3, [r3, #8]
 800638c:	613b      	str	r3, [r7, #16]
 800638e:	68fb      	ldr	r3, [r7, #12]
 8006390:	43db      	mvns	r3, r3
 8006392:	693a      	ldr	r2, [r7, #16]
 8006394:	4013      	ands	r3, r2
 8006396:	613b      	str	r3, [r7, #16]
 8006398:	683b      	ldr	r3, [r7, #0]
 800639a:	685b      	ldr	r3, [r3, #4]
 800639c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	d003      	beq.n	80063ac <HAL_GPIO_Init+0x23c>
 80063a4:	693a      	ldr	r2, [r7, #16]
 80063a6:	68fb      	ldr	r3, [r7, #12]
 80063a8:	4313      	orrs	r3, r2
 80063aa:	613b      	str	r3, [r7, #16]
 80063ac:	4a30      	ldr	r2, [pc, #192]	@ (8006470 <HAL_GPIO_Init+0x300>)
 80063ae:	693b      	ldr	r3, [r7, #16]
 80063b0:	6093      	str	r3, [r2, #8]
 80063b2:	4b2f      	ldr	r3, [pc, #188]	@ (8006470 <HAL_GPIO_Init+0x300>)
 80063b4:	68db      	ldr	r3, [r3, #12]
 80063b6:	613b      	str	r3, [r7, #16]
 80063b8:	68fb      	ldr	r3, [r7, #12]
 80063ba:	43db      	mvns	r3, r3
 80063bc:	693a      	ldr	r2, [r7, #16]
 80063be:	4013      	ands	r3, r2
 80063c0:	613b      	str	r3, [r7, #16]
 80063c2:	683b      	ldr	r3, [r7, #0]
 80063c4:	685b      	ldr	r3, [r3, #4]
 80063c6:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80063ca:	2b00      	cmp	r3, #0
 80063cc:	d003      	beq.n	80063d6 <HAL_GPIO_Init+0x266>
 80063ce:	693a      	ldr	r2, [r7, #16]
 80063d0:	68fb      	ldr	r3, [r7, #12]
 80063d2:	4313      	orrs	r3, r2
 80063d4:	613b      	str	r3, [r7, #16]
 80063d6:	4a26      	ldr	r2, [pc, #152]	@ (8006470 <HAL_GPIO_Init+0x300>)
 80063d8:	693b      	ldr	r3, [r7, #16]
 80063da:	60d3      	str	r3, [r2, #12]
 80063dc:	4b24      	ldr	r3, [pc, #144]	@ (8006470 <HAL_GPIO_Init+0x300>)
 80063de:	685b      	ldr	r3, [r3, #4]
 80063e0:	613b      	str	r3, [r7, #16]
 80063e2:	68fb      	ldr	r3, [r7, #12]
 80063e4:	43db      	mvns	r3, r3
 80063e6:	693a      	ldr	r2, [r7, #16]
 80063e8:	4013      	ands	r3, r2
 80063ea:	613b      	str	r3, [r7, #16]
 80063ec:	683b      	ldr	r3, [r7, #0]
 80063ee:	685b      	ldr	r3, [r3, #4]
 80063f0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80063f4:	2b00      	cmp	r3, #0
 80063f6:	d003      	beq.n	8006400 <HAL_GPIO_Init+0x290>
 80063f8:	693a      	ldr	r2, [r7, #16]
 80063fa:	68fb      	ldr	r3, [r7, #12]
 80063fc:	4313      	orrs	r3, r2
 80063fe:	613b      	str	r3, [r7, #16]
 8006400:	4a1b      	ldr	r2, [pc, #108]	@ (8006470 <HAL_GPIO_Init+0x300>)
 8006402:	693b      	ldr	r3, [r7, #16]
 8006404:	6053      	str	r3, [r2, #4]
 8006406:	4b1a      	ldr	r3, [pc, #104]	@ (8006470 <HAL_GPIO_Init+0x300>)
 8006408:	681b      	ldr	r3, [r3, #0]
 800640a:	613b      	str	r3, [r7, #16]
 800640c:	68fb      	ldr	r3, [r7, #12]
 800640e:	43db      	mvns	r3, r3
 8006410:	693a      	ldr	r2, [r7, #16]
 8006412:	4013      	ands	r3, r2
 8006414:	613b      	str	r3, [r7, #16]
 8006416:	683b      	ldr	r3, [r7, #0]
 8006418:	685b      	ldr	r3, [r3, #4]
 800641a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800641e:	2b00      	cmp	r3, #0
 8006420:	d003      	beq.n	800642a <HAL_GPIO_Init+0x2ba>
 8006422:	693a      	ldr	r2, [r7, #16]
 8006424:	68fb      	ldr	r3, [r7, #12]
 8006426:	4313      	orrs	r3, r2
 8006428:	613b      	str	r3, [r7, #16]
 800642a:	4a11      	ldr	r2, [pc, #68]	@ (8006470 <HAL_GPIO_Init+0x300>)
 800642c:	693b      	ldr	r3, [r7, #16]
 800642e:	6013      	str	r3, [r2, #0]
 8006430:	697b      	ldr	r3, [r7, #20]
 8006432:	3301      	adds	r3, #1
 8006434:	617b      	str	r3, [r7, #20]
 8006436:	683b      	ldr	r3, [r7, #0]
 8006438:	681a      	ldr	r2, [r3, #0]
 800643a:	697b      	ldr	r3, [r7, #20]
 800643c:	fa22 f303 	lsr.w	r3, r2, r3
 8006440:	2b00      	cmp	r3, #0
 8006442:	f47f ae9d 	bne.w	8006180 <HAL_GPIO_Init+0x10>
 8006446:	bf00      	nop
 8006448:	bf00      	nop
 800644a:	371c      	adds	r7, #28
 800644c:	46bd      	mov	sp, r7
 800644e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006452:	4770      	bx	lr
 8006454:	40021000 	.word	0x40021000
 8006458:	40010000 	.word	0x40010000
 800645c:	48000400 	.word	0x48000400
 8006460:	48000800 	.word	0x48000800
 8006464:	48000c00 	.word	0x48000c00
 8006468:	48001000 	.word	0x48001000
 800646c:	48001400 	.word	0x48001400
 8006470:	40010400 	.word	0x40010400

08006474 <HAL_GPIO_WritePin>:
 8006474:	b480      	push	{r7}
 8006476:	b083      	sub	sp, #12
 8006478:	af00      	add	r7, sp, #0
 800647a:	6078      	str	r0, [r7, #4]
 800647c:	460b      	mov	r3, r1
 800647e:	807b      	strh	r3, [r7, #2]
 8006480:	4613      	mov	r3, r2
 8006482:	707b      	strb	r3, [r7, #1]
 8006484:	787b      	ldrb	r3, [r7, #1]
 8006486:	2b00      	cmp	r3, #0
 8006488:	d003      	beq.n	8006492 <HAL_GPIO_WritePin+0x1e>
 800648a:	887a      	ldrh	r2, [r7, #2]
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	619a      	str	r2, [r3, #24]
 8006490:	e002      	b.n	8006498 <HAL_GPIO_WritePin+0x24>
 8006492:	887a      	ldrh	r2, [r7, #2]
 8006494:	687b      	ldr	r3, [r7, #4]
 8006496:	629a      	str	r2, [r3, #40]	@ 0x28
 8006498:	bf00      	nop
 800649a:	370c      	adds	r7, #12
 800649c:	46bd      	mov	sp, r7
 800649e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064a2:	4770      	bx	lr

080064a4 <HAL_GPIO_EXTI_IRQHandler>:
 80064a4:	b580      	push	{r7, lr}
 80064a6:	b082      	sub	sp, #8
 80064a8:	af00      	add	r7, sp, #0
 80064aa:	4603      	mov	r3, r0
 80064ac:	80fb      	strh	r3, [r7, #6]
 80064ae:	4b08      	ldr	r3, [pc, #32]	@ (80064d0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80064b0:	695a      	ldr	r2, [r3, #20]
 80064b2:	88fb      	ldrh	r3, [r7, #6]
 80064b4:	4013      	ands	r3, r2
 80064b6:	2b00      	cmp	r3, #0
 80064b8:	d006      	beq.n	80064c8 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80064ba:	4a05      	ldr	r2, [pc, #20]	@ (80064d0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80064bc:	88fb      	ldrh	r3, [r7, #6]
 80064be:	6153      	str	r3, [r2, #20]
 80064c0:	88fb      	ldrh	r3, [r7, #6]
 80064c2:	4618      	mov	r0, r3
 80064c4:	f7fb fa7c 	bl	80019c0 <HAL_GPIO_EXTI_Callback>
 80064c8:	bf00      	nop
 80064ca:	3708      	adds	r7, #8
 80064cc:	46bd      	mov	sp, r7
 80064ce:	bd80      	pop	{r7, pc}
 80064d0:	40010400 	.word	0x40010400

080064d4 <HAL_PWREx_ControlVoltageScaling>:
 80064d4:	b480      	push	{r7}
 80064d6:	b085      	sub	sp, #20
 80064d8:	af00      	add	r7, sp, #0
 80064da:	6078      	str	r0, [r7, #4]
 80064dc:	687b      	ldr	r3, [r7, #4]
 80064de:	2b00      	cmp	r3, #0
 80064e0:	d141      	bne.n	8006566 <HAL_PWREx_ControlVoltageScaling+0x92>
 80064e2:	4b4b      	ldr	r3, [pc, #300]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 80064ea:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80064ee:	d131      	bne.n	8006554 <HAL_PWREx_ControlVoltageScaling+0x80>
 80064f0:	4b47      	ldr	r3, [pc, #284]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80064f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80064f6:	4a46      	ldr	r2, [pc, #280]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80064f8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80064fc:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8006500:	4b43      	ldr	r3, [pc, #268]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006502:	681b      	ldr	r3, [r3, #0]
 8006504:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8006508:	4a41      	ldr	r2, [pc, #260]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800650a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800650e:	6013      	str	r3, [r2, #0]
 8006510:	4b40      	ldr	r3, [pc, #256]	@ (8006614 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8006512:	681b      	ldr	r3, [r3, #0]
 8006514:	2232      	movs	r2, #50	@ 0x32
 8006516:	fb02 f303 	mul.w	r3, r2, r3
 800651a:	4a3f      	ldr	r2, [pc, #252]	@ (8006618 <HAL_PWREx_ControlVoltageScaling+0x144>)
 800651c:	fba2 2303 	umull	r2, r3, r2, r3
 8006520:	0c9b      	lsrs	r3, r3, #18
 8006522:	3301      	adds	r3, #1
 8006524:	60fb      	str	r3, [r7, #12]
 8006526:	e002      	b.n	800652e <HAL_PWREx_ControlVoltageScaling+0x5a>
 8006528:	68fb      	ldr	r3, [r7, #12]
 800652a:	3b01      	subs	r3, #1
 800652c:	60fb      	str	r3, [r7, #12]
 800652e:	4b38      	ldr	r3, [pc, #224]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006530:	695b      	ldr	r3, [r3, #20]
 8006532:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006536:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800653a:	d102      	bne.n	8006542 <HAL_PWREx_ControlVoltageScaling+0x6e>
 800653c:	68fb      	ldr	r3, [r7, #12]
 800653e:	2b00      	cmp	r3, #0
 8006540:	d1f2      	bne.n	8006528 <HAL_PWREx_ControlVoltageScaling+0x54>
 8006542:	4b33      	ldr	r3, [pc, #204]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006544:	695b      	ldr	r3, [r3, #20]
 8006546:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800654a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800654e:	d158      	bne.n	8006602 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8006550:	2303      	movs	r3, #3
 8006552:	e057      	b.n	8006604 <HAL_PWREx_ControlVoltageScaling+0x130>
 8006554:	4b2e      	ldr	r3, [pc, #184]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006556:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800655a:	4a2d      	ldr	r2, [pc, #180]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800655c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006560:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8006564:	e04d      	b.n	8006602 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8006566:	687b      	ldr	r3, [r7, #4]
 8006568:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800656c:	d141      	bne.n	80065f2 <HAL_PWREx_ControlVoltageScaling+0x11e>
 800656e:	4b28      	ldr	r3, [pc, #160]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8006576:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800657a:	d131      	bne.n	80065e0 <HAL_PWREx_ControlVoltageScaling+0x10c>
 800657c:	4b24      	ldr	r3, [pc, #144]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800657e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006582:	4a23      	ldr	r2, [pc, #140]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006584:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006588:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 800658c:	4b20      	ldr	r3, [pc, #128]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800658e:	681b      	ldr	r3, [r3, #0]
 8006590:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8006594:	4a1e      	ldr	r2, [pc, #120]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006596:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800659a:	6013      	str	r3, [r2, #0]
 800659c:	4b1d      	ldr	r3, [pc, #116]	@ (8006614 <HAL_PWREx_ControlVoltageScaling+0x140>)
 800659e:	681b      	ldr	r3, [r3, #0]
 80065a0:	2232      	movs	r2, #50	@ 0x32
 80065a2:	fb02 f303 	mul.w	r3, r2, r3
 80065a6:	4a1c      	ldr	r2, [pc, #112]	@ (8006618 <HAL_PWREx_ControlVoltageScaling+0x144>)
 80065a8:	fba2 2303 	umull	r2, r3, r2, r3
 80065ac:	0c9b      	lsrs	r3, r3, #18
 80065ae:	3301      	adds	r3, #1
 80065b0:	60fb      	str	r3, [r7, #12]
 80065b2:	e002      	b.n	80065ba <HAL_PWREx_ControlVoltageScaling+0xe6>
 80065b4:	68fb      	ldr	r3, [r7, #12]
 80065b6:	3b01      	subs	r3, #1
 80065b8:	60fb      	str	r3, [r7, #12]
 80065ba:	4b15      	ldr	r3, [pc, #84]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80065bc:	695b      	ldr	r3, [r3, #20]
 80065be:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80065c2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80065c6:	d102      	bne.n	80065ce <HAL_PWREx_ControlVoltageScaling+0xfa>
 80065c8:	68fb      	ldr	r3, [r7, #12]
 80065ca:	2b00      	cmp	r3, #0
 80065cc:	d1f2      	bne.n	80065b4 <HAL_PWREx_ControlVoltageScaling+0xe0>
 80065ce:	4b10      	ldr	r3, [pc, #64]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80065d0:	695b      	ldr	r3, [r3, #20]
 80065d2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80065d6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80065da:	d112      	bne.n	8006602 <HAL_PWREx_ControlVoltageScaling+0x12e>
 80065dc:	2303      	movs	r3, #3
 80065de:	e011      	b.n	8006604 <HAL_PWREx_ControlVoltageScaling+0x130>
 80065e0:	4b0b      	ldr	r3, [pc, #44]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80065e2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80065e6:	4a0a      	ldr	r2, [pc, #40]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80065e8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80065ec:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 80065f0:	e007      	b.n	8006602 <HAL_PWREx_ControlVoltageScaling+0x12e>
 80065f2:	4b07      	ldr	r3, [pc, #28]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80065f4:	681b      	ldr	r3, [r3, #0]
 80065f6:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 80065fa:	4a05      	ldr	r2, [pc, #20]	@ (8006610 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80065fc:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8006600:	6013      	str	r3, [r2, #0]
 8006602:	2300      	movs	r3, #0
 8006604:	4618      	mov	r0, r3
 8006606:	3714      	adds	r7, #20
 8006608:	46bd      	mov	sp, r7
 800660a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800660e:	4770      	bx	lr
 8006610:	40007000 	.word	0x40007000
 8006614:	20000000 	.word	0x20000000
 8006618:	431bde83 	.word	0x431bde83

0800661c <HAL_PWREx_DisableUCPDDeadBattery>:
 800661c:	b480      	push	{r7}
 800661e:	af00      	add	r7, sp, #0
 8006620:	4b05      	ldr	r3, [pc, #20]	@ (8006638 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8006622:	689b      	ldr	r3, [r3, #8]
 8006624:	4a04      	ldr	r2, [pc, #16]	@ (8006638 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8006626:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800662a:	6093      	str	r3, [r2, #8]
 800662c:	bf00      	nop
 800662e:	46bd      	mov	sp, r7
 8006630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006634:	4770      	bx	lr
 8006636:	bf00      	nop
 8006638:	40007000 	.word	0x40007000

0800663c <HAL_RCC_OscConfig>:
 800663c:	b580      	push	{r7, lr}
 800663e:	b088      	sub	sp, #32
 8006640:	af00      	add	r7, sp, #0
 8006642:	6078      	str	r0, [r7, #4]
 8006644:	687b      	ldr	r3, [r7, #4]
 8006646:	2b00      	cmp	r3, #0
 8006648:	d101      	bne.n	800664e <HAL_RCC_OscConfig+0x12>
 800664a:	2301      	movs	r3, #1
 800664c:	e2fe      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 800664e:	687b      	ldr	r3, [r7, #4]
 8006650:	681b      	ldr	r3, [r3, #0]
 8006652:	f003 0301 	and.w	r3, r3, #1
 8006656:	2b00      	cmp	r3, #0
 8006658:	d075      	beq.n	8006746 <HAL_RCC_OscConfig+0x10a>
 800665a:	4b97      	ldr	r3, [pc, #604]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 800665c:	689b      	ldr	r3, [r3, #8]
 800665e:	f003 030c 	and.w	r3, r3, #12
 8006662:	61bb      	str	r3, [r7, #24]
 8006664:	4b94      	ldr	r3, [pc, #592]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 8006666:	68db      	ldr	r3, [r3, #12]
 8006668:	f003 0303 	and.w	r3, r3, #3
 800666c:	617b      	str	r3, [r7, #20]
 800666e:	69bb      	ldr	r3, [r7, #24]
 8006670:	2b0c      	cmp	r3, #12
 8006672:	d102      	bne.n	800667a <HAL_RCC_OscConfig+0x3e>
 8006674:	697b      	ldr	r3, [r7, #20]
 8006676:	2b03      	cmp	r3, #3
 8006678:	d002      	beq.n	8006680 <HAL_RCC_OscConfig+0x44>
 800667a:	69bb      	ldr	r3, [r7, #24]
 800667c:	2b08      	cmp	r3, #8
 800667e:	d10b      	bne.n	8006698 <HAL_RCC_OscConfig+0x5c>
 8006680:	4b8d      	ldr	r3, [pc, #564]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 8006682:	681b      	ldr	r3, [r3, #0]
 8006684:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006688:	2b00      	cmp	r3, #0
 800668a:	d05b      	beq.n	8006744 <HAL_RCC_OscConfig+0x108>
 800668c:	687b      	ldr	r3, [r7, #4]
 800668e:	685b      	ldr	r3, [r3, #4]
 8006690:	2b00      	cmp	r3, #0
 8006692:	d157      	bne.n	8006744 <HAL_RCC_OscConfig+0x108>
 8006694:	2301      	movs	r3, #1
 8006696:	e2d9      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006698:	687b      	ldr	r3, [r7, #4]
 800669a:	685b      	ldr	r3, [r3, #4]
 800669c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80066a0:	d106      	bne.n	80066b0 <HAL_RCC_OscConfig+0x74>
 80066a2:	4b85      	ldr	r3, [pc, #532]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80066a4:	681b      	ldr	r3, [r3, #0]
 80066a6:	4a84      	ldr	r2, [pc, #528]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80066a8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80066ac:	6013      	str	r3, [r2, #0]
 80066ae:	e01d      	b.n	80066ec <HAL_RCC_OscConfig+0xb0>
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	685b      	ldr	r3, [r3, #4]
 80066b4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80066b8:	d10c      	bne.n	80066d4 <HAL_RCC_OscConfig+0x98>
 80066ba:	4b7f      	ldr	r3, [pc, #508]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80066bc:	681b      	ldr	r3, [r3, #0]
 80066be:	4a7e      	ldr	r2, [pc, #504]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80066c0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80066c4:	6013      	str	r3, [r2, #0]
 80066c6:	4b7c      	ldr	r3, [pc, #496]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80066c8:	681b      	ldr	r3, [r3, #0]
 80066ca:	4a7b      	ldr	r2, [pc, #492]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80066cc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80066d0:	6013      	str	r3, [r2, #0]
 80066d2:	e00b      	b.n	80066ec <HAL_RCC_OscConfig+0xb0>
 80066d4:	4b78      	ldr	r3, [pc, #480]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80066d6:	681b      	ldr	r3, [r3, #0]
 80066d8:	4a77      	ldr	r2, [pc, #476]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80066da:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80066de:	6013      	str	r3, [r2, #0]
 80066e0:	4b75      	ldr	r3, [pc, #468]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	4a74      	ldr	r2, [pc, #464]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80066e6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80066ea:	6013      	str	r3, [r2, #0]
 80066ec:	687b      	ldr	r3, [r7, #4]
 80066ee:	685b      	ldr	r3, [r3, #4]
 80066f0:	2b00      	cmp	r3, #0
 80066f2:	d013      	beq.n	800671c <HAL_RCC_OscConfig+0xe0>
 80066f4:	f7fd f94a 	bl	800398c <HAL_GetTick>
 80066f8:	6138      	str	r0, [r7, #16]
 80066fa:	e008      	b.n	800670e <HAL_RCC_OscConfig+0xd2>
 80066fc:	f7fd f946 	bl	800398c <HAL_GetTick>
 8006700:	4602      	mov	r2, r0
 8006702:	693b      	ldr	r3, [r7, #16]
 8006704:	1ad3      	subs	r3, r2, r3
 8006706:	2b64      	cmp	r3, #100	@ 0x64
 8006708:	d901      	bls.n	800670e <HAL_RCC_OscConfig+0xd2>
 800670a:	2303      	movs	r3, #3
 800670c:	e29e      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 800670e:	4b6a      	ldr	r3, [pc, #424]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 8006710:	681b      	ldr	r3, [r3, #0]
 8006712:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006716:	2b00      	cmp	r3, #0
 8006718:	d0f0      	beq.n	80066fc <HAL_RCC_OscConfig+0xc0>
 800671a:	e014      	b.n	8006746 <HAL_RCC_OscConfig+0x10a>
 800671c:	f7fd f936 	bl	800398c <HAL_GetTick>
 8006720:	6138      	str	r0, [r7, #16]
 8006722:	e008      	b.n	8006736 <HAL_RCC_OscConfig+0xfa>
 8006724:	f7fd f932 	bl	800398c <HAL_GetTick>
 8006728:	4602      	mov	r2, r0
 800672a:	693b      	ldr	r3, [r7, #16]
 800672c:	1ad3      	subs	r3, r2, r3
 800672e:	2b64      	cmp	r3, #100	@ 0x64
 8006730:	d901      	bls.n	8006736 <HAL_RCC_OscConfig+0xfa>
 8006732:	2303      	movs	r3, #3
 8006734:	e28a      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006736:	4b60      	ldr	r3, [pc, #384]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 8006738:	681b      	ldr	r3, [r3, #0]
 800673a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800673e:	2b00      	cmp	r3, #0
 8006740:	d1f0      	bne.n	8006724 <HAL_RCC_OscConfig+0xe8>
 8006742:	e000      	b.n	8006746 <HAL_RCC_OscConfig+0x10a>
 8006744:	bf00      	nop
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	681b      	ldr	r3, [r3, #0]
 800674a:	f003 0302 	and.w	r3, r3, #2
 800674e:	2b00      	cmp	r3, #0
 8006750:	d075      	beq.n	800683e <HAL_RCC_OscConfig+0x202>
 8006752:	4b59      	ldr	r3, [pc, #356]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 8006754:	689b      	ldr	r3, [r3, #8]
 8006756:	f003 030c 	and.w	r3, r3, #12
 800675a:	61bb      	str	r3, [r7, #24]
 800675c:	4b56      	ldr	r3, [pc, #344]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 800675e:	68db      	ldr	r3, [r3, #12]
 8006760:	f003 0303 	and.w	r3, r3, #3
 8006764:	617b      	str	r3, [r7, #20]
 8006766:	69bb      	ldr	r3, [r7, #24]
 8006768:	2b0c      	cmp	r3, #12
 800676a:	d102      	bne.n	8006772 <HAL_RCC_OscConfig+0x136>
 800676c:	697b      	ldr	r3, [r7, #20]
 800676e:	2b02      	cmp	r3, #2
 8006770:	d002      	beq.n	8006778 <HAL_RCC_OscConfig+0x13c>
 8006772:	69bb      	ldr	r3, [r7, #24]
 8006774:	2b04      	cmp	r3, #4
 8006776:	d11f      	bne.n	80067b8 <HAL_RCC_OscConfig+0x17c>
 8006778:	4b4f      	ldr	r3, [pc, #316]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 800677a:	681b      	ldr	r3, [r3, #0]
 800677c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006780:	2b00      	cmp	r3, #0
 8006782:	d005      	beq.n	8006790 <HAL_RCC_OscConfig+0x154>
 8006784:	687b      	ldr	r3, [r7, #4]
 8006786:	68db      	ldr	r3, [r3, #12]
 8006788:	2b00      	cmp	r3, #0
 800678a:	d101      	bne.n	8006790 <HAL_RCC_OscConfig+0x154>
 800678c:	2301      	movs	r3, #1
 800678e:	e25d      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006790:	4b49      	ldr	r3, [pc, #292]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 8006792:	685b      	ldr	r3, [r3, #4]
 8006794:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	691b      	ldr	r3, [r3, #16]
 800679c:	061b      	lsls	r3, r3, #24
 800679e:	4946      	ldr	r1, [pc, #280]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80067a0:	4313      	orrs	r3, r2
 80067a2:	604b      	str	r3, [r1, #4]
 80067a4:	4b45      	ldr	r3, [pc, #276]	@ (80068bc <HAL_RCC_OscConfig+0x280>)
 80067a6:	681b      	ldr	r3, [r3, #0]
 80067a8:	4618      	mov	r0, r3
 80067aa:	f7fa fb1b 	bl	8000de4 <HAL_InitTick>
 80067ae:	4603      	mov	r3, r0
 80067b0:	2b00      	cmp	r3, #0
 80067b2:	d043      	beq.n	800683c <HAL_RCC_OscConfig+0x200>
 80067b4:	2301      	movs	r3, #1
 80067b6:	e249      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	68db      	ldr	r3, [r3, #12]
 80067bc:	2b00      	cmp	r3, #0
 80067be:	d023      	beq.n	8006808 <HAL_RCC_OscConfig+0x1cc>
 80067c0:	4b3d      	ldr	r3, [pc, #244]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80067c2:	681b      	ldr	r3, [r3, #0]
 80067c4:	4a3c      	ldr	r2, [pc, #240]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80067c6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80067ca:	6013      	str	r3, [r2, #0]
 80067cc:	f7fd f8de 	bl	800398c <HAL_GetTick>
 80067d0:	6138      	str	r0, [r7, #16]
 80067d2:	e008      	b.n	80067e6 <HAL_RCC_OscConfig+0x1aa>
 80067d4:	f7fd f8da 	bl	800398c <HAL_GetTick>
 80067d8:	4602      	mov	r2, r0
 80067da:	693b      	ldr	r3, [r7, #16]
 80067dc:	1ad3      	subs	r3, r2, r3
 80067de:	2b02      	cmp	r3, #2
 80067e0:	d901      	bls.n	80067e6 <HAL_RCC_OscConfig+0x1aa>
 80067e2:	2303      	movs	r3, #3
 80067e4:	e232      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 80067e6:	4b34      	ldr	r3, [pc, #208]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80067e8:	681b      	ldr	r3, [r3, #0]
 80067ea:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80067ee:	2b00      	cmp	r3, #0
 80067f0:	d0f0      	beq.n	80067d4 <HAL_RCC_OscConfig+0x198>
 80067f2:	4b31      	ldr	r3, [pc, #196]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 80067f4:	685b      	ldr	r3, [r3, #4]
 80067f6:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 80067fa:	687b      	ldr	r3, [r7, #4]
 80067fc:	691b      	ldr	r3, [r3, #16]
 80067fe:	061b      	lsls	r3, r3, #24
 8006800:	492d      	ldr	r1, [pc, #180]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 8006802:	4313      	orrs	r3, r2
 8006804:	604b      	str	r3, [r1, #4]
 8006806:	e01a      	b.n	800683e <HAL_RCC_OscConfig+0x202>
 8006808:	4b2b      	ldr	r3, [pc, #172]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 800680a:	681b      	ldr	r3, [r3, #0]
 800680c:	4a2a      	ldr	r2, [pc, #168]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 800680e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006812:	6013      	str	r3, [r2, #0]
 8006814:	f7fd f8ba 	bl	800398c <HAL_GetTick>
 8006818:	6138      	str	r0, [r7, #16]
 800681a:	e008      	b.n	800682e <HAL_RCC_OscConfig+0x1f2>
 800681c:	f7fd f8b6 	bl	800398c <HAL_GetTick>
 8006820:	4602      	mov	r2, r0
 8006822:	693b      	ldr	r3, [r7, #16]
 8006824:	1ad3      	subs	r3, r2, r3
 8006826:	2b02      	cmp	r3, #2
 8006828:	d901      	bls.n	800682e <HAL_RCC_OscConfig+0x1f2>
 800682a:	2303      	movs	r3, #3
 800682c:	e20e      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 800682e:	4b22      	ldr	r3, [pc, #136]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 8006830:	681b      	ldr	r3, [r3, #0]
 8006832:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006836:	2b00      	cmp	r3, #0
 8006838:	d1f0      	bne.n	800681c <HAL_RCC_OscConfig+0x1e0>
 800683a:	e000      	b.n	800683e <HAL_RCC_OscConfig+0x202>
 800683c:	bf00      	nop
 800683e:	687b      	ldr	r3, [r7, #4]
 8006840:	681b      	ldr	r3, [r3, #0]
 8006842:	f003 0308 	and.w	r3, r3, #8
 8006846:	2b00      	cmp	r3, #0
 8006848:	d041      	beq.n	80068ce <HAL_RCC_OscConfig+0x292>
 800684a:	687b      	ldr	r3, [r7, #4]
 800684c:	695b      	ldr	r3, [r3, #20]
 800684e:	2b00      	cmp	r3, #0
 8006850:	d01c      	beq.n	800688c <HAL_RCC_OscConfig+0x250>
 8006852:	4b19      	ldr	r3, [pc, #100]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 8006854:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006858:	4a17      	ldr	r2, [pc, #92]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 800685a:	f043 0301 	orr.w	r3, r3, #1
 800685e:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8006862:	f7fd f893 	bl	800398c <HAL_GetTick>
 8006866:	6138      	str	r0, [r7, #16]
 8006868:	e008      	b.n	800687c <HAL_RCC_OscConfig+0x240>
 800686a:	f7fd f88f 	bl	800398c <HAL_GetTick>
 800686e:	4602      	mov	r2, r0
 8006870:	693b      	ldr	r3, [r7, #16]
 8006872:	1ad3      	subs	r3, r2, r3
 8006874:	2b02      	cmp	r3, #2
 8006876:	d901      	bls.n	800687c <HAL_RCC_OscConfig+0x240>
 8006878:	2303      	movs	r3, #3
 800687a:	e1e7      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 800687c:	4b0e      	ldr	r3, [pc, #56]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 800687e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006882:	f003 0302 	and.w	r3, r3, #2
 8006886:	2b00      	cmp	r3, #0
 8006888:	d0ef      	beq.n	800686a <HAL_RCC_OscConfig+0x22e>
 800688a:	e020      	b.n	80068ce <HAL_RCC_OscConfig+0x292>
 800688c:	4b0a      	ldr	r3, [pc, #40]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 800688e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006892:	4a09      	ldr	r2, [pc, #36]	@ (80068b8 <HAL_RCC_OscConfig+0x27c>)
 8006894:	f023 0301 	bic.w	r3, r3, #1
 8006898:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 800689c:	f7fd f876 	bl	800398c <HAL_GetTick>
 80068a0:	6138      	str	r0, [r7, #16]
 80068a2:	e00d      	b.n	80068c0 <HAL_RCC_OscConfig+0x284>
 80068a4:	f7fd f872 	bl	800398c <HAL_GetTick>
 80068a8:	4602      	mov	r2, r0
 80068aa:	693b      	ldr	r3, [r7, #16]
 80068ac:	1ad3      	subs	r3, r2, r3
 80068ae:	2b02      	cmp	r3, #2
 80068b0:	d906      	bls.n	80068c0 <HAL_RCC_OscConfig+0x284>
 80068b2:	2303      	movs	r3, #3
 80068b4:	e1ca      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 80068b6:	bf00      	nop
 80068b8:	40021000 	.word	0x40021000
 80068bc:	20000244 	.word	0x20000244
 80068c0:	4b8c      	ldr	r3, [pc, #560]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 80068c2:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80068c6:	f003 0302 	and.w	r3, r3, #2
 80068ca:	2b00      	cmp	r3, #0
 80068cc:	d1ea      	bne.n	80068a4 <HAL_RCC_OscConfig+0x268>
 80068ce:	687b      	ldr	r3, [r7, #4]
 80068d0:	681b      	ldr	r3, [r3, #0]
 80068d2:	f003 0304 	and.w	r3, r3, #4
 80068d6:	2b00      	cmp	r3, #0
 80068d8:	f000 80a6 	beq.w	8006a28 <HAL_RCC_OscConfig+0x3ec>
 80068dc:	2300      	movs	r3, #0
 80068de:	77fb      	strb	r3, [r7, #31]
 80068e0:	4b84      	ldr	r3, [pc, #528]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 80068e2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80068e4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80068e8:	2b00      	cmp	r3, #0
 80068ea:	d101      	bne.n	80068f0 <HAL_RCC_OscConfig+0x2b4>
 80068ec:	2301      	movs	r3, #1
 80068ee:	e000      	b.n	80068f2 <HAL_RCC_OscConfig+0x2b6>
 80068f0:	2300      	movs	r3, #0
 80068f2:	2b00      	cmp	r3, #0
 80068f4:	d00d      	beq.n	8006912 <HAL_RCC_OscConfig+0x2d6>
 80068f6:	4b7f      	ldr	r3, [pc, #508]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 80068f8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80068fa:	4a7e      	ldr	r2, [pc, #504]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 80068fc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006900:	6593      	str	r3, [r2, #88]	@ 0x58
 8006902:	4b7c      	ldr	r3, [pc, #496]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006904:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006906:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800690a:	60fb      	str	r3, [r7, #12]
 800690c:	68fb      	ldr	r3, [r7, #12]
 800690e:	2301      	movs	r3, #1
 8006910:	77fb      	strb	r3, [r7, #31]
 8006912:	4b79      	ldr	r3, [pc, #484]	@ (8006af8 <HAL_RCC_OscConfig+0x4bc>)
 8006914:	681b      	ldr	r3, [r3, #0]
 8006916:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800691a:	2b00      	cmp	r3, #0
 800691c:	d118      	bne.n	8006950 <HAL_RCC_OscConfig+0x314>
 800691e:	4b76      	ldr	r3, [pc, #472]	@ (8006af8 <HAL_RCC_OscConfig+0x4bc>)
 8006920:	681b      	ldr	r3, [r3, #0]
 8006922:	4a75      	ldr	r2, [pc, #468]	@ (8006af8 <HAL_RCC_OscConfig+0x4bc>)
 8006924:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006928:	6013      	str	r3, [r2, #0]
 800692a:	f7fd f82f 	bl	800398c <HAL_GetTick>
 800692e:	6138      	str	r0, [r7, #16]
 8006930:	e008      	b.n	8006944 <HAL_RCC_OscConfig+0x308>
 8006932:	f7fd f82b 	bl	800398c <HAL_GetTick>
 8006936:	4602      	mov	r2, r0
 8006938:	693b      	ldr	r3, [r7, #16]
 800693a:	1ad3      	subs	r3, r2, r3
 800693c:	2b02      	cmp	r3, #2
 800693e:	d901      	bls.n	8006944 <HAL_RCC_OscConfig+0x308>
 8006940:	2303      	movs	r3, #3
 8006942:	e183      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006944:	4b6c      	ldr	r3, [pc, #432]	@ (8006af8 <HAL_RCC_OscConfig+0x4bc>)
 8006946:	681b      	ldr	r3, [r3, #0]
 8006948:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800694c:	2b00      	cmp	r3, #0
 800694e:	d0f0      	beq.n	8006932 <HAL_RCC_OscConfig+0x2f6>
 8006950:	687b      	ldr	r3, [r7, #4]
 8006952:	689b      	ldr	r3, [r3, #8]
 8006954:	2b01      	cmp	r3, #1
 8006956:	d108      	bne.n	800696a <HAL_RCC_OscConfig+0x32e>
 8006958:	4b66      	ldr	r3, [pc, #408]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 800695a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800695e:	4a65      	ldr	r2, [pc, #404]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006960:	f043 0301 	orr.w	r3, r3, #1
 8006964:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006968:	e024      	b.n	80069b4 <HAL_RCC_OscConfig+0x378>
 800696a:	687b      	ldr	r3, [r7, #4]
 800696c:	689b      	ldr	r3, [r3, #8]
 800696e:	2b05      	cmp	r3, #5
 8006970:	d110      	bne.n	8006994 <HAL_RCC_OscConfig+0x358>
 8006972:	4b60      	ldr	r3, [pc, #384]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006974:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006978:	4a5e      	ldr	r2, [pc, #376]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 800697a:	f043 0304 	orr.w	r3, r3, #4
 800697e:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006982:	4b5c      	ldr	r3, [pc, #368]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006984:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006988:	4a5a      	ldr	r2, [pc, #360]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 800698a:	f043 0301 	orr.w	r3, r3, #1
 800698e:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006992:	e00f      	b.n	80069b4 <HAL_RCC_OscConfig+0x378>
 8006994:	4b57      	ldr	r3, [pc, #348]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006996:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800699a:	4a56      	ldr	r2, [pc, #344]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 800699c:	f023 0301 	bic.w	r3, r3, #1
 80069a0:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80069a4:	4b53      	ldr	r3, [pc, #332]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 80069a6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80069aa:	4a52      	ldr	r2, [pc, #328]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 80069ac:	f023 0304 	bic.w	r3, r3, #4
 80069b0:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	689b      	ldr	r3, [r3, #8]
 80069b8:	2b00      	cmp	r3, #0
 80069ba:	d016      	beq.n	80069ea <HAL_RCC_OscConfig+0x3ae>
 80069bc:	f7fc ffe6 	bl	800398c <HAL_GetTick>
 80069c0:	6138      	str	r0, [r7, #16]
 80069c2:	e00a      	b.n	80069da <HAL_RCC_OscConfig+0x39e>
 80069c4:	f7fc ffe2 	bl	800398c <HAL_GetTick>
 80069c8:	4602      	mov	r2, r0
 80069ca:	693b      	ldr	r3, [r7, #16]
 80069cc:	1ad3      	subs	r3, r2, r3
 80069ce:	f241 3288 	movw	r2, #5000	@ 0x1388
 80069d2:	4293      	cmp	r3, r2
 80069d4:	d901      	bls.n	80069da <HAL_RCC_OscConfig+0x39e>
 80069d6:	2303      	movs	r3, #3
 80069d8:	e138      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 80069da:	4b46      	ldr	r3, [pc, #280]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 80069dc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80069e0:	f003 0302 	and.w	r3, r3, #2
 80069e4:	2b00      	cmp	r3, #0
 80069e6:	d0ed      	beq.n	80069c4 <HAL_RCC_OscConfig+0x388>
 80069e8:	e015      	b.n	8006a16 <HAL_RCC_OscConfig+0x3da>
 80069ea:	f7fc ffcf 	bl	800398c <HAL_GetTick>
 80069ee:	6138      	str	r0, [r7, #16]
 80069f0:	e00a      	b.n	8006a08 <HAL_RCC_OscConfig+0x3cc>
 80069f2:	f7fc ffcb 	bl	800398c <HAL_GetTick>
 80069f6:	4602      	mov	r2, r0
 80069f8:	693b      	ldr	r3, [r7, #16]
 80069fa:	1ad3      	subs	r3, r2, r3
 80069fc:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006a00:	4293      	cmp	r3, r2
 8006a02:	d901      	bls.n	8006a08 <HAL_RCC_OscConfig+0x3cc>
 8006a04:	2303      	movs	r3, #3
 8006a06:	e121      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006a08:	4b3a      	ldr	r3, [pc, #232]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006a0a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006a0e:	f003 0302 	and.w	r3, r3, #2
 8006a12:	2b00      	cmp	r3, #0
 8006a14:	d1ed      	bne.n	80069f2 <HAL_RCC_OscConfig+0x3b6>
 8006a16:	7ffb      	ldrb	r3, [r7, #31]
 8006a18:	2b01      	cmp	r3, #1
 8006a1a:	d105      	bne.n	8006a28 <HAL_RCC_OscConfig+0x3ec>
 8006a1c:	4b35      	ldr	r3, [pc, #212]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006a1e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006a20:	4a34      	ldr	r2, [pc, #208]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006a22:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006a26:	6593      	str	r3, [r2, #88]	@ 0x58
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	681b      	ldr	r3, [r3, #0]
 8006a2c:	f003 0320 	and.w	r3, r3, #32
 8006a30:	2b00      	cmp	r3, #0
 8006a32:	d03c      	beq.n	8006aae <HAL_RCC_OscConfig+0x472>
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	699b      	ldr	r3, [r3, #24]
 8006a38:	2b00      	cmp	r3, #0
 8006a3a:	d01c      	beq.n	8006a76 <HAL_RCC_OscConfig+0x43a>
 8006a3c:	4b2d      	ldr	r3, [pc, #180]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006a3e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006a42:	4a2c      	ldr	r2, [pc, #176]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006a44:	f043 0301 	orr.w	r3, r3, #1
 8006a48:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8006a4c:	f7fc ff9e 	bl	800398c <HAL_GetTick>
 8006a50:	6138      	str	r0, [r7, #16]
 8006a52:	e008      	b.n	8006a66 <HAL_RCC_OscConfig+0x42a>
 8006a54:	f7fc ff9a 	bl	800398c <HAL_GetTick>
 8006a58:	4602      	mov	r2, r0
 8006a5a:	693b      	ldr	r3, [r7, #16]
 8006a5c:	1ad3      	subs	r3, r2, r3
 8006a5e:	2b02      	cmp	r3, #2
 8006a60:	d901      	bls.n	8006a66 <HAL_RCC_OscConfig+0x42a>
 8006a62:	2303      	movs	r3, #3
 8006a64:	e0f2      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006a66:	4b23      	ldr	r3, [pc, #140]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006a68:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006a6c:	f003 0302 	and.w	r3, r3, #2
 8006a70:	2b00      	cmp	r3, #0
 8006a72:	d0ef      	beq.n	8006a54 <HAL_RCC_OscConfig+0x418>
 8006a74:	e01b      	b.n	8006aae <HAL_RCC_OscConfig+0x472>
 8006a76:	4b1f      	ldr	r3, [pc, #124]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006a78:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006a7c:	4a1d      	ldr	r2, [pc, #116]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006a7e:	f023 0301 	bic.w	r3, r3, #1
 8006a82:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8006a86:	f7fc ff81 	bl	800398c <HAL_GetTick>
 8006a8a:	6138      	str	r0, [r7, #16]
 8006a8c:	e008      	b.n	8006aa0 <HAL_RCC_OscConfig+0x464>
 8006a8e:	f7fc ff7d 	bl	800398c <HAL_GetTick>
 8006a92:	4602      	mov	r2, r0
 8006a94:	693b      	ldr	r3, [r7, #16]
 8006a96:	1ad3      	subs	r3, r2, r3
 8006a98:	2b02      	cmp	r3, #2
 8006a9a:	d901      	bls.n	8006aa0 <HAL_RCC_OscConfig+0x464>
 8006a9c:	2303      	movs	r3, #3
 8006a9e:	e0d5      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006aa0:	4b14      	ldr	r3, [pc, #80]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006aa2:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006aa6:	f003 0302 	and.w	r3, r3, #2
 8006aaa:	2b00      	cmp	r3, #0
 8006aac:	d1ef      	bne.n	8006a8e <HAL_RCC_OscConfig+0x452>
 8006aae:	687b      	ldr	r3, [r7, #4]
 8006ab0:	69db      	ldr	r3, [r3, #28]
 8006ab2:	2b00      	cmp	r3, #0
 8006ab4:	f000 80c9 	beq.w	8006c4a <HAL_RCC_OscConfig+0x60e>
 8006ab8:	4b0e      	ldr	r3, [pc, #56]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006aba:	689b      	ldr	r3, [r3, #8]
 8006abc:	f003 030c 	and.w	r3, r3, #12
 8006ac0:	2b0c      	cmp	r3, #12
 8006ac2:	f000 8083 	beq.w	8006bcc <HAL_RCC_OscConfig+0x590>
 8006ac6:	687b      	ldr	r3, [r7, #4]
 8006ac8:	69db      	ldr	r3, [r3, #28]
 8006aca:	2b02      	cmp	r3, #2
 8006acc:	d15e      	bne.n	8006b8c <HAL_RCC_OscConfig+0x550>
 8006ace:	4b09      	ldr	r3, [pc, #36]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006ad0:	681b      	ldr	r3, [r3, #0]
 8006ad2:	4a08      	ldr	r2, [pc, #32]	@ (8006af4 <HAL_RCC_OscConfig+0x4b8>)
 8006ad4:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006ad8:	6013      	str	r3, [r2, #0]
 8006ada:	f7fc ff57 	bl	800398c <HAL_GetTick>
 8006ade:	6138      	str	r0, [r7, #16]
 8006ae0:	e00c      	b.n	8006afc <HAL_RCC_OscConfig+0x4c0>
 8006ae2:	f7fc ff53 	bl	800398c <HAL_GetTick>
 8006ae6:	4602      	mov	r2, r0
 8006ae8:	693b      	ldr	r3, [r7, #16]
 8006aea:	1ad3      	subs	r3, r2, r3
 8006aec:	2b02      	cmp	r3, #2
 8006aee:	d905      	bls.n	8006afc <HAL_RCC_OscConfig+0x4c0>
 8006af0:	2303      	movs	r3, #3
 8006af2:	e0ab      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006af4:	40021000 	.word	0x40021000
 8006af8:	40007000 	.word	0x40007000
 8006afc:	4b55      	ldr	r3, [pc, #340]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006afe:	681b      	ldr	r3, [r3, #0]
 8006b00:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006b04:	2b00      	cmp	r3, #0
 8006b06:	d1ec      	bne.n	8006ae2 <HAL_RCC_OscConfig+0x4a6>
 8006b08:	4b52      	ldr	r3, [pc, #328]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006b0a:	68da      	ldr	r2, [r3, #12]
 8006b0c:	4b52      	ldr	r3, [pc, #328]	@ (8006c58 <HAL_RCC_OscConfig+0x61c>)
 8006b0e:	4013      	ands	r3, r2
 8006b10:	687a      	ldr	r2, [r7, #4]
 8006b12:	6a11      	ldr	r1, [r2, #32]
 8006b14:	687a      	ldr	r2, [r7, #4]
 8006b16:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8006b18:	3a01      	subs	r2, #1
 8006b1a:	0112      	lsls	r2, r2, #4
 8006b1c:	4311      	orrs	r1, r2
 8006b1e:	687a      	ldr	r2, [r7, #4]
 8006b20:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8006b22:	0212      	lsls	r2, r2, #8
 8006b24:	4311      	orrs	r1, r2
 8006b26:	687a      	ldr	r2, [r7, #4]
 8006b28:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8006b2a:	0852      	lsrs	r2, r2, #1
 8006b2c:	3a01      	subs	r2, #1
 8006b2e:	0552      	lsls	r2, r2, #21
 8006b30:	4311      	orrs	r1, r2
 8006b32:	687a      	ldr	r2, [r7, #4]
 8006b34:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8006b36:	0852      	lsrs	r2, r2, #1
 8006b38:	3a01      	subs	r2, #1
 8006b3a:	0652      	lsls	r2, r2, #25
 8006b3c:	4311      	orrs	r1, r2
 8006b3e:	687a      	ldr	r2, [r7, #4]
 8006b40:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8006b42:	06d2      	lsls	r2, r2, #27
 8006b44:	430a      	orrs	r2, r1
 8006b46:	4943      	ldr	r1, [pc, #268]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006b48:	4313      	orrs	r3, r2
 8006b4a:	60cb      	str	r3, [r1, #12]
 8006b4c:	4b41      	ldr	r3, [pc, #260]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006b4e:	681b      	ldr	r3, [r3, #0]
 8006b50:	4a40      	ldr	r2, [pc, #256]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006b52:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006b56:	6013      	str	r3, [r2, #0]
 8006b58:	4b3e      	ldr	r3, [pc, #248]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006b5a:	68db      	ldr	r3, [r3, #12]
 8006b5c:	4a3d      	ldr	r2, [pc, #244]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006b5e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006b62:	60d3      	str	r3, [r2, #12]
 8006b64:	f7fc ff12 	bl	800398c <HAL_GetTick>
 8006b68:	6138      	str	r0, [r7, #16]
 8006b6a:	e008      	b.n	8006b7e <HAL_RCC_OscConfig+0x542>
 8006b6c:	f7fc ff0e 	bl	800398c <HAL_GetTick>
 8006b70:	4602      	mov	r2, r0
 8006b72:	693b      	ldr	r3, [r7, #16]
 8006b74:	1ad3      	subs	r3, r2, r3
 8006b76:	2b02      	cmp	r3, #2
 8006b78:	d901      	bls.n	8006b7e <HAL_RCC_OscConfig+0x542>
 8006b7a:	2303      	movs	r3, #3
 8006b7c:	e066      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006b7e:	4b35      	ldr	r3, [pc, #212]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006b80:	681b      	ldr	r3, [r3, #0]
 8006b82:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006b86:	2b00      	cmp	r3, #0
 8006b88:	d0f0      	beq.n	8006b6c <HAL_RCC_OscConfig+0x530>
 8006b8a:	e05e      	b.n	8006c4a <HAL_RCC_OscConfig+0x60e>
 8006b8c:	4b31      	ldr	r3, [pc, #196]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006b8e:	681b      	ldr	r3, [r3, #0]
 8006b90:	4a30      	ldr	r2, [pc, #192]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006b92:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006b96:	6013      	str	r3, [r2, #0]
 8006b98:	f7fc fef8 	bl	800398c <HAL_GetTick>
 8006b9c:	6138      	str	r0, [r7, #16]
 8006b9e:	e008      	b.n	8006bb2 <HAL_RCC_OscConfig+0x576>
 8006ba0:	f7fc fef4 	bl	800398c <HAL_GetTick>
 8006ba4:	4602      	mov	r2, r0
 8006ba6:	693b      	ldr	r3, [r7, #16]
 8006ba8:	1ad3      	subs	r3, r2, r3
 8006baa:	2b02      	cmp	r3, #2
 8006bac:	d901      	bls.n	8006bb2 <HAL_RCC_OscConfig+0x576>
 8006bae:	2303      	movs	r3, #3
 8006bb0:	e04c      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006bb2:	4b28      	ldr	r3, [pc, #160]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006bb4:	681b      	ldr	r3, [r3, #0]
 8006bb6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006bba:	2b00      	cmp	r3, #0
 8006bbc:	d1f0      	bne.n	8006ba0 <HAL_RCC_OscConfig+0x564>
 8006bbe:	4b25      	ldr	r3, [pc, #148]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006bc0:	68da      	ldr	r2, [r3, #12]
 8006bc2:	4924      	ldr	r1, [pc, #144]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006bc4:	4b25      	ldr	r3, [pc, #148]	@ (8006c5c <HAL_RCC_OscConfig+0x620>)
 8006bc6:	4013      	ands	r3, r2
 8006bc8:	60cb      	str	r3, [r1, #12]
 8006bca:	e03e      	b.n	8006c4a <HAL_RCC_OscConfig+0x60e>
 8006bcc:	687b      	ldr	r3, [r7, #4]
 8006bce:	69db      	ldr	r3, [r3, #28]
 8006bd0:	2b01      	cmp	r3, #1
 8006bd2:	d101      	bne.n	8006bd8 <HAL_RCC_OscConfig+0x59c>
 8006bd4:	2301      	movs	r3, #1
 8006bd6:	e039      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006bd8:	4b1e      	ldr	r3, [pc, #120]	@ (8006c54 <HAL_RCC_OscConfig+0x618>)
 8006bda:	68db      	ldr	r3, [r3, #12]
 8006bdc:	617b      	str	r3, [r7, #20]
 8006bde:	697b      	ldr	r3, [r7, #20]
 8006be0:	f003 0203 	and.w	r2, r3, #3
 8006be4:	687b      	ldr	r3, [r7, #4]
 8006be6:	6a1b      	ldr	r3, [r3, #32]
 8006be8:	429a      	cmp	r2, r3
 8006bea:	d12c      	bne.n	8006c46 <HAL_RCC_OscConfig+0x60a>
 8006bec:	697b      	ldr	r3, [r7, #20]
 8006bee:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8006bf2:	687b      	ldr	r3, [r7, #4]
 8006bf4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006bf6:	3b01      	subs	r3, #1
 8006bf8:	011b      	lsls	r3, r3, #4
 8006bfa:	429a      	cmp	r2, r3
 8006bfc:	d123      	bne.n	8006c46 <HAL_RCC_OscConfig+0x60a>
 8006bfe:	697b      	ldr	r3, [r7, #20]
 8006c00:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006c08:	021b      	lsls	r3, r3, #8
 8006c0a:	429a      	cmp	r2, r3
 8006c0c:	d11b      	bne.n	8006c46 <HAL_RCC_OscConfig+0x60a>
 8006c0e:	697b      	ldr	r3, [r7, #20]
 8006c10:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006c18:	06db      	lsls	r3, r3, #27
 8006c1a:	429a      	cmp	r2, r3
 8006c1c:	d113      	bne.n	8006c46 <HAL_RCC_OscConfig+0x60a>
 8006c1e:	697b      	ldr	r3, [r7, #20]
 8006c20:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006c28:	085b      	lsrs	r3, r3, #1
 8006c2a:	3b01      	subs	r3, #1
 8006c2c:	055b      	lsls	r3, r3, #21
 8006c2e:	429a      	cmp	r2, r3
 8006c30:	d109      	bne.n	8006c46 <HAL_RCC_OscConfig+0x60a>
 8006c32:	697b      	ldr	r3, [r7, #20]
 8006c34:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006c3c:	085b      	lsrs	r3, r3, #1
 8006c3e:	3b01      	subs	r3, #1
 8006c40:	065b      	lsls	r3, r3, #25
 8006c42:	429a      	cmp	r2, r3
 8006c44:	d001      	beq.n	8006c4a <HAL_RCC_OscConfig+0x60e>
 8006c46:	2301      	movs	r3, #1
 8006c48:	e000      	b.n	8006c4c <HAL_RCC_OscConfig+0x610>
 8006c4a:	2300      	movs	r3, #0
 8006c4c:	4618      	mov	r0, r3
 8006c4e:	3720      	adds	r7, #32
 8006c50:	46bd      	mov	sp, r7
 8006c52:	bd80      	pop	{r7, pc}
 8006c54:	40021000 	.word	0x40021000
 8006c58:	019f800c 	.word	0x019f800c
 8006c5c:	feeefffc 	.word	0xfeeefffc

08006c60 <HAL_RCC_ClockConfig>:
 8006c60:	b580      	push	{r7, lr}
 8006c62:	b086      	sub	sp, #24
 8006c64:	af00      	add	r7, sp, #0
 8006c66:	6078      	str	r0, [r7, #4]
 8006c68:	6039      	str	r1, [r7, #0]
 8006c6a:	2300      	movs	r3, #0
 8006c6c:	617b      	str	r3, [r7, #20]
 8006c6e:	687b      	ldr	r3, [r7, #4]
 8006c70:	2b00      	cmp	r3, #0
 8006c72:	d101      	bne.n	8006c78 <HAL_RCC_ClockConfig+0x18>
 8006c74:	2301      	movs	r3, #1
 8006c76:	e11e      	b.n	8006eb6 <HAL_RCC_ClockConfig+0x256>
 8006c78:	4b91      	ldr	r3, [pc, #580]	@ (8006ec0 <HAL_RCC_ClockConfig+0x260>)
 8006c7a:	681b      	ldr	r3, [r3, #0]
 8006c7c:	f003 030f 	and.w	r3, r3, #15
 8006c80:	683a      	ldr	r2, [r7, #0]
 8006c82:	429a      	cmp	r2, r3
 8006c84:	d910      	bls.n	8006ca8 <HAL_RCC_ClockConfig+0x48>
 8006c86:	4b8e      	ldr	r3, [pc, #568]	@ (8006ec0 <HAL_RCC_ClockConfig+0x260>)
 8006c88:	681b      	ldr	r3, [r3, #0]
 8006c8a:	f023 020f 	bic.w	r2, r3, #15
 8006c8e:	498c      	ldr	r1, [pc, #560]	@ (8006ec0 <HAL_RCC_ClockConfig+0x260>)
 8006c90:	683b      	ldr	r3, [r7, #0]
 8006c92:	4313      	orrs	r3, r2
 8006c94:	600b      	str	r3, [r1, #0]
 8006c96:	4b8a      	ldr	r3, [pc, #552]	@ (8006ec0 <HAL_RCC_ClockConfig+0x260>)
 8006c98:	681b      	ldr	r3, [r3, #0]
 8006c9a:	f003 030f 	and.w	r3, r3, #15
 8006c9e:	683a      	ldr	r2, [r7, #0]
 8006ca0:	429a      	cmp	r2, r3
 8006ca2:	d001      	beq.n	8006ca8 <HAL_RCC_ClockConfig+0x48>
 8006ca4:	2301      	movs	r3, #1
 8006ca6:	e106      	b.n	8006eb6 <HAL_RCC_ClockConfig+0x256>
 8006ca8:	687b      	ldr	r3, [r7, #4]
 8006caa:	681b      	ldr	r3, [r3, #0]
 8006cac:	f003 0301 	and.w	r3, r3, #1
 8006cb0:	2b00      	cmp	r3, #0
 8006cb2:	d073      	beq.n	8006d9c <HAL_RCC_ClockConfig+0x13c>
 8006cb4:	687b      	ldr	r3, [r7, #4]
 8006cb6:	685b      	ldr	r3, [r3, #4]
 8006cb8:	2b03      	cmp	r3, #3
 8006cba:	d129      	bne.n	8006d10 <HAL_RCC_ClockConfig+0xb0>
 8006cbc:	4b81      	ldr	r3, [pc, #516]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006cbe:	681b      	ldr	r3, [r3, #0]
 8006cc0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006cc4:	2b00      	cmp	r3, #0
 8006cc6:	d101      	bne.n	8006ccc <HAL_RCC_ClockConfig+0x6c>
 8006cc8:	2301      	movs	r3, #1
 8006cca:	e0f4      	b.n	8006eb6 <HAL_RCC_ClockConfig+0x256>
 8006ccc:	f000 f9d0 	bl	8007070 <RCC_GetSysClockFreqFromPLLSource>
 8006cd0:	6138      	str	r0, [r7, #16]
 8006cd2:	693b      	ldr	r3, [r7, #16]
 8006cd4:	4a7c      	ldr	r2, [pc, #496]	@ (8006ec8 <HAL_RCC_ClockConfig+0x268>)
 8006cd6:	4293      	cmp	r3, r2
 8006cd8:	d93f      	bls.n	8006d5a <HAL_RCC_ClockConfig+0xfa>
 8006cda:	4b7a      	ldr	r3, [pc, #488]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006cdc:	689b      	ldr	r3, [r3, #8]
 8006cde:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8006ce2:	2b00      	cmp	r3, #0
 8006ce4:	d009      	beq.n	8006cfa <HAL_RCC_ClockConfig+0x9a>
 8006ce6:	687b      	ldr	r3, [r7, #4]
 8006ce8:	681b      	ldr	r3, [r3, #0]
 8006cea:	f003 0302 	and.w	r3, r3, #2
 8006cee:	2b00      	cmp	r3, #0
 8006cf0:	d033      	beq.n	8006d5a <HAL_RCC_ClockConfig+0xfa>
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	689b      	ldr	r3, [r3, #8]
 8006cf6:	2b00      	cmp	r3, #0
 8006cf8:	d12f      	bne.n	8006d5a <HAL_RCC_ClockConfig+0xfa>
 8006cfa:	4b72      	ldr	r3, [pc, #456]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006cfc:	689b      	ldr	r3, [r3, #8]
 8006cfe:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006d02:	4a70      	ldr	r2, [pc, #448]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006d04:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006d08:	6093      	str	r3, [r2, #8]
 8006d0a:	2380      	movs	r3, #128	@ 0x80
 8006d0c:	617b      	str	r3, [r7, #20]
 8006d0e:	e024      	b.n	8006d5a <HAL_RCC_ClockConfig+0xfa>
 8006d10:	687b      	ldr	r3, [r7, #4]
 8006d12:	685b      	ldr	r3, [r3, #4]
 8006d14:	2b02      	cmp	r3, #2
 8006d16:	d107      	bne.n	8006d28 <HAL_RCC_ClockConfig+0xc8>
 8006d18:	4b6a      	ldr	r3, [pc, #424]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006d1a:	681b      	ldr	r3, [r3, #0]
 8006d1c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006d20:	2b00      	cmp	r3, #0
 8006d22:	d109      	bne.n	8006d38 <HAL_RCC_ClockConfig+0xd8>
 8006d24:	2301      	movs	r3, #1
 8006d26:	e0c6      	b.n	8006eb6 <HAL_RCC_ClockConfig+0x256>
 8006d28:	4b66      	ldr	r3, [pc, #408]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006d2a:	681b      	ldr	r3, [r3, #0]
 8006d2c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006d30:	2b00      	cmp	r3, #0
 8006d32:	d101      	bne.n	8006d38 <HAL_RCC_ClockConfig+0xd8>
 8006d34:	2301      	movs	r3, #1
 8006d36:	e0be      	b.n	8006eb6 <HAL_RCC_ClockConfig+0x256>
 8006d38:	f000 f8ce 	bl	8006ed8 <HAL_RCC_GetSysClockFreq>
 8006d3c:	6138      	str	r0, [r7, #16]
 8006d3e:	693b      	ldr	r3, [r7, #16]
 8006d40:	4a61      	ldr	r2, [pc, #388]	@ (8006ec8 <HAL_RCC_ClockConfig+0x268>)
 8006d42:	4293      	cmp	r3, r2
 8006d44:	d909      	bls.n	8006d5a <HAL_RCC_ClockConfig+0xfa>
 8006d46:	4b5f      	ldr	r3, [pc, #380]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006d48:	689b      	ldr	r3, [r3, #8]
 8006d4a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006d4e:	4a5d      	ldr	r2, [pc, #372]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006d50:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006d54:	6093      	str	r3, [r2, #8]
 8006d56:	2380      	movs	r3, #128	@ 0x80
 8006d58:	617b      	str	r3, [r7, #20]
 8006d5a:	4b5a      	ldr	r3, [pc, #360]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006d5c:	689b      	ldr	r3, [r3, #8]
 8006d5e:	f023 0203 	bic.w	r2, r3, #3
 8006d62:	687b      	ldr	r3, [r7, #4]
 8006d64:	685b      	ldr	r3, [r3, #4]
 8006d66:	4957      	ldr	r1, [pc, #348]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006d68:	4313      	orrs	r3, r2
 8006d6a:	608b      	str	r3, [r1, #8]
 8006d6c:	f7fc fe0e 	bl	800398c <HAL_GetTick>
 8006d70:	60f8      	str	r0, [r7, #12]
 8006d72:	e00a      	b.n	8006d8a <HAL_RCC_ClockConfig+0x12a>
 8006d74:	f7fc fe0a 	bl	800398c <HAL_GetTick>
 8006d78:	4602      	mov	r2, r0
 8006d7a:	68fb      	ldr	r3, [r7, #12]
 8006d7c:	1ad3      	subs	r3, r2, r3
 8006d7e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006d82:	4293      	cmp	r3, r2
 8006d84:	d901      	bls.n	8006d8a <HAL_RCC_ClockConfig+0x12a>
 8006d86:	2303      	movs	r3, #3
 8006d88:	e095      	b.n	8006eb6 <HAL_RCC_ClockConfig+0x256>
 8006d8a:	4b4e      	ldr	r3, [pc, #312]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006d8c:	689b      	ldr	r3, [r3, #8]
 8006d8e:	f003 020c 	and.w	r2, r3, #12
 8006d92:	687b      	ldr	r3, [r7, #4]
 8006d94:	685b      	ldr	r3, [r3, #4]
 8006d96:	009b      	lsls	r3, r3, #2
 8006d98:	429a      	cmp	r2, r3
 8006d9a:	d1eb      	bne.n	8006d74 <HAL_RCC_ClockConfig+0x114>
 8006d9c:	687b      	ldr	r3, [r7, #4]
 8006d9e:	681b      	ldr	r3, [r3, #0]
 8006da0:	f003 0302 	and.w	r3, r3, #2
 8006da4:	2b00      	cmp	r3, #0
 8006da6:	d023      	beq.n	8006df0 <HAL_RCC_ClockConfig+0x190>
 8006da8:	687b      	ldr	r3, [r7, #4]
 8006daa:	681b      	ldr	r3, [r3, #0]
 8006dac:	f003 0304 	and.w	r3, r3, #4
 8006db0:	2b00      	cmp	r3, #0
 8006db2:	d005      	beq.n	8006dc0 <HAL_RCC_ClockConfig+0x160>
 8006db4:	4b43      	ldr	r3, [pc, #268]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006db6:	689b      	ldr	r3, [r3, #8]
 8006db8:	4a42      	ldr	r2, [pc, #264]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006dba:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8006dbe:	6093      	str	r3, [r2, #8]
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	681b      	ldr	r3, [r3, #0]
 8006dc4:	f003 0308 	and.w	r3, r3, #8
 8006dc8:	2b00      	cmp	r3, #0
 8006dca:	d007      	beq.n	8006ddc <HAL_RCC_ClockConfig+0x17c>
 8006dcc:	4b3d      	ldr	r3, [pc, #244]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006dce:	689b      	ldr	r3, [r3, #8]
 8006dd0:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8006dd4:	4a3b      	ldr	r2, [pc, #236]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006dd6:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8006dda:	6093      	str	r3, [r2, #8]
 8006ddc:	4b39      	ldr	r3, [pc, #228]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006dde:	689b      	ldr	r3, [r3, #8]
 8006de0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8006de4:	687b      	ldr	r3, [r7, #4]
 8006de6:	689b      	ldr	r3, [r3, #8]
 8006de8:	4936      	ldr	r1, [pc, #216]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006dea:	4313      	orrs	r3, r2
 8006dec:	608b      	str	r3, [r1, #8]
 8006dee:	e008      	b.n	8006e02 <HAL_RCC_ClockConfig+0x1a2>
 8006df0:	697b      	ldr	r3, [r7, #20]
 8006df2:	2b80      	cmp	r3, #128	@ 0x80
 8006df4:	d105      	bne.n	8006e02 <HAL_RCC_ClockConfig+0x1a2>
 8006df6:	4b33      	ldr	r3, [pc, #204]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006df8:	689b      	ldr	r3, [r3, #8]
 8006dfa:	4a32      	ldr	r2, [pc, #200]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006dfc:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006e00:	6093      	str	r3, [r2, #8]
 8006e02:	4b2f      	ldr	r3, [pc, #188]	@ (8006ec0 <HAL_RCC_ClockConfig+0x260>)
 8006e04:	681b      	ldr	r3, [r3, #0]
 8006e06:	f003 030f 	and.w	r3, r3, #15
 8006e0a:	683a      	ldr	r2, [r7, #0]
 8006e0c:	429a      	cmp	r2, r3
 8006e0e:	d21d      	bcs.n	8006e4c <HAL_RCC_ClockConfig+0x1ec>
 8006e10:	4b2b      	ldr	r3, [pc, #172]	@ (8006ec0 <HAL_RCC_ClockConfig+0x260>)
 8006e12:	681b      	ldr	r3, [r3, #0]
 8006e14:	f023 020f 	bic.w	r2, r3, #15
 8006e18:	4929      	ldr	r1, [pc, #164]	@ (8006ec0 <HAL_RCC_ClockConfig+0x260>)
 8006e1a:	683b      	ldr	r3, [r7, #0]
 8006e1c:	4313      	orrs	r3, r2
 8006e1e:	600b      	str	r3, [r1, #0]
 8006e20:	f7fc fdb4 	bl	800398c <HAL_GetTick>
 8006e24:	60f8      	str	r0, [r7, #12]
 8006e26:	e00a      	b.n	8006e3e <HAL_RCC_ClockConfig+0x1de>
 8006e28:	f7fc fdb0 	bl	800398c <HAL_GetTick>
 8006e2c:	4602      	mov	r2, r0
 8006e2e:	68fb      	ldr	r3, [r7, #12]
 8006e30:	1ad3      	subs	r3, r2, r3
 8006e32:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006e36:	4293      	cmp	r3, r2
 8006e38:	d901      	bls.n	8006e3e <HAL_RCC_ClockConfig+0x1de>
 8006e3a:	2303      	movs	r3, #3
 8006e3c:	e03b      	b.n	8006eb6 <HAL_RCC_ClockConfig+0x256>
 8006e3e:	4b20      	ldr	r3, [pc, #128]	@ (8006ec0 <HAL_RCC_ClockConfig+0x260>)
 8006e40:	681b      	ldr	r3, [r3, #0]
 8006e42:	f003 030f 	and.w	r3, r3, #15
 8006e46:	683a      	ldr	r2, [r7, #0]
 8006e48:	429a      	cmp	r2, r3
 8006e4a:	d1ed      	bne.n	8006e28 <HAL_RCC_ClockConfig+0x1c8>
 8006e4c:	687b      	ldr	r3, [r7, #4]
 8006e4e:	681b      	ldr	r3, [r3, #0]
 8006e50:	f003 0304 	and.w	r3, r3, #4
 8006e54:	2b00      	cmp	r3, #0
 8006e56:	d008      	beq.n	8006e6a <HAL_RCC_ClockConfig+0x20a>
 8006e58:	4b1a      	ldr	r3, [pc, #104]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006e5a:	689b      	ldr	r3, [r3, #8]
 8006e5c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8006e60:	687b      	ldr	r3, [r7, #4]
 8006e62:	68db      	ldr	r3, [r3, #12]
 8006e64:	4917      	ldr	r1, [pc, #92]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006e66:	4313      	orrs	r3, r2
 8006e68:	608b      	str	r3, [r1, #8]
 8006e6a:	687b      	ldr	r3, [r7, #4]
 8006e6c:	681b      	ldr	r3, [r3, #0]
 8006e6e:	f003 0308 	and.w	r3, r3, #8
 8006e72:	2b00      	cmp	r3, #0
 8006e74:	d009      	beq.n	8006e8a <HAL_RCC_ClockConfig+0x22a>
 8006e76:	4b13      	ldr	r3, [pc, #76]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006e78:	689b      	ldr	r3, [r3, #8]
 8006e7a:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8006e7e:	687b      	ldr	r3, [r7, #4]
 8006e80:	691b      	ldr	r3, [r3, #16]
 8006e82:	00db      	lsls	r3, r3, #3
 8006e84:	490f      	ldr	r1, [pc, #60]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006e86:	4313      	orrs	r3, r2
 8006e88:	608b      	str	r3, [r1, #8]
 8006e8a:	f000 f825 	bl	8006ed8 <HAL_RCC_GetSysClockFreq>
 8006e8e:	4602      	mov	r2, r0
 8006e90:	4b0c      	ldr	r3, [pc, #48]	@ (8006ec4 <HAL_RCC_ClockConfig+0x264>)
 8006e92:	689b      	ldr	r3, [r3, #8]
 8006e94:	091b      	lsrs	r3, r3, #4
 8006e96:	f003 030f 	and.w	r3, r3, #15
 8006e9a:	490c      	ldr	r1, [pc, #48]	@ (8006ecc <HAL_RCC_ClockConfig+0x26c>)
 8006e9c:	5ccb      	ldrb	r3, [r1, r3]
 8006e9e:	f003 031f 	and.w	r3, r3, #31
 8006ea2:	fa22 f303 	lsr.w	r3, r2, r3
 8006ea6:	4a0a      	ldr	r2, [pc, #40]	@ (8006ed0 <HAL_RCC_ClockConfig+0x270>)
 8006ea8:	6013      	str	r3, [r2, #0]
 8006eaa:	4b0a      	ldr	r3, [pc, #40]	@ (8006ed4 <HAL_RCC_ClockConfig+0x274>)
 8006eac:	681b      	ldr	r3, [r3, #0]
 8006eae:	4618      	mov	r0, r3
 8006eb0:	f7f9 ff98 	bl	8000de4 <HAL_InitTick>
 8006eb4:	4603      	mov	r3, r0
 8006eb6:	4618      	mov	r0, r3
 8006eb8:	3718      	adds	r7, #24
 8006eba:	46bd      	mov	sp, r7
 8006ebc:	bd80      	pop	{r7, pc}
 8006ebe:	bf00      	nop
 8006ec0:	40022000 	.word	0x40022000
 8006ec4:	40021000 	.word	0x40021000
 8006ec8:	04c4b400 	.word	0x04c4b400
 8006ecc:	0800c9b4 	.word	0x0800c9b4
 8006ed0:	20000000 	.word	0x20000000
 8006ed4:	20000244 	.word	0x20000244

08006ed8 <HAL_RCC_GetSysClockFreq>:
 8006ed8:	b480      	push	{r7}
 8006eda:	b087      	sub	sp, #28
 8006edc:	af00      	add	r7, sp, #0
 8006ede:	4b2c      	ldr	r3, [pc, #176]	@ (8006f90 <HAL_RCC_GetSysClockFreq+0xb8>)
 8006ee0:	689b      	ldr	r3, [r3, #8]
 8006ee2:	f003 030c 	and.w	r3, r3, #12
 8006ee6:	2b04      	cmp	r3, #4
 8006ee8:	d102      	bne.n	8006ef0 <HAL_RCC_GetSysClockFreq+0x18>
 8006eea:	4b2a      	ldr	r3, [pc, #168]	@ (8006f94 <HAL_RCC_GetSysClockFreq+0xbc>)
 8006eec:	613b      	str	r3, [r7, #16]
 8006eee:	e047      	b.n	8006f80 <HAL_RCC_GetSysClockFreq+0xa8>
 8006ef0:	4b27      	ldr	r3, [pc, #156]	@ (8006f90 <HAL_RCC_GetSysClockFreq+0xb8>)
 8006ef2:	689b      	ldr	r3, [r3, #8]
 8006ef4:	f003 030c 	and.w	r3, r3, #12
 8006ef8:	2b08      	cmp	r3, #8
 8006efa:	d102      	bne.n	8006f02 <HAL_RCC_GetSysClockFreq+0x2a>
 8006efc:	4b26      	ldr	r3, [pc, #152]	@ (8006f98 <HAL_RCC_GetSysClockFreq+0xc0>)
 8006efe:	613b      	str	r3, [r7, #16]
 8006f00:	e03e      	b.n	8006f80 <HAL_RCC_GetSysClockFreq+0xa8>
 8006f02:	4b23      	ldr	r3, [pc, #140]	@ (8006f90 <HAL_RCC_GetSysClockFreq+0xb8>)
 8006f04:	689b      	ldr	r3, [r3, #8]
 8006f06:	f003 030c 	and.w	r3, r3, #12
 8006f0a:	2b0c      	cmp	r3, #12
 8006f0c:	d136      	bne.n	8006f7c <HAL_RCC_GetSysClockFreq+0xa4>
 8006f0e:	4b20      	ldr	r3, [pc, #128]	@ (8006f90 <HAL_RCC_GetSysClockFreq+0xb8>)
 8006f10:	68db      	ldr	r3, [r3, #12]
 8006f12:	f003 0303 	and.w	r3, r3, #3
 8006f16:	60fb      	str	r3, [r7, #12]
 8006f18:	4b1d      	ldr	r3, [pc, #116]	@ (8006f90 <HAL_RCC_GetSysClockFreq+0xb8>)
 8006f1a:	68db      	ldr	r3, [r3, #12]
 8006f1c:	091b      	lsrs	r3, r3, #4
 8006f1e:	f003 030f 	and.w	r3, r3, #15
 8006f22:	3301      	adds	r3, #1
 8006f24:	60bb      	str	r3, [r7, #8]
 8006f26:	68fb      	ldr	r3, [r7, #12]
 8006f28:	2b03      	cmp	r3, #3
 8006f2a:	d10c      	bne.n	8006f46 <HAL_RCC_GetSysClockFreq+0x6e>
 8006f2c:	4a1a      	ldr	r2, [pc, #104]	@ (8006f98 <HAL_RCC_GetSysClockFreq+0xc0>)
 8006f2e:	68bb      	ldr	r3, [r7, #8]
 8006f30:	fbb2 f3f3 	udiv	r3, r2, r3
 8006f34:	4a16      	ldr	r2, [pc, #88]	@ (8006f90 <HAL_RCC_GetSysClockFreq+0xb8>)
 8006f36:	68d2      	ldr	r2, [r2, #12]
 8006f38:	0a12      	lsrs	r2, r2, #8
 8006f3a:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8006f3e:	fb02 f303 	mul.w	r3, r2, r3
 8006f42:	617b      	str	r3, [r7, #20]
 8006f44:	e00c      	b.n	8006f60 <HAL_RCC_GetSysClockFreq+0x88>
 8006f46:	4a13      	ldr	r2, [pc, #76]	@ (8006f94 <HAL_RCC_GetSysClockFreq+0xbc>)
 8006f48:	68bb      	ldr	r3, [r7, #8]
 8006f4a:	fbb2 f3f3 	udiv	r3, r2, r3
 8006f4e:	4a10      	ldr	r2, [pc, #64]	@ (8006f90 <HAL_RCC_GetSysClockFreq+0xb8>)
 8006f50:	68d2      	ldr	r2, [r2, #12]
 8006f52:	0a12      	lsrs	r2, r2, #8
 8006f54:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8006f58:	fb02 f303 	mul.w	r3, r2, r3
 8006f5c:	617b      	str	r3, [r7, #20]
 8006f5e:	bf00      	nop
 8006f60:	4b0b      	ldr	r3, [pc, #44]	@ (8006f90 <HAL_RCC_GetSysClockFreq+0xb8>)
 8006f62:	68db      	ldr	r3, [r3, #12]
 8006f64:	0e5b      	lsrs	r3, r3, #25
 8006f66:	f003 0303 	and.w	r3, r3, #3
 8006f6a:	3301      	adds	r3, #1
 8006f6c:	005b      	lsls	r3, r3, #1
 8006f6e:	607b      	str	r3, [r7, #4]
 8006f70:	697a      	ldr	r2, [r7, #20]
 8006f72:	687b      	ldr	r3, [r7, #4]
 8006f74:	fbb2 f3f3 	udiv	r3, r2, r3
 8006f78:	613b      	str	r3, [r7, #16]
 8006f7a:	e001      	b.n	8006f80 <HAL_RCC_GetSysClockFreq+0xa8>
 8006f7c:	2300      	movs	r3, #0
 8006f7e:	613b      	str	r3, [r7, #16]
 8006f80:	693b      	ldr	r3, [r7, #16]
 8006f82:	4618      	mov	r0, r3
 8006f84:	371c      	adds	r7, #28
 8006f86:	46bd      	mov	sp, r7
 8006f88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f8c:	4770      	bx	lr
 8006f8e:	bf00      	nop
 8006f90:	40021000 	.word	0x40021000
 8006f94:	00f42400 	.word	0x00f42400
 8006f98:	016e3600 	.word	0x016e3600

08006f9c <HAL_RCC_GetHCLKFreq>:
 8006f9c:	b480      	push	{r7}
 8006f9e:	af00      	add	r7, sp, #0
 8006fa0:	4b03      	ldr	r3, [pc, #12]	@ (8006fb0 <HAL_RCC_GetHCLKFreq+0x14>)
 8006fa2:	681b      	ldr	r3, [r3, #0]
 8006fa4:	4618      	mov	r0, r3
 8006fa6:	46bd      	mov	sp, r7
 8006fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fac:	4770      	bx	lr
 8006fae:	bf00      	nop
 8006fb0:	20000000 	.word	0x20000000

08006fb4 <HAL_RCC_GetPCLK1Freq>:
 8006fb4:	b580      	push	{r7, lr}
 8006fb6:	af00      	add	r7, sp, #0
 8006fb8:	f7ff fff0 	bl	8006f9c <HAL_RCC_GetHCLKFreq>
 8006fbc:	4602      	mov	r2, r0
 8006fbe:	4b06      	ldr	r3, [pc, #24]	@ (8006fd8 <HAL_RCC_GetPCLK1Freq+0x24>)
 8006fc0:	689b      	ldr	r3, [r3, #8]
 8006fc2:	0a1b      	lsrs	r3, r3, #8
 8006fc4:	f003 0307 	and.w	r3, r3, #7
 8006fc8:	4904      	ldr	r1, [pc, #16]	@ (8006fdc <HAL_RCC_GetPCLK1Freq+0x28>)
 8006fca:	5ccb      	ldrb	r3, [r1, r3]
 8006fcc:	f003 031f 	and.w	r3, r3, #31
 8006fd0:	fa22 f303 	lsr.w	r3, r2, r3
 8006fd4:	4618      	mov	r0, r3
 8006fd6:	bd80      	pop	{r7, pc}
 8006fd8:	40021000 	.word	0x40021000
 8006fdc:	0800c9c4 	.word	0x0800c9c4

08006fe0 <HAL_RCC_GetPCLK2Freq>:
 8006fe0:	b580      	push	{r7, lr}
 8006fe2:	af00      	add	r7, sp, #0
 8006fe4:	f7ff ffda 	bl	8006f9c <HAL_RCC_GetHCLKFreq>
 8006fe8:	4602      	mov	r2, r0
 8006fea:	4b06      	ldr	r3, [pc, #24]	@ (8007004 <HAL_RCC_GetPCLK2Freq+0x24>)
 8006fec:	689b      	ldr	r3, [r3, #8]
 8006fee:	0adb      	lsrs	r3, r3, #11
 8006ff0:	f003 0307 	and.w	r3, r3, #7
 8006ff4:	4904      	ldr	r1, [pc, #16]	@ (8007008 <HAL_RCC_GetPCLK2Freq+0x28>)
 8006ff6:	5ccb      	ldrb	r3, [r1, r3]
 8006ff8:	f003 031f 	and.w	r3, r3, #31
 8006ffc:	fa22 f303 	lsr.w	r3, r2, r3
 8007000:	4618      	mov	r0, r3
 8007002:	bd80      	pop	{r7, pc}
 8007004:	40021000 	.word	0x40021000
 8007008:	0800c9c4 	.word	0x0800c9c4

0800700c <HAL_RCC_GetClockConfig>:
 800700c:	b480      	push	{r7}
 800700e:	b083      	sub	sp, #12
 8007010:	af00      	add	r7, sp, #0
 8007012:	6078      	str	r0, [r7, #4]
 8007014:	6039      	str	r1, [r7, #0]
 8007016:	687b      	ldr	r3, [r7, #4]
 8007018:	220f      	movs	r2, #15
 800701a:	601a      	str	r2, [r3, #0]
 800701c:	4b12      	ldr	r3, [pc, #72]	@ (8007068 <HAL_RCC_GetClockConfig+0x5c>)
 800701e:	689b      	ldr	r3, [r3, #8]
 8007020:	f003 0203 	and.w	r2, r3, #3
 8007024:	687b      	ldr	r3, [r7, #4]
 8007026:	605a      	str	r2, [r3, #4]
 8007028:	4b0f      	ldr	r3, [pc, #60]	@ (8007068 <HAL_RCC_GetClockConfig+0x5c>)
 800702a:	689b      	ldr	r3, [r3, #8]
 800702c:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8007030:	687b      	ldr	r3, [r7, #4]
 8007032:	609a      	str	r2, [r3, #8]
 8007034:	4b0c      	ldr	r3, [pc, #48]	@ (8007068 <HAL_RCC_GetClockConfig+0x5c>)
 8007036:	689b      	ldr	r3, [r3, #8]
 8007038:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800703c:	687b      	ldr	r3, [r7, #4]
 800703e:	60da      	str	r2, [r3, #12]
 8007040:	4b09      	ldr	r3, [pc, #36]	@ (8007068 <HAL_RCC_GetClockConfig+0x5c>)
 8007042:	689b      	ldr	r3, [r3, #8]
 8007044:	08db      	lsrs	r3, r3, #3
 8007046:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800704a:	687b      	ldr	r3, [r7, #4]
 800704c:	611a      	str	r2, [r3, #16]
 800704e:	4b07      	ldr	r3, [pc, #28]	@ (800706c <HAL_RCC_GetClockConfig+0x60>)
 8007050:	681b      	ldr	r3, [r3, #0]
 8007052:	f003 020f 	and.w	r2, r3, #15
 8007056:	683b      	ldr	r3, [r7, #0]
 8007058:	601a      	str	r2, [r3, #0]
 800705a:	bf00      	nop
 800705c:	370c      	adds	r7, #12
 800705e:	46bd      	mov	sp, r7
 8007060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007064:	4770      	bx	lr
 8007066:	bf00      	nop
 8007068:	40021000 	.word	0x40021000
 800706c:	40022000 	.word	0x40022000

08007070 <RCC_GetSysClockFreqFromPLLSource>:
 8007070:	b480      	push	{r7}
 8007072:	b087      	sub	sp, #28
 8007074:	af00      	add	r7, sp, #0
 8007076:	4b1e      	ldr	r3, [pc, #120]	@ (80070f0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8007078:	68db      	ldr	r3, [r3, #12]
 800707a:	f003 0303 	and.w	r3, r3, #3
 800707e:	613b      	str	r3, [r7, #16]
 8007080:	4b1b      	ldr	r3, [pc, #108]	@ (80070f0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8007082:	68db      	ldr	r3, [r3, #12]
 8007084:	091b      	lsrs	r3, r3, #4
 8007086:	f003 030f 	and.w	r3, r3, #15
 800708a:	3301      	adds	r3, #1
 800708c:	60fb      	str	r3, [r7, #12]
 800708e:	693b      	ldr	r3, [r7, #16]
 8007090:	2b03      	cmp	r3, #3
 8007092:	d10c      	bne.n	80070ae <RCC_GetSysClockFreqFromPLLSource+0x3e>
 8007094:	4a17      	ldr	r2, [pc, #92]	@ (80070f4 <RCC_GetSysClockFreqFromPLLSource+0x84>)
 8007096:	68fb      	ldr	r3, [r7, #12]
 8007098:	fbb2 f3f3 	udiv	r3, r2, r3
 800709c:	4a14      	ldr	r2, [pc, #80]	@ (80070f0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800709e:	68d2      	ldr	r2, [r2, #12]
 80070a0:	0a12      	lsrs	r2, r2, #8
 80070a2:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80070a6:	fb02 f303 	mul.w	r3, r2, r3
 80070aa:	617b      	str	r3, [r7, #20]
 80070ac:	e00c      	b.n	80070c8 <RCC_GetSysClockFreqFromPLLSource+0x58>
 80070ae:	4a12      	ldr	r2, [pc, #72]	@ (80070f8 <RCC_GetSysClockFreqFromPLLSource+0x88>)
 80070b0:	68fb      	ldr	r3, [r7, #12]
 80070b2:	fbb2 f3f3 	udiv	r3, r2, r3
 80070b6:	4a0e      	ldr	r2, [pc, #56]	@ (80070f0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80070b8:	68d2      	ldr	r2, [r2, #12]
 80070ba:	0a12      	lsrs	r2, r2, #8
 80070bc:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80070c0:	fb02 f303 	mul.w	r3, r2, r3
 80070c4:	617b      	str	r3, [r7, #20]
 80070c6:	bf00      	nop
 80070c8:	4b09      	ldr	r3, [pc, #36]	@ (80070f0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80070ca:	68db      	ldr	r3, [r3, #12]
 80070cc:	0e5b      	lsrs	r3, r3, #25
 80070ce:	f003 0303 	and.w	r3, r3, #3
 80070d2:	3301      	adds	r3, #1
 80070d4:	005b      	lsls	r3, r3, #1
 80070d6:	60bb      	str	r3, [r7, #8]
 80070d8:	697a      	ldr	r2, [r7, #20]
 80070da:	68bb      	ldr	r3, [r7, #8]
 80070dc:	fbb2 f3f3 	udiv	r3, r2, r3
 80070e0:	607b      	str	r3, [r7, #4]
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	4618      	mov	r0, r3
 80070e6:	371c      	adds	r7, #28
 80070e8:	46bd      	mov	sp, r7
 80070ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070ee:	4770      	bx	lr
 80070f0:	40021000 	.word	0x40021000
 80070f4:	016e3600 	.word	0x016e3600
 80070f8:	00f42400 	.word	0x00f42400

080070fc <HAL_RCCEx_PeriphCLKConfig>:
 80070fc:	b580      	push	{r7, lr}
 80070fe:	b086      	sub	sp, #24
 8007100:	af00      	add	r7, sp, #0
 8007102:	6078      	str	r0, [r7, #4]
 8007104:	2300      	movs	r3, #0
 8007106:	74fb      	strb	r3, [r7, #19]
 8007108:	2300      	movs	r3, #0
 800710a:	74bb      	strb	r3, [r7, #18]
 800710c:	687b      	ldr	r3, [r7, #4]
 800710e:	681b      	ldr	r3, [r3, #0]
 8007110:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8007114:	2b00      	cmp	r3, #0
 8007116:	f000 8098 	beq.w	800724a <HAL_RCCEx_PeriphCLKConfig+0x14e>
 800711a:	2300      	movs	r3, #0
 800711c:	747b      	strb	r3, [r7, #17]
 800711e:	4b43      	ldr	r3, [pc, #268]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007120:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007122:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007126:	2b00      	cmp	r3, #0
 8007128:	d10d      	bne.n	8007146 <HAL_RCCEx_PeriphCLKConfig+0x4a>
 800712a:	4b40      	ldr	r3, [pc, #256]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800712c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800712e:	4a3f      	ldr	r2, [pc, #252]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007130:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007134:	6593      	str	r3, [r2, #88]	@ 0x58
 8007136:	4b3d      	ldr	r3, [pc, #244]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007138:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800713a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800713e:	60bb      	str	r3, [r7, #8]
 8007140:	68bb      	ldr	r3, [r7, #8]
 8007142:	2301      	movs	r3, #1
 8007144:	747b      	strb	r3, [r7, #17]
 8007146:	4b3a      	ldr	r3, [pc, #232]	@ (8007230 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8007148:	681b      	ldr	r3, [r3, #0]
 800714a:	4a39      	ldr	r2, [pc, #228]	@ (8007230 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 800714c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007150:	6013      	str	r3, [r2, #0]
 8007152:	f7fc fc1b 	bl	800398c <HAL_GetTick>
 8007156:	60f8      	str	r0, [r7, #12]
 8007158:	e009      	b.n	800716e <HAL_RCCEx_PeriphCLKConfig+0x72>
 800715a:	f7fc fc17 	bl	800398c <HAL_GetTick>
 800715e:	4602      	mov	r2, r0
 8007160:	68fb      	ldr	r3, [r7, #12]
 8007162:	1ad3      	subs	r3, r2, r3
 8007164:	2b02      	cmp	r3, #2
 8007166:	d902      	bls.n	800716e <HAL_RCCEx_PeriphCLKConfig+0x72>
 8007168:	2303      	movs	r3, #3
 800716a:	74fb      	strb	r3, [r7, #19]
 800716c:	e005      	b.n	800717a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 800716e:	4b30      	ldr	r3, [pc, #192]	@ (8007230 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8007170:	681b      	ldr	r3, [r3, #0]
 8007172:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007176:	2b00      	cmp	r3, #0
 8007178:	d0ef      	beq.n	800715a <HAL_RCCEx_PeriphCLKConfig+0x5e>
 800717a:	7cfb      	ldrb	r3, [r7, #19]
 800717c:	2b00      	cmp	r3, #0
 800717e:	d159      	bne.n	8007234 <HAL_RCCEx_PeriphCLKConfig+0x138>
 8007180:	4b2a      	ldr	r3, [pc, #168]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007182:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007186:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800718a:	617b      	str	r3, [r7, #20]
 800718c:	697b      	ldr	r3, [r7, #20]
 800718e:	2b00      	cmp	r3, #0
 8007190:	d01e      	beq.n	80071d0 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8007192:	687b      	ldr	r3, [r7, #4]
 8007194:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007196:	697a      	ldr	r2, [r7, #20]
 8007198:	429a      	cmp	r2, r3
 800719a:	d019      	beq.n	80071d0 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 800719c:	4b23      	ldr	r3, [pc, #140]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800719e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80071a2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80071a6:	617b      	str	r3, [r7, #20]
 80071a8:	4b20      	ldr	r3, [pc, #128]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80071aa:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80071ae:	4a1f      	ldr	r2, [pc, #124]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80071b0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80071b4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80071b8:	4b1c      	ldr	r3, [pc, #112]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80071ba:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80071be:	4a1b      	ldr	r2, [pc, #108]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80071c0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80071c4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80071c8:	4a18      	ldr	r2, [pc, #96]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80071ca:	697b      	ldr	r3, [r7, #20]
 80071cc:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80071d0:	697b      	ldr	r3, [r7, #20]
 80071d2:	f003 0301 	and.w	r3, r3, #1
 80071d6:	2b00      	cmp	r3, #0
 80071d8:	d016      	beq.n	8007208 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80071da:	f7fc fbd7 	bl	800398c <HAL_GetTick>
 80071de:	60f8      	str	r0, [r7, #12]
 80071e0:	e00b      	b.n	80071fa <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80071e2:	f7fc fbd3 	bl	800398c <HAL_GetTick>
 80071e6:	4602      	mov	r2, r0
 80071e8:	68fb      	ldr	r3, [r7, #12]
 80071ea:	1ad3      	subs	r3, r2, r3
 80071ec:	f241 3288 	movw	r2, #5000	@ 0x1388
 80071f0:	4293      	cmp	r3, r2
 80071f2:	d902      	bls.n	80071fa <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80071f4:	2303      	movs	r3, #3
 80071f6:	74fb      	strb	r3, [r7, #19]
 80071f8:	e006      	b.n	8007208 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80071fa:	4b0c      	ldr	r3, [pc, #48]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80071fc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007200:	f003 0302 	and.w	r3, r3, #2
 8007204:	2b00      	cmp	r3, #0
 8007206:	d0ec      	beq.n	80071e2 <HAL_RCCEx_PeriphCLKConfig+0xe6>
 8007208:	7cfb      	ldrb	r3, [r7, #19]
 800720a:	2b00      	cmp	r3, #0
 800720c:	d10b      	bne.n	8007226 <HAL_RCCEx_PeriphCLKConfig+0x12a>
 800720e:	4b07      	ldr	r3, [pc, #28]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007210:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007214:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800721c:	4903      	ldr	r1, [pc, #12]	@ (800722c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800721e:	4313      	orrs	r3, r2
 8007220:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8007224:	e008      	b.n	8007238 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8007226:	7cfb      	ldrb	r3, [r7, #19]
 8007228:	74bb      	strb	r3, [r7, #18]
 800722a:	e005      	b.n	8007238 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 800722c:	40021000 	.word	0x40021000
 8007230:	40007000 	.word	0x40007000
 8007234:	7cfb      	ldrb	r3, [r7, #19]
 8007236:	74bb      	strb	r3, [r7, #18]
 8007238:	7c7b      	ldrb	r3, [r7, #17]
 800723a:	2b01      	cmp	r3, #1
 800723c:	d105      	bne.n	800724a <HAL_RCCEx_PeriphCLKConfig+0x14e>
 800723e:	4ba6      	ldr	r3, [pc, #664]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007240:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007242:	4aa5      	ldr	r2, [pc, #660]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007244:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007248:	6593      	str	r3, [r2, #88]	@ 0x58
 800724a:	687b      	ldr	r3, [r7, #4]
 800724c:	681b      	ldr	r3, [r3, #0]
 800724e:	f003 0301 	and.w	r3, r3, #1
 8007252:	2b00      	cmp	r3, #0
 8007254:	d00a      	beq.n	800726c <HAL_RCCEx_PeriphCLKConfig+0x170>
 8007256:	4ba0      	ldr	r3, [pc, #640]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007258:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800725c:	f023 0203 	bic.w	r2, r3, #3
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	685b      	ldr	r3, [r3, #4]
 8007264:	499c      	ldr	r1, [pc, #624]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007266:	4313      	orrs	r3, r2
 8007268:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800726c:	687b      	ldr	r3, [r7, #4]
 800726e:	681b      	ldr	r3, [r3, #0]
 8007270:	f003 0302 	and.w	r3, r3, #2
 8007274:	2b00      	cmp	r3, #0
 8007276:	d00a      	beq.n	800728e <HAL_RCCEx_PeriphCLKConfig+0x192>
 8007278:	4b97      	ldr	r3, [pc, #604]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800727a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800727e:	f023 020c 	bic.w	r2, r3, #12
 8007282:	687b      	ldr	r3, [r7, #4]
 8007284:	689b      	ldr	r3, [r3, #8]
 8007286:	4994      	ldr	r1, [pc, #592]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007288:	4313      	orrs	r3, r2
 800728a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800728e:	687b      	ldr	r3, [r7, #4]
 8007290:	681b      	ldr	r3, [r3, #0]
 8007292:	f003 0304 	and.w	r3, r3, #4
 8007296:	2b00      	cmp	r3, #0
 8007298:	d00a      	beq.n	80072b0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 800729a:	4b8f      	ldr	r3, [pc, #572]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800729c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80072a0:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 80072a4:	687b      	ldr	r3, [r7, #4]
 80072a6:	68db      	ldr	r3, [r3, #12]
 80072a8:	498b      	ldr	r1, [pc, #556]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80072aa:	4313      	orrs	r3, r2
 80072ac:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	681b      	ldr	r3, [r3, #0]
 80072b4:	f003 0308 	and.w	r3, r3, #8
 80072b8:	2b00      	cmp	r3, #0
 80072ba:	d00a      	beq.n	80072d2 <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 80072bc:	4b86      	ldr	r3, [pc, #536]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80072be:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80072c2:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	691b      	ldr	r3, [r3, #16]
 80072ca:	4983      	ldr	r1, [pc, #524]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80072cc:	4313      	orrs	r3, r2
 80072ce:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	681b      	ldr	r3, [r3, #0]
 80072d6:	f003 0320 	and.w	r3, r3, #32
 80072da:	2b00      	cmp	r3, #0
 80072dc:	d00a      	beq.n	80072f4 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 80072de:	4b7e      	ldr	r3, [pc, #504]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80072e0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80072e4:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	695b      	ldr	r3, [r3, #20]
 80072ec:	497a      	ldr	r1, [pc, #488]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80072ee:	4313      	orrs	r3, r2
 80072f0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	681b      	ldr	r3, [r3, #0]
 80072f8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80072fc:	2b00      	cmp	r3, #0
 80072fe:	d00a      	beq.n	8007316 <HAL_RCCEx_PeriphCLKConfig+0x21a>
 8007300:	4b75      	ldr	r3, [pc, #468]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007302:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007306:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	699b      	ldr	r3, [r3, #24]
 800730e:	4972      	ldr	r1, [pc, #456]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007310:	4313      	orrs	r3, r2
 8007312:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007316:	687b      	ldr	r3, [r7, #4]
 8007318:	681b      	ldr	r3, [r3, #0]
 800731a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800731e:	2b00      	cmp	r3, #0
 8007320:	d00a      	beq.n	8007338 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007322:	4b6d      	ldr	r3, [pc, #436]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007324:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007328:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	69db      	ldr	r3, [r3, #28]
 8007330:	4969      	ldr	r1, [pc, #420]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007332:	4313      	orrs	r3, r2
 8007334:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	681b      	ldr	r3, [r3, #0]
 800733c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007340:	2b00      	cmp	r3, #0
 8007342:	d00a      	beq.n	800735a <HAL_RCCEx_PeriphCLKConfig+0x25e>
 8007344:	4b64      	ldr	r3, [pc, #400]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007346:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800734a:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800734e:	687b      	ldr	r3, [r7, #4]
 8007350:	6a1b      	ldr	r3, [r3, #32]
 8007352:	4961      	ldr	r1, [pc, #388]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007354:	4313      	orrs	r3, r2
 8007356:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	681b      	ldr	r3, [r3, #0]
 800735e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8007362:	2b00      	cmp	r3, #0
 8007364:	d00a      	beq.n	800737c <HAL_RCCEx_PeriphCLKConfig+0x280>
 8007366:	4b5c      	ldr	r3, [pc, #368]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007368:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800736c:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8007370:	687b      	ldr	r3, [r7, #4]
 8007372:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007374:	4958      	ldr	r1, [pc, #352]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007376:	4313      	orrs	r3, r2
 8007378:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	681b      	ldr	r3, [r3, #0]
 8007380:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007384:	2b00      	cmp	r3, #0
 8007386:	d015      	beq.n	80073b4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8007388:	4b53      	ldr	r3, [pc, #332]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800738a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800738e:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8007392:	687b      	ldr	r3, [r7, #4]
 8007394:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007396:	4950      	ldr	r1, [pc, #320]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007398:	4313      	orrs	r3, r2
 800739a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800739e:	687b      	ldr	r3, [r7, #4]
 80073a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80073a2:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80073a6:	d105      	bne.n	80073b4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 80073a8:	4b4b      	ldr	r3, [pc, #300]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80073aa:	68db      	ldr	r3, [r3, #12]
 80073ac:	4a4a      	ldr	r2, [pc, #296]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80073ae:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80073b2:	60d3      	str	r3, [r2, #12]
 80073b4:	687b      	ldr	r3, [r7, #4]
 80073b6:	681b      	ldr	r3, [r3, #0]
 80073b8:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80073bc:	2b00      	cmp	r3, #0
 80073be:	d015      	beq.n	80073ec <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 80073c0:	4b45      	ldr	r3, [pc, #276]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80073c2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80073c6:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 80073ca:	687b      	ldr	r3, [r7, #4]
 80073cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80073ce:	4942      	ldr	r1, [pc, #264]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80073d0:	4313      	orrs	r3, r2
 80073d2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80073da:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80073de:	d105      	bne.n	80073ec <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 80073e0:	4b3d      	ldr	r3, [pc, #244]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80073e2:	68db      	ldr	r3, [r3, #12]
 80073e4:	4a3c      	ldr	r2, [pc, #240]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80073e6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80073ea:	60d3      	str	r3, [r2, #12]
 80073ec:	687b      	ldr	r3, [r7, #4]
 80073ee:	681b      	ldr	r3, [r3, #0]
 80073f0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80073f4:	2b00      	cmp	r3, #0
 80073f6:	d015      	beq.n	8007424 <HAL_RCCEx_PeriphCLKConfig+0x328>
 80073f8:	4b37      	ldr	r3, [pc, #220]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80073fa:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80073fe:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8007402:	687b      	ldr	r3, [r7, #4]
 8007404:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007406:	4934      	ldr	r1, [pc, #208]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007408:	4313      	orrs	r3, r2
 800740a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800740e:	687b      	ldr	r3, [r7, #4]
 8007410:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007412:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007416:	d105      	bne.n	8007424 <HAL_RCCEx_PeriphCLKConfig+0x328>
 8007418:	4b2f      	ldr	r3, [pc, #188]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800741a:	68db      	ldr	r3, [r3, #12]
 800741c:	4a2e      	ldr	r2, [pc, #184]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800741e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007422:	60d3      	str	r3, [r2, #12]
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	681b      	ldr	r3, [r3, #0]
 8007428:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800742c:	2b00      	cmp	r3, #0
 800742e:	d015      	beq.n	800745c <HAL_RCCEx_PeriphCLKConfig+0x360>
 8007430:	4b29      	ldr	r3, [pc, #164]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007432:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007436:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 800743a:	687b      	ldr	r3, [r7, #4]
 800743c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800743e:	4926      	ldr	r1, [pc, #152]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007440:	4313      	orrs	r3, r2
 8007442:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007446:	687b      	ldr	r3, [r7, #4]
 8007448:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800744a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800744e:	d105      	bne.n	800745c <HAL_RCCEx_PeriphCLKConfig+0x360>
 8007450:	4b21      	ldr	r3, [pc, #132]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007452:	68db      	ldr	r3, [r3, #12]
 8007454:	4a20      	ldr	r2, [pc, #128]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007456:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800745a:	60d3      	str	r3, [r2, #12]
 800745c:	687b      	ldr	r3, [r7, #4]
 800745e:	681b      	ldr	r3, [r3, #0]
 8007460:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8007464:	2b00      	cmp	r3, #0
 8007466:	d015      	beq.n	8007494 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8007468:	4b1b      	ldr	r3, [pc, #108]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800746a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800746e:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8007472:	687b      	ldr	r3, [r7, #4]
 8007474:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007476:	4918      	ldr	r1, [pc, #96]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007478:	4313      	orrs	r3, r2
 800747a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800747e:	687b      	ldr	r3, [r7, #4]
 8007480:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007482:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007486:	d105      	bne.n	8007494 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8007488:	4b13      	ldr	r3, [pc, #76]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800748a:	68db      	ldr	r3, [r3, #12]
 800748c:	4a12      	ldr	r2, [pc, #72]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800748e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007492:	60d3      	str	r3, [r2, #12]
 8007494:	687b      	ldr	r3, [r7, #4]
 8007496:	681b      	ldr	r3, [r3, #0]
 8007498:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800749c:	2b00      	cmp	r3, #0
 800749e:	d015      	beq.n	80074cc <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 80074a0:	4b0d      	ldr	r3, [pc, #52]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80074a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80074a6:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80074ae:	490a      	ldr	r1, [pc, #40]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80074b0:	4313      	orrs	r3, r2
 80074b2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80074b6:	687b      	ldr	r3, [r7, #4]
 80074b8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80074ba:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80074be:	d105      	bne.n	80074cc <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 80074c0:	4b05      	ldr	r3, [pc, #20]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80074c2:	68db      	ldr	r3, [r3, #12]
 80074c4:	4a04      	ldr	r2, [pc, #16]	@ (80074d8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80074c6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80074ca:	60d3      	str	r3, [r2, #12]
 80074cc:	7cbb      	ldrb	r3, [r7, #18]
 80074ce:	4618      	mov	r0, r3
 80074d0:	3718      	adds	r7, #24
 80074d2:	46bd      	mov	sp, r7
 80074d4:	bd80      	pop	{r7, pc}
 80074d6:	bf00      	nop
 80074d8:	40021000 	.word	0x40021000

080074dc <HAL_TIM_Base_Init>:
 80074dc:	b580      	push	{r7, lr}
 80074de:	b082      	sub	sp, #8
 80074e0:	af00      	add	r7, sp, #0
 80074e2:	6078      	str	r0, [r7, #4]
 80074e4:	687b      	ldr	r3, [r7, #4]
 80074e6:	2b00      	cmp	r3, #0
 80074e8:	d101      	bne.n	80074ee <HAL_TIM_Base_Init+0x12>
 80074ea:	2301      	movs	r3, #1
 80074ec:	e049      	b.n	8007582 <HAL_TIM_Base_Init+0xa6>
 80074ee:	687b      	ldr	r3, [r7, #4]
 80074f0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80074f4:	b2db      	uxtb	r3, r3
 80074f6:	2b00      	cmp	r3, #0
 80074f8:	d106      	bne.n	8007508 <HAL_TIM_Base_Init+0x2c>
 80074fa:	687b      	ldr	r3, [r7, #4]
 80074fc:	2200      	movs	r2, #0
 80074fe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007502:	6878      	ldr	r0, [r7, #4]
 8007504:	f000 f841 	bl	800758a <HAL_TIM_Base_MspInit>
 8007508:	687b      	ldr	r3, [r7, #4]
 800750a:	2202      	movs	r2, #2
 800750c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007510:	687b      	ldr	r3, [r7, #4]
 8007512:	681a      	ldr	r2, [r3, #0]
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	3304      	adds	r3, #4
 8007518:	4619      	mov	r1, r3
 800751a:	4610      	mov	r0, r2
 800751c:	f000 fdf4 	bl	8008108 <TIM_Base_SetConfig>
 8007520:	687b      	ldr	r3, [r7, #4]
 8007522:	2201      	movs	r2, #1
 8007524:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8007528:	687b      	ldr	r3, [r7, #4]
 800752a:	2201      	movs	r2, #1
 800752c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007530:	687b      	ldr	r3, [r7, #4]
 8007532:	2201      	movs	r2, #1
 8007534:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007538:	687b      	ldr	r3, [r7, #4]
 800753a:	2201      	movs	r2, #1
 800753c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007540:	687b      	ldr	r3, [r7, #4]
 8007542:	2201      	movs	r2, #1
 8007544:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007548:	687b      	ldr	r3, [r7, #4]
 800754a:	2201      	movs	r2, #1
 800754c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007550:	687b      	ldr	r3, [r7, #4]
 8007552:	2201      	movs	r2, #1
 8007554:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	2201      	movs	r2, #1
 800755c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	2201      	movs	r2, #1
 8007564:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007568:	687b      	ldr	r3, [r7, #4]
 800756a:	2201      	movs	r2, #1
 800756c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007570:	687b      	ldr	r3, [r7, #4]
 8007572:	2201      	movs	r2, #1
 8007574:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8007578:	687b      	ldr	r3, [r7, #4]
 800757a:	2201      	movs	r2, #1
 800757c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007580:	2300      	movs	r3, #0
 8007582:	4618      	mov	r0, r3
 8007584:	3708      	adds	r7, #8
 8007586:	46bd      	mov	sp, r7
 8007588:	bd80      	pop	{r7, pc}

0800758a <HAL_TIM_Base_MspInit>:
 800758a:	b480      	push	{r7}
 800758c:	b083      	sub	sp, #12
 800758e:	af00      	add	r7, sp, #0
 8007590:	6078      	str	r0, [r7, #4]
 8007592:	bf00      	nop
 8007594:	370c      	adds	r7, #12
 8007596:	46bd      	mov	sp, r7
 8007598:	f85d 7b04 	ldr.w	r7, [sp], #4
 800759c:	4770      	bx	lr
	...

080075a0 <HAL_TIM_Base_Start_IT>:
 80075a0:	b480      	push	{r7}
 80075a2:	b085      	sub	sp, #20
 80075a4:	af00      	add	r7, sp, #0
 80075a6:	6078      	str	r0, [r7, #4]
 80075a8:	687b      	ldr	r3, [r7, #4]
 80075aa:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80075ae:	b2db      	uxtb	r3, r3
 80075b0:	2b01      	cmp	r3, #1
 80075b2:	d001      	beq.n	80075b8 <HAL_TIM_Base_Start_IT+0x18>
 80075b4:	2301      	movs	r3, #1
 80075b6:	e04a      	b.n	800764e <HAL_TIM_Base_Start_IT+0xae>
 80075b8:	687b      	ldr	r3, [r7, #4]
 80075ba:	2202      	movs	r2, #2
 80075bc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80075c0:	687b      	ldr	r3, [r7, #4]
 80075c2:	681b      	ldr	r3, [r3, #0]
 80075c4:	68da      	ldr	r2, [r3, #12]
 80075c6:	687b      	ldr	r3, [r7, #4]
 80075c8:	681b      	ldr	r3, [r3, #0]
 80075ca:	f042 0201 	orr.w	r2, r2, #1
 80075ce:	60da      	str	r2, [r3, #12]
 80075d0:	687b      	ldr	r3, [r7, #4]
 80075d2:	681b      	ldr	r3, [r3, #0]
 80075d4:	4a21      	ldr	r2, [pc, #132]	@ (800765c <HAL_TIM_Base_Start_IT+0xbc>)
 80075d6:	4293      	cmp	r3, r2
 80075d8:	d018      	beq.n	800760c <HAL_TIM_Base_Start_IT+0x6c>
 80075da:	687b      	ldr	r3, [r7, #4]
 80075dc:	681b      	ldr	r3, [r3, #0]
 80075de:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80075e2:	d013      	beq.n	800760c <HAL_TIM_Base_Start_IT+0x6c>
 80075e4:	687b      	ldr	r3, [r7, #4]
 80075e6:	681b      	ldr	r3, [r3, #0]
 80075e8:	4a1d      	ldr	r2, [pc, #116]	@ (8007660 <HAL_TIM_Base_Start_IT+0xc0>)
 80075ea:	4293      	cmp	r3, r2
 80075ec:	d00e      	beq.n	800760c <HAL_TIM_Base_Start_IT+0x6c>
 80075ee:	687b      	ldr	r3, [r7, #4]
 80075f0:	681b      	ldr	r3, [r3, #0]
 80075f2:	4a1c      	ldr	r2, [pc, #112]	@ (8007664 <HAL_TIM_Base_Start_IT+0xc4>)
 80075f4:	4293      	cmp	r3, r2
 80075f6:	d009      	beq.n	800760c <HAL_TIM_Base_Start_IT+0x6c>
 80075f8:	687b      	ldr	r3, [r7, #4]
 80075fa:	681b      	ldr	r3, [r3, #0]
 80075fc:	4a1a      	ldr	r2, [pc, #104]	@ (8007668 <HAL_TIM_Base_Start_IT+0xc8>)
 80075fe:	4293      	cmp	r3, r2
 8007600:	d004      	beq.n	800760c <HAL_TIM_Base_Start_IT+0x6c>
 8007602:	687b      	ldr	r3, [r7, #4]
 8007604:	681b      	ldr	r3, [r3, #0]
 8007606:	4a19      	ldr	r2, [pc, #100]	@ (800766c <HAL_TIM_Base_Start_IT+0xcc>)
 8007608:	4293      	cmp	r3, r2
 800760a:	d115      	bne.n	8007638 <HAL_TIM_Base_Start_IT+0x98>
 800760c:	687b      	ldr	r3, [r7, #4]
 800760e:	681b      	ldr	r3, [r3, #0]
 8007610:	689a      	ldr	r2, [r3, #8]
 8007612:	4b17      	ldr	r3, [pc, #92]	@ (8007670 <HAL_TIM_Base_Start_IT+0xd0>)
 8007614:	4013      	ands	r3, r2
 8007616:	60fb      	str	r3, [r7, #12]
 8007618:	68fb      	ldr	r3, [r7, #12]
 800761a:	2b06      	cmp	r3, #6
 800761c:	d015      	beq.n	800764a <HAL_TIM_Base_Start_IT+0xaa>
 800761e:	68fb      	ldr	r3, [r7, #12]
 8007620:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007624:	d011      	beq.n	800764a <HAL_TIM_Base_Start_IT+0xaa>
 8007626:	687b      	ldr	r3, [r7, #4]
 8007628:	681b      	ldr	r3, [r3, #0]
 800762a:	681a      	ldr	r2, [r3, #0]
 800762c:	687b      	ldr	r3, [r7, #4]
 800762e:	681b      	ldr	r3, [r3, #0]
 8007630:	f042 0201 	orr.w	r2, r2, #1
 8007634:	601a      	str	r2, [r3, #0]
 8007636:	e008      	b.n	800764a <HAL_TIM_Base_Start_IT+0xaa>
 8007638:	687b      	ldr	r3, [r7, #4]
 800763a:	681b      	ldr	r3, [r3, #0]
 800763c:	681a      	ldr	r2, [r3, #0]
 800763e:	687b      	ldr	r3, [r7, #4]
 8007640:	681b      	ldr	r3, [r3, #0]
 8007642:	f042 0201 	orr.w	r2, r2, #1
 8007646:	601a      	str	r2, [r3, #0]
 8007648:	e000      	b.n	800764c <HAL_TIM_Base_Start_IT+0xac>
 800764a:	bf00      	nop
 800764c:	2300      	movs	r3, #0
 800764e:	4618      	mov	r0, r3
 8007650:	3714      	adds	r7, #20
 8007652:	46bd      	mov	sp, r7
 8007654:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007658:	4770      	bx	lr
 800765a:	bf00      	nop
 800765c:	40012c00 	.word	0x40012c00
 8007660:	40000400 	.word	0x40000400
 8007664:	40000800 	.word	0x40000800
 8007668:	40013400 	.word	0x40013400
 800766c:	40014000 	.word	0x40014000
 8007670:	00010007 	.word	0x00010007

08007674 <HAL_TIM_OC_Init>:
 8007674:	b580      	push	{r7, lr}
 8007676:	b082      	sub	sp, #8
 8007678:	af00      	add	r7, sp, #0
 800767a:	6078      	str	r0, [r7, #4]
 800767c:	687b      	ldr	r3, [r7, #4]
 800767e:	2b00      	cmp	r3, #0
 8007680:	d101      	bne.n	8007686 <HAL_TIM_OC_Init+0x12>
 8007682:	2301      	movs	r3, #1
 8007684:	e049      	b.n	800771a <HAL_TIM_OC_Init+0xa6>
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800768c:	b2db      	uxtb	r3, r3
 800768e:	2b00      	cmp	r3, #0
 8007690:	d106      	bne.n	80076a0 <HAL_TIM_OC_Init+0x2c>
 8007692:	687b      	ldr	r3, [r7, #4]
 8007694:	2200      	movs	r2, #0
 8007696:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800769a:	6878      	ldr	r0, [r7, #4]
 800769c:	f7f9 fe1c 	bl	80012d8 <HAL_TIM_OC_MspInit>
 80076a0:	687b      	ldr	r3, [r7, #4]
 80076a2:	2202      	movs	r2, #2
 80076a4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80076a8:	687b      	ldr	r3, [r7, #4]
 80076aa:	681a      	ldr	r2, [r3, #0]
 80076ac:	687b      	ldr	r3, [r7, #4]
 80076ae:	3304      	adds	r3, #4
 80076b0:	4619      	mov	r1, r3
 80076b2:	4610      	mov	r0, r2
 80076b4:	f000 fd28 	bl	8008108 <TIM_Base_SetConfig>
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	2201      	movs	r2, #1
 80076bc:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 80076c0:	687b      	ldr	r3, [r7, #4]
 80076c2:	2201      	movs	r2, #1
 80076c4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	2201      	movs	r2, #1
 80076cc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80076d0:	687b      	ldr	r3, [r7, #4]
 80076d2:	2201      	movs	r2, #1
 80076d4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80076d8:	687b      	ldr	r3, [r7, #4]
 80076da:	2201      	movs	r2, #1
 80076dc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80076e0:	687b      	ldr	r3, [r7, #4]
 80076e2:	2201      	movs	r2, #1
 80076e4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80076e8:	687b      	ldr	r3, [r7, #4]
 80076ea:	2201      	movs	r2, #1
 80076ec:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80076f0:	687b      	ldr	r3, [r7, #4]
 80076f2:	2201      	movs	r2, #1
 80076f4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80076f8:	687b      	ldr	r3, [r7, #4]
 80076fa:	2201      	movs	r2, #1
 80076fc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007700:	687b      	ldr	r3, [r7, #4]
 8007702:	2201      	movs	r2, #1
 8007704:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007708:	687b      	ldr	r3, [r7, #4]
 800770a:	2201      	movs	r2, #1
 800770c:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	2201      	movs	r2, #1
 8007714:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007718:	2300      	movs	r3, #0
 800771a:	4618      	mov	r0, r3
 800771c:	3708      	adds	r7, #8
 800771e:	46bd      	mov	sp, r7
 8007720:	bd80      	pop	{r7, pc}

08007722 <HAL_TIM_PWM_Init>:
 8007722:	b580      	push	{r7, lr}
 8007724:	b082      	sub	sp, #8
 8007726:	af00      	add	r7, sp, #0
 8007728:	6078      	str	r0, [r7, #4]
 800772a:	687b      	ldr	r3, [r7, #4]
 800772c:	2b00      	cmp	r3, #0
 800772e:	d101      	bne.n	8007734 <HAL_TIM_PWM_Init+0x12>
 8007730:	2301      	movs	r3, #1
 8007732:	e049      	b.n	80077c8 <HAL_TIM_PWM_Init+0xa6>
 8007734:	687b      	ldr	r3, [r7, #4]
 8007736:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800773a:	b2db      	uxtb	r3, r3
 800773c:	2b00      	cmp	r3, #0
 800773e:	d106      	bne.n	800774e <HAL_TIM_PWM_Init+0x2c>
 8007740:	687b      	ldr	r3, [r7, #4]
 8007742:	2200      	movs	r2, #0
 8007744:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007748:	6878      	ldr	r0, [r7, #4]
 800774a:	f7f9 fd9f 	bl	800128c <HAL_TIM_PWM_MspInit>
 800774e:	687b      	ldr	r3, [r7, #4]
 8007750:	2202      	movs	r2, #2
 8007752:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007756:	687b      	ldr	r3, [r7, #4]
 8007758:	681a      	ldr	r2, [r3, #0]
 800775a:	687b      	ldr	r3, [r7, #4]
 800775c:	3304      	adds	r3, #4
 800775e:	4619      	mov	r1, r3
 8007760:	4610      	mov	r0, r2
 8007762:	f000 fcd1 	bl	8008108 <TIM_Base_SetConfig>
 8007766:	687b      	ldr	r3, [r7, #4]
 8007768:	2201      	movs	r2, #1
 800776a:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800776e:	687b      	ldr	r3, [r7, #4]
 8007770:	2201      	movs	r2, #1
 8007772:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007776:	687b      	ldr	r3, [r7, #4]
 8007778:	2201      	movs	r2, #1
 800777a:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800777e:	687b      	ldr	r3, [r7, #4]
 8007780:	2201      	movs	r2, #1
 8007782:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007786:	687b      	ldr	r3, [r7, #4]
 8007788:	2201      	movs	r2, #1
 800778a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800778e:	687b      	ldr	r3, [r7, #4]
 8007790:	2201      	movs	r2, #1
 8007792:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	2201      	movs	r2, #1
 800779a:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800779e:	687b      	ldr	r3, [r7, #4]
 80077a0:	2201      	movs	r2, #1
 80077a2:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80077a6:	687b      	ldr	r3, [r7, #4]
 80077a8:	2201      	movs	r2, #1
 80077aa:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	2201      	movs	r2, #1
 80077b2:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80077b6:	687b      	ldr	r3, [r7, #4]
 80077b8:	2201      	movs	r2, #1
 80077ba:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 80077be:	687b      	ldr	r3, [r7, #4]
 80077c0:	2201      	movs	r2, #1
 80077c2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80077c6:	2300      	movs	r3, #0
 80077c8:	4618      	mov	r0, r3
 80077ca:	3708      	adds	r7, #8
 80077cc:	46bd      	mov	sp, r7
 80077ce:	bd80      	pop	{r7, pc}

080077d0 <HAL_TIM_PWM_Start>:
 80077d0:	b580      	push	{r7, lr}
 80077d2:	b084      	sub	sp, #16
 80077d4:	af00      	add	r7, sp, #0
 80077d6:	6078      	str	r0, [r7, #4]
 80077d8:	6039      	str	r1, [r7, #0]
 80077da:	683b      	ldr	r3, [r7, #0]
 80077dc:	2b00      	cmp	r3, #0
 80077de:	d109      	bne.n	80077f4 <HAL_TIM_PWM_Start+0x24>
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80077e6:	b2db      	uxtb	r3, r3
 80077e8:	2b01      	cmp	r3, #1
 80077ea:	bf14      	ite	ne
 80077ec:	2301      	movne	r3, #1
 80077ee:	2300      	moveq	r3, #0
 80077f0:	b2db      	uxtb	r3, r3
 80077f2:	e03c      	b.n	800786e <HAL_TIM_PWM_Start+0x9e>
 80077f4:	683b      	ldr	r3, [r7, #0]
 80077f6:	2b04      	cmp	r3, #4
 80077f8:	d109      	bne.n	800780e <HAL_TIM_PWM_Start+0x3e>
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8007800:	b2db      	uxtb	r3, r3
 8007802:	2b01      	cmp	r3, #1
 8007804:	bf14      	ite	ne
 8007806:	2301      	movne	r3, #1
 8007808:	2300      	moveq	r3, #0
 800780a:	b2db      	uxtb	r3, r3
 800780c:	e02f      	b.n	800786e <HAL_TIM_PWM_Start+0x9e>
 800780e:	683b      	ldr	r3, [r7, #0]
 8007810:	2b08      	cmp	r3, #8
 8007812:	d109      	bne.n	8007828 <HAL_TIM_PWM_Start+0x58>
 8007814:	687b      	ldr	r3, [r7, #4]
 8007816:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800781a:	b2db      	uxtb	r3, r3
 800781c:	2b01      	cmp	r3, #1
 800781e:	bf14      	ite	ne
 8007820:	2301      	movne	r3, #1
 8007822:	2300      	moveq	r3, #0
 8007824:	b2db      	uxtb	r3, r3
 8007826:	e022      	b.n	800786e <HAL_TIM_PWM_Start+0x9e>
 8007828:	683b      	ldr	r3, [r7, #0]
 800782a:	2b0c      	cmp	r3, #12
 800782c:	d109      	bne.n	8007842 <HAL_TIM_PWM_Start+0x72>
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007834:	b2db      	uxtb	r3, r3
 8007836:	2b01      	cmp	r3, #1
 8007838:	bf14      	ite	ne
 800783a:	2301      	movne	r3, #1
 800783c:	2300      	moveq	r3, #0
 800783e:	b2db      	uxtb	r3, r3
 8007840:	e015      	b.n	800786e <HAL_TIM_PWM_Start+0x9e>
 8007842:	683b      	ldr	r3, [r7, #0]
 8007844:	2b10      	cmp	r3, #16
 8007846:	d109      	bne.n	800785c <HAL_TIM_PWM_Start+0x8c>
 8007848:	687b      	ldr	r3, [r7, #4]
 800784a:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800784e:	b2db      	uxtb	r3, r3
 8007850:	2b01      	cmp	r3, #1
 8007852:	bf14      	ite	ne
 8007854:	2301      	movne	r3, #1
 8007856:	2300      	moveq	r3, #0
 8007858:	b2db      	uxtb	r3, r3
 800785a:	e008      	b.n	800786e <HAL_TIM_PWM_Start+0x9e>
 800785c:	687b      	ldr	r3, [r7, #4]
 800785e:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8007862:	b2db      	uxtb	r3, r3
 8007864:	2b01      	cmp	r3, #1
 8007866:	bf14      	ite	ne
 8007868:	2301      	movne	r3, #1
 800786a:	2300      	moveq	r3, #0
 800786c:	b2db      	uxtb	r3, r3
 800786e:	2b00      	cmp	r3, #0
 8007870:	d001      	beq.n	8007876 <HAL_TIM_PWM_Start+0xa6>
 8007872:	2301      	movs	r3, #1
 8007874:	e097      	b.n	80079a6 <HAL_TIM_PWM_Start+0x1d6>
 8007876:	683b      	ldr	r3, [r7, #0]
 8007878:	2b00      	cmp	r3, #0
 800787a:	d104      	bne.n	8007886 <HAL_TIM_PWM_Start+0xb6>
 800787c:	687b      	ldr	r3, [r7, #4]
 800787e:	2202      	movs	r2, #2
 8007880:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007884:	e023      	b.n	80078ce <HAL_TIM_PWM_Start+0xfe>
 8007886:	683b      	ldr	r3, [r7, #0]
 8007888:	2b04      	cmp	r3, #4
 800788a:	d104      	bne.n	8007896 <HAL_TIM_PWM_Start+0xc6>
 800788c:	687b      	ldr	r3, [r7, #4]
 800788e:	2202      	movs	r2, #2
 8007890:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007894:	e01b      	b.n	80078ce <HAL_TIM_PWM_Start+0xfe>
 8007896:	683b      	ldr	r3, [r7, #0]
 8007898:	2b08      	cmp	r3, #8
 800789a:	d104      	bne.n	80078a6 <HAL_TIM_PWM_Start+0xd6>
 800789c:	687b      	ldr	r3, [r7, #4]
 800789e:	2202      	movs	r2, #2
 80078a0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80078a4:	e013      	b.n	80078ce <HAL_TIM_PWM_Start+0xfe>
 80078a6:	683b      	ldr	r3, [r7, #0]
 80078a8:	2b0c      	cmp	r3, #12
 80078aa:	d104      	bne.n	80078b6 <HAL_TIM_PWM_Start+0xe6>
 80078ac:	687b      	ldr	r3, [r7, #4]
 80078ae:	2202      	movs	r2, #2
 80078b0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80078b4:	e00b      	b.n	80078ce <HAL_TIM_PWM_Start+0xfe>
 80078b6:	683b      	ldr	r3, [r7, #0]
 80078b8:	2b10      	cmp	r3, #16
 80078ba:	d104      	bne.n	80078c6 <HAL_TIM_PWM_Start+0xf6>
 80078bc:	687b      	ldr	r3, [r7, #4]
 80078be:	2202      	movs	r2, #2
 80078c0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80078c4:	e003      	b.n	80078ce <HAL_TIM_PWM_Start+0xfe>
 80078c6:	687b      	ldr	r3, [r7, #4]
 80078c8:	2202      	movs	r2, #2
 80078ca:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	681b      	ldr	r3, [r3, #0]
 80078d2:	2201      	movs	r2, #1
 80078d4:	6839      	ldr	r1, [r7, #0]
 80078d6:	4618      	mov	r0, r3
 80078d8:	f000 ffa8 	bl	800882c <TIM_CCxChannelCmd>
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	4a33      	ldr	r2, [pc, #204]	@ (80079b0 <HAL_TIM_PWM_Start+0x1e0>)
 80078e2:	4293      	cmp	r3, r2
 80078e4:	d013      	beq.n	800790e <HAL_TIM_PWM_Start+0x13e>
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	681b      	ldr	r3, [r3, #0]
 80078ea:	4a32      	ldr	r2, [pc, #200]	@ (80079b4 <HAL_TIM_PWM_Start+0x1e4>)
 80078ec:	4293      	cmp	r3, r2
 80078ee:	d00e      	beq.n	800790e <HAL_TIM_PWM_Start+0x13e>
 80078f0:	687b      	ldr	r3, [r7, #4]
 80078f2:	681b      	ldr	r3, [r3, #0]
 80078f4:	4a30      	ldr	r2, [pc, #192]	@ (80079b8 <HAL_TIM_PWM_Start+0x1e8>)
 80078f6:	4293      	cmp	r3, r2
 80078f8:	d009      	beq.n	800790e <HAL_TIM_PWM_Start+0x13e>
 80078fa:	687b      	ldr	r3, [r7, #4]
 80078fc:	681b      	ldr	r3, [r3, #0]
 80078fe:	4a2f      	ldr	r2, [pc, #188]	@ (80079bc <HAL_TIM_PWM_Start+0x1ec>)
 8007900:	4293      	cmp	r3, r2
 8007902:	d004      	beq.n	800790e <HAL_TIM_PWM_Start+0x13e>
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	681b      	ldr	r3, [r3, #0]
 8007908:	4a2d      	ldr	r2, [pc, #180]	@ (80079c0 <HAL_TIM_PWM_Start+0x1f0>)
 800790a:	4293      	cmp	r3, r2
 800790c:	d101      	bne.n	8007912 <HAL_TIM_PWM_Start+0x142>
 800790e:	2301      	movs	r3, #1
 8007910:	e000      	b.n	8007914 <HAL_TIM_PWM_Start+0x144>
 8007912:	2300      	movs	r3, #0
 8007914:	2b00      	cmp	r3, #0
 8007916:	d007      	beq.n	8007928 <HAL_TIM_PWM_Start+0x158>
 8007918:	687b      	ldr	r3, [r7, #4]
 800791a:	681b      	ldr	r3, [r3, #0]
 800791c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	681b      	ldr	r3, [r3, #0]
 8007922:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007926:	645a      	str	r2, [r3, #68]	@ 0x44
 8007928:	687b      	ldr	r3, [r7, #4]
 800792a:	681b      	ldr	r3, [r3, #0]
 800792c:	4a20      	ldr	r2, [pc, #128]	@ (80079b0 <HAL_TIM_PWM_Start+0x1e0>)
 800792e:	4293      	cmp	r3, r2
 8007930:	d018      	beq.n	8007964 <HAL_TIM_PWM_Start+0x194>
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	681b      	ldr	r3, [r3, #0]
 8007936:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800793a:	d013      	beq.n	8007964 <HAL_TIM_PWM_Start+0x194>
 800793c:	687b      	ldr	r3, [r7, #4]
 800793e:	681b      	ldr	r3, [r3, #0]
 8007940:	4a20      	ldr	r2, [pc, #128]	@ (80079c4 <HAL_TIM_PWM_Start+0x1f4>)
 8007942:	4293      	cmp	r3, r2
 8007944:	d00e      	beq.n	8007964 <HAL_TIM_PWM_Start+0x194>
 8007946:	687b      	ldr	r3, [r7, #4]
 8007948:	681b      	ldr	r3, [r3, #0]
 800794a:	4a1f      	ldr	r2, [pc, #124]	@ (80079c8 <HAL_TIM_PWM_Start+0x1f8>)
 800794c:	4293      	cmp	r3, r2
 800794e:	d009      	beq.n	8007964 <HAL_TIM_PWM_Start+0x194>
 8007950:	687b      	ldr	r3, [r7, #4]
 8007952:	681b      	ldr	r3, [r3, #0]
 8007954:	4a17      	ldr	r2, [pc, #92]	@ (80079b4 <HAL_TIM_PWM_Start+0x1e4>)
 8007956:	4293      	cmp	r3, r2
 8007958:	d004      	beq.n	8007964 <HAL_TIM_PWM_Start+0x194>
 800795a:	687b      	ldr	r3, [r7, #4]
 800795c:	681b      	ldr	r3, [r3, #0]
 800795e:	4a16      	ldr	r2, [pc, #88]	@ (80079b8 <HAL_TIM_PWM_Start+0x1e8>)
 8007960:	4293      	cmp	r3, r2
 8007962:	d115      	bne.n	8007990 <HAL_TIM_PWM_Start+0x1c0>
 8007964:	687b      	ldr	r3, [r7, #4]
 8007966:	681b      	ldr	r3, [r3, #0]
 8007968:	689a      	ldr	r2, [r3, #8]
 800796a:	4b18      	ldr	r3, [pc, #96]	@ (80079cc <HAL_TIM_PWM_Start+0x1fc>)
 800796c:	4013      	ands	r3, r2
 800796e:	60fb      	str	r3, [r7, #12]
 8007970:	68fb      	ldr	r3, [r7, #12]
 8007972:	2b06      	cmp	r3, #6
 8007974:	d015      	beq.n	80079a2 <HAL_TIM_PWM_Start+0x1d2>
 8007976:	68fb      	ldr	r3, [r7, #12]
 8007978:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800797c:	d011      	beq.n	80079a2 <HAL_TIM_PWM_Start+0x1d2>
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	681b      	ldr	r3, [r3, #0]
 8007982:	681a      	ldr	r2, [r3, #0]
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	681b      	ldr	r3, [r3, #0]
 8007988:	f042 0201 	orr.w	r2, r2, #1
 800798c:	601a      	str	r2, [r3, #0]
 800798e:	e008      	b.n	80079a2 <HAL_TIM_PWM_Start+0x1d2>
 8007990:	687b      	ldr	r3, [r7, #4]
 8007992:	681b      	ldr	r3, [r3, #0]
 8007994:	681a      	ldr	r2, [r3, #0]
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	681b      	ldr	r3, [r3, #0]
 800799a:	f042 0201 	orr.w	r2, r2, #1
 800799e:	601a      	str	r2, [r3, #0]
 80079a0:	e000      	b.n	80079a4 <HAL_TIM_PWM_Start+0x1d4>
 80079a2:	bf00      	nop
 80079a4:	2300      	movs	r3, #0
 80079a6:	4618      	mov	r0, r3
 80079a8:	3710      	adds	r7, #16
 80079aa:	46bd      	mov	sp, r7
 80079ac:	bd80      	pop	{r7, pc}
 80079ae:	bf00      	nop
 80079b0:	40012c00 	.word	0x40012c00
 80079b4:	40013400 	.word	0x40013400
 80079b8:	40014000 	.word	0x40014000
 80079bc:	40014400 	.word	0x40014400
 80079c0:	40014800 	.word	0x40014800
 80079c4:	40000400 	.word	0x40000400
 80079c8:	40000800 	.word	0x40000800
 80079cc:	00010007 	.word	0x00010007

080079d0 <HAL_TIM_PWM_Stop>:
 80079d0:	b580      	push	{r7, lr}
 80079d2:	b082      	sub	sp, #8
 80079d4:	af00      	add	r7, sp, #0
 80079d6:	6078      	str	r0, [r7, #4]
 80079d8:	6039      	str	r1, [r7, #0]
 80079da:	687b      	ldr	r3, [r7, #4]
 80079dc:	681b      	ldr	r3, [r3, #0]
 80079de:	2200      	movs	r2, #0
 80079e0:	6839      	ldr	r1, [r7, #0]
 80079e2:	4618      	mov	r0, r3
 80079e4:	f000 ff22 	bl	800882c <TIM_CCxChannelCmd>
 80079e8:	687b      	ldr	r3, [r7, #4]
 80079ea:	681b      	ldr	r3, [r3, #0]
 80079ec:	4a3e      	ldr	r2, [pc, #248]	@ (8007ae8 <HAL_TIM_PWM_Stop+0x118>)
 80079ee:	4293      	cmp	r3, r2
 80079f0:	d013      	beq.n	8007a1a <HAL_TIM_PWM_Stop+0x4a>
 80079f2:	687b      	ldr	r3, [r7, #4]
 80079f4:	681b      	ldr	r3, [r3, #0]
 80079f6:	4a3d      	ldr	r2, [pc, #244]	@ (8007aec <HAL_TIM_PWM_Stop+0x11c>)
 80079f8:	4293      	cmp	r3, r2
 80079fa:	d00e      	beq.n	8007a1a <HAL_TIM_PWM_Stop+0x4a>
 80079fc:	687b      	ldr	r3, [r7, #4]
 80079fe:	681b      	ldr	r3, [r3, #0]
 8007a00:	4a3b      	ldr	r2, [pc, #236]	@ (8007af0 <HAL_TIM_PWM_Stop+0x120>)
 8007a02:	4293      	cmp	r3, r2
 8007a04:	d009      	beq.n	8007a1a <HAL_TIM_PWM_Stop+0x4a>
 8007a06:	687b      	ldr	r3, [r7, #4]
 8007a08:	681b      	ldr	r3, [r3, #0]
 8007a0a:	4a3a      	ldr	r2, [pc, #232]	@ (8007af4 <HAL_TIM_PWM_Stop+0x124>)
 8007a0c:	4293      	cmp	r3, r2
 8007a0e:	d004      	beq.n	8007a1a <HAL_TIM_PWM_Stop+0x4a>
 8007a10:	687b      	ldr	r3, [r7, #4]
 8007a12:	681b      	ldr	r3, [r3, #0]
 8007a14:	4a38      	ldr	r2, [pc, #224]	@ (8007af8 <HAL_TIM_PWM_Stop+0x128>)
 8007a16:	4293      	cmp	r3, r2
 8007a18:	d101      	bne.n	8007a1e <HAL_TIM_PWM_Stop+0x4e>
 8007a1a:	2301      	movs	r3, #1
 8007a1c:	e000      	b.n	8007a20 <HAL_TIM_PWM_Stop+0x50>
 8007a1e:	2300      	movs	r3, #0
 8007a20:	2b00      	cmp	r3, #0
 8007a22:	d017      	beq.n	8007a54 <HAL_TIM_PWM_Stop+0x84>
 8007a24:	687b      	ldr	r3, [r7, #4]
 8007a26:	681b      	ldr	r3, [r3, #0]
 8007a28:	6a1a      	ldr	r2, [r3, #32]
 8007a2a:	f241 1311 	movw	r3, #4369	@ 0x1111
 8007a2e:	4013      	ands	r3, r2
 8007a30:	2b00      	cmp	r3, #0
 8007a32:	d10f      	bne.n	8007a54 <HAL_TIM_PWM_Stop+0x84>
 8007a34:	687b      	ldr	r3, [r7, #4]
 8007a36:	681b      	ldr	r3, [r3, #0]
 8007a38:	6a1a      	ldr	r2, [r3, #32]
 8007a3a:	f244 4344 	movw	r3, #17476	@ 0x4444
 8007a3e:	4013      	ands	r3, r2
 8007a40:	2b00      	cmp	r3, #0
 8007a42:	d107      	bne.n	8007a54 <HAL_TIM_PWM_Stop+0x84>
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	681b      	ldr	r3, [r3, #0]
 8007a48:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8007a4a:	687b      	ldr	r3, [r7, #4]
 8007a4c:	681b      	ldr	r3, [r3, #0]
 8007a4e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8007a52:	645a      	str	r2, [r3, #68]	@ 0x44
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	681b      	ldr	r3, [r3, #0]
 8007a58:	6a1a      	ldr	r2, [r3, #32]
 8007a5a:	f241 1311 	movw	r3, #4369	@ 0x1111
 8007a5e:	4013      	ands	r3, r2
 8007a60:	2b00      	cmp	r3, #0
 8007a62:	d10f      	bne.n	8007a84 <HAL_TIM_PWM_Stop+0xb4>
 8007a64:	687b      	ldr	r3, [r7, #4]
 8007a66:	681b      	ldr	r3, [r3, #0]
 8007a68:	6a1a      	ldr	r2, [r3, #32]
 8007a6a:	f244 4344 	movw	r3, #17476	@ 0x4444
 8007a6e:	4013      	ands	r3, r2
 8007a70:	2b00      	cmp	r3, #0
 8007a72:	d107      	bne.n	8007a84 <HAL_TIM_PWM_Stop+0xb4>
 8007a74:	687b      	ldr	r3, [r7, #4]
 8007a76:	681b      	ldr	r3, [r3, #0]
 8007a78:	681a      	ldr	r2, [r3, #0]
 8007a7a:	687b      	ldr	r3, [r7, #4]
 8007a7c:	681b      	ldr	r3, [r3, #0]
 8007a7e:	f022 0201 	bic.w	r2, r2, #1
 8007a82:	601a      	str	r2, [r3, #0]
 8007a84:	683b      	ldr	r3, [r7, #0]
 8007a86:	2b00      	cmp	r3, #0
 8007a88:	d104      	bne.n	8007a94 <HAL_TIM_PWM_Stop+0xc4>
 8007a8a:	687b      	ldr	r3, [r7, #4]
 8007a8c:	2201      	movs	r2, #1
 8007a8e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007a92:	e023      	b.n	8007adc <HAL_TIM_PWM_Stop+0x10c>
 8007a94:	683b      	ldr	r3, [r7, #0]
 8007a96:	2b04      	cmp	r3, #4
 8007a98:	d104      	bne.n	8007aa4 <HAL_TIM_PWM_Stop+0xd4>
 8007a9a:	687b      	ldr	r3, [r7, #4]
 8007a9c:	2201      	movs	r2, #1
 8007a9e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007aa2:	e01b      	b.n	8007adc <HAL_TIM_PWM_Stop+0x10c>
 8007aa4:	683b      	ldr	r3, [r7, #0]
 8007aa6:	2b08      	cmp	r3, #8
 8007aa8:	d104      	bne.n	8007ab4 <HAL_TIM_PWM_Stop+0xe4>
 8007aaa:	687b      	ldr	r3, [r7, #4]
 8007aac:	2201      	movs	r2, #1
 8007aae:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007ab2:	e013      	b.n	8007adc <HAL_TIM_PWM_Stop+0x10c>
 8007ab4:	683b      	ldr	r3, [r7, #0]
 8007ab6:	2b0c      	cmp	r3, #12
 8007ab8:	d104      	bne.n	8007ac4 <HAL_TIM_PWM_Stop+0xf4>
 8007aba:	687b      	ldr	r3, [r7, #4]
 8007abc:	2201      	movs	r2, #1
 8007abe:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007ac2:	e00b      	b.n	8007adc <HAL_TIM_PWM_Stop+0x10c>
 8007ac4:	683b      	ldr	r3, [r7, #0]
 8007ac6:	2b10      	cmp	r3, #16
 8007ac8:	d104      	bne.n	8007ad4 <HAL_TIM_PWM_Stop+0x104>
 8007aca:	687b      	ldr	r3, [r7, #4]
 8007acc:	2201      	movs	r2, #1
 8007ace:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007ad2:	e003      	b.n	8007adc <HAL_TIM_PWM_Stop+0x10c>
 8007ad4:	687b      	ldr	r3, [r7, #4]
 8007ad6:	2201      	movs	r2, #1
 8007ad8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007adc:	2300      	movs	r3, #0
 8007ade:	4618      	mov	r0, r3
 8007ae0:	3708      	adds	r7, #8
 8007ae2:	46bd      	mov	sp, r7
 8007ae4:	bd80      	pop	{r7, pc}
 8007ae6:	bf00      	nop
 8007ae8:	40012c00 	.word	0x40012c00
 8007aec:	40013400 	.word	0x40013400
 8007af0:	40014000 	.word	0x40014000
 8007af4:	40014400 	.word	0x40014400
 8007af8:	40014800 	.word	0x40014800

08007afc <HAL_TIM_IRQHandler>:
 8007afc:	b580      	push	{r7, lr}
 8007afe:	b084      	sub	sp, #16
 8007b00:	af00      	add	r7, sp, #0
 8007b02:	6078      	str	r0, [r7, #4]
 8007b04:	687b      	ldr	r3, [r7, #4]
 8007b06:	681b      	ldr	r3, [r3, #0]
 8007b08:	68db      	ldr	r3, [r3, #12]
 8007b0a:	60fb      	str	r3, [r7, #12]
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	681b      	ldr	r3, [r3, #0]
 8007b10:	691b      	ldr	r3, [r3, #16]
 8007b12:	60bb      	str	r3, [r7, #8]
 8007b14:	68bb      	ldr	r3, [r7, #8]
 8007b16:	f003 0302 	and.w	r3, r3, #2
 8007b1a:	2b00      	cmp	r3, #0
 8007b1c:	d020      	beq.n	8007b60 <HAL_TIM_IRQHandler+0x64>
 8007b1e:	68fb      	ldr	r3, [r7, #12]
 8007b20:	f003 0302 	and.w	r3, r3, #2
 8007b24:	2b00      	cmp	r3, #0
 8007b26:	d01b      	beq.n	8007b60 <HAL_TIM_IRQHandler+0x64>
 8007b28:	687b      	ldr	r3, [r7, #4]
 8007b2a:	681b      	ldr	r3, [r3, #0]
 8007b2c:	f06f 0202 	mvn.w	r2, #2
 8007b30:	611a      	str	r2, [r3, #16]
 8007b32:	687b      	ldr	r3, [r7, #4]
 8007b34:	2201      	movs	r2, #1
 8007b36:	771a      	strb	r2, [r3, #28]
 8007b38:	687b      	ldr	r3, [r7, #4]
 8007b3a:	681b      	ldr	r3, [r3, #0]
 8007b3c:	699b      	ldr	r3, [r3, #24]
 8007b3e:	f003 0303 	and.w	r3, r3, #3
 8007b42:	2b00      	cmp	r3, #0
 8007b44:	d003      	beq.n	8007b4e <HAL_TIM_IRQHandler+0x52>
 8007b46:	6878      	ldr	r0, [r7, #4]
 8007b48:	f000 fac0 	bl	80080cc <HAL_TIM_IC_CaptureCallback>
 8007b4c:	e005      	b.n	8007b5a <HAL_TIM_IRQHandler+0x5e>
 8007b4e:	6878      	ldr	r0, [r7, #4]
 8007b50:	f000 fab2 	bl	80080b8 <HAL_TIM_OC_DelayElapsedCallback>
 8007b54:	6878      	ldr	r0, [r7, #4]
 8007b56:	f000 fac3 	bl	80080e0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007b5a:	687b      	ldr	r3, [r7, #4]
 8007b5c:	2200      	movs	r2, #0
 8007b5e:	771a      	strb	r2, [r3, #28]
 8007b60:	68bb      	ldr	r3, [r7, #8]
 8007b62:	f003 0304 	and.w	r3, r3, #4
 8007b66:	2b00      	cmp	r3, #0
 8007b68:	d020      	beq.n	8007bac <HAL_TIM_IRQHandler+0xb0>
 8007b6a:	68fb      	ldr	r3, [r7, #12]
 8007b6c:	f003 0304 	and.w	r3, r3, #4
 8007b70:	2b00      	cmp	r3, #0
 8007b72:	d01b      	beq.n	8007bac <HAL_TIM_IRQHandler+0xb0>
 8007b74:	687b      	ldr	r3, [r7, #4]
 8007b76:	681b      	ldr	r3, [r3, #0]
 8007b78:	f06f 0204 	mvn.w	r2, #4
 8007b7c:	611a      	str	r2, [r3, #16]
 8007b7e:	687b      	ldr	r3, [r7, #4]
 8007b80:	2202      	movs	r2, #2
 8007b82:	771a      	strb	r2, [r3, #28]
 8007b84:	687b      	ldr	r3, [r7, #4]
 8007b86:	681b      	ldr	r3, [r3, #0]
 8007b88:	699b      	ldr	r3, [r3, #24]
 8007b8a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007b8e:	2b00      	cmp	r3, #0
 8007b90:	d003      	beq.n	8007b9a <HAL_TIM_IRQHandler+0x9e>
 8007b92:	6878      	ldr	r0, [r7, #4]
 8007b94:	f000 fa9a 	bl	80080cc <HAL_TIM_IC_CaptureCallback>
 8007b98:	e005      	b.n	8007ba6 <HAL_TIM_IRQHandler+0xaa>
 8007b9a:	6878      	ldr	r0, [r7, #4]
 8007b9c:	f000 fa8c 	bl	80080b8 <HAL_TIM_OC_DelayElapsedCallback>
 8007ba0:	6878      	ldr	r0, [r7, #4]
 8007ba2:	f000 fa9d 	bl	80080e0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007ba6:	687b      	ldr	r3, [r7, #4]
 8007ba8:	2200      	movs	r2, #0
 8007baa:	771a      	strb	r2, [r3, #28]
 8007bac:	68bb      	ldr	r3, [r7, #8]
 8007bae:	f003 0308 	and.w	r3, r3, #8
 8007bb2:	2b00      	cmp	r3, #0
 8007bb4:	d020      	beq.n	8007bf8 <HAL_TIM_IRQHandler+0xfc>
 8007bb6:	68fb      	ldr	r3, [r7, #12]
 8007bb8:	f003 0308 	and.w	r3, r3, #8
 8007bbc:	2b00      	cmp	r3, #0
 8007bbe:	d01b      	beq.n	8007bf8 <HAL_TIM_IRQHandler+0xfc>
 8007bc0:	687b      	ldr	r3, [r7, #4]
 8007bc2:	681b      	ldr	r3, [r3, #0]
 8007bc4:	f06f 0208 	mvn.w	r2, #8
 8007bc8:	611a      	str	r2, [r3, #16]
 8007bca:	687b      	ldr	r3, [r7, #4]
 8007bcc:	2204      	movs	r2, #4
 8007bce:	771a      	strb	r2, [r3, #28]
 8007bd0:	687b      	ldr	r3, [r7, #4]
 8007bd2:	681b      	ldr	r3, [r3, #0]
 8007bd4:	69db      	ldr	r3, [r3, #28]
 8007bd6:	f003 0303 	and.w	r3, r3, #3
 8007bda:	2b00      	cmp	r3, #0
 8007bdc:	d003      	beq.n	8007be6 <HAL_TIM_IRQHandler+0xea>
 8007bde:	6878      	ldr	r0, [r7, #4]
 8007be0:	f000 fa74 	bl	80080cc <HAL_TIM_IC_CaptureCallback>
 8007be4:	e005      	b.n	8007bf2 <HAL_TIM_IRQHandler+0xf6>
 8007be6:	6878      	ldr	r0, [r7, #4]
 8007be8:	f000 fa66 	bl	80080b8 <HAL_TIM_OC_DelayElapsedCallback>
 8007bec:	6878      	ldr	r0, [r7, #4]
 8007bee:	f000 fa77 	bl	80080e0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007bf2:	687b      	ldr	r3, [r7, #4]
 8007bf4:	2200      	movs	r2, #0
 8007bf6:	771a      	strb	r2, [r3, #28]
 8007bf8:	68bb      	ldr	r3, [r7, #8]
 8007bfa:	f003 0310 	and.w	r3, r3, #16
 8007bfe:	2b00      	cmp	r3, #0
 8007c00:	d020      	beq.n	8007c44 <HAL_TIM_IRQHandler+0x148>
 8007c02:	68fb      	ldr	r3, [r7, #12]
 8007c04:	f003 0310 	and.w	r3, r3, #16
 8007c08:	2b00      	cmp	r3, #0
 8007c0a:	d01b      	beq.n	8007c44 <HAL_TIM_IRQHandler+0x148>
 8007c0c:	687b      	ldr	r3, [r7, #4]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	f06f 0210 	mvn.w	r2, #16
 8007c14:	611a      	str	r2, [r3, #16]
 8007c16:	687b      	ldr	r3, [r7, #4]
 8007c18:	2208      	movs	r2, #8
 8007c1a:	771a      	strb	r2, [r3, #28]
 8007c1c:	687b      	ldr	r3, [r7, #4]
 8007c1e:	681b      	ldr	r3, [r3, #0]
 8007c20:	69db      	ldr	r3, [r3, #28]
 8007c22:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007c26:	2b00      	cmp	r3, #0
 8007c28:	d003      	beq.n	8007c32 <HAL_TIM_IRQHandler+0x136>
 8007c2a:	6878      	ldr	r0, [r7, #4]
 8007c2c:	f000 fa4e 	bl	80080cc <HAL_TIM_IC_CaptureCallback>
 8007c30:	e005      	b.n	8007c3e <HAL_TIM_IRQHandler+0x142>
 8007c32:	6878      	ldr	r0, [r7, #4]
 8007c34:	f000 fa40 	bl	80080b8 <HAL_TIM_OC_DelayElapsedCallback>
 8007c38:	6878      	ldr	r0, [r7, #4]
 8007c3a:	f000 fa51 	bl	80080e0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007c3e:	687b      	ldr	r3, [r7, #4]
 8007c40:	2200      	movs	r2, #0
 8007c42:	771a      	strb	r2, [r3, #28]
 8007c44:	68bb      	ldr	r3, [r7, #8]
 8007c46:	f003 0301 	and.w	r3, r3, #1
 8007c4a:	2b00      	cmp	r3, #0
 8007c4c:	d00c      	beq.n	8007c68 <HAL_TIM_IRQHandler+0x16c>
 8007c4e:	68fb      	ldr	r3, [r7, #12]
 8007c50:	f003 0301 	and.w	r3, r3, #1
 8007c54:	2b00      	cmp	r3, #0
 8007c56:	d007      	beq.n	8007c68 <HAL_TIM_IRQHandler+0x16c>
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	681b      	ldr	r3, [r3, #0]
 8007c5c:	f06f 0201 	mvn.w	r2, #1
 8007c60:	611a      	str	r2, [r3, #16]
 8007c62:	6878      	ldr	r0, [r7, #4]
 8007c64:	f7f9 f87a 	bl	8000d5c <HAL_TIM_PeriodElapsedCallback>
 8007c68:	68bb      	ldr	r3, [r7, #8]
 8007c6a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007c6e:	2b00      	cmp	r3, #0
 8007c70:	d104      	bne.n	8007c7c <HAL_TIM_IRQHandler+0x180>
 8007c72:	68bb      	ldr	r3, [r7, #8]
 8007c74:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8007c78:	2b00      	cmp	r3, #0
 8007c7a:	d00c      	beq.n	8007c96 <HAL_TIM_IRQHandler+0x19a>
 8007c7c:	68fb      	ldr	r3, [r7, #12]
 8007c7e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007c82:	2b00      	cmp	r3, #0
 8007c84:	d007      	beq.n	8007c96 <HAL_TIM_IRQHandler+0x19a>
 8007c86:	687b      	ldr	r3, [r7, #4]
 8007c88:	681b      	ldr	r3, [r3, #0]
 8007c8a:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8007c8e:	611a      	str	r2, [r3, #16]
 8007c90:	6878      	ldr	r0, [r7, #4]
 8007c92:	f001 f82e 	bl	8008cf2 <HAL_TIMEx_BreakCallback>
 8007c96:	68bb      	ldr	r3, [r7, #8]
 8007c98:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007c9c:	2b00      	cmp	r3, #0
 8007c9e:	d00c      	beq.n	8007cba <HAL_TIM_IRQHandler+0x1be>
 8007ca0:	68fb      	ldr	r3, [r7, #12]
 8007ca2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007ca6:	2b00      	cmp	r3, #0
 8007ca8:	d007      	beq.n	8007cba <HAL_TIM_IRQHandler+0x1be>
 8007caa:	687b      	ldr	r3, [r7, #4]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8007cb2:	611a      	str	r2, [r3, #16]
 8007cb4:	6878      	ldr	r0, [r7, #4]
 8007cb6:	f001 f826 	bl	8008d06 <HAL_TIMEx_Break2Callback>
 8007cba:	68bb      	ldr	r3, [r7, #8]
 8007cbc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007cc0:	2b00      	cmp	r3, #0
 8007cc2:	d00c      	beq.n	8007cde <HAL_TIM_IRQHandler+0x1e2>
 8007cc4:	68fb      	ldr	r3, [r7, #12]
 8007cc6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007cca:	2b00      	cmp	r3, #0
 8007ccc:	d007      	beq.n	8007cde <HAL_TIM_IRQHandler+0x1e2>
 8007cce:	687b      	ldr	r3, [r7, #4]
 8007cd0:	681b      	ldr	r3, [r3, #0]
 8007cd2:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007cd6:	611a      	str	r2, [r3, #16]
 8007cd8:	6878      	ldr	r0, [r7, #4]
 8007cda:	f000 fa0b 	bl	80080f4 <HAL_TIM_TriggerCallback>
 8007cde:	68bb      	ldr	r3, [r7, #8]
 8007ce0:	f003 0320 	and.w	r3, r3, #32
 8007ce4:	2b00      	cmp	r3, #0
 8007ce6:	d00c      	beq.n	8007d02 <HAL_TIM_IRQHandler+0x206>
 8007ce8:	68fb      	ldr	r3, [r7, #12]
 8007cea:	f003 0320 	and.w	r3, r3, #32
 8007cee:	2b00      	cmp	r3, #0
 8007cf0:	d007      	beq.n	8007d02 <HAL_TIM_IRQHandler+0x206>
 8007cf2:	687b      	ldr	r3, [r7, #4]
 8007cf4:	681b      	ldr	r3, [r3, #0]
 8007cf6:	f06f 0220 	mvn.w	r2, #32
 8007cfa:	611a      	str	r2, [r3, #16]
 8007cfc:	6878      	ldr	r0, [r7, #4]
 8007cfe:	f000 ffee 	bl	8008cde <HAL_TIMEx_CommutCallback>
 8007d02:	68bb      	ldr	r3, [r7, #8]
 8007d04:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8007d08:	2b00      	cmp	r3, #0
 8007d0a:	d00c      	beq.n	8007d26 <HAL_TIM_IRQHandler+0x22a>
 8007d0c:	68fb      	ldr	r3, [r7, #12]
 8007d0e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8007d12:	2b00      	cmp	r3, #0
 8007d14:	d007      	beq.n	8007d26 <HAL_TIM_IRQHandler+0x22a>
 8007d16:	687b      	ldr	r3, [r7, #4]
 8007d18:	681b      	ldr	r3, [r3, #0]
 8007d1a:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8007d1e:	611a      	str	r2, [r3, #16]
 8007d20:	6878      	ldr	r0, [r7, #4]
 8007d22:	f000 fffa 	bl	8008d1a <HAL_TIMEx_EncoderIndexCallback>
 8007d26:	68bb      	ldr	r3, [r7, #8]
 8007d28:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8007d2c:	2b00      	cmp	r3, #0
 8007d2e:	d00c      	beq.n	8007d4a <HAL_TIM_IRQHandler+0x24e>
 8007d30:	68fb      	ldr	r3, [r7, #12]
 8007d32:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8007d36:	2b00      	cmp	r3, #0
 8007d38:	d007      	beq.n	8007d4a <HAL_TIM_IRQHandler+0x24e>
 8007d3a:	687b      	ldr	r3, [r7, #4]
 8007d3c:	681b      	ldr	r3, [r3, #0]
 8007d3e:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8007d42:	611a      	str	r2, [r3, #16]
 8007d44:	6878      	ldr	r0, [r7, #4]
 8007d46:	f000 fff2 	bl	8008d2e <HAL_TIMEx_DirectionChangeCallback>
 8007d4a:	68bb      	ldr	r3, [r7, #8]
 8007d4c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d00c      	beq.n	8007d6e <HAL_TIM_IRQHandler+0x272>
 8007d54:	68fb      	ldr	r3, [r7, #12]
 8007d56:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8007d5a:	2b00      	cmp	r3, #0
 8007d5c:	d007      	beq.n	8007d6e <HAL_TIM_IRQHandler+0x272>
 8007d5e:	687b      	ldr	r3, [r7, #4]
 8007d60:	681b      	ldr	r3, [r3, #0]
 8007d62:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8007d66:	611a      	str	r2, [r3, #16]
 8007d68:	6878      	ldr	r0, [r7, #4]
 8007d6a:	f000 ffea 	bl	8008d42 <HAL_TIMEx_IndexErrorCallback>
 8007d6e:	68bb      	ldr	r3, [r7, #8]
 8007d70:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007d74:	2b00      	cmp	r3, #0
 8007d76:	d00c      	beq.n	8007d92 <HAL_TIM_IRQHandler+0x296>
 8007d78:	68fb      	ldr	r3, [r7, #12]
 8007d7a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007d7e:	2b00      	cmp	r3, #0
 8007d80:	d007      	beq.n	8007d92 <HAL_TIM_IRQHandler+0x296>
 8007d82:	687b      	ldr	r3, [r7, #4]
 8007d84:	681b      	ldr	r3, [r3, #0]
 8007d86:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 8007d8a:	611a      	str	r2, [r3, #16]
 8007d8c:	6878      	ldr	r0, [r7, #4]
 8007d8e:	f000 ffe2 	bl	8008d56 <HAL_TIMEx_TransitionErrorCallback>
 8007d92:	bf00      	nop
 8007d94:	3710      	adds	r7, #16
 8007d96:	46bd      	mov	sp, r7
 8007d98:	bd80      	pop	{r7, pc}
	...

08007d9c <HAL_TIM_OC_ConfigChannel>:
 8007d9c:	b580      	push	{r7, lr}
 8007d9e:	b086      	sub	sp, #24
 8007da0:	af00      	add	r7, sp, #0
 8007da2:	60f8      	str	r0, [r7, #12]
 8007da4:	60b9      	str	r1, [r7, #8]
 8007da6:	607a      	str	r2, [r7, #4]
 8007da8:	2300      	movs	r3, #0
 8007daa:	75fb      	strb	r3, [r7, #23]
 8007dac:	68fb      	ldr	r3, [r7, #12]
 8007dae:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007db2:	2b01      	cmp	r3, #1
 8007db4:	d101      	bne.n	8007dba <HAL_TIM_OC_ConfigChannel+0x1e>
 8007db6:	2302      	movs	r3, #2
 8007db8:	e066      	b.n	8007e88 <HAL_TIM_OC_ConfigChannel+0xec>
 8007dba:	68fb      	ldr	r3, [r7, #12]
 8007dbc:	2201      	movs	r2, #1
 8007dbe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007dc2:	687b      	ldr	r3, [r7, #4]
 8007dc4:	2b14      	cmp	r3, #20
 8007dc6:	d857      	bhi.n	8007e78 <HAL_TIM_OC_ConfigChannel+0xdc>
 8007dc8:	a201      	add	r2, pc, #4	@ (adr r2, 8007dd0 <HAL_TIM_OC_ConfigChannel+0x34>)
 8007dca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007dce:	bf00      	nop
 8007dd0:	08007e25 	.word	0x08007e25
 8007dd4:	08007e79 	.word	0x08007e79
 8007dd8:	08007e79 	.word	0x08007e79
 8007ddc:	08007e79 	.word	0x08007e79
 8007de0:	08007e33 	.word	0x08007e33
 8007de4:	08007e79 	.word	0x08007e79
 8007de8:	08007e79 	.word	0x08007e79
 8007dec:	08007e79 	.word	0x08007e79
 8007df0:	08007e41 	.word	0x08007e41
 8007df4:	08007e79 	.word	0x08007e79
 8007df8:	08007e79 	.word	0x08007e79
 8007dfc:	08007e79 	.word	0x08007e79
 8007e00:	08007e4f 	.word	0x08007e4f
 8007e04:	08007e79 	.word	0x08007e79
 8007e08:	08007e79 	.word	0x08007e79
 8007e0c:	08007e79 	.word	0x08007e79
 8007e10:	08007e5d 	.word	0x08007e5d
 8007e14:	08007e79 	.word	0x08007e79
 8007e18:	08007e79 	.word	0x08007e79
 8007e1c:	08007e79 	.word	0x08007e79
 8007e20:	08007e6b 	.word	0x08007e6b
 8007e24:	68fb      	ldr	r3, [r7, #12]
 8007e26:	681b      	ldr	r3, [r3, #0]
 8007e28:	68b9      	ldr	r1, [r7, #8]
 8007e2a:	4618      	mov	r0, r3
 8007e2c:	f000 fa08 	bl	8008240 <TIM_OC1_SetConfig>
 8007e30:	e025      	b.n	8007e7e <HAL_TIM_OC_ConfigChannel+0xe2>
 8007e32:	68fb      	ldr	r3, [r7, #12]
 8007e34:	681b      	ldr	r3, [r3, #0]
 8007e36:	68b9      	ldr	r1, [r7, #8]
 8007e38:	4618      	mov	r0, r3
 8007e3a:	f000 fa91 	bl	8008360 <TIM_OC2_SetConfig>
 8007e3e:	e01e      	b.n	8007e7e <HAL_TIM_OC_ConfigChannel+0xe2>
 8007e40:	68fb      	ldr	r3, [r7, #12]
 8007e42:	681b      	ldr	r3, [r3, #0]
 8007e44:	68b9      	ldr	r1, [r7, #8]
 8007e46:	4618      	mov	r0, r3
 8007e48:	f000 fb14 	bl	8008474 <TIM_OC3_SetConfig>
 8007e4c:	e017      	b.n	8007e7e <HAL_TIM_OC_ConfigChannel+0xe2>
 8007e4e:	68fb      	ldr	r3, [r7, #12]
 8007e50:	681b      	ldr	r3, [r3, #0]
 8007e52:	68b9      	ldr	r1, [r7, #8]
 8007e54:	4618      	mov	r0, r3
 8007e56:	f000 fb95 	bl	8008584 <TIM_OC4_SetConfig>
 8007e5a:	e010      	b.n	8007e7e <HAL_TIM_OC_ConfigChannel+0xe2>
 8007e5c:	68fb      	ldr	r3, [r7, #12]
 8007e5e:	681b      	ldr	r3, [r3, #0]
 8007e60:	68b9      	ldr	r1, [r7, #8]
 8007e62:	4618      	mov	r0, r3
 8007e64:	f000 fc18 	bl	8008698 <TIM_OC5_SetConfig>
 8007e68:	e009      	b.n	8007e7e <HAL_TIM_OC_ConfigChannel+0xe2>
 8007e6a:	68fb      	ldr	r3, [r7, #12]
 8007e6c:	681b      	ldr	r3, [r3, #0]
 8007e6e:	68b9      	ldr	r1, [r7, #8]
 8007e70:	4618      	mov	r0, r3
 8007e72:	f000 fc75 	bl	8008760 <TIM_OC6_SetConfig>
 8007e76:	e002      	b.n	8007e7e <HAL_TIM_OC_ConfigChannel+0xe2>
 8007e78:	2301      	movs	r3, #1
 8007e7a:	75fb      	strb	r3, [r7, #23]
 8007e7c:	bf00      	nop
 8007e7e:	68fb      	ldr	r3, [r7, #12]
 8007e80:	2200      	movs	r2, #0
 8007e82:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007e86:	7dfb      	ldrb	r3, [r7, #23]
 8007e88:	4618      	mov	r0, r3
 8007e8a:	3718      	adds	r7, #24
 8007e8c:	46bd      	mov	sp, r7
 8007e8e:	bd80      	pop	{r7, pc}

08007e90 <HAL_TIM_PWM_ConfigChannel>:
 8007e90:	b580      	push	{r7, lr}
 8007e92:	b086      	sub	sp, #24
 8007e94:	af00      	add	r7, sp, #0
 8007e96:	60f8      	str	r0, [r7, #12]
 8007e98:	60b9      	str	r1, [r7, #8]
 8007e9a:	607a      	str	r2, [r7, #4]
 8007e9c:	2300      	movs	r3, #0
 8007e9e:	75fb      	strb	r3, [r7, #23]
 8007ea0:	68fb      	ldr	r3, [r7, #12]
 8007ea2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007ea6:	2b01      	cmp	r3, #1
 8007ea8:	d101      	bne.n	8007eae <HAL_TIM_PWM_ConfigChannel+0x1e>
 8007eaa:	2302      	movs	r3, #2
 8007eac:	e0ff      	b.n	80080ae <HAL_TIM_PWM_ConfigChannel+0x21e>
 8007eae:	68fb      	ldr	r3, [r7, #12]
 8007eb0:	2201      	movs	r2, #1
 8007eb2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	2b14      	cmp	r3, #20
 8007eba:	f200 80f0 	bhi.w	800809e <HAL_TIM_PWM_ConfigChannel+0x20e>
 8007ebe:	a201      	add	r2, pc, #4	@ (adr r2, 8007ec4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8007ec0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007ec4:	08007f19 	.word	0x08007f19
 8007ec8:	0800809f 	.word	0x0800809f
 8007ecc:	0800809f 	.word	0x0800809f
 8007ed0:	0800809f 	.word	0x0800809f
 8007ed4:	08007f59 	.word	0x08007f59
 8007ed8:	0800809f 	.word	0x0800809f
 8007edc:	0800809f 	.word	0x0800809f
 8007ee0:	0800809f 	.word	0x0800809f
 8007ee4:	08007f9b 	.word	0x08007f9b
 8007ee8:	0800809f 	.word	0x0800809f
 8007eec:	0800809f 	.word	0x0800809f
 8007ef0:	0800809f 	.word	0x0800809f
 8007ef4:	08007fdb 	.word	0x08007fdb
 8007ef8:	0800809f 	.word	0x0800809f
 8007efc:	0800809f 	.word	0x0800809f
 8007f00:	0800809f 	.word	0x0800809f
 8007f04:	0800801d 	.word	0x0800801d
 8007f08:	0800809f 	.word	0x0800809f
 8007f0c:	0800809f 	.word	0x0800809f
 8007f10:	0800809f 	.word	0x0800809f
 8007f14:	0800805d 	.word	0x0800805d
 8007f18:	68fb      	ldr	r3, [r7, #12]
 8007f1a:	681b      	ldr	r3, [r3, #0]
 8007f1c:	68b9      	ldr	r1, [r7, #8]
 8007f1e:	4618      	mov	r0, r3
 8007f20:	f000 f98e 	bl	8008240 <TIM_OC1_SetConfig>
 8007f24:	68fb      	ldr	r3, [r7, #12]
 8007f26:	681b      	ldr	r3, [r3, #0]
 8007f28:	699a      	ldr	r2, [r3, #24]
 8007f2a:	68fb      	ldr	r3, [r7, #12]
 8007f2c:	681b      	ldr	r3, [r3, #0]
 8007f2e:	f042 0208 	orr.w	r2, r2, #8
 8007f32:	619a      	str	r2, [r3, #24]
 8007f34:	68fb      	ldr	r3, [r7, #12]
 8007f36:	681b      	ldr	r3, [r3, #0]
 8007f38:	699a      	ldr	r2, [r3, #24]
 8007f3a:	68fb      	ldr	r3, [r7, #12]
 8007f3c:	681b      	ldr	r3, [r3, #0]
 8007f3e:	f022 0204 	bic.w	r2, r2, #4
 8007f42:	619a      	str	r2, [r3, #24]
 8007f44:	68fb      	ldr	r3, [r7, #12]
 8007f46:	681b      	ldr	r3, [r3, #0]
 8007f48:	6999      	ldr	r1, [r3, #24]
 8007f4a:	68bb      	ldr	r3, [r7, #8]
 8007f4c:	691a      	ldr	r2, [r3, #16]
 8007f4e:	68fb      	ldr	r3, [r7, #12]
 8007f50:	681b      	ldr	r3, [r3, #0]
 8007f52:	430a      	orrs	r2, r1
 8007f54:	619a      	str	r2, [r3, #24]
 8007f56:	e0a5      	b.n	80080a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007f58:	68fb      	ldr	r3, [r7, #12]
 8007f5a:	681b      	ldr	r3, [r3, #0]
 8007f5c:	68b9      	ldr	r1, [r7, #8]
 8007f5e:	4618      	mov	r0, r3
 8007f60:	f000 f9fe 	bl	8008360 <TIM_OC2_SetConfig>
 8007f64:	68fb      	ldr	r3, [r7, #12]
 8007f66:	681b      	ldr	r3, [r3, #0]
 8007f68:	699a      	ldr	r2, [r3, #24]
 8007f6a:	68fb      	ldr	r3, [r7, #12]
 8007f6c:	681b      	ldr	r3, [r3, #0]
 8007f6e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8007f72:	619a      	str	r2, [r3, #24]
 8007f74:	68fb      	ldr	r3, [r7, #12]
 8007f76:	681b      	ldr	r3, [r3, #0]
 8007f78:	699a      	ldr	r2, [r3, #24]
 8007f7a:	68fb      	ldr	r3, [r7, #12]
 8007f7c:	681b      	ldr	r3, [r3, #0]
 8007f7e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8007f82:	619a      	str	r2, [r3, #24]
 8007f84:	68fb      	ldr	r3, [r7, #12]
 8007f86:	681b      	ldr	r3, [r3, #0]
 8007f88:	6999      	ldr	r1, [r3, #24]
 8007f8a:	68bb      	ldr	r3, [r7, #8]
 8007f8c:	691b      	ldr	r3, [r3, #16]
 8007f8e:	021a      	lsls	r2, r3, #8
 8007f90:	68fb      	ldr	r3, [r7, #12]
 8007f92:	681b      	ldr	r3, [r3, #0]
 8007f94:	430a      	orrs	r2, r1
 8007f96:	619a      	str	r2, [r3, #24]
 8007f98:	e084      	b.n	80080a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007f9a:	68fb      	ldr	r3, [r7, #12]
 8007f9c:	681b      	ldr	r3, [r3, #0]
 8007f9e:	68b9      	ldr	r1, [r7, #8]
 8007fa0:	4618      	mov	r0, r3
 8007fa2:	f000 fa67 	bl	8008474 <TIM_OC3_SetConfig>
 8007fa6:	68fb      	ldr	r3, [r7, #12]
 8007fa8:	681b      	ldr	r3, [r3, #0]
 8007faa:	69da      	ldr	r2, [r3, #28]
 8007fac:	68fb      	ldr	r3, [r7, #12]
 8007fae:	681b      	ldr	r3, [r3, #0]
 8007fb0:	f042 0208 	orr.w	r2, r2, #8
 8007fb4:	61da      	str	r2, [r3, #28]
 8007fb6:	68fb      	ldr	r3, [r7, #12]
 8007fb8:	681b      	ldr	r3, [r3, #0]
 8007fba:	69da      	ldr	r2, [r3, #28]
 8007fbc:	68fb      	ldr	r3, [r7, #12]
 8007fbe:	681b      	ldr	r3, [r3, #0]
 8007fc0:	f022 0204 	bic.w	r2, r2, #4
 8007fc4:	61da      	str	r2, [r3, #28]
 8007fc6:	68fb      	ldr	r3, [r7, #12]
 8007fc8:	681b      	ldr	r3, [r3, #0]
 8007fca:	69d9      	ldr	r1, [r3, #28]
 8007fcc:	68bb      	ldr	r3, [r7, #8]
 8007fce:	691a      	ldr	r2, [r3, #16]
 8007fd0:	68fb      	ldr	r3, [r7, #12]
 8007fd2:	681b      	ldr	r3, [r3, #0]
 8007fd4:	430a      	orrs	r2, r1
 8007fd6:	61da      	str	r2, [r3, #28]
 8007fd8:	e064      	b.n	80080a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007fda:	68fb      	ldr	r3, [r7, #12]
 8007fdc:	681b      	ldr	r3, [r3, #0]
 8007fde:	68b9      	ldr	r1, [r7, #8]
 8007fe0:	4618      	mov	r0, r3
 8007fe2:	f000 facf 	bl	8008584 <TIM_OC4_SetConfig>
 8007fe6:	68fb      	ldr	r3, [r7, #12]
 8007fe8:	681b      	ldr	r3, [r3, #0]
 8007fea:	69da      	ldr	r2, [r3, #28]
 8007fec:	68fb      	ldr	r3, [r7, #12]
 8007fee:	681b      	ldr	r3, [r3, #0]
 8007ff0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8007ff4:	61da      	str	r2, [r3, #28]
 8007ff6:	68fb      	ldr	r3, [r7, #12]
 8007ff8:	681b      	ldr	r3, [r3, #0]
 8007ffa:	69da      	ldr	r2, [r3, #28]
 8007ffc:	68fb      	ldr	r3, [r7, #12]
 8007ffe:	681b      	ldr	r3, [r3, #0]
 8008000:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008004:	61da      	str	r2, [r3, #28]
 8008006:	68fb      	ldr	r3, [r7, #12]
 8008008:	681b      	ldr	r3, [r3, #0]
 800800a:	69d9      	ldr	r1, [r3, #28]
 800800c:	68bb      	ldr	r3, [r7, #8]
 800800e:	691b      	ldr	r3, [r3, #16]
 8008010:	021a      	lsls	r2, r3, #8
 8008012:	68fb      	ldr	r3, [r7, #12]
 8008014:	681b      	ldr	r3, [r3, #0]
 8008016:	430a      	orrs	r2, r1
 8008018:	61da      	str	r2, [r3, #28]
 800801a:	e043      	b.n	80080a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 800801c:	68fb      	ldr	r3, [r7, #12]
 800801e:	681b      	ldr	r3, [r3, #0]
 8008020:	68b9      	ldr	r1, [r7, #8]
 8008022:	4618      	mov	r0, r3
 8008024:	f000 fb38 	bl	8008698 <TIM_OC5_SetConfig>
 8008028:	68fb      	ldr	r3, [r7, #12]
 800802a:	681b      	ldr	r3, [r3, #0]
 800802c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800802e:	68fb      	ldr	r3, [r7, #12]
 8008030:	681b      	ldr	r3, [r3, #0]
 8008032:	f042 0208 	orr.w	r2, r2, #8
 8008036:	651a      	str	r2, [r3, #80]	@ 0x50
 8008038:	68fb      	ldr	r3, [r7, #12]
 800803a:	681b      	ldr	r3, [r3, #0]
 800803c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800803e:	68fb      	ldr	r3, [r7, #12]
 8008040:	681b      	ldr	r3, [r3, #0]
 8008042:	f022 0204 	bic.w	r2, r2, #4
 8008046:	651a      	str	r2, [r3, #80]	@ 0x50
 8008048:	68fb      	ldr	r3, [r7, #12]
 800804a:	681b      	ldr	r3, [r3, #0]
 800804c:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 800804e:	68bb      	ldr	r3, [r7, #8]
 8008050:	691a      	ldr	r2, [r3, #16]
 8008052:	68fb      	ldr	r3, [r7, #12]
 8008054:	681b      	ldr	r3, [r3, #0]
 8008056:	430a      	orrs	r2, r1
 8008058:	651a      	str	r2, [r3, #80]	@ 0x50
 800805a:	e023      	b.n	80080a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 800805c:	68fb      	ldr	r3, [r7, #12]
 800805e:	681b      	ldr	r3, [r3, #0]
 8008060:	68b9      	ldr	r1, [r7, #8]
 8008062:	4618      	mov	r0, r3
 8008064:	f000 fb7c 	bl	8008760 <TIM_OC6_SetConfig>
 8008068:	68fb      	ldr	r3, [r7, #12]
 800806a:	681b      	ldr	r3, [r3, #0]
 800806c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800806e:	68fb      	ldr	r3, [r7, #12]
 8008070:	681b      	ldr	r3, [r3, #0]
 8008072:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008076:	651a      	str	r2, [r3, #80]	@ 0x50
 8008078:	68fb      	ldr	r3, [r7, #12]
 800807a:	681b      	ldr	r3, [r3, #0]
 800807c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800807e:	68fb      	ldr	r3, [r7, #12]
 8008080:	681b      	ldr	r3, [r3, #0]
 8008082:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008086:	651a      	str	r2, [r3, #80]	@ 0x50
 8008088:	68fb      	ldr	r3, [r7, #12]
 800808a:	681b      	ldr	r3, [r3, #0]
 800808c:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 800808e:	68bb      	ldr	r3, [r7, #8]
 8008090:	691b      	ldr	r3, [r3, #16]
 8008092:	021a      	lsls	r2, r3, #8
 8008094:	68fb      	ldr	r3, [r7, #12]
 8008096:	681b      	ldr	r3, [r3, #0]
 8008098:	430a      	orrs	r2, r1
 800809a:	651a      	str	r2, [r3, #80]	@ 0x50
 800809c:	e002      	b.n	80080a4 <HAL_TIM_PWM_ConfigChannel+0x214>
 800809e:	2301      	movs	r3, #1
 80080a0:	75fb      	strb	r3, [r7, #23]
 80080a2:	bf00      	nop
 80080a4:	68fb      	ldr	r3, [r7, #12]
 80080a6:	2200      	movs	r2, #0
 80080a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80080ac:	7dfb      	ldrb	r3, [r7, #23]
 80080ae:	4618      	mov	r0, r3
 80080b0:	3718      	adds	r7, #24
 80080b2:	46bd      	mov	sp, r7
 80080b4:	bd80      	pop	{r7, pc}
 80080b6:	bf00      	nop

080080b8 <HAL_TIM_OC_DelayElapsedCallback>:
 80080b8:	b480      	push	{r7}
 80080ba:	b083      	sub	sp, #12
 80080bc:	af00      	add	r7, sp, #0
 80080be:	6078      	str	r0, [r7, #4]
 80080c0:	bf00      	nop
 80080c2:	370c      	adds	r7, #12
 80080c4:	46bd      	mov	sp, r7
 80080c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080ca:	4770      	bx	lr

080080cc <HAL_TIM_IC_CaptureCallback>:
 80080cc:	b480      	push	{r7}
 80080ce:	b083      	sub	sp, #12
 80080d0:	af00      	add	r7, sp, #0
 80080d2:	6078      	str	r0, [r7, #4]
 80080d4:	bf00      	nop
 80080d6:	370c      	adds	r7, #12
 80080d8:	46bd      	mov	sp, r7
 80080da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080de:	4770      	bx	lr

080080e0 <HAL_TIM_PWM_PulseFinishedCallback>:
 80080e0:	b480      	push	{r7}
 80080e2:	b083      	sub	sp, #12
 80080e4:	af00      	add	r7, sp, #0
 80080e6:	6078      	str	r0, [r7, #4]
 80080e8:	bf00      	nop
 80080ea:	370c      	adds	r7, #12
 80080ec:	46bd      	mov	sp, r7
 80080ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080f2:	4770      	bx	lr

080080f4 <HAL_TIM_TriggerCallback>:
 80080f4:	b480      	push	{r7}
 80080f6:	b083      	sub	sp, #12
 80080f8:	af00      	add	r7, sp, #0
 80080fa:	6078      	str	r0, [r7, #4]
 80080fc:	bf00      	nop
 80080fe:	370c      	adds	r7, #12
 8008100:	46bd      	mov	sp, r7
 8008102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008106:	4770      	bx	lr

08008108 <TIM_Base_SetConfig>:
 8008108:	b480      	push	{r7}
 800810a:	b085      	sub	sp, #20
 800810c:	af00      	add	r7, sp, #0
 800810e:	6078      	str	r0, [r7, #4]
 8008110:	6039      	str	r1, [r7, #0]
 8008112:	687b      	ldr	r3, [r7, #4]
 8008114:	681b      	ldr	r3, [r3, #0]
 8008116:	60fb      	str	r3, [r7, #12]
 8008118:	687b      	ldr	r3, [r7, #4]
 800811a:	4a42      	ldr	r2, [pc, #264]	@ (8008224 <TIM_Base_SetConfig+0x11c>)
 800811c:	4293      	cmp	r3, r2
 800811e:	d00f      	beq.n	8008140 <TIM_Base_SetConfig+0x38>
 8008120:	687b      	ldr	r3, [r7, #4]
 8008122:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008126:	d00b      	beq.n	8008140 <TIM_Base_SetConfig+0x38>
 8008128:	687b      	ldr	r3, [r7, #4]
 800812a:	4a3f      	ldr	r2, [pc, #252]	@ (8008228 <TIM_Base_SetConfig+0x120>)
 800812c:	4293      	cmp	r3, r2
 800812e:	d007      	beq.n	8008140 <TIM_Base_SetConfig+0x38>
 8008130:	687b      	ldr	r3, [r7, #4]
 8008132:	4a3e      	ldr	r2, [pc, #248]	@ (800822c <TIM_Base_SetConfig+0x124>)
 8008134:	4293      	cmp	r3, r2
 8008136:	d003      	beq.n	8008140 <TIM_Base_SetConfig+0x38>
 8008138:	687b      	ldr	r3, [r7, #4]
 800813a:	4a3d      	ldr	r2, [pc, #244]	@ (8008230 <TIM_Base_SetConfig+0x128>)
 800813c:	4293      	cmp	r3, r2
 800813e:	d108      	bne.n	8008152 <TIM_Base_SetConfig+0x4a>
 8008140:	68fb      	ldr	r3, [r7, #12]
 8008142:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008146:	60fb      	str	r3, [r7, #12]
 8008148:	683b      	ldr	r3, [r7, #0]
 800814a:	685b      	ldr	r3, [r3, #4]
 800814c:	68fa      	ldr	r2, [r7, #12]
 800814e:	4313      	orrs	r3, r2
 8008150:	60fb      	str	r3, [r7, #12]
 8008152:	687b      	ldr	r3, [r7, #4]
 8008154:	4a33      	ldr	r2, [pc, #204]	@ (8008224 <TIM_Base_SetConfig+0x11c>)
 8008156:	4293      	cmp	r3, r2
 8008158:	d01b      	beq.n	8008192 <TIM_Base_SetConfig+0x8a>
 800815a:	687b      	ldr	r3, [r7, #4]
 800815c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008160:	d017      	beq.n	8008192 <TIM_Base_SetConfig+0x8a>
 8008162:	687b      	ldr	r3, [r7, #4]
 8008164:	4a30      	ldr	r2, [pc, #192]	@ (8008228 <TIM_Base_SetConfig+0x120>)
 8008166:	4293      	cmp	r3, r2
 8008168:	d013      	beq.n	8008192 <TIM_Base_SetConfig+0x8a>
 800816a:	687b      	ldr	r3, [r7, #4]
 800816c:	4a2f      	ldr	r2, [pc, #188]	@ (800822c <TIM_Base_SetConfig+0x124>)
 800816e:	4293      	cmp	r3, r2
 8008170:	d00f      	beq.n	8008192 <TIM_Base_SetConfig+0x8a>
 8008172:	687b      	ldr	r3, [r7, #4]
 8008174:	4a2e      	ldr	r2, [pc, #184]	@ (8008230 <TIM_Base_SetConfig+0x128>)
 8008176:	4293      	cmp	r3, r2
 8008178:	d00b      	beq.n	8008192 <TIM_Base_SetConfig+0x8a>
 800817a:	687b      	ldr	r3, [r7, #4]
 800817c:	4a2d      	ldr	r2, [pc, #180]	@ (8008234 <TIM_Base_SetConfig+0x12c>)
 800817e:	4293      	cmp	r3, r2
 8008180:	d007      	beq.n	8008192 <TIM_Base_SetConfig+0x8a>
 8008182:	687b      	ldr	r3, [r7, #4]
 8008184:	4a2c      	ldr	r2, [pc, #176]	@ (8008238 <TIM_Base_SetConfig+0x130>)
 8008186:	4293      	cmp	r3, r2
 8008188:	d003      	beq.n	8008192 <TIM_Base_SetConfig+0x8a>
 800818a:	687b      	ldr	r3, [r7, #4]
 800818c:	4a2b      	ldr	r2, [pc, #172]	@ (800823c <TIM_Base_SetConfig+0x134>)
 800818e:	4293      	cmp	r3, r2
 8008190:	d108      	bne.n	80081a4 <TIM_Base_SetConfig+0x9c>
 8008192:	68fb      	ldr	r3, [r7, #12]
 8008194:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8008198:	60fb      	str	r3, [r7, #12]
 800819a:	683b      	ldr	r3, [r7, #0]
 800819c:	68db      	ldr	r3, [r3, #12]
 800819e:	68fa      	ldr	r2, [r7, #12]
 80081a0:	4313      	orrs	r3, r2
 80081a2:	60fb      	str	r3, [r7, #12]
 80081a4:	68fb      	ldr	r3, [r7, #12]
 80081a6:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80081aa:	683b      	ldr	r3, [r7, #0]
 80081ac:	695b      	ldr	r3, [r3, #20]
 80081ae:	4313      	orrs	r3, r2
 80081b0:	60fb      	str	r3, [r7, #12]
 80081b2:	687b      	ldr	r3, [r7, #4]
 80081b4:	68fa      	ldr	r2, [r7, #12]
 80081b6:	601a      	str	r2, [r3, #0]
 80081b8:	683b      	ldr	r3, [r7, #0]
 80081ba:	689a      	ldr	r2, [r3, #8]
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	62da      	str	r2, [r3, #44]	@ 0x2c
 80081c0:	683b      	ldr	r3, [r7, #0]
 80081c2:	681a      	ldr	r2, [r3, #0]
 80081c4:	687b      	ldr	r3, [r7, #4]
 80081c6:	629a      	str	r2, [r3, #40]	@ 0x28
 80081c8:	687b      	ldr	r3, [r7, #4]
 80081ca:	4a16      	ldr	r2, [pc, #88]	@ (8008224 <TIM_Base_SetConfig+0x11c>)
 80081cc:	4293      	cmp	r3, r2
 80081ce:	d00f      	beq.n	80081f0 <TIM_Base_SetConfig+0xe8>
 80081d0:	687b      	ldr	r3, [r7, #4]
 80081d2:	4a17      	ldr	r2, [pc, #92]	@ (8008230 <TIM_Base_SetConfig+0x128>)
 80081d4:	4293      	cmp	r3, r2
 80081d6:	d00b      	beq.n	80081f0 <TIM_Base_SetConfig+0xe8>
 80081d8:	687b      	ldr	r3, [r7, #4]
 80081da:	4a16      	ldr	r2, [pc, #88]	@ (8008234 <TIM_Base_SetConfig+0x12c>)
 80081dc:	4293      	cmp	r3, r2
 80081de:	d007      	beq.n	80081f0 <TIM_Base_SetConfig+0xe8>
 80081e0:	687b      	ldr	r3, [r7, #4]
 80081e2:	4a15      	ldr	r2, [pc, #84]	@ (8008238 <TIM_Base_SetConfig+0x130>)
 80081e4:	4293      	cmp	r3, r2
 80081e6:	d003      	beq.n	80081f0 <TIM_Base_SetConfig+0xe8>
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	4a14      	ldr	r2, [pc, #80]	@ (800823c <TIM_Base_SetConfig+0x134>)
 80081ec:	4293      	cmp	r3, r2
 80081ee:	d103      	bne.n	80081f8 <TIM_Base_SetConfig+0xf0>
 80081f0:	683b      	ldr	r3, [r7, #0]
 80081f2:	691a      	ldr	r2, [r3, #16]
 80081f4:	687b      	ldr	r3, [r7, #4]
 80081f6:	631a      	str	r2, [r3, #48]	@ 0x30
 80081f8:	687b      	ldr	r3, [r7, #4]
 80081fa:	2201      	movs	r2, #1
 80081fc:	615a      	str	r2, [r3, #20]
 80081fe:	687b      	ldr	r3, [r7, #4]
 8008200:	691b      	ldr	r3, [r3, #16]
 8008202:	f003 0301 	and.w	r3, r3, #1
 8008206:	2b01      	cmp	r3, #1
 8008208:	d105      	bne.n	8008216 <TIM_Base_SetConfig+0x10e>
 800820a:	687b      	ldr	r3, [r7, #4]
 800820c:	691b      	ldr	r3, [r3, #16]
 800820e:	f023 0201 	bic.w	r2, r3, #1
 8008212:	687b      	ldr	r3, [r7, #4]
 8008214:	611a      	str	r2, [r3, #16]
 8008216:	bf00      	nop
 8008218:	3714      	adds	r7, #20
 800821a:	46bd      	mov	sp, r7
 800821c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008220:	4770      	bx	lr
 8008222:	bf00      	nop
 8008224:	40012c00 	.word	0x40012c00
 8008228:	40000400 	.word	0x40000400
 800822c:	40000800 	.word	0x40000800
 8008230:	40013400 	.word	0x40013400
 8008234:	40014000 	.word	0x40014000
 8008238:	40014400 	.word	0x40014400
 800823c:	40014800 	.word	0x40014800

08008240 <TIM_OC1_SetConfig>:
 8008240:	b480      	push	{r7}
 8008242:	b087      	sub	sp, #28
 8008244:	af00      	add	r7, sp, #0
 8008246:	6078      	str	r0, [r7, #4]
 8008248:	6039      	str	r1, [r7, #0]
 800824a:	687b      	ldr	r3, [r7, #4]
 800824c:	6a1b      	ldr	r3, [r3, #32]
 800824e:	617b      	str	r3, [r7, #20]
 8008250:	687b      	ldr	r3, [r7, #4]
 8008252:	6a1b      	ldr	r3, [r3, #32]
 8008254:	f023 0201 	bic.w	r2, r3, #1
 8008258:	687b      	ldr	r3, [r7, #4]
 800825a:	621a      	str	r2, [r3, #32]
 800825c:	687b      	ldr	r3, [r7, #4]
 800825e:	685b      	ldr	r3, [r3, #4]
 8008260:	613b      	str	r3, [r7, #16]
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	699b      	ldr	r3, [r3, #24]
 8008266:	60fb      	str	r3, [r7, #12]
 8008268:	68fb      	ldr	r3, [r7, #12]
 800826a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800826e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008272:	60fb      	str	r3, [r7, #12]
 8008274:	68fb      	ldr	r3, [r7, #12]
 8008276:	f023 0303 	bic.w	r3, r3, #3
 800827a:	60fb      	str	r3, [r7, #12]
 800827c:	683b      	ldr	r3, [r7, #0]
 800827e:	681b      	ldr	r3, [r3, #0]
 8008280:	68fa      	ldr	r2, [r7, #12]
 8008282:	4313      	orrs	r3, r2
 8008284:	60fb      	str	r3, [r7, #12]
 8008286:	697b      	ldr	r3, [r7, #20]
 8008288:	f023 0302 	bic.w	r3, r3, #2
 800828c:	617b      	str	r3, [r7, #20]
 800828e:	683b      	ldr	r3, [r7, #0]
 8008290:	689b      	ldr	r3, [r3, #8]
 8008292:	697a      	ldr	r2, [r7, #20]
 8008294:	4313      	orrs	r3, r2
 8008296:	617b      	str	r3, [r7, #20]
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	4a2c      	ldr	r2, [pc, #176]	@ (800834c <TIM_OC1_SetConfig+0x10c>)
 800829c:	4293      	cmp	r3, r2
 800829e:	d00f      	beq.n	80082c0 <TIM_OC1_SetConfig+0x80>
 80082a0:	687b      	ldr	r3, [r7, #4]
 80082a2:	4a2b      	ldr	r2, [pc, #172]	@ (8008350 <TIM_OC1_SetConfig+0x110>)
 80082a4:	4293      	cmp	r3, r2
 80082a6:	d00b      	beq.n	80082c0 <TIM_OC1_SetConfig+0x80>
 80082a8:	687b      	ldr	r3, [r7, #4]
 80082aa:	4a2a      	ldr	r2, [pc, #168]	@ (8008354 <TIM_OC1_SetConfig+0x114>)
 80082ac:	4293      	cmp	r3, r2
 80082ae:	d007      	beq.n	80082c0 <TIM_OC1_SetConfig+0x80>
 80082b0:	687b      	ldr	r3, [r7, #4]
 80082b2:	4a29      	ldr	r2, [pc, #164]	@ (8008358 <TIM_OC1_SetConfig+0x118>)
 80082b4:	4293      	cmp	r3, r2
 80082b6:	d003      	beq.n	80082c0 <TIM_OC1_SetConfig+0x80>
 80082b8:	687b      	ldr	r3, [r7, #4]
 80082ba:	4a28      	ldr	r2, [pc, #160]	@ (800835c <TIM_OC1_SetConfig+0x11c>)
 80082bc:	4293      	cmp	r3, r2
 80082be:	d10c      	bne.n	80082da <TIM_OC1_SetConfig+0x9a>
 80082c0:	697b      	ldr	r3, [r7, #20]
 80082c2:	f023 0308 	bic.w	r3, r3, #8
 80082c6:	617b      	str	r3, [r7, #20]
 80082c8:	683b      	ldr	r3, [r7, #0]
 80082ca:	68db      	ldr	r3, [r3, #12]
 80082cc:	697a      	ldr	r2, [r7, #20]
 80082ce:	4313      	orrs	r3, r2
 80082d0:	617b      	str	r3, [r7, #20]
 80082d2:	697b      	ldr	r3, [r7, #20]
 80082d4:	f023 0304 	bic.w	r3, r3, #4
 80082d8:	617b      	str	r3, [r7, #20]
 80082da:	687b      	ldr	r3, [r7, #4]
 80082dc:	4a1b      	ldr	r2, [pc, #108]	@ (800834c <TIM_OC1_SetConfig+0x10c>)
 80082de:	4293      	cmp	r3, r2
 80082e0:	d00f      	beq.n	8008302 <TIM_OC1_SetConfig+0xc2>
 80082e2:	687b      	ldr	r3, [r7, #4]
 80082e4:	4a1a      	ldr	r2, [pc, #104]	@ (8008350 <TIM_OC1_SetConfig+0x110>)
 80082e6:	4293      	cmp	r3, r2
 80082e8:	d00b      	beq.n	8008302 <TIM_OC1_SetConfig+0xc2>
 80082ea:	687b      	ldr	r3, [r7, #4]
 80082ec:	4a19      	ldr	r2, [pc, #100]	@ (8008354 <TIM_OC1_SetConfig+0x114>)
 80082ee:	4293      	cmp	r3, r2
 80082f0:	d007      	beq.n	8008302 <TIM_OC1_SetConfig+0xc2>
 80082f2:	687b      	ldr	r3, [r7, #4]
 80082f4:	4a18      	ldr	r2, [pc, #96]	@ (8008358 <TIM_OC1_SetConfig+0x118>)
 80082f6:	4293      	cmp	r3, r2
 80082f8:	d003      	beq.n	8008302 <TIM_OC1_SetConfig+0xc2>
 80082fa:	687b      	ldr	r3, [r7, #4]
 80082fc:	4a17      	ldr	r2, [pc, #92]	@ (800835c <TIM_OC1_SetConfig+0x11c>)
 80082fe:	4293      	cmp	r3, r2
 8008300:	d111      	bne.n	8008326 <TIM_OC1_SetConfig+0xe6>
 8008302:	693b      	ldr	r3, [r7, #16]
 8008304:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8008308:	613b      	str	r3, [r7, #16]
 800830a:	693b      	ldr	r3, [r7, #16]
 800830c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8008310:	613b      	str	r3, [r7, #16]
 8008312:	683b      	ldr	r3, [r7, #0]
 8008314:	695b      	ldr	r3, [r3, #20]
 8008316:	693a      	ldr	r2, [r7, #16]
 8008318:	4313      	orrs	r3, r2
 800831a:	613b      	str	r3, [r7, #16]
 800831c:	683b      	ldr	r3, [r7, #0]
 800831e:	699b      	ldr	r3, [r3, #24]
 8008320:	693a      	ldr	r2, [r7, #16]
 8008322:	4313      	orrs	r3, r2
 8008324:	613b      	str	r3, [r7, #16]
 8008326:	687b      	ldr	r3, [r7, #4]
 8008328:	693a      	ldr	r2, [r7, #16]
 800832a:	605a      	str	r2, [r3, #4]
 800832c:	687b      	ldr	r3, [r7, #4]
 800832e:	68fa      	ldr	r2, [r7, #12]
 8008330:	619a      	str	r2, [r3, #24]
 8008332:	683b      	ldr	r3, [r7, #0]
 8008334:	685a      	ldr	r2, [r3, #4]
 8008336:	687b      	ldr	r3, [r7, #4]
 8008338:	635a      	str	r2, [r3, #52]	@ 0x34
 800833a:	687b      	ldr	r3, [r7, #4]
 800833c:	697a      	ldr	r2, [r7, #20]
 800833e:	621a      	str	r2, [r3, #32]
 8008340:	bf00      	nop
 8008342:	371c      	adds	r7, #28
 8008344:	46bd      	mov	sp, r7
 8008346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800834a:	4770      	bx	lr
 800834c:	40012c00 	.word	0x40012c00
 8008350:	40013400 	.word	0x40013400
 8008354:	40014000 	.word	0x40014000
 8008358:	40014400 	.word	0x40014400
 800835c:	40014800 	.word	0x40014800

08008360 <TIM_OC2_SetConfig>:
 8008360:	b480      	push	{r7}
 8008362:	b087      	sub	sp, #28
 8008364:	af00      	add	r7, sp, #0
 8008366:	6078      	str	r0, [r7, #4]
 8008368:	6039      	str	r1, [r7, #0]
 800836a:	687b      	ldr	r3, [r7, #4]
 800836c:	6a1b      	ldr	r3, [r3, #32]
 800836e:	617b      	str	r3, [r7, #20]
 8008370:	687b      	ldr	r3, [r7, #4]
 8008372:	6a1b      	ldr	r3, [r3, #32]
 8008374:	f023 0210 	bic.w	r2, r3, #16
 8008378:	687b      	ldr	r3, [r7, #4]
 800837a:	621a      	str	r2, [r3, #32]
 800837c:	687b      	ldr	r3, [r7, #4]
 800837e:	685b      	ldr	r3, [r3, #4]
 8008380:	613b      	str	r3, [r7, #16]
 8008382:	687b      	ldr	r3, [r7, #4]
 8008384:	699b      	ldr	r3, [r3, #24]
 8008386:	60fb      	str	r3, [r7, #12]
 8008388:	68fb      	ldr	r3, [r7, #12]
 800838a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800838e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008392:	60fb      	str	r3, [r7, #12]
 8008394:	68fb      	ldr	r3, [r7, #12]
 8008396:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800839a:	60fb      	str	r3, [r7, #12]
 800839c:	683b      	ldr	r3, [r7, #0]
 800839e:	681b      	ldr	r3, [r3, #0]
 80083a0:	021b      	lsls	r3, r3, #8
 80083a2:	68fa      	ldr	r2, [r7, #12]
 80083a4:	4313      	orrs	r3, r2
 80083a6:	60fb      	str	r3, [r7, #12]
 80083a8:	697b      	ldr	r3, [r7, #20]
 80083aa:	f023 0320 	bic.w	r3, r3, #32
 80083ae:	617b      	str	r3, [r7, #20]
 80083b0:	683b      	ldr	r3, [r7, #0]
 80083b2:	689b      	ldr	r3, [r3, #8]
 80083b4:	011b      	lsls	r3, r3, #4
 80083b6:	697a      	ldr	r2, [r7, #20]
 80083b8:	4313      	orrs	r3, r2
 80083ba:	617b      	str	r3, [r7, #20]
 80083bc:	687b      	ldr	r3, [r7, #4]
 80083be:	4a28      	ldr	r2, [pc, #160]	@ (8008460 <TIM_OC2_SetConfig+0x100>)
 80083c0:	4293      	cmp	r3, r2
 80083c2:	d003      	beq.n	80083cc <TIM_OC2_SetConfig+0x6c>
 80083c4:	687b      	ldr	r3, [r7, #4]
 80083c6:	4a27      	ldr	r2, [pc, #156]	@ (8008464 <TIM_OC2_SetConfig+0x104>)
 80083c8:	4293      	cmp	r3, r2
 80083ca:	d10d      	bne.n	80083e8 <TIM_OC2_SetConfig+0x88>
 80083cc:	697b      	ldr	r3, [r7, #20]
 80083ce:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80083d2:	617b      	str	r3, [r7, #20]
 80083d4:	683b      	ldr	r3, [r7, #0]
 80083d6:	68db      	ldr	r3, [r3, #12]
 80083d8:	011b      	lsls	r3, r3, #4
 80083da:	697a      	ldr	r2, [r7, #20]
 80083dc:	4313      	orrs	r3, r2
 80083de:	617b      	str	r3, [r7, #20]
 80083e0:	697b      	ldr	r3, [r7, #20]
 80083e2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80083e6:	617b      	str	r3, [r7, #20]
 80083e8:	687b      	ldr	r3, [r7, #4]
 80083ea:	4a1d      	ldr	r2, [pc, #116]	@ (8008460 <TIM_OC2_SetConfig+0x100>)
 80083ec:	4293      	cmp	r3, r2
 80083ee:	d00f      	beq.n	8008410 <TIM_OC2_SetConfig+0xb0>
 80083f0:	687b      	ldr	r3, [r7, #4]
 80083f2:	4a1c      	ldr	r2, [pc, #112]	@ (8008464 <TIM_OC2_SetConfig+0x104>)
 80083f4:	4293      	cmp	r3, r2
 80083f6:	d00b      	beq.n	8008410 <TIM_OC2_SetConfig+0xb0>
 80083f8:	687b      	ldr	r3, [r7, #4]
 80083fa:	4a1b      	ldr	r2, [pc, #108]	@ (8008468 <TIM_OC2_SetConfig+0x108>)
 80083fc:	4293      	cmp	r3, r2
 80083fe:	d007      	beq.n	8008410 <TIM_OC2_SetConfig+0xb0>
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	4a1a      	ldr	r2, [pc, #104]	@ (800846c <TIM_OC2_SetConfig+0x10c>)
 8008404:	4293      	cmp	r3, r2
 8008406:	d003      	beq.n	8008410 <TIM_OC2_SetConfig+0xb0>
 8008408:	687b      	ldr	r3, [r7, #4]
 800840a:	4a19      	ldr	r2, [pc, #100]	@ (8008470 <TIM_OC2_SetConfig+0x110>)
 800840c:	4293      	cmp	r3, r2
 800840e:	d113      	bne.n	8008438 <TIM_OC2_SetConfig+0xd8>
 8008410:	693b      	ldr	r3, [r7, #16]
 8008412:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8008416:	613b      	str	r3, [r7, #16]
 8008418:	693b      	ldr	r3, [r7, #16]
 800841a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800841e:	613b      	str	r3, [r7, #16]
 8008420:	683b      	ldr	r3, [r7, #0]
 8008422:	695b      	ldr	r3, [r3, #20]
 8008424:	009b      	lsls	r3, r3, #2
 8008426:	693a      	ldr	r2, [r7, #16]
 8008428:	4313      	orrs	r3, r2
 800842a:	613b      	str	r3, [r7, #16]
 800842c:	683b      	ldr	r3, [r7, #0]
 800842e:	699b      	ldr	r3, [r3, #24]
 8008430:	009b      	lsls	r3, r3, #2
 8008432:	693a      	ldr	r2, [r7, #16]
 8008434:	4313      	orrs	r3, r2
 8008436:	613b      	str	r3, [r7, #16]
 8008438:	687b      	ldr	r3, [r7, #4]
 800843a:	693a      	ldr	r2, [r7, #16]
 800843c:	605a      	str	r2, [r3, #4]
 800843e:	687b      	ldr	r3, [r7, #4]
 8008440:	68fa      	ldr	r2, [r7, #12]
 8008442:	619a      	str	r2, [r3, #24]
 8008444:	683b      	ldr	r3, [r7, #0]
 8008446:	685a      	ldr	r2, [r3, #4]
 8008448:	687b      	ldr	r3, [r7, #4]
 800844a:	639a      	str	r2, [r3, #56]	@ 0x38
 800844c:	687b      	ldr	r3, [r7, #4]
 800844e:	697a      	ldr	r2, [r7, #20]
 8008450:	621a      	str	r2, [r3, #32]
 8008452:	bf00      	nop
 8008454:	371c      	adds	r7, #28
 8008456:	46bd      	mov	sp, r7
 8008458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800845c:	4770      	bx	lr
 800845e:	bf00      	nop
 8008460:	40012c00 	.word	0x40012c00
 8008464:	40013400 	.word	0x40013400
 8008468:	40014000 	.word	0x40014000
 800846c:	40014400 	.word	0x40014400
 8008470:	40014800 	.word	0x40014800

08008474 <TIM_OC3_SetConfig>:
 8008474:	b480      	push	{r7}
 8008476:	b087      	sub	sp, #28
 8008478:	af00      	add	r7, sp, #0
 800847a:	6078      	str	r0, [r7, #4]
 800847c:	6039      	str	r1, [r7, #0]
 800847e:	687b      	ldr	r3, [r7, #4]
 8008480:	6a1b      	ldr	r3, [r3, #32]
 8008482:	617b      	str	r3, [r7, #20]
 8008484:	687b      	ldr	r3, [r7, #4]
 8008486:	6a1b      	ldr	r3, [r3, #32]
 8008488:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800848c:	687b      	ldr	r3, [r7, #4]
 800848e:	621a      	str	r2, [r3, #32]
 8008490:	687b      	ldr	r3, [r7, #4]
 8008492:	685b      	ldr	r3, [r3, #4]
 8008494:	613b      	str	r3, [r7, #16]
 8008496:	687b      	ldr	r3, [r7, #4]
 8008498:	69db      	ldr	r3, [r3, #28]
 800849a:	60fb      	str	r3, [r7, #12]
 800849c:	68fb      	ldr	r3, [r7, #12]
 800849e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80084a2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80084a6:	60fb      	str	r3, [r7, #12]
 80084a8:	68fb      	ldr	r3, [r7, #12]
 80084aa:	f023 0303 	bic.w	r3, r3, #3
 80084ae:	60fb      	str	r3, [r7, #12]
 80084b0:	683b      	ldr	r3, [r7, #0]
 80084b2:	681b      	ldr	r3, [r3, #0]
 80084b4:	68fa      	ldr	r2, [r7, #12]
 80084b6:	4313      	orrs	r3, r2
 80084b8:	60fb      	str	r3, [r7, #12]
 80084ba:	697b      	ldr	r3, [r7, #20]
 80084bc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80084c0:	617b      	str	r3, [r7, #20]
 80084c2:	683b      	ldr	r3, [r7, #0]
 80084c4:	689b      	ldr	r3, [r3, #8]
 80084c6:	021b      	lsls	r3, r3, #8
 80084c8:	697a      	ldr	r2, [r7, #20]
 80084ca:	4313      	orrs	r3, r2
 80084cc:	617b      	str	r3, [r7, #20]
 80084ce:	687b      	ldr	r3, [r7, #4]
 80084d0:	4a27      	ldr	r2, [pc, #156]	@ (8008570 <TIM_OC3_SetConfig+0xfc>)
 80084d2:	4293      	cmp	r3, r2
 80084d4:	d003      	beq.n	80084de <TIM_OC3_SetConfig+0x6a>
 80084d6:	687b      	ldr	r3, [r7, #4]
 80084d8:	4a26      	ldr	r2, [pc, #152]	@ (8008574 <TIM_OC3_SetConfig+0x100>)
 80084da:	4293      	cmp	r3, r2
 80084dc:	d10d      	bne.n	80084fa <TIM_OC3_SetConfig+0x86>
 80084de:	697b      	ldr	r3, [r7, #20]
 80084e0:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80084e4:	617b      	str	r3, [r7, #20]
 80084e6:	683b      	ldr	r3, [r7, #0]
 80084e8:	68db      	ldr	r3, [r3, #12]
 80084ea:	021b      	lsls	r3, r3, #8
 80084ec:	697a      	ldr	r2, [r7, #20]
 80084ee:	4313      	orrs	r3, r2
 80084f0:	617b      	str	r3, [r7, #20]
 80084f2:	697b      	ldr	r3, [r7, #20]
 80084f4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80084f8:	617b      	str	r3, [r7, #20]
 80084fa:	687b      	ldr	r3, [r7, #4]
 80084fc:	4a1c      	ldr	r2, [pc, #112]	@ (8008570 <TIM_OC3_SetConfig+0xfc>)
 80084fe:	4293      	cmp	r3, r2
 8008500:	d00f      	beq.n	8008522 <TIM_OC3_SetConfig+0xae>
 8008502:	687b      	ldr	r3, [r7, #4]
 8008504:	4a1b      	ldr	r2, [pc, #108]	@ (8008574 <TIM_OC3_SetConfig+0x100>)
 8008506:	4293      	cmp	r3, r2
 8008508:	d00b      	beq.n	8008522 <TIM_OC3_SetConfig+0xae>
 800850a:	687b      	ldr	r3, [r7, #4]
 800850c:	4a1a      	ldr	r2, [pc, #104]	@ (8008578 <TIM_OC3_SetConfig+0x104>)
 800850e:	4293      	cmp	r3, r2
 8008510:	d007      	beq.n	8008522 <TIM_OC3_SetConfig+0xae>
 8008512:	687b      	ldr	r3, [r7, #4]
 8008514:	4a19      	ldr	r2, [pc, #100]	@ (800857c <TIM_OC3_SetConfig+0x108>)
 8008516:	4293      	cmp	r3, r2
 8008518:	d003      	beq.n	8008522 <TIM_OC3_SetConfig+0xae>
 800851a:	687b      	ldr	r3, [r7, #4]
 800851c:	4a18      	ldr	r2, [pc, #96]	@ (8008580 <TIM_OC3_SetConfig+0x10c>)
 800851e:	4293      	cmp	r3, r2
 8008520:	d113      	bne.n	800854a <TIM_OC3_SetConfig+0xd6>
 8008522:	693b      	ldr	r3, [r7, #16]
 8008524:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8008528:	613b      	str	r3, [r7, #16]
 800852a:	693b      	ldr	r3, [r7, #16]
 800852c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8008530:	613b      	str	r3, [r7, #16]
 8008532:	683b      	ldr	r3, [r7, #0]
 8008534:	695b      	ldr	r3, [r3, #20]
 8008536:	011b      	lsls	r3, r3, #4
 8008538:	693a      	ldr	r2, [r7, #16]
 800853a:	4313      	orrs	r3, r2
 800853c:	613b      	str	r3, [r7, #16]
 800853e:	683b      	ldr	r3, [r7, #0]
 8008540:	699b      	ldr	r3, [r3, #24]
 8008542:	011b      	lsls	r3, r3, #4
 8008544:	693a      	ldr	r2, [r7, #16]
 8008546:	4313      	orrs	r3, r2
 8008548:	613b      	str	r3, [r7, #16]
 800854a:	687b      	ldr	r3, [r7, #4]
 800854c:	693a      	ldr	r2, [r7, #16]
 800854e:	605a      	str	r2, [r3, #4]
 8008550:	687b      	ldr	r3, [r7, #4]
 8008552:	68fa      	ldr	r2, [r7, #12]
 8008554:	61da      	str	r2, [r3, #28]
 8008556:	683b      	ldr	r3, [r7, #0]
 8008558:	685a      	ldr	r2, [r3, #4]
 800855a:	687b      	ldr	r3, [r7, #4]
 800855c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800855e:	687b      	ldr	r3, [r7, #4]
 8008560:	697a      	ldr	r2, [r7, #20]
 8008562:	621a      	str	r2, [r3, #32]
 8008564:	bf00      	nop
 8008566:	371c      	adds	r7, #28
 8008568:	46bd      	mov	sp, r7
 800856a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800856e:	4770      	bx	lr
 8008570:	40012c00 	.word	0x40012c00
 8008574:	40013400 	.word	0x40013400
 8008578:	40014000 	.word	0x40014000
 800857c:	40014400 	.word	0x40014400
 8008580:	40014800 	.word	0x40014800

08008584 <TIM_OC4_SetConfig>:
 8008584:	b480      	push	{r7}
 8008586:	b087      	sub	sp, #28
 8008588:	af00      	add	r7, sp, #0
 800858a:	6078      	str	r0, [r7, #4]
 800858c:	6039      	str	r1, [r7, #0]
 800858e:	687b      	ldr	r3, [r7, #4]
 8008590:	6a1b      	ldr	r3, [r3, #32]
 8008592:	617b      	str	r3, [r7, #20]
 8008594:	687b      	ldr	r3, [r7, #4]
 8008596:	6a1b      	ldr	r3, [r3, #32]
 8008598:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	621a      	str	r2, [r3, #32]
 80085a0:	687b      	ldr	r3, [r7, #4]
 80085a2:	685b      	ldr	r3, [r3, #4]
 80085a4:	613b      	str	r3, [r7, #16]
 80085a6:	687b      	ldr	r3, [r7, #4]
 80085a8:	69db      	ldr	r3, [r3, #28]
 80085aa:	60fb      	str	r3, [r7, #12]
 80085ac:	68fb      	ldr	r3, [r7, #12]
 80085ae:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80085b2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80085b6:	60fb      	str	r3, [r7, #12]
 80085b8:	68fb      	ldr	r3, [r7, #12]
 80085ba:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80085be:	60fb      	str	r3, [r7, #12]
 80085c0:	683b      	ldr	r3, [r7, #0]
 80085c2:	681b      	ldr	r3, [r3, #0]
 80085c4:	021b      	lsls	r3, r3, #8
 80085c6:	68fa      	ldr	r2, [r7, #12]
 80085c8:	4313      	orrs	r3, r2
 80085ca:	60fb      	str	r3, [r7, #12]
 80085cc:	697b      	ldr	r3, [r7, #20]
 80085ce:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80085d2:	617b      	str	r3, [r7, #20]
 80085d4:	683b      	ldr	r3, [r7, #0]
 80085d6:	689b      	ldr	r3, [r3, #8]
 80085d8:	031b      	lsls	r3, r3, #12
 80085da:	697a      	ldr	r2, [r7, #20]
 80085dc:	4313      	orrs	r3, r2
 80085de:	617b      	str	r3, [r7, #20]
 80085e0:	687b      	ldr	r3, [r7, #4]
 80085e2:	4a28      	ldr	r2, [pc, #160]	@ (8008684 <TIM_OC4_SetConfig+0x100>)
 80085e4:	4293      	cmp	r3, r2
 80085e6:	d003      	beq.n	80085f0 <TIM_OC4_SetConfig+0x6c>
 80085e8:	687b      	ldr	r3, [r7, #4]
 80085ea:	4a27      	ldr	r2, [pc, #156]	@ (8008688 <TIM_OC4_SetConfig+0x104>)
 80085ec:	4293      	cmp	r3, r2
 80085ee:	d10d      	bne.n	800860c <TIM_OC4_SetConfig+0x88>
 80085f0:	697b      	ldr	r3, [r7, #20]
 80085f2:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80085f6:	617b      	str	r3, [r7, #20]
 80085f8:	683b      	ldr	r3, [r7, #0]
 80085fa:	68db      	ldr	r3, [r3, #12]
 80085fc:	031b      	lsls	r3, r3, #12
 80085fe:	697a      	ldr	r2, [r7, #20]
 8008600:	4313      	orrs	r3, r2
 8008602:	617b      	str	r3, [r7, #20]
 8008604:	697b      	ldr	r3, [r7, #20]
 8008606:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800860a:	617b      	str	r3, [r7, #20]
 800860c:	687b      	ldr	r3, [r7, #4]
 800860e:	4a1d      	ldr	r2, [pc, #116]	@ (8008684 <TIM_OC4_SetConfig+0x100>)
 8008610:	4293      	cmp	r3, r2
 8008612:	d00f      	beq.n	8008634 <TIM_OC4_SetConfig+0xb0>
 8008614:	687b      	ldr	r3, [r7, #4]
 8008616:	4a1c      	ldr	r2, [pc, #112]	@ (8008688 <TIM_OC4_SetConfig+0x104>)
 8008618:	4293      	cmp	r3, r2
 800861a:	d00b      	beq.n	8008634 <TIM_OC4_SetConfig+0xb0>
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	4a1b      	ldr	r2, [pc, #108]	@ (800868c <TIM_OC4_SetConfig+0x108>)
 8008620:	4293      	cmp	r3, r2
 8008622:	d007      	beq.n	8008634 <TIM_OC4_SetConfig+0xb0>
 8008624:	687b      	ldr	r3, [r7, #4]
 8008626:	4a1a      	ldr	r2, [pc, #104]	@ (8008690 <TIM_OC4_SetConfig+0x10c>)
 8008628:	4293      	cmp	r3, r2
 800862a:	d003      	beq.n	8008634 <TIM_OC4_SetConfig+0xb0>
 800862c:	687b      	ldr	r3, [r7, #4]
 800862e:	4a19      	ldr	r2, [pc, #100]	@ (8008694 <TIM_OC4_SetConfig+0x110>)
 8008630:	4293      	cmp	r3, r2
 8008632:	d113      	bne.n	800865c <TIM_OC4_SetConfig+0xd8>
 8008634:	693b      	ldr	r3, [r7, #16]
 8008636:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800863a:	613b      	str	r3, [r7, #16]
 800863c:	693b      	ldr	r3, [r7, #16]
 800863e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8008642:	613b      	str	r3, [r7, #16]
 8008644:	683b      	ldr	r3, [r7, #0]
 8008646:	695b      	ldr	r3, [r3, #20]
 8008648:	019b      	lsls	r3, r3, #6
 800864a:	693a      	ldr	r2, [r7, #16]
 800864c:	4313      	orrs	r3, r2
 800864e:	613b      	str	r3, [r7, #16]
 8008650:	683b      	ldr	r3, [r7, #0]
 8008652:	699b      	ldr	r3, [r3, #24]
 8008654:	019b      	lsls	r3, r3, #6
 8008656:	693a      	ldr	r2, [r7, #16]
 8008658:	4313      	orrs	r3, r2
 800865a:	613b      	str	r3, [r7, #16]
 800865c:	687b      	ldr	r3, [r7, #4]
 800865e:	693a      	ldr	r2, [r7, #16]
 8008660:	605a      	str	r2, [r3, #4]
 8008662:	687b      	ldr	r3, [r7, #4]
 8008664:	68fa      	ldr	r2, [r7, #12]
 8008666:	61da      	str	r2, [r3, #28]
 8008668:	683b      	ldr	r3, [r7, #0]
 800866a:	685a      	ldr	r2, [r3, #4]
 800866c:	687b      	ldr	r3, [r7, #4]
 800866e:	641a      	str	r2, [r3, #64]	@ 0x40
 8008670:	687b      	ldr	r3, [r7, #4]
 8008672:	697a      	ldr	r2, [r7, #20]
 8008674:	621a      	str	r2, [r3, #32]
 8008676:	bf00      	nop
 8008678:	371c      	adds	r7, #28
 800867a:	46bd      	mov	sp, r7
 800867c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008680:	4770      	bx	lr
 8008682:	bf00      	nop
 8008684:	40012c00 	.word	0x40012c00
 8008688:	40013400 	.word	0x40013400
 800868c:	40014000 	.word	0x40014000
 8008690:	40014400 	.word	0x40014400
 8008694:	40014800 	.word	0x40014800

08008698 <TIM_OC5_SetConfig>:
 8008698:	b480      	push	{r7}
 800869a:	b087      	sub	sp, #28
 800869c:	af00      	add	r7, sp, #0
 800869e:	6078      	str	r0, [r7, #4]
 80086a0:	6039      	str	r1, [r7, #0]
 80086a2:	687b      	ldr	r3, [r7, #4]
 80086a4:	6a1b      	ldr	r3, [r3, #32]
 80086a6:	613b      	str	r3, [r7, #16]
 80086a8:	687b      	ldr	r3, [r7, #4]
 80086aa:	6a1b      	ldr	r3, [r3, #32]
 80086ac:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 80086b0:	687b      	ldr	r3, [r7, #4]
 80086b2:	621a      	str	r2, [r3, #32]
 80086b4:	687b      	ldr	r3, [r7, #4]
 80086b6:	685b      	ldr	r3, [r3, #4]
 80086b8:	617b      	str	r3, [r7, #20]
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80086be:	60fb      	str	r3, [r7, #12]
 80086c0:	68fb      	ldr	r3, [r7, #12]
 80086c2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80086c6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80086ca:	60fb      	str	r3, [r7, #12]
 80086cc:	683b      	ldr	r3, [r7, #0]
 80086ce:	681b      	ldr	r3, [r3, #0]
 80086d0:	68fa      	ldr	r2, [r7, #12]
 80086d2:	4313      	orrs	r3, r2
 80086d4:	60fb      	str	r3, [r7, #12]
 80086d6:	693b      	ldr	r3, [r7, #16]
 80086d8:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80086dc:	613b      	str	r3, [r7, #16]
 80086de:	683b      	ldr	r3, [r7, #0]
 80086e0:	689b      	ldr	r3, [r3, #8]
 80086e2:	041b      	lsls	r3, r3, #16
 80086e4:	693a      	ldr	r2, [r7, #16]
 80086e6:	4313      	orrs	r3, r2
 80086e8:	613b      	str	r3, [r7, #16]
 80086ea:	687b      	ldr	r3, [r7, #4]
 80086ec:	4a17      	ldr	r2, [pc, #92]	@ (800874c <TIM_OC5_SetConfig+0xb4>)
 80086ee:	4293      	cmp	r3, r2
 80086f0:	d00f      	beq.n	8008712 <TIM_OC5_SetConfig+0x7a>
 80086f2:	687b      	ldr	r3, [r7, #4]
 80086f4:	4a16      	ldr	r2, [pc, #88]	@ (8008750 <TIM_OC5_SetConfig+0xb8>)
 80086f6:	4293      	cmp	r3, r2
 80086f8:	d00b      	beq.n	8008712 <TIM_OC5_SetConfig+0x7a>
 80086fa:	687b      	ldr	r3, [r7, #4]
 80086fc:	4a15      	ldr	r2, [pc, #84]	@ (8008754 <TIM_OC5_SetConfig+0xbc>)
 80086fe:	4293      	cmp	r3, r2
 8008700:	d007      	beq.n	8008712 <TIM_OC5_SetConfig+0x7a>
 8008702:	687b      	ldr	r3, [r7, #4]
 8008704:	4a14      	ldr	r2, [pc, #80]	@ (8008758 <TIM_OC5_SetConfig+0xc0>)
 8008706:	4293      	cmp	r3, r2
 8008708:	d003      	beq.n	8008712 <TIM_OC5_SetConfig+0x7a>
 800870a:	687b      	ldr	r3, [r7, #4]
 800870c:	4a13      	ldr	r2, [pc, #76]	@ (800875c <TIM_OC5_SetConfig+0xc4>)
 800870e:	4293      	cmp	r3, r2
 8008710:	d109      	bne.n	8008726 <TIM_OC5_SetConfig+0x8e>
 8008712:	697b      	ldr	r3, [r7, #20]
 8008714:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8008718:	617b      	str	r3, [r7, #20]
 800871a:	683b      	ldr	r3, [r7, #0]
 800871c:	695b      	ldr	r3, [r3, #20]
 800871e:	021b      	lsls	r3, r3, #8
 8008720:	697a      	ldr	r2, [r7, #20]
 8008722:	4313      	orrs	r3, r2
 8008724:	617b      	str	r3, [r7, #20]
 8008726:	687b      	ldr	r3, [r7, #4]
 8008728:	697a      	ldr	r2, [r7, #20]
 800872a:	605a      	str	r2, [r3, #4]
 800872c:	687b      	ldr	r3, [r7, #4]
 800872e:	68fa      	ldr	r2, [r7, #12]
 8008730:	651a      	str	r2, [r3, #80]	@ 0x50
 8008732:	683b      	ldr	r3, [r7, #0]
 8008734:	685a      	ldr	r2, [r3, #4]
 8008736:	687b      	ldr	r3, [r7, #4]
 8008738:	649a      	str	r2, [r3, #72]	@ 0x48
 800873a:	687b      	ldr	r3, [r7, #4]
 800873c:	693a      	ldr	r2, [r7, #16]
 800873e:	621a      	str	r2, [r3, #32]
 8008740:	bf00      	nop
 8008742:	371c      	adds	r7, #28
 8008744:	46bd      	mov	sp, r7
 8008746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800874a:	4770      	bx	lr
 800874c:	40012c00 	.word	0x40012c00
 8008750:	40013400 	.word	0x40013400
 8008754:	40014000 	.word	0x40014000
 8008758:	40014400 	.word	0x40014400
 800875c:	40014800 	.word	0x40014800

08008760 <TIM_OC6_SetConfig>:
 8008760:	b480      	push	{r7}
 8008762:	b087      	sub	sp, #28
 8008764:	af00      	add	r7, sp, #0
 8008766:	6078      	str	r0, [r7, #4]
 8008768:	6039      	str	r1, [r7, #0]
 800876a:	687b      	ldr	r3, [r7, #4]
 800876c:	6a1b      	ldr	r3, [r3, #32]
 800876e:	613b      	str	r3, [r7, #16]
 8008770:	687b      	ldr	r3, [r7, #4]
 8008772:	6a1b      	ldr	r3, [r3, #32]
 8008774:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8008778:	687b      	ldr	r3, [r7, #4]
 800877a:	621a      	str	r2, [r3, #32]
 800877c:	687b      	ldr	r3, [r7, #4]
 800877e:	685b      	ldr	r3, [r3, #4]
 8008780:	617b      	str	r3, [r7, #20]
 8008782:	687b      	ldr	r3, [r7, #4]
 8008784:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008786:	60fb      	str	r3, [r7, #12]
 8008788:	68fb      	ldr	r3, [r7, #12]
 800878a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800878e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008792:	60fb      	str	r3, [r7, #12]
 8008794:	683b      	ldr	r3, [r7, #0]
 8008796:	681b      	ldr	r3, [r3, #0]
 8008798:	021b      	lsls	r3, r3, #8
 800879a:	68fa      	ldr	r2, [r7, #12]
 800879c:	4313      	orrs	r3, r2
 800879e:	60fb      	str	r3, [r7, #12]
 80087a0:	693b      	ldr	r3, [r7, #16]
 80087a2:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 80087a6:	613b      	str	r3, [r7, #16]
 80087a8:	683b      	ldr	r3, [r7, #0]
 80087aa:	689b      	ldr	r3, [r3, #8]
 80087ac:	051b      	lsls	r3, r3, #20
 80087ae:	693a      	ldr	r2, [r7, #16]
 80087b0:	4313      	orrs	r3, r2
 80087b2:	613b      	str	r3, [r7, #16]
 80087b4:	687b      	ldr	r3, [r7, #4]
 80087b6:	4a18      	ldr	r2, [pc, #96]	@ (8008818 <TIM_OC6_SetConfig+0xb8>)
 80087b8:	4293      	cmp	r3, r2
 80087ba:	d00f      	beq.n	80087dc <TIM_OC6_SetConfig+0x7c>
 80087bc:	687b      	ldr	r3, [r7, #4]
 80087be:	4a17      	ldr	r2, [pc, #92]	@ (800881c <TIM_OC6_SetConfig+0xbc>)
 80087c0:	4293      	cmp	r3, r2
 80087c2:	d00b      	beq.n	80087dc <TIM_OC6_SetConfig+0x7c>
 80087c4:	687b      	ldr	r3, [r7, #4]
 80087c6:	4a16      	ldr	r2, [pc, #88]	@ (8008820 <TIM_OC6_SetConfig+0xc0>)
 80087c8:	4293      	cmp	r3, r2
 80087ca:	d007      	beq.n	80087dc <TIM_OC6_SetConfig+0x7c>
 80087cc:	687b      	ldr	r3, [r7, #4]
 80087ce:	4a15      	ldr	r2, [pc, #84]	@ (8008824 <TIM_OC6_SetConfig+0xc4>)
 80087d0:	4293      	cmp	r3, r2
 80087d2:	d003      	beq.n	80087dc <TIM_OC6_SetConfig+0x7c>
 80087d4:	687b      	ldr	r3, [r7, #4]
 80087d6:	4a14      	ldr	r2, [pc, #80]	@ (8008828 <TIM_OC6_SetConfig+0xc8>)
 80087d8:	4293      	cmp	r3, r2
 80087da:	d109      	bne.n	80087f0 <TIM_OC6_SetConfig+0x90>
 80087dc:	697b      	ldr	r3, [r7, #20]
 80087de:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80087e2:	617b      	str	r3, [r7, #20]
 80087e4:	683b      	ldr	r3, [r7, #0]
 80087e6:	695b      	ldr	r3, [r3, #20]
 80087e8:	029b      	lsls	r3, r3, #10
 80087ea:	697a      	ldr	r2, [r7, #20]
 80087ec:	4313      	orrs	r3, r2
 80087ee:	617b      	str	r3, [r7, #20]
 80087f0:	687b      	ldr	r3, [r7, #4]
 80087f2:	697a      	ldr	r2, [r7, #20]
 80087f4:	605a      	str	r2, [r3, #4]
 80087f6:	687b      	ldr	r3, [r7, #4]
 80087f8:	68fa      	ldr	r2, [r7, #12]
 80087fa:	651a      	str	r2, [r3, #80]	@ 0x50
 80087fc:	683b      	ldr	r3, [r7, #0]
 80087fe:	685a      	ldr	r2, [r3, #4]
 8008800:	687b      	ldr	r3, [r7, #4]
 8008802:	64da      	str	r2, [r3, #76]	@ 0x4c
 8008804:	687b      	ldr	r3, [r7, #4]
 8008806:	693a      	ldr	r2, [r7, #16]
 8008808:	621a      	str	r2, [r3, #32]
 800880a:	bf00      	nop
 800880c:	371c      	adds	r7, #28
 800880e:	46bd      	mov	sp, r7
 8008810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008814:	4770      	bx	lr
 8008816:	bf00      	nop
 8008818:	40012c00 	.word	0x40012c00
 800881c:	40013400 	.word	0x40013400
 8008820:	40014000 	.word	0x40014000
 8008824:	40014400 	.word	0x40014400
 8008828:	40014800 	.word	0x40014800

0800882c <TIM_CCxChannelCmd>:
 800882c:	b480      	push	{r7}
 800882e:	b087      	sub	sp, #28
 8008830:	af00      	add	r7, sp, #0
 8008832:	60f8      	str	r0, [r7, #12]
 8008834:	60b9      	str	r1, [r7, #8]
 8008836:	607a      	str	r2, [r7, #4]
 8008838:	68bb      	ldr	r3, [r7, #8]
 800883a:	f003 031f 	and.w	r3, r3, #31
 800883e:	2201      	movs	r2, #1
 8008840:	fa02 f303 	lsl.w	r3, r2, r3
 8008844:	617b      	str	r3, [r7, #20]
 8008846:	68fb      	ldr	r3, [r7, #12]
 8008848:	6a1a      	ldr	r2, [r3, #32]
 800884a:	697b      	ldr	r3, [r7, #20]
 800884c:	43db      	mvns	r3, r3
 800884e:	401a      	ands	r2, r3
 8008850:	68fb      	ldr	r3, [r7, #12]
 8008852:	621a      	str	r2, [r3, #32]
 8008854:	68fb      	ldr	r3, [r7, #12]
 8008856:	6a1a      	ldr	r2, [r3, #32]
 8008858:	68bb      	ldr	r3, [r7, #8]
 800885a:	f003 031f 	and.w	r3, r3, #31
 800885e:	6879      	ldr	r1, [r7, #4]
 8008860:	fa01 f303 	lsl.w	r3, r1, r3
 8008864:	431a      	orrs	r2, r3
 8008866:	68fb      	ldr	r3, [r7, #12]
 8008868:	621a      	str	r2, [r3, #32]
 800886a:	bf00      	nop
 800886c:	371c      	adds	r7, #28
 800886e:	46bd      	mov	sp, r7
 8008870:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008874:	4770      	bx	lr
	...

08008878 <HAL_TIMEx_PWMN_Start>:
 8008878:	b580      	push	{r7, lr}
 800887a:	b084      	sub	sp, #16
 800887c:	af00      	add	r7, sp, #0
 800887e:	6078      	str	r0, [r7, #4]
 8008880:	6039      	str	r1, [r7, #0]
 8008882:	683b      	ldr	r3, [r7, #0]
 8008884:	2b00      	cmp	r3, #0
 8008886:	d109      	bne.n	800889c <HAL_TIMEx_PWMN_Start+0x24>
 8008888:	687b      	ldr	r3, [r7, #4]
 800888a:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800888e:	b2db      	uxtb	r3, r3
 8008890:	2b01      	cmp	r3, #1
 8008892:	bf14      	ite	ne
 8008894:	2301      	movne	r3, #1
 8008896:	2300      	moveq	r3, #0
 8008898:	b2db      	uxtb	r3, r3
 800889a:	e022      	b.n	80088e2 <HAL_TIMEx_PWMN_Start+0x6a>
 800889c:	683b      	ldr	r3, [r7, #0]
 800889e:	2b04      	cmp	r3, #4
 80088a0:	d109      	bne.n	80088b6 <HAL_TIMEx_PWMN_Start+0x3e>
 80088a2:	687b      	ldr	r3, [r7, #4]
 80088a4:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80088a8:	b2db      	uxtb	r3, r3
 80088aa:	2b01      	cmp	r3, #1
 80088ac:	bf14      	ite	ne
 80088ae:	2301      	movne	r3, #1
 80088b0:	2300      	moveq	r3, #0
 80088b2:	b2db      	uxtb	r3, r3
 80088b4:	e015      	b.n	80088e2 <HAL_TIMEx_PWMN_Start+0x6a>
 80088b6:	683b      	ldr	r3, [r7, #0]
 80088b8:	2b08      	cmp	r3, #8
 80088ba:	d109      	bne.n	80088d0 <HAL_TIMEx_PWMN_Start+0x58>
 80088bc:	687b      	ldr	r3, [r7, #4]
 80088be:	f893 3046 	ldrb.w	r3, [r3, #70]	@ 0x46
 80088c2:	b2db      	uxtb	r3, r3
 80088c4:	2b01      	cmp	r3, #1
 80088c6:	bf14      	ite	ne
 80088c8:	2301      	movne	r3, #1
 80088ca:	2300      	moveq	r3, #0
 80088cc:	b2db      	uxtb	r3, r3
 80088ce:	e008      	b.n	80088e2 <HAL_TIMEx_PWMN_Start+0x6a>
 80088d0:	687b      	ldr	r3, [r7, #4]
 80088d2:	f893 3047 	ldrb.w	r3, [r3, #71]	@ 0x47
 80088d6:	b2db      	uxtb	r3, r3
 80088d8:	2b01      	cmp	r3, #1
 80088da:	bf14      	ite	ne
 80088dc:	2301      	movne	r3, #1
 80088de:	2300      	moveq	r3, #0
 80088e0:	b2db      	uxtb	r3, r3
 80088e2:	2b00      	cmp	r3, #0
 80088e4:	d001      	beq.n	80088ea <HAL_TIMEx_PWMN_Start+0x72>
 80088e6:	2301      	movs	r3, #1
 80088e8:	e069      	b.n	80089be <HAL_TIMEx_PWMN_Start+0x146>
 80088ea:	683b      	ldr	r3, [r7, #0]
 80088ec:	2b00      	cmp	r3, #0
 80088ee:	d104      	bne.n	80088fa <HAL_TIMEx_PWMN_Start+0x82>
 80088f0:	687b      	ldr	r3, [r7, #4]
 80088f2:	2202      	movs	r2, #2
 80088f4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80088f8:	e013      	b.n	8008922 <HAL_TIMEx_PWMN_Start+0xaa>
 80088fa:	683b      	ldr	r3, [r7, #0]
 80088fc:	2b04      	cmp	r3, #4
 80088fe:	d104      	bne.n	800890a <HAL_TIMEx_PWMN_Start+0x92>
 8008900:	687b      	ldr	r3, [r7, #4]
 8008902:	2202      	movs	r2, #2
 8008904:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008908:	e00b      	b.n	8008922 <HAL_TIMEx_PWMN_Start+0xaa>
 800890a:	683b      	ldr	r3, [r7, #0]
 800890c:	2b08      	cmp	r3, #8
 800890e:	d104      	bne.n	800891a <HAL_TIMEx_PWMN_Start+0xa2>
 8008910:	687b      	ldr	r3, [r7, #4]
 8008912:	2202      	movs	r2, #2
 8008914:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8008918:	e003      	b.n	8008922 <HAL_TIMEx_PWMN_Start+0xaa>
 800891a:	687b      	ldr	r3, [r7, #4]
 800891c:	2202      	movs	r2, #2
 800891e:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8008922:	687b      	ldr	r3, [r7, #4]
 8008924:	681b      	ldr	r3, [r3, #0]
 8008926:	2204      	movs	r2, #4
 8008928:	6839      	ldr	r1, [r7, #0]
 800892a:	4618      	mov	r0, r3
 800892c:	f000 fa1d 	bl	8008d6a <TIM_CCxNChannelCmd>
 8008930:	687b      	ldr	r3, [r7, #4]
 8008932:	681b      	ldr	r3, [r3, #0]
 8008934:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8008936:	687b      	ldr	r3, [r7, #4]
 8008938:	681b      	ldr	r3, [r3, #0]
 800893a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800893e:	645a      	str	r2, [r3, #68]	@ 0x44
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	681b      	ldr	r3, [r3, #0]
 8008944:	4a20      	ldr	r2, [pc, #128]	@ (80089c8 <HAL_TIMEx_PWMN_Start+0x150>)
 8008946:	4293      	cmp	r3, r2
 8008948:	d018      	beq.n	800897c <HAL_TIMEx_PWMN_Start+0x104>
 800894a:	687b      	ldr	r3, [r7, #4]
 800894c:	681b      	ldr	r3, [r3, #0]
 800894e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008952:	d013      	beq.n	800897c <HAL_TIMEx_PWMN_Start+0x104>
 8008954:	687b      	ldr	r3, [r7, #4]
 8008956:	681b      	ldr	r3, [r3, #0]
 8008958:	4a1c      	ldr	r2, [pc, #112]	@ (80089cc <HAL_TIMEx_PWMN_Start+0x154>)
 800895a:	4293      	cmp	r3, r2
 800895c:	d00e      	beq.n	800897c <HAL_TIMEx_PWMN_Start+0x104>
 800895e:	687b      	ldr	r3, [r7, #4]
 8008960:	681b      	ldr	r3, [r3, #0]
 8008962:	4a1b      	ldr	r2, [pc, #108]	@ (80089d0 <HAL_TIMEx_PWMN_Start+0x158>)
 8008964:	4293      	cmp	r3, r2
 8008966:	d009      	beq.n	800897c <HAL_TIMEx_PWMN_Start+0x104>
 8008968:	687b      	ldr	r3, [r7, #4]
 800896a:	681b      	ldr	r3, [r3, #0]
 800896c:	4a19      	ldr	r2, [pc, #100]	@ (80089d4 <HAL_TIMEx_PWMN_Start+0x15c>)
 800896e:	4293      	cmp	r3, r2
 8008970:	d004      	beq.n	800897c <HAL_TIMEx_PWMN_Start+0x104>
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	681b      	ldr	r3, [r3, #0]
 8008976:	4a18      	ldr	r2, [pc, #96]	@ (80089d8 <HAL_TIMEx_PWMN_Start+0x160>)
 8008978:	4293      	cmp	r3, r2
 800897a:	d115      	bne.n	80089a8 <HAL_TIMEx_PWMN_Start+0x130>
 800897c:	687b      	ldr	r3, [r7, #4]
 800897e:	681b      	ldr	r3, [r3, #0]
 8008980:	689a      	ldr	r2, [r3, #8]
 8008982:	4b16      	ldr	r3, [pc, #88]	@ (80089dc <HAL_TIMEx_PWMN_Start+0x164>)
 8008984:	4013      	ands	r3, r2
 8008986:	60fb      	str	r3, [r7, #12]
 8008988:	68fb      	ldr	r3, [r7, #12]
 800898a:	2b06      	cmp	r3, #6
 800898c:	d015      	beq.n	80089ba <HAL_TIMEx_PWMN_Start+0x142>
 800898e:	68fb      	ldr	r3, [r7, #12]
 8008990:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008994:	d011      	beq.n	80089ba <HAL_TIMEx_PWMN_Start+0x142>
 8008996:	687b      	ldr	r3, [r7, #4]
 8008998:	681b      	ldr	r3, [r3, #0]
 800899a:	681a      	ldr	r2, [r3, #0]
 800899c:	687b      	ldr	r3, [r7, #4]
 800899e:	681b      	ldr	r3, [r3, #0]
 80089a0:	f042 0201 	orr.w	r2, r2, #1
 80089a4:	601a      	str	r2, [r3, #0]
 80089a6:	e008      	b.n	80089ba <HAL_TIMEx_PWMN_Start+0x142>
 80089a8:	687b      	ldr	r3, [r7, #4]
 80089aa:	681b      	ldr	r3, [r3, #0]
 80089ac:	681a      	ldr	r2, [r3, #0]
 80089ae:	687b      	ldr	r3, [r7, #4]
 80089b0:	681b      	ldr	r3, [r3, #0]
 80089b2:	f042 0201 	orr.w	r2, r2, #1
 80089b6:	601a      	str	r2, [r3, #0]
 80089b8:	e000      	b.n	80089bc <HAL_TIMEx_PWMN_Start+0x144>
 80089ba:	bf00      	nop
 80089bc:	2300      	movs	r3, #0
 80089be:	4618      	mov	r0, r3
 80089c0:	3710      	adds	r7, #16
 80089c2:	46bd      	mov	sp, r7
 80089c4:	bd80      	pop	{r7, pc}
 80089c6:	bf00      	nop
 80089c8:	40012c00 	.word	0x40012c00
 80089cc:	40000400 	.word	0x40000400
 80089d0:	40000800 	.word	0x40000800
 80089d4:	40013400 	.word	0x40013400
 80089d8:	40014000 	.word	0x40014000
 80089dc:	00010007 	.word	0x00010007

080089e0 <HAL_TIMEx_PWMN_Stop>:
 80089e0:	b580      	push	{r7, lr}
 80089e2:	b082      	sub	sp, #8
 80089e4:	af00      	add	r7, sp, #0
 80089e6:	6078      	str	r0, [r7, #4]
 80089e8:	6039      	str	r1, [r7, #0]
 80089ea:	687b      	ldr	r3, [r7, #4]
 80089ec:	681b      	ldr	r3, [r3, #0]
 80089ee:	2200      	movs	r2, #0
 80089f0:	6839      	ldr	r1, [r7, #0]
 80089f2:	4618      	mov	r0, r3
 80089f4:	f000 f9b9 	bl	8008d6a <TIM_CCxNChannelCmd>
 80089f8:	687b      	ldr	r3, [r7, #4]
 80089fa:	681b      	ldr	r3, [r3, #0]
 80089fc:	6a1a      	ldr	r2, [r3, #32]
 80089fe:	f241 1311 	movw	r3, #4369	@ 0x1111
 8008a02:	4013      	ands	r3, r2
 8008a04:	2b00      	cmp	r3, #0
 8008a06:	d10f      	bne.n	8008a28 <HAL_TIMEx_PWMN_Stop+0x48>
 8008a08:	687b      	ldr	r3, [r7, #4]
 8008a0a:	681b      	ldr	r3, [r3, #0]
 8008a0c:	6a1a      	ldr	r2, [r3, #32]
 8008a0e:	f244 4344 	movw	r3, #17476	@ 0x4444
 8008a12:	4013      	ands	r3, r2
 8008a14:	2b00      	cmp	r3, #0
 8008a16:	d107      	bne.n	8008a28 <HAL_TIMEx_PWMN_Stop+0x48>
 8008a18:	687b      	ldr	r3, [r7, #4]
 8008a1a:	681b      	ldr	r3, [r3, #0]
 8008a1c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	681b      	ldr	r3, [r3, #0]
 8008a22:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8008a26:	645a      	str	r2, [r3, #68]	@ 0x44
 8008a28:	687b      	ldr	r3, [r7, #4]
 8008a2a:	681b      	ldr	r3, [r3, #0]
 8008a2c:	6a1a      	ldr	r2, [r3, #32]
 8008a2e:	f241 1311 	movw	r3, #4369	@ 0x1111
 8008a32:	4013      	ands	r3, r2
 8008a34:	2b00      	cmp	r3, #0
 8008a36:	d10f      	bne.n	8008a58 <HAL_TIMEx_PWMN_Stop+0x78>
 8008a38:	687b      	ldr	r3, [r7, #4]
 8008a3a:	681b      	ldr	r3, [r3, #0]
 8008a3c:	6a1a      	ldr	r2, [r3, #32]
 8008a3e:	f244 4344 	movw	r3, #17476	@ 0x4444
 8008a42:	4013      	ands	r3, r2
 8008a44:	2b00      	cmp	r3, #0
 8008a46:	d107      	bne.n	8008a58 <HAL_TIMEx_PWMN_Stop+0x78>
 8008a48:	687b      	ldr	r3, [r7, #4]
 8008a4a:	681b      	ldr	r3, [r3, #0]
 8008a4c:	681a      	ldr	r2, [r3, #0]
 8008a4e:	687b      	ldr	r3, [r7, #4]
 8008a50:	681b      	ldr	r3, [r3, #0]
 8008a52:	f022 0201 	bic.w	r2, r2, #1
 8008a56:	601a      	str	r2, [r3, #0]
 8008a58:	683b      	ldr	r3, [r7, #0]
 8008a5a:	2b00      	cmp	r3, #0
 8008a5c:	d104      	bne.n	8008a68 <HAL_TIMEx_PWMN_Stop+0x88>
 8008a5e:	687b      	ldr	r3, [r7, #4]
 8008a60:	2201      	movs	r2, #1
 8008a62:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008a66:	e013      	b.n	8008a90 <HAL_TIMEx_PWMN_Stop+0xb0>
 8008a68:	683b      	ldr	r3, [r7, #0]
 8008a6a:	2b04      	cmp	r3, #4
 8008a6c:	d104      	bne.n	8008a78 <HAL_TIMEx_PWMN_Stop+0x98>
 8008a6e:	687b      	ldr	r3, [r7, #4]
 8008a70:	2201      	movs	r2, #1
 8008a72:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008a76:	e00b      	b.n	8008a90 <HAL_TIMEx_PWMN_Stop+0xb0>
 8008a78:	683b      	ldr	r3, [r7, #0]
 8008a7a:	2b08      	cmp	r3, #8
 8008a7c:	d104      	bne.n	8008a88 <HAL_TIMEx_PWMN_Stop+0xa8>
 8008a7e:	687b      	ldr	r3, [r7, #4]
 8008a80:	2201      	movs	r2, #1
 8008a82:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8008a86:	e003      	b.n	8008a90 <HAL_TIMEx_PWMN_Stop+0xb0>
 8008a88:	687b      	ldr	r3, [r7, #4]
 8008a8a:	2201      	movs	r2, #1
 8008a8c:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8008a90:	2300      	movs	r3, #0
 8008a92:	4618      	mov	r0, r3
 8008a94:	3708      	adds	r7, #8
 8008a96:	46bd      	mov	sp, r7
 8008a98:	bd80      	pop	{r7, pc}
	...

08008a9c <HAL_TIMEx_MasterConfigSynchronization>:
 8008a9c:	b480      	push	{r7}
 8008a9e:	b085      	sub	sp, #20
 8008aa0:	af00      	add	r7, sp, #0
 8008aa2:	6078      	str	r0, [r7, #4]
 8008aa4:	6039      	str	r1, [r7, #0]
 8008aa6:	687b      	ldr	r3, [r7, #4]
 8008aa8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008aac:	2b01      	cmp	r3, #1
 8008aae:	d101      	bne.n	8008ab4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008ab0:	2302      	movs	r3, #2
 8008ab2:	e065      	b.n	8008b80 <HAL_TIMEx_MasterConfigSynchronization+0xe4>
 8008ab4:	687b      	ldr	r3, [r7, #4]
 8008ab6:	2201      	movs	r2, #1
 8008ab8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008abc:	687b      	ldr	r3, [r7, #4]
 8008abe:	2202      	movs	r2, #2
 8008ac0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008ac4:	687b      	ldr	r3, [r7, #4]
 8008ac6:	681b      	ldr	r3, [r3, #0]
 8008ac8:	685b      	ldr	r3, [r3, #4]
 8008aca:	60fb      	str	r3, [r7, #12]
 8008acc:	687b      	ldr	r3, [r7, #4]
 8008ace:	681b      	ldr	r3, [r3, #0]
 8008ad0:	689b      	ldr	r3, [r3, #8]
 8008ad2:	60bb      	str	r3, [r7, #8]
 8008ad4:	687b      	ldr	r3, [r7, #4]
 8008ad6:	681b      	ldr	r3, [r3, #0]
 8008ad8:	4a2c      	ldr	r2, [pc, #176]	@ (8008b8c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8008ada:	4293      	cmp	r3, r2
 8008adc:	d004      	beq.n	8008ae8 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8008ade:	687b      	ldr	r3, [r7, #4]
 8008ae0:	681b      	ldr	r3, [r3, #0]
 8008ae2:	4a2b      	ldr	r2, [pc, #172]	@ (8008b90 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8008ae4:	4293      	cmp	r3, r2
 8008ae6:	d108      	bne.n	8008afa <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008ae8:	68fb      	ldr	r3, [r7, #12]
 8008aea:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8008aee:	60fb      	str	r3, [r7, #12]
 8008af0:	683b      	ldr	r3, [r7, #0]
 8008af2:	685b      	ldr	r3, [r3, #4]
 8008af4:	68fa      	ldr	r2, [r7, #12]
 8008af6:	4313      	orrs	r3, r2
 8008af8:	60fb      	str	r3, [r7, #12]
 8008afa:	68fb      	ldr	r3, [r7, #12]
 8008afc:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8008b00:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008b04:	60fb      	str	r3, [r7, #12]
 8008b06:	683b      	ldr	r3, [r7, #0]
 8008b08:	681b      	ldr	r3, [r3, #0]
 8008b0a:	68fa      	ldr	r2, [r7, #12]
 8008b0c:	4313      	orrs	r3, r2
 8008b0e:	60fb      	str	r3, [r7, #12]
 8008b10:	687b      	ldr	r3, [r7, #4]
 8008b12:	681b      	ldr	r3, [r3, #0]
 8008b14:	68fa      	ldr	r2, [r7, #12]
 8008b16:	605a      	str	r2, [r3, #4]
 8008b18:	687b      	ldr	r3, [r7, #4]
 8008b1a:	681b      	ldr	r3, [r3, #0]
 8008b1c:	4a1b      	ldr	r2, [pc, #108]	@ (8008b8c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8008b1e:	4293      	cmp	r3, r2
 8008b20:	d018      	beq.n	8008b54 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8008b22:	687b      	ldr	r3, [r7, #4]
 8008b24:	681b      	ldr	r3, [r3, #0]
 8008b26:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008b2a:	d013      	beq.n	8008b54 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8008b2c:	687b      	ldr	r3, [r7, #4]
 8008b2e:	681b      	ldr	r3, [r3, #0]
 8008b30:	4a18      	ldr	r2, [pc, #96]	@ (8008b94 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 8008b32:	4293      	cmp	r3, r2
 8008b34:	d00e      	beq.n	8008b54 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8008b36:	687b      	ldr	r3, [r7, #4]
 8008b38:	681b      	ldr	r3, [r3, #0]
 8008b3a:	4a17      	ldr	r2, [pc, #92]	@ (8008b98 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 8008b3c:	4293      	cmp	r3, r2
 8008b3e:	d009      	beq.n	8008b54 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8008b40:	687b      	ldr	r3, [r7, #4]
 8008b42:	681b      	ldr	r3, [r3, #0]
 8008b44:	4a12      	ldr	r2, [pc, #72]	@ (8008b90 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8008b46:	4293      	cmp	r3, r2
 8008b48:	d004      	beq.n	8008b54 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	681b      	ldr	r3, [r3, #0]
 8008b4e:	4a13      	ldr	r2, [pc, #76]	@ (8008b9c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8008b50:	4293      	cmp	r3, r2
 8008b52:	d10c      	bne.n	8008b6e <HAL_TIMEx_MasterConfigSynchronization+0xd2>
 8008b54:	68bb      	ldr	r3, [r7, #8]
 8008b56:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8008b5a:	60bb      	str	r3, [r7, #8]
 8008b5c:	683b      	ldr	r3, [r7, #0]
 8008b5e:	689b      	ldr	r3, [r3, #8]
 8008b60:	68ba      	ldr	r2, [r7, #8]
 8008b62:	4313      	orrs	r3, r2
 8008b64:	60bb      	str	r3, [r7, #8]
 8008b66:	687b      	ldr	r3, [r7, #4]
 8008b68:	681b      	ldr	r3, [r3, #0]
 8008b6a:	68ba      	ldr	r2, [r7, #8]
 8008b6c:	609a      	str	r2, [r3, #8]
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	2201      	movs	r2, #1
 8008b72:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008b76:	687b      	ldr	r3, [r7, #4]
 8008b78:	2200      	movs	r2, #0
 8008b7a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008b7e:	2300      	movs	r3, #0
 8008b80:	4618      	mov	r0, r3
 8008b82:	3714      	adds	r7, #20
 8008b84:	46bd      	mov	sp, r7
 8008b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b8a:	4770      	bx	lr
 8008b8c:	40012c00 	.word	0x40012c00
 8008b90:	40013400 	.word	0x40013400
 8008b94:	40000400 	.word	0x40000400
 8008b98:	40000800 	.word	0x40000800
 8008b9c:	40014000 	.word	0x40014000

08008ba0 <HAL_TIMEx_ConfigBreakDeadTime>:
 8008ba0:	b480      	push	{r7}
 8008ba2:	b085      	sub	sp, #20
 8008ba4:	af00      	add	r7, sp, #0
 8008ba6:	6078      	str	r0, [r7, #4]
 8008ba8:	6039      	str	r1, [r7, #0]
 8008baa:	2300      	movs	r3, #0
 8008bac:	60fb      	str	r3, [r7, #12]
 8008bae:	687b      	ldr	r3, [r7, #4]
 8008bb0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008bb4:	2b01      	cmp	r3, #1
 8008bb6:	d101      	bne.n	8008bbc <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8008bb8:	2302      	movs	r3, #2
 8008bba:	e073      	b.n	8008ca4 <HAL_TIMEx_ConfigBreakDeadTime+0x104>
 8008bbc:	687b      	ldr	r3, [r7, #4]
 8008bbe:	2201      	movs	r2, #1
 8008bc0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008bc4:	68fb      	ldr	r3, [r7, #12]
 8008bc6:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8008bca:	683b      	ldr	r3, [r7, #0]
 8008bcc:	68db      	ldr	r3, [r3, #12]
 8008bce:	4313      	orrs	r3, r2
 8008bd0:	60fb      	str	r3, [r7, #12]
 8008bd2:	68fb      	ldr	r3, [r7, #12]
 8008bd4:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8008bd8:	683b      	ldr	r3, [r7, #0]
 8008bda:	689b      	ldr	r3, [r3, #8]
 8008bdc:	4313      	orrs	r3, r2
 8008bde:	60fb      	str	r3, [r7, #12]
 8008be0:	68fb      	ldr	r3, [r7, #12]
 8008be2:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8008be6:	683b      	ldr	r3, [r7, #0]
 8008be8:	685b      	ldr	r3, [r3, #4]
 8008bea:	4313      	orrs	r3, r2
 8008bec:	60fb      	str	r3, [r7, #12]
 8008bee:	68fb      	ldr	r3, [r7, #12]
 8008bf0:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8008bf4:	683b      	ldr	r3, [r7, #0]
 8008bf6:	681b      	ldr	r3, [r3, #0]
 8008bf8:	4313      	orrs	r3, r2
 8008bfa:	60fb      	str	r3, [r7, #12]
 8008bfc:	68fb      	ldr	r3, [r7, #12]
 8008bfe:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8008c02:	683b      	ldr	r3, [r7, #0]
 8008c04:	691b      	ldr	r3, [r3, #16]
 8008c06:	4313      	orrs	r3, r2
 8008c08:	60fb      	str	r3, [r7, #12]
 8008c0a:	68fb      	ldr	r3, [r7, #12]
 8008c0c:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8008c10:	683b      	ldr	r3, [r7, #0]
 8008c12:	695b      	ldr	r3, [r3, #20]
 8008c14:	4313      	orrs	r3, r2
 8008c16:	60fb      	str	r3, [r7, #12]
 8008c18:	68fb      	ldr	r3, [r7, #12]
 8008c1a:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8008c1e:	683b      	ldr	r3, [r7, #0]
 8008c20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008c22:	4313      	orrs	r3, r2
 8008c24:	60fb      	str	r3, [r7, #12]
 8008c26:	68fb      	ldr	r3, [r7, #12]
 8008c28:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 8008c2c:	683b      	ldr	r3, [r7, #0]
 8008c2e:	699b      	ldr	r3, [r3, #24]
 8008c30:	041b      	lsls	r3, r3, #16
 8008c32:	4313      	orrs	r3, r2
 8008c34:	60fb      	str	r3, [r7, #12]
 8008c36:	68fb      	ldr	r3, [r7, #12]
 8008c38:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 8008c3c:	683b      	ldr	r3, [r7, #0]
 8008c3e:	69db      	ldr	r3, [r3, #28]
 8008c40:	4313      	orrs	r3, r2
 8008c42:	60fb      	str	r3, [r7, #12]
 8008c44:	687b      	ldr	r3, [r7, #4]
 8008c46:	681b      	ldr	r3, [r3, #0]
 8008c48:	4a19      	ldr	r2, [pc, #100]	@ (8008cb0 <HAL_TIMEx_ConfigBreakDeadTime+0x110>)
 8008c4a:	4293      	cmp	r3, r2
 8008c4c:	d004      	beq.n	8008c58 <HAL_TIMEx_ConfigBreakDeadTime+0xb8>
 8008c4e:	687b      	ldr	r3, [r7, #4]
 8008c50:	681b      	ldr	r3, [r3, #0]
 8008c52:	4a18      	ldr	r2, [pc, #96]	@ (8008cb4 <HAL_TIMEx_ConfigBreakDeadTime+0x114>)
 8008c54:	4293      	cmp	r3, r2
 8008c56:	d11c      	bne.n	8008c92 <HAL_TIMEx_ConfigBreakDeadTime+0xf2>
 8008c58:	68fb      	ldr	r3, [r7, #12]
 8008c5a:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 8008c5e:	683b      	ldr	r3, [r7, #0]
 8008c60:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008c62:	051b      	lsls	r3, r3, #20
 8008c64:	4313      	orrs	r3, r2
 8008c66:	60fb      	str	r3, [r7, #12]
 8008c68:	68fb      	ldr	r3, [r7, #12]
 8008c6a:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8008c6e:	683b      	ldr	r3, [r7, #0]
 8008c70:	6a1b      	ldr	r3, [r3, #32]
 8008c72:	4313      	orrs	r3, r2
 8008c74:	60fb      	str	r3, [r7, #12]
 8008c76:	68fb      	ldr	r3, [r7, #12]
 8008c78:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8008c7c:	683b      	ldr	r3, [r7, #0]
 8008c7e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008c80:	4313      	orrs	r3, r2
 8008c82:	60fb      	str	r3, [r7, #12]
 8008c84:	68fb      	ldr	r3, [r7, #12]
 8008c86:	f023 5200 	bic.w	r2, r3, #536870912	@ 0x20000000
 8008c8a:	683b      	ldr	r3, [r7, #0]
 8008c8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008c8e:	4313      	orrs	r3, r2
 8008c90:	60fb      	str	r3, [r7, #12]
 8008c92:	687b      	ldr	r3, [r7, #4]
 8008c94:	681b      	ldr	r3, [r3, #0]
 8008c96:	68fa      	ldr	r2, [r7, #12]
 8008c98:	645a      	str	r2, [r3, #68]	@ 0x44
 8008c9a:	687b      	ldr	r3, [r7, #4]
 8008c9c:	2200      	movs	r2, #0
 8008c9e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008ca2:	2300      	movs	r3, #0
 8008ca4:	4618      	mov	r0, r3
 8008ca6:	3714      	adds	r7, #20
 8008ca8:	46bd      	mov	sp, r7
 8008caa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cae:	4770      	bx	lr
 8008cb0:	40012c00 	.word	0x40012c00
 8008cb4:	40013400 	.word	0x40013400

08008cb8 <HAL_TIMEx_EnableDeadTimePreload>:
 8008cb8:	b480      	push	{r7}
 8008cba:	b083      	sub	sp, #12
 8008cbc:	af00      	add	r7, sp, #0
 8008cbe:	6078      	str	r0, [r7, #4]
 8008cc0:	687b      	ldr	r3, [r7, #4]
 8008cc2:	681b      	ldr	r3, [r3, #0]
 8008cc4:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8008cc6:	687b      	ldr	r3, [r7, #4]
 8008cc8:	681b      	ldr	r3, [r3, #0]
 8008cca:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8008cce:	655a      	str	r2, [r3, #84]	@ 0x54
 8008cd0:	2300      	movs	r3, #0
 8008cd2:	4618      	mov	r0, r3
 8008cd4:	370c      	adds	r7, #12
 8008cd6:	46bd      	mov	sp, r7
 8008cd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cdc:	4770      	bx	lr

08008cde <HAL_TIMEx_CommutCallback>:
 8008cde:	b480      	push	{r7}
 8008ce0:	b083      	sub	sp, #12
 8008ce2:	af00      	add	r7, sp, #0
 8008ce4:	6078      	str	r0, [r7, #4]
 8008ce6:	bf00      	nop
 8008ce8:	370c      	adds	r7, #12
 8008cea:	46bd      	mov	sp, r7
 8008cec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cf0:	4770      	bx	lr

08008cf2 <HAL_TIMEx_BreakCallback>:
 8008cf2:	b480      	push	{r7}
 8008cf4:	b083      	sub	sp, #12
 8008cf6:	af00      	add	r7, sp, #0
 8008cf8:	6078      	str	r0, [r7, #4]
 8008cfa:	bf00      	nop
 8008cfc:	370c      	adds	r7, #12
 8008cfe:	46bd      	mov	sp, r7
 8008d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d04:	4770      	bx	lr

08008d06 <HAL_TIMEx_Break2Callback>:
 8008d06:	b480      	push	{r7}
 8008d08:	b083      	sub	sp, #12
 8008d0a:	af00      	add	r7, sp, #0
 8008d0c:	6078      	str	r0, [r7, #4]
 8008d0e:	bf00      	nop
 8008d10:	370c      	adds	r7, #12
 8008d12:	46bd      	mov	sp, r7
 8008d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d18:	4770      	bx	lr

08008d1a <HAL_TIMEx_EncoderIndexCallback>:
 8008d1a:	b480      	push	{r7}
 8008d1c:	b083      	sub	sp, #12
 8008d1e:	af00      	add	r7, sp, #0
 8008d20:	6078      	str	r0, [r7, #4]
 8008d22:	bf00      	nop
 8008d24:	370c      	adds	r7, #12
 8008d26:	46bd      	mov	sp, r7
 8008d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d2c:	4770      	bx	lr

08008d2e <HAL_TIMEx_DirectionChangeCallback>:
 8008d2e:	b480      	push	{r7}
 8008d30:	b083      	sub	sp, #12
 8008d32:	af00      	add	r7, sp, #0
 8008d34:	6078      	str	r0, [r7, #4]
 8008d36:	bf00      	nop
 8008d38:	370c      	adds	r7, #12
 8008d3a:	46bd      	mov	sp, r7
 8008d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d40:	4770      	bx	lr

08008d42 <HAL_TIMEx_IndexErrorCallback>:
 8008d42:	b480      	push	{r7}
 8008d44:	b083      	sub	sp, #12
 8008d46:	af00      	add	r7, sp, #0
 8008d48:	6078      	str	r0, [r7, #4]
 8008d4a:	bf00      	nop
 8008d4c:	370c      	adds	r7, #12
 8008d4e:	46bd      	mov	sp, r7
 8008d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d54:	4770      	bx	lr

08008d56 <HAL_TIMEx_TransitionErrorCallback>:
 8008d56:	b480      	push	{r7}
 8008d58:	b083      	sub	sp, #12
 8008d5a:	af00      	add	r7, sp, #0
 8008d5c:	6078      	str	r0, [r7, #4]
 8008d5e:	bf00      	nop
 8008d60:	370c      	adds	r7, #12
 8008d62:	46bd      	mov	sp, r7
 8008d64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d68:	4770      	bx	lr

08008d6a <TIM_CCxNChannelCmd>:
 8008d6a:	b480      	push	{r7}
 8008d6c:	b087      	sub	sp, #28
 8008d6e:	af00      	add	r7, sp, #0
 8008d70:	60f8      	str	r0, [r7, #12]
 8008d72:	60b9      	str	r1, [r7, #8]
 8008d74:	607a      	str	r2, [r7, #4]
 8008d76:	68bb      	ldr	r3, [r7, #8]
 8008d78:	f003 030f 	and.w	r3, r3, #15
 8008d7c:	2204      	movs	r2, #4
 8008d7e:	fa02 f303 	lsl.w	r3, r2, r3
 8008d82:	617b      	str	r3, [r7, #20]
 8008d84:	68fb      	ldr	r3, [r7, #12]
 8008d86:	6a1a      	ldr	r2, [r3, #32]
 8008d88:	697b      	ldr	r3, [r7, #20]
 8008d8a:	43db      	mvns	r3, r3
 8008d8c:	401a      	ands	r2, r3
 8008d8e:	68fb      	ldr	r3, [r7, #12]
 8008d90:	621a      	str	r2, [r3, #32]
 8008d92:	68fb      	ldr	r3, [r7, #12]
 8008d94:	6a1a      	ldr	r2, [r3, #32]
 8008d96:	68bb      	ldr	r3, [r7, #8]
 8008d98:	f003 030f 	and.w	r3, r3, #15
 8008d9c:	6879      	ldr	r1, [r7, #4]
 8008d9e:	fa01 f303 	lsl.w	r3, r1, r3
 8008da2:	431a      	orrs	r2, r3
 8008da4:	68fb      	ldr	r3, [r7, #12]
 8008da6:	621a      	str	r2, [r3, #32]
 8008da8:	bf00      	nop
 8008daa:	371c      	adds	r7, #28
 8008dac:	46bd      	mov	sp, r7
 8008dae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008db2:	4770      	bx	lr

08008db4 <HAL_UART_Init>:
 8008db4:	b580      	push	{r7, lr}
 8008db6:	b082      	sub	sp, #8
 8008db8:	af00      	add	r7, sp, #0
 8008dba:	6078      	str	r0, [r7, #4]
 8008dbc:	687b      	ldr	r3, [r7, #4]
 8008dbe:	2b00      	cmp	r3, #0
 8008dc0:	d101      	bne.n	8008dc6 <HAL_UART_Init+0x12>
 8008dc2:	2301      	movs	r3, #1
 8008dc4:	e042      	b.n	8008e4c <HAL_UART_Init+0x98>
 8008dc6:	687b      	ldr	r3, [r7, #4]
 8008dc8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008dcc:	2b00      	cmp	r3, #0
 8008dce:	d106      	bne.n	8008dde <HAL_UART_Init+0x2a>
 8008dd0:	687b      	ldr	r3, [r7, #4]
 8008dd2:	2200      	movs	r2, #0
 8008dd4:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8008dd8:	6878      	ldr	r0, [r7, #4]
 8008dda:	f000 f83b 	bl	8008e54 <HAL_UART_MspInit>
 8008dde:	687b      	ldr	r3, [r7, #4]
 8008de0:	2224      	movs	r2, #36	@ 0x24
 8008de2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8008de6:	687b      	ldr	r3, [r7, #4]
 8008de8:	681b      	ldr	r3, [r3, #0]
 8008dea:	681a      	ldr	r2, [r3, #0]
 8008dec:	687b      	ldr	r3, [r7, #4]
 8008dee:	681b      	ldr	r3, [r3, #0]
 8008df0:	f022 0201 	bic.w	r2, r2, #1
 8008df4:	601a      	str	r2, [r3, #0]
 8008df6:	687b      	ldr	r3, [r7, #4]
 8008df8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008dfa:	2b00      	cmp	r3, #0
 8008dfc:	d002      	beq.n	8008e04 <HAL_UART_Init+0x50>
 8008dfe:	6878      	ldr	r0, [r7, #4]
 8008e00:	f000 fafe 	bl	8009400 <UART_AdvFeatureConfig>
 8008e04:	6878      	ldr	r0, [r7, #4]
 8008e06:	f000 f82f 	bl	8008e68 <UART_SetConfig>
 8008e0a:	4603      	mov	r3, r0
 8008e0c:	2b01      	cmp	r3, #1
 8008e0e:	d101      	bne.n	8008e14 <HAL_UART_Init+0x60>
 8008e10:	2301      	movs	r3, #1
 8008e12:	e01b      	b.n	8008e4c <HAL_UART_Init+0x98>
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	681b      	ldr	r3, [r3, #0]
 8008e18:	685a      	ldr	r2, [r3, #4]
 8008e1a:	687b      	ldr	r3, [r7, #4]
 8008e1c:	681b      	ldr	r3, [r3, #0]
 8008e1e:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8008e22:	605a      	str	r2, [r3, #4]
 8008e24:	687b      	ldr	r3, [r7, #4]
 8008e26:	681b      	ldr	r3, [r3, #0]
 8008e28:	689a      	ldr	r2, [r3, #8]
 8008e2a:	687b      	ldr	r3, [r7, #4]
 8008e2c:	681b      	ldr	r3, [r3, #0]
 8008e2e:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8008e32:	609a      	str	r2, [r3, #8]
 8008e34:	687b      	ldr	r3, [r7, #4]
 8008e36:	681b      	ldr	r3, [r3, #0]
 8008e38:	681a      	ldr	r2, [r3, #0]
 8008e3a:	687b      	ldr	r3, [r7, #4]
 8008e3c:	681b      	ldr	r3, [r3, #0]
 8008e3e:	f042 0201 	orr.w	r2, r2, #1
 8008e42:	601a      	str	r2, [r3, #0]
 8008e44:	6878      	ldr	r0, [r7, #4]
 8008e46:	f000 fb7d 	bl	8009544 <UART_CheckIdleState>
 8008e4a:	4603      	mov	r3, r0
 8008e4c:	4618      	mov	r0, r3
 8008e4e:	3708      	adds	r7, #8
 8008e50:	46bd      	mov	sp, r7
 8008e52:	bd80      	pop	{r7, pc}

08008e54 <HAL_UART_MspInit>:
 8008e54:	b480      	push	{r7}
 8008e56:	b083      	sub	sp, #12
 8008e58:	af00      	add	r7, sp, #0
 8008e5a:	6078      	str	r0, [r7, #4]
 8008e5c:	bf00      	nop
 8008e5e:	370c      	adds	r7, #12
 8008e60:	46bd      	mov	sp, r7
 8008e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e66:	4770      	bx	lr

08008e68 <UART_SetConfig>:
 8008e68:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008e6c:	b08c      	sub	sp, #48	@ 0x30
 8008e6e:	af00      	add	r7, sp, #0
 8008e70:	6178      	str	r0, [r7, #20]
 8008e72:	2300      	movs	r3, #0
 8008e74:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8008e78:	697b      	ldr	r3, [r7, #20]
 8008e7a:	689a      	ldr	r2, [r3, #8]
 8008e7c:	697b      	ldr	r3, [r7, #20]
 8008e7e:	691b      	ldr	r3, [r3, #16]
 8008e80:	431a      	orrs	r2, r3
 8008e82:	697b      	ldr	r3, [r7, #20]
 8008e84:	695b      	ldr	r3, [r3, #20]
 8008e86:	431a      	orrs	r2, r3
 8008e88:	697b      	ldr	r3, [r7, #20]
 8008e8a:	69db      	ldr	r3, [r3, #28]
 8008e8c:	4313      	orrs	r3, r2
 8008e8e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008e90:	697b      	ldr	r3, [r7, #20]
 8008e92:	681b      	ldr	r3, [r3, #0]
 8008e94:	681a      	ldr	r2, [r3, #0]
 8008e96:	4bab      	ldr	r3, [pc, #684]	@ (8009144 <UART_SetConfig+0x2dc>)
 8008e98:	4013      	ands	r3, r2
 8008e9a:	697a      	ldr	r2, [r7, #20]
 8008e9c:	6812      	ldr	r2, [r2, #0]
 8008e9e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008ea0:	430b      	orrs	r3, r1
 8008ea2:	6013      	str	r3, [r2, #0]
 8008ea4:	697b      	ldr	r3, [r7, #20]
 8008ea6:	681b      	ldr	r3, [r3, #0]
 8008ea8:	685b      	ldr	r3, [r3, #4]
 8008eaa:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8008eae:	697b      	ldr	r3, [r7, #20]
 8008eb0:	68da      	ldr	r2, [r3, #12]
 8008eb2:	697b      	ldr	r3, [r7, #20]
 8008eb4:	681b      	ldr	r3, [r3, #0]
 8008eb6:	430a      	orrs	r2, r1
 8008eb8:	605a      	str	r2, [r3, #4]
 8008eba:	697b      	ldr	r3, [r7, #20]
 8008ebc:	699b      	ldr	r3, [r3, #24]
 8008ebe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008ec0:	697b      	ldr	r3, [r7, #20]
 8008ec2:	681b      	ldr	r3, [r3, #0]
 8008ec4:	4aa0      	ldr	r2, [pc, #640]	@ (8009148 <UART_SetConfig+0x2e0>)
 8008ec6:	4293      	cmp	r3, r2
 8008ec8:	d004      	beq.n	8008ed4 <UART_SetConfig+0x6c>
 8008eca:	697b      	ldr	r3, [r7, #20]
 8008ecc:	6a1b      	ldr	r3, [r3, #32]
 8008ece:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008ed0:	4313      	orrs	r3, r2
 8008ed2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008ed4:	697b      	ldr	r3, [r7, #20]
 8008ed6:	681b      	ldr	r3, [r3, #0]
 8008ed8:	689b      	ldr	r3, [r3, #8]
 8008eda:	f023 436e 	bic.w	r3, r3, #3992977408	@ 0xee000000
 8008ede:	f423 6330 	bic.w	r3, r3, #2816	@ 0xb00
 8008ee2:	697a      	ldr	r2, [r7, #20]
 8008ee4:	6812      	ldr	r2, [r2, #0]
 8008ee6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008ee8:	430b      	orrs	r3, r1
 8008eea:	6093      	str	r3, [r2, #8]
 8008eec:	697b      	ldr	r3, [r7, #20]
 8008eee:	681b      	ldr	r3, [r3, #0]
 8008ef0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008ef2:	f023 010f 	bic.w	r1, r3, #15
 8008ef6:	697b      	ldr	r3, [r7, #20]
 8008ef8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8008efa:	697b      	ldr	r3, [r7, #20]
 8008efc:	681b      	ldr	r3, [r3, #0]
 8008efe:	430a      	orrs	r2, r1
 8008f00:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008f02:	697b      	ldr	r3, [r7, #20]
 8008f04:	681b      	ldr	r3, [r3, #0]
 8008f06:	4a91      	ldr	r2, [pc, #580]	@ (800914c <UART_SetConfig+0x2e4>)
 8008f08:	4293      	cmp	r3, r2
 8008f0a:	d125      	bne.n	8008f58 <UART_SetConfig+0xf0>
 8008f0c:	4b90      	ldr	r3, [pc, #576]	@ (8009150 <UART_SetConfig+0x2e8>)
 8008f0e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008f12:	f003 0303 	and.w	r3, r3, #3
 8008f16:	2b03      	cmp	r3, #3
 8008f18:	d81a      	bhi.n	8008f50 <UART_SetConfig+0xe8>
 8008f1a:	a201      	add	r2, pc, #4	@ (adr r2, 8008f20 <UART_SetConfig+0xb8>)
 8008f1c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008f20:	08008f31 	.word	0x08008f31
 8008f24:	08008f41 	.word	0x08008f41
 8008f28:	08008f39 	.word	0x08008f39
 8008f2c:	08008f49 	.word	0x08008f49
 8008f30:	2301      	movs	r3, #1
 8008f32:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008f36:	e0d6      	b.n	80090e6 <UART_SetConfig+0x27e>
 8008f38:	2302      	movs	r3, #2
 8008f3a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008f3e:	e0d2      	b.n	80090e6 <UART_SetConfig+0x27e>
 8008f40:	2304      	movs	r3, #4
 8008f42:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008f46:	e0ce      	b.n	80090e6 <UART_SetConfig+0x27e>
 8008f48:	2308      	movs	r3, #8
 8008f4a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008f4e:	e0ca      	b.n	80090e6 <UART_SetConfig+0x27e>
 8008f50:	2310      	movs	r3, #16
 8008f52:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008f56:	e0c6      	b.n	80090e6 <UART_SetConfig+0x27e>
 8008f58:	697b      	ldr	r3, [r7, #20]
 8008f5a:	681b      	ldr	r3, [r3, #0]
 8008f5c:	4a7d      	ldr	r2, [pc, #500]	@ (8009154 <UART_SetConfig+0x2ec>)
 8008f5e:	4293      	cmp	r3, r2
 8008f60:	d138      	bne.n	8008fd4 <UART_SetConfig+0x16c>
 8008f62:	4b7b      	ldr	r3, [pc, #492]	@ (8009150 <UART_SetConfig+0x2e8>)
 8008f64:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008f68:	f003 030c 	and.w	r3, r3, #12
 8008f6c:	2b0c      	cmp	r3, #12
 8008f6e:	d82d      	bhi.n	8008fcc <UART_SetConfig+0x164>
 8008f70:	a201      	add	r2, pc, #4	@ (adr r2, 8008f78 <UART_SetConfig+0x110>)
 8008f72:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008f76:	bf00      	nop
 8008f78:	08008fad 	.word	0x08008fad
 8008f7c:	08008fcd 	.word	0x08008fcd
 8008f80:	08008fcd 	.word	0x08008fcd
 8008f84:	08008fcd 	.word	0x08008fcd
 8008f88:	08008fbd 	.word	0x08008fbd
 8008f8c:	08008fcd 	.word	0x08008fcd
 8008f90:	08008fcd 	.word	0x08008fcd
 8008f94:	08008fcd 	.word	0x08008fcd
 8008f98:	08008fb5 	.word	0x08008fb5
 8008f9c:	08008fcd 	.word	0x08008fcd
 8008fa0:	08008fcd 	.word	0x08008fcd
 8008fa4:	08008fcd 	.word	0x08008fcd
 8008fa8:	08008fc5 	.word	0x08008fc5
 8008fac:	2300      	movs	r3, #0
 8008fae:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008fb2:	e098      	b.n	80090e6 <UART_SetConfig+0x27e>
 8008fb4:	2302      	movs	r3, #2
 8008fb6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008fba:	e094      	b.n	80090e6 <UART_SetConfig+0x27e>
 8008fbc:	2304      	movs	r3, #4
 8008fbe:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008fc2:	e090      	b.n	80090e6 <UART_SetConfig+0x27e>
 8008fc4:	2308      	movs	r3, #8
 8008fc6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008fca:	e08c      	b.n	80090e6 <UART_SetConfig+0x27e>
 8008fcc:	2310      	movs	r3, #16
 8008fce:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8008fd2:	e088      	b.n	80090e6 <UART_SetConfig+0x27e>
 8008fd4:	697b      	ldr	r3, [r7, #20]
 8008fd6:	681b      	ldr	r3, [r3, #0]
 8008fd8:	4a5f      	ldr	r2, [pc, #380]	@ (8009158 <UART_SetConfig+0x2f0>)
 8008fda:	4293      	cmp	r3, r2
 8008fdc:	d125      	bne.n	800902a <UART_SetConfig+0x1c2>
 8008fde:	4b5c      	ldr	r3, [pc, #368]	@ (8009150 <UART_SetConfig+0x2e8>)
 8008fe0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008fe4:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8008fe8:	2b30      	cmp	r3, #48	@ 0x30
 8008fea:	d016      	beq.n	800901a <UART_SetConfig+0x1b2>
 8008fec:	2b30      	cmp	r3, #48	@ 0x30
 8008fee:	d818      	bhi.n	8009022 <UART_SetConfig+0x1ba>
 8008ff0:	2b20      	cmp	r3, #32
 8008ff2:	d00a      	beq.n	800900a <UART_SetConfig+0x1a2>
 8008ff4:	2b20      	cmp	r3, #32
 8008ff6:	d814      	bhi.n	8009022 <UART_SetConfig+0x1ba>
 8008ff8:	2b00      	cmp	r3, #0
 8008ffa:	d002      	beq.n	8009002 <UART_SetConfig+0x19a>
 8008ffc:	2b10      	cmp	r3, #16
 8008ffe:	d008      	beq.n	8009012 <UART_SetConfig+0x1aa>
 8009000:	e00f      	b.n	8009022 <UART_SetConfig+0x1ba>
 8009002:	2300      	movs	r3, #0
 8009004:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8009008:	e06d      	b.n	80090e6 <UART_SetConfig+0x27e>
 800900a:	2302      	movs	r3, #2
 800900c:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8009010:	e069      	b.n	80090e6 <UART_SetConfig+0x27e>
 8009012:	2304      	movs	r3, #4
 8009014:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8009018:	e065      	b.n	80090e6 <UART_SetConfig+0x27e>
 800901a:	2308      	movs	r3, #8
 800901c:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8009020:	e061      	b.n	80090e6 <UART_SetConfig+0x27e>
 8009022:	2310      	movs	r3, #16
 8009024:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8009028:	e05d      	b.n	80090e6 <UART_SetConfig+0x27e>
 800902a:	697b      	ldr	r3, [r7, #20]
 800902c:	681b      	ldr	r3, [r3, #0]
 800902e:	4a4b      	ldr	r2, [pc, #300]	@ (800915c <UART_SetConfig+0x2f4>)
 8009030:	4293      	cmp	r3, r2
 8009032:	d125      	bne.n	8009080 <UART_SetConfig+0x218>
 8009034:	4b46      	ldr	r3, [pc, #280]	@ (8009150 <UART_SetConfig+0x2e8>)
 8009036:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800903a:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 800903e:	2bc0      	cmp	r3, #192	@ 0xc0
 8009040:	d016      	beq.n	8009070 <UART_SetConfig+0x208>
 8009042:	2bc0      	cmp	r3, #192	@ 0xc0
 8009044:	d818      	bhi.n	8009078 <UART_SetConfig+0x210>
 8009046:	2b80      	cmp	r3, #128	@ 0x80
 8009048:	d00a      	beq.n	8009060 <UART_SetConfig+0x1f8>
 800904a:	2b80      	cmp	r3, #128	@ 0x80
 800904c:	d814      	bhi.n	8009078 <UART_SetConfig+0x210>
 800904e:	2b00      	cmp	r3, #0
 8009050:	d002      	beq.n	8009058 <UART_SetConfig+0x1f0>
 8009052:	2b40      	cmp	r3, #64	@ 0x40
 8009054:	d008      	beq.n	8009068 <UART_SetConfig+0x200>
 8009056:	e00f      	b.n	8009078 <UART_SetConfig+0x210>
 8009058:	2300      	movs	r3, #0
 800905a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800905e:	e042      	b.n	80090e6 <UART_SetConfig+0x27e>
 8009060:	2302      	movs	r3, #2
 8009062:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8009066:	e03e      	b.n	80090e6 <UART_SetConfig+0x27e>
 8009068:	2304      	movs	r3, #4
 800906a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800906e:	e03a      	b.n	80090e6 <UART_SetConfig+0x27e>
 8009070:	2308      	movs	r3, #8
 8009072:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8009076:	e036      	b.n	80090e6 <UART_SetConfig+0x27e>
 8009078:	2310      	movs	r3, #16
 800907a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800907e:	e032      	b.n	80090e6 <UART_SetConfig+0x27e>
 8009080:	697b      	ldr	r3, [r7, #20]
 8009082:	681b      	ldr	r3, [r3, #0]
 8009084:	4a30      	ldr	r2, [pc, #192]	@ (8009148 <UART_SetConfig+0x2e0>)
 8009086:	4293      	cmp	r3, r2
 8009088:	d12a      	bne.n	80090e0 <UART_SetConfig+0x278>
 800908a:	4b31      	ldr	r3, [pc, #196]	@ (8009150 <UART_SetConfig+0x2e8>)
 800908c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8009090:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8009094:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8009098:	d01a      	beq.n	80090d0 <UART_SetConfig+0x268>
 800909a:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800909e:	d81b      	bhi.n	80090d8 <UART_SetConfig+0x270>
 80090a0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80090a4:	d00c      	beq.n	80090c0 <UART_SetConfig+0x258>
 80090a6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80090aa:	d815      	bhi.n	80090d8 <UART_SetConfig+0x270>
 80090ac:	2b00      	cmp	r3, #0
 80090ae:	d003      	beq.n	80090b8 <UART_SetConfig+0x250>
 80090b0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80090b4:	d008      	beq.n	80090c8 <UART_SetConfig+0x260>
 80090b6:	e00f      	b.n	80090d8 <UART_SetConfig+0x270>
 80090b8:	2300      	movs	r3, #0
 80090ba:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80090be:	e012      	b.n	80090e6 <UART_SetConfig+0x27e>
 80090c0:	2302      	movs	r3, #2
 80090c2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80090c6:	e00e      	b.n	80090e6 <UART_SetConfig+0x27e>
 80090c8:	2304      	movs	r3, #4
 80090ca:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80090ce:	e00a      	b.n	80090e6 <UART_SetConfig+0x27e>
 80090d0:	2308      	movs	r3, #8
 80090d2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80090d6:	e006      	b.n	80090e6 <UART_SetConfig+0x27e>
 80090d8:	2310      	movs	r3, #16
 80090da:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80090de:	e002      	b.n	80090e6 <UART_SetConfig+0x27e>
 80090e0:	2310      	movs	r3, #16
 80090e2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80090e6:	697b      	ldr	r3, [r7, #20]
 80090e8:	681b      	ldr	r3, [r3, #0]
 80090ea:	4a17      	ldr	r2, [pc, #92]	@ (8009148 <UART_SetConfig+0x2e0>)
 80090ec:	4293      	cmp	r3, r2
 80090ee:	f040 80a8 	bne.w	8009242 <UART_SetConfig+0x3da>
 80090f2:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 80090f6:	2b08      	cmp	r3, #8
 80090f8:	d834      	bhi.n	8009164 <UART_SetConfig+0x2fc>
 80090fa:	a201      	add	r2, pc, #4	@ (adr r2, 8009100 <UART_SetConfig+0x298>)
 80090fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009100:	08009125 	.word	0x08009125
 8009104:	08009165 	.word	0x08009165
 8009108:	0800912d 	.word	0x0800912d
 800910c:	08009165 	.word	0x08009165
 8009110:	08009133 	.word	0x08009133
 8009114:	08009165 	.word	0x08009165
 8009118:	08009165 	.word	0x08009165
 800911c:	08009165 	.word	0x08009165
 8009120:	0800913b 	.word	0x0800913b
 8009124:	f7fd ff46 	bl	8006fb4 <HAL_RCC_GetPCLK1Freq>
 8009128:	6278      	str	r0, [r7, #36]	@ 0x24
 800912a:	e021      	b.n	8009170 <UART_SetConfig+0x308>
 800912c:	4b0c      	ldr	r3, [pc, #48]	@ (8009160 <UART_SetConfig+0x2f8>)
 800912e:	627b      	str	r3, [r7, #36]	@ 0x24
 8009130:	e01e      	b.n	8009170 <UART_SetConfig+0x308>
 8009132:	f7fd fed1 	bl	8006ed8 <HAL_RCC_GetSysClockFreq>
 8009136:	6278      	str	r0, [r7, #36]	@ 0x24
 8009138:	e01a      	b.n	8009170 <UART_SetConfig+0x308>
 800913a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800913e:	627b      	str	r3, [r7, #36]	@ 0x24
 8009140:	e016      	b.n	8009170 <UART_SetConfig+0x308>
 8009142:	bf00      	nop
 8009144:	cfff69f3 	.word	0xcfff69f3
 8009148:	40008000 	.word	0x40008000
 800914c:	40013800 	.word	0x40013800
 8009150:	40021000 	.word	0x40021000
 8009154:	40004400 	.word	0x40004400
 8009158:	40004800 	.word	0x40004800
 800915c:	40004c00 	.word	0x40004c00
 8009160:	00f42400 	.word	0x00f42400
 8009164:	2300      	movs	r3, #0
 8009166:	627b      	str	r3, [r7, #36]	@ 0x24
 8009168:	2301      	movs	r3, #1
 800916a:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800916e:	bf00      	nop
 8009170:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009172:	2b00      	cmp	r3, #0
 8009174:	f000 812a 	beq.w	80093cc <UART_SetConfig+0x564>
 8009178:	697b      	ldr	r3, [r7, #20]
 800917a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800917c:	4a9e      	ldr	r2, [pc, #632]	@ (80093f8 <UART_SetConfig+0x590>)
 800917e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8009182:	461a      	mov	r2, r3
 8009184:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009186:	fbb3 f3f2 	udiv	r3, r3, r2
 800918a:	61bb      	str	r3, [r7, #24]
 800918c:	697b      	ldr	r3, [r7, #20]
 800918e:	685a      	ldr	r2, [r3, #4]
 8009190:	4613      	mov	r3, r2
 8009192:	005b      	lsls	r3, r3, #1
 8009194:	4413      	add	r3, r2
 8009196:	69ba      	ldr	r2, [r7, #24]
 8009198:	429a      	cmp	r2, r3
 800919a:	d305      	bcc.n	80091a8 <UART_SetConfig+0x340>
 800919c:	697b      	ldr	r3, [r7, #20]
 800919e:	685b      	ldr	r3, [r3, #4]
 80091a0:	031b      	lsls	r3, r3, #12
 80091a2:	69ba      	ldr	r2, [r7, #24]
 80091a4:	429a      	cmp	r2, r3
 80091a6:	d903      	bls.n	80091b0 <UART_SetConfig+0x348>
 80091a8:	2301      	movs	r3, #1
 80091aa:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 80091ae:	e10d      	b.n	80093cc <UART_SetConfig+0x564>
 80091b0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80091b2:	2200      	movs	r2, #0
 80091b4:	60bb      	str	r3, [r7, #8]
 80091b6:	60fa      	str	r2, [r7, #12]
 80091b8:	697b      	ldr	r3, [r7, #20]
 80091ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80091bc:	4a8e      	ldr	r2, [pc, #568]	@ (80093f8 <UART_SetConfig+0x590>)
 80091be:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80091c2:	b29b      	uxth	r3, r3
 80091c4:	2200      	movs	r2, #0
 80091c6:	603b      	str	r3, [r7, #0]
 80091c8:	607a      	str	r2, [r7, #4]
 80091ca:	e9d7 2300 	ldrd	r2, r3, [r7]
 80091ce:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80091d2:	f7f7 f825 	bl	8000220 <__aeabi_uldivmod>
 80091d6:	4602      	mov	r2, r0
 80091d8:	460b      	mov	r3, r1
 80091da:	4610      	mov	r0, r2
 80091dc:	4619      	mov	r1, r3
 80091de:	f04f 0200 	mov.w	r2, #0
 80091e2:	f04f 0300 	mov.w	r3, #0
 80091e6:	020b      	lsls	r3, r1, #8
 80091e8:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 80091ec:	0202      	lsls	r2, r0, #8
 80091ee:	6979      	ldr	r1, [r7, #20]
 80091f0:	6849      	ldr	r1, [r1, #4]
 80091f2:	0849      	lsrs	r1, r1, #1
 80091f4:	2000      	movs	r0, #0
 80091f6:	460c      	mov	r4, r1
 80091f8:	4605      	mov	r5, r0
 80091fa:	eb12 0804 	adds.w	r8, r2, r4
 80091fe:	eb43 0905 	adc.w	r9, r3, r5
 8009202:	697b      	ldr	r3, [r7, #20]
 8009204:	685b      	ldr	r3, [r3, #4]
 8009206:	2200      	movs	r2, #0
 8009208:	469a      	mov	sl, r3
 800920a:	4693      	mov	fp, r2
 800920c:	4652      	mov	r2, sl
 800920e:	465b      	mov	r3, fp
 8009210:	4640      	mov	r0, r8
 8009212:	4649      	mov	r1, r9
 8009214:	f7f7 f804 	bl	8000220 <__aeabi_uldivmod>
 8009218:	4602      	mov	r2, r0
 800921a:	460b      	mov	r3, r1
 800921c:	4613      	mov	r3, r2
 800921e:	623b      	str	r3, [r7, #32]
 8009220:	6a3b      	ldr	r3, [r7, #32]
 8009222:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8009226:	d308      	bcc.n	800923a <UART_SetConfig+0x3d2>
 8009228:	6a3b      	ldr	r3, [r7, #32]
 800922a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800922e:	d204      	bcs.n	800923a <UART_SetConfig+0x3d2>
 8009230:	697b      	ldr	r3, [r7, #20]
 8009232:	681b      	ldr	r3, [r3, #0]
 8009234:	6a3a      	ldr	r2, [r7, #32]
 8009236:	60da      	str	r2, [r3, #12]
 8009238:	e0c8      	b.n	80093cc <UART_SetConfig+0x564>
 800923a:	2301      	movs	r3, #1
 800923c:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8009240:	e0c4      	b.n	80093cc <UART_SetConfig+0x564>
 8009242:	697b      	ldr	r3, [r7, #20]
 8009244:	69db      	ldr	r3, [r3, #28]
 8009246:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800924a:	d167      	bne.n	800931c <UART_SetConfig+0x4b4>
 800924c:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8009250:	2b08      	cmp	r3, #8
 8009252:	d828      	bhi.n	80092a6 <UART_SetConfig+0x43e>
 8009254:	a201      	add	r2, pc, #4	@ (adr r2, 800925c <UART_SetConfig+0x3f4>)
 8009256:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800925a:	bf00      	nop
 800925c:	08009281 	.word	0x08009281
 8009260:	08009289 	.word	0x08009289
 8009264:	08009291 	.word	0x08009291
 8009268:	080092a7 	.word	0x080092a7
 800926c:	08009297 	.word	0x08009297
 8009270:	080092a7 	.word	0x080092a7
 8009274:	080092a7 	.word	0x080092a7
 8009278:	080092a7 	.word	0x080092a7
 800927c:	0800929f 	.word	0x0800929f
 8009280:	f7fd fe98 	bl	8006fb4 <HAL_RCC_GetPCLK1Freq>
 8009284:	6278      	str	r0, [r7, #36]	@ 0x24
 8009286:	e014      	b.n	80092b2 <UART_SetConfig+0x44a>
 8009288:	f7fd feaa 	bl	8006fe0 <HAL_RCC_GetPCLK2Freq>
 800928c:	6278      	str	r0, [r7, #36]	@ 0x24
 800928e:	e010      	b.n	80092b2 <UART_SetConfig+0x44a>
 8009290:	4b5a      	ldr	r3, [pc, #360]	@ (80093fc <UART_SetConfig+0x594>)
 8009292:	627b      	str	r3, [r7, #36]	@ 0x24
 8009294:	e00d      	b.n	80092b2 <UART_SetConfig+0x44a>
 8009296:	f7fd fe1f 	bl	8006ed8 <HAL_RCC_GetSysClockFreq>
 800929a:	6278      	str	r0, [r7, #36]	@ 0x24
 800929c:	e009      	b.n	80092b2 <UART_SetConfig+0x44a>
 800929e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80092a2:	627b      	str	r3, [r7, #36]	@ 0x24
 80092a4:	e005      	b.n	80092b2 <UART_SetConfig+0x44a>
 80092a6:	2300      	movs	r3, #0
 80092a8:	627b      	str	r3, [r7, #36]	@ 0x24
 80092aa:	2301      	movs	r3, #1
 80092ac:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 80092b0:	bf00      	nop
 80092b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80092b4:	2b00      	cmp	r3, #0
 80092b6:	f000 8089 	beq.w	80093cc <UART_SetConfig+0x564>
 80092ba:	697b      	ldr	r3, [r7, #20]
 80092bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80092be:	4a4e      	ldr	r2, [pc, #312]	@ (80093f8 <UART_SetConfig+0x590>)
 80092c0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80092c4:	461a      	mov	r2, r3
 80092c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80092c8:	fbb3 f3f2 	udiv	r3, r3, r2
 80092cc:	005a      	lsls	r2, r3, #1
 80092ce:	697b      	ldr	r3, [r7, #20]
 80092d0:	685b      	ldr	r3, [r3, #4]
 80092d2:	085b      	lsrs	r3, r3, #1
 80092d4:	441a      	add	r2, r3
 80092d6:	697b      	ldr	r3, [r7, #20]
 80092d8:	685b      	ldr	r3, [r3, #4]
 80092da:	fbb2 f3f3 	udiv	r3, r2, r3
 80092de:	623b      	str	r3, [r7, #32]
 80092e0:	6a3b      	ldr	r3, [r7, #32]
 80092e2:	2b0f      	cmp	r3, #15
 80092e4:	d916      	bls.n	8009314 <UART_SetConfig+0x4ac>
 80092e6:	6a3b      	ldr	r3, [r7, #32]
 80092e8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80092ec:	d212      	bcs.n	8009314 <UART_SetConfig+0x4ac>
 80092ee:	6a3b      	ldr	r3, [r7, #32]
 80092f0:	b29b      	uxth	r3, r3
 80092f2:	f023 030f 	bic.w	r3, r3, #15
 80092f6:	83fb      	strh	r3, [r7, #30]
 80092f8:	6a3b      	ldr	r3, [r7, #32]
 80092fa:	085b      	lsrs	r3, r3, #1
 80092fc:	b29b      	uxth	r3, r3
 80092fe:	f003 0307 	and.w	r3, r3, #7
 8009302:	b29a      	uxth	r2, r3
 8009304:	8bfb      	ldrh	r3, [r7, #30]
 8009306:	4313      	orrs	r3, r2
 8009308:	83fb      	strh	r3, [r7, #30]
 800930a:	697b      	ldr	r3, [r7, #20]
 800930c:	681b      	ldr	r3, [r3, #0]
 800930e:	8bfa      	ldrh	r2, [r7, #30]
 8009310:	60da      	str	r2, [r3, #12]
 8009312:	e05b      	b.n	80093cc <UART_SetConfig+0x564>
 8009314:	2301      	movs	r3, #1
 8009316:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800931a:	e057      	b.n	80093cc <UART_SetConfig+0x564>
 800931c:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8009320:	2b08      	cmp	r3, #8
 8009322:	d828      	bhi.n	8009376 <UART_SetConfig+0x50e>
 8009324:	a201      	add	r2, pc, #4	@ (adr r2, 800932c <UART_SetConfig+0x4c4>)
 8009326:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800932a:	bf00      	nop
 800932c:	08009351 	.word	0x08009351
 8009330:	08009359 	.word	0x08009359
 8009334:	08009361 	.word	0x08009361
 8009338:	08009377 	.word	0x08009377
 800933c:	08009367 	.word	0x08009367
 8009340:	08009377 	.word	0x08009377
 8009344:	08009377 	.word	0x08009377
 8009348:	08009377 	.word	0x08009377
 800934c:	0800936f 	.word	0x0800936f
 8009350:	f7fd fe30 	bl	8006fb4 <HAL_RCC_GetPCLK1Freq>
 8009354:	6278      	str	r0, [r7, #36]	@ 0x24
 8009356:	e014      	b.n	8009382 <UART_SetConfig+0x51a>
 8009358:	f7fd fe42 	bl	8006fe0 <HAL_RCC_GetPCLK2Freq>
 800935c:	6278      	str	r0, [r7, #36]	@ 0x24
 800935e:	e010      	b.n	8009382 <UART_SetConfig+0x51a>
 8009360:	4b26      	ldr	r3, [pc, #152]	@ (80093fc <UART_SetConfig+0x594>)
 8009362:	627b      	str	r3, [r7, #36]	@ 0x24
 8009364:	e00d      	b.n	8009382 <UART_SetConfig+0x51a>
 8009366:	f7fd fdb7 	bl	8006ed8 <HAL_RCC_GetSysClockFreq>
 800936a:	6278      	str	r0, [r7, #36]	@ 0x24
 800936c:	e009      	b.n	8009382 <UART_SetConfig+0x51a>
 800936e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8009372:	627b      	str	r3, [r7, #36]	@ 0x24
 8009374:	e005      	b.n	8009382 <UART_SetConfig+0x51a>
 8009376:	2300      	movs	r3, #0
 8009378:	627b      	str	r3, [r7, #36]	@ 0x24
 800937a:	2301      	movs	r3, #1
 800937c:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8009380:	bf00      	nop
 8009382:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009384:	2b00      	cmp	r3, #0
 8009386:	d021      	beq.n	80093cc <UART_SetConfig+0x564>
 8009388:	697b      	ldr	r3, [r7, #20]
 800938a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800938c:	4a1a      	ldr	r2, [pc, #104]	@ (80093f8 <UART_SetConfig+0x590>)
 800938e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8009392:	461a      	mov	r2, r3
 8009394:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009396:	fbb3 f2f2 	udiv	r2, r3, r2
 800939a:	697b      	ldr	r3, [r7, #20]
 800939c:	685b      	ldr	r3, [r3, #4]
 800939e:	085b      	lsrs	r3, r3, #1
 80093a0:	441a      	add	r2, r3
 80093a2:	697b      	ldr	r3, [r7, #20]
 80093a4:	685b      	ldr	r3, [r3, #4]
 80093a6:	fbb2 f3f3 	udiv	r3, r2, r3
 80093aa:	623b      	str	r3, [r7, #32]
 80093ac:	6a3b      	ldr	r3, [r7, #32]
 80093ae:	2b0f      	cmp	r3, #15
 80093b0:	d909      	bls.n	80093c6 <UART_SetConfig+0x55e>
 80093b2:	6a3b      	ldr	r3, [r7, #32]
 80093b4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80093b8:	d205      	bcs.n	80093c6 <UART_SetConfig+0x55e>
 80093ba:	6a3b      	ldr	r3, [r7, #32]
 80093bc:	b29a      	uxth	r2, r3
 80093be:	697b      	ldr	r3, [r7, #20]
 80093c0:	681b      	ldr	r3, [r3, #0]
 80093c2:	60da      	str	r2, [r3, #12]
 80093c4:	e002      	b.n	80093cc <UART_SetConfig+0x564>
 80093c6:	2301      	movs	r3, #1
 80093c8:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 80093cc:	697b      	ldr	r3, [r7, #20]
 80093ce:	2201      	movs	r2, #1
 80093d0:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 80093d4:	697b      	ldr	r3, [r7, #20]
 80093d6:	2201      	movs	r2, #1
 80093d8:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 80093dc:	697b      	ldr	r3, [r7, #20]
 80093de:	2200      	movs	r2, #0
 80093e0:	675a      	str	r2, [r3, #116]	@ 0x74
 80093e2:	697b      	ldr	r3, [r7, #20]
 80093e4:	2200      	movs	r2, #0
 80093e6:	679a      	str	r2, [r3, #120]	@ 0x78
 80093e8:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 80093ec:	4618      	mov	r0, r3
 80093ee:	3730      	adds	r7, #48	@ 0x30
 80093f0:	46bd      	mov	sp, r7
 80093f2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80093f6:	bf00      	nop
 80093f8:	0800ca0c 	.word	0x0800ca0c
 80093fc:	00f42400 	.word	0x00f42400

08009400 <UART_AdvFeatureConfig>:
 8009400:	b480      	push	{r7}
 8009402:	b083      	sub	sp, #12
 8009404:	af00      	add	r7, sp, #0
 8009406:	6078      	str	r0, [r7, #4]
 8009408:	687b      	ldr	r3, [r7, #4]
 800940a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800940c:	f003 0308 	and.w	r3, r3, #8
 8009410:	2b00      	cmp	r3, #0
 8009412:	d00a      	beq.n	800942a <UART_AdvFeatureConfig+0x2a>
 8009414:	687b      	ldr	r3, [r7, #4]
 8009416:	681b      	ldr	r3, [r3, #0]
 8009418:	685b      	ldr	r3, [r3, #4]
 800941a:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800941e:	687b      	ldr	r3, [r7, #4]
 8009420:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8009422:	687b      	ldr	r3, [r7, #4]
 8009424:	681b      	ldr	r3, [r3, #0]
 8009426:	430a      	orrs	r2, r1
 8009428:	605a      	str	r2, [r3, #4]
 800942a:	687b      	ldr	r3, [r7, #4]
 800942c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800942e:	f003 0301 	and.w	r3, r3, #1
 8009432:	2b00      	cmp	r3, #0
 8009434:	d00a      	beq.n	800944c <UART_AdvFeatureConfig+0x4c>
 8009436:	687b      	ldr	r3, [r7, #4]
 8009438:	681b      	ldr	r3, [r3, #0]
 800943a:	685b      	ldr	r3, [r3, #4]
 800943c:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 8009440:	687b      	ldr	r3, [r7, #4]
 8009442:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009444:	687b      	ldr	r3, [r7, #4]
 8009446:	681b      	ldr	r3, [r3, #0]
 8009448:	430a      	orrs	r2, r1
 800944a:	605a      	str	r2, [r3, #4]
 800944c:	687b      	ldr	r3, [r7, #4]
 800944e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009450:	f003 0302 	and.w	r3, r3, #2
 8009454:	2b00      	cmp	r3, #0
 8009456:	d00a      	beq.n	800946e <UART_AdvFeatureConfig+0x6e>
 8009458:	687b      	ldr	r3, [r7, #4]
 800945a:	681b      	ldr	r3, [r3, #0]
 800945c:	685b      	ldr	r3, [r3, #4]
 800945e:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8009466:	687b      	ldr	r3, [r7, #4]
 8009468:	681b      	ldr	r3, [r3, #0]
 800946a:	430a      	orrs	r2, r1
 800946c:	605a      	str	r2, [r3, #4]
 800946e:	687b      	ldr	r3, [r7, #4]
 8009470:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009472:	f003 0304 	and.w	r3, r3, #4
 8009476:	2b00      	cmp	r3, #0
 8009478:	d00a      	beq.n	8009490 <UART_AdvFeatureConfig+0x90>
 800947a:	687b      	ldr	r3, [r7, #4]
 800947c:	681b      	ldr	r3, [r3, #0]
 800947e:	685b      	ldr	r3, [r3, #4]
 8009480:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 8009484:	687b      	ldr	r3, [r7, #4]
 8009486:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8009488:	687b      	ldr	r3, [r7, #4]
 800948a:	681b      	ldr	r3, [r3, #0]
 800948c:	430a      	orrs	r2, r1
 800948e:	605a      	str	r2, [r3, #4]
 8009490:	687b      	ldr	r3, [r7, #4]
 8009492:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009494:	f003 0310 	and.w	r3, r3, #16
 8009498:	2b00      	cmp	r3, #0
 800949a:	d00a      	beq.n	80094b2 <UART_AdvFeatureConfig+0xb2>
 800949c:	687b      	ldr	r3, [r7, #4]
 800949e:	681b      	ldr	r3, [r3, #0]
 80094a0:	689b      	ldr	r3, [r3, #8]
 80094a2:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 80094a6:	687b      	ldr	r3, [r7, #4]
 80094a8:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80094aa:	687b      	ldr	r3, [r7, #4]
 80094ac:	681b      	ldr	r3, [r3, #0]
 80094ae:	430a      	orrs	r2, r1
 80094b0:	609a      	str	r2, [r3, #8]
 80094b2:	687b      	ldr	r3, [r7, #4]
 80094b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80094b6:	f003 0320 	and.w	r3, r3, #32
 80094ba:	2b00      	cmp	r3, #0
 80094bc:	d00a      	beq.n	80094d4 <UART_AdvFeatureConfig+0xd4>
 80094be:	687b      	ldr	r3, [r7, #4]
 80094c0:	681b      	ldr	r3, [r3, #0]
 80094c2:	689b      	ldr	r3, [r3, #8]
 80094c4:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 80094c8:	687b      	ldr	r3, [r7, #4]
 80094ca:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80094cc:	687b      	ldr	r3, [r7, #4]
 80094ce:	681b      	ldr	r3, [r3, #0]
 80094d0:	430a      	orrs	r2, r1
 80094d2:	609a      	str	r2, [r3, #8]
 80094d4:	687b      	ldr	r3, [r7, #4]
 80094d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80094d8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80094dc:	2b00      	cmp	r3, #0
 80094de:	d01a      	beq.n	8009516 <UART_AdvFeatureConfig+0x116>
 80094e0:	687b      	ldr	r3, [r7, #4]
 80094e2:	681b      	ldr	r3, [r3, #0]
 80094e4:	685b      	ldr	r3, [r3, #4]
 80094e6:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 80094ea:	687b      	ldr	r3, [r7, #4]
 80094ec:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80094ee:	687b      	ldr	r3, [r7, #4]
 80094f0:	681b      	ldr	r3, [r3, #0]
 80094f2:	430a      	orrs	r2, r1
 80094f4:	605a      	str	r2, [r3, #4]
 80094f6:	687b      	ldr	r3, [r7, #4]
 80094f8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80094fa:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80094fe:	d10a      	bne.n	8009516 <UART_AdvFeatureConfig+0x116>
 8009500:	687b      	ldr	r3, [r7, #4]
 8009502:	681b      	ldr	r3, [r3, #0]
 8009504:	685b      	ldr	r3, [r3, #4]
 8009506:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800950a:	687b      	ldr	r3, [r7, #4]
 800950c:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800950e:	687b      	ldr	r3, [r7, #4]
 8009510:	681b      	ldr	r3, [r3, #0]
 8009512:	430a      	orrs	r2, r1
 8009514:	605a      	str	r2, [r3, #4]
 8009516:	687b      	ldr	r3, [r7, #4]
 8009518:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800951a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800951e:	2b00      	cmp	r3, #0
 8009520:	d00a      	beq.n	8009538 <UART_AdvFeatureConfig+0x138>
 8009522:	687b      	ldr	r3, [r7, #4]
 8009524:	681b      	ldr	r3, [r3, #0]
 8009526:	685b      	ldr	r3, [r3, #4]
 8009528:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 800952c:	687b      	ldr	r3, [r7, #4]
 800952e:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8009530:	687b      	ldr	r3, [r7, #4]
 8009532:	681b      	ldr	r3, [r3, #0]
 8009534:	430a      	orrs	r2, r1
 8009536:	605a      	str	r2, [r3, #4]
 8009538:	bf00      	nop
 800953a:	370c      	adds	r7, #12
 800953c:	46bd      	mov	sp, r7
 800953e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009542:	4770      	bx	lr

08009544 <UART_CheckIdleState>:
 8009544:	b580      	push	{r7, lr}
 8009546:	b098      	sub	sp, #96	@ 0x60
 8009548:	af02      	add	r7, sp, #8
 800954a:	6078      	str	r0, [r7, #4]
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	2200      	movs	r2, #0
 8009550:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009554:	f7fa fa1a 	bl	800398c <HAL_GetTick>
 8009558:	6578      	str	r0, [r7, #84]	@ 0x54
 800955a:	687b      	ldr	r3, [r7, #4]
 800955c:	681b      	ldr	r3, [r3, #0]
 800955e:	681b      	ldr	r3, [r3, #0]
 8009560:	f003 0308 	and.w	r3, r3, #8
 8009564:	2b08      	cmp	r3, #8
 8009566:	d12f      	bne.n	80095c8 <UART_CheckIdleState+0x84>
 8009568:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800956c:	9300      	str	r3, [sp, #0]
 800956e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8009570:	2200      	movs	r2, #0
 8009572:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8009576:	6878      	ldr	r0, [r7, #4]
 8009578:	f000 f88e 	bl	8009698 <UART_WaitOnFlagUntilTimeout>
 800957c:	4603      	mov	r3, r0
 800957e:	2b00      	cmp	r3, #0
 8009580:	d022      	beq.n	80095c8 <UART_CheckIdleState+0x84>
 8009582:	687b      	ldr	r3, [r7, #4]
 8009584:	681b      	ldr	r3, [r3, #0]
 8009586:	63bb      	str	r3, [r7, #56]	@ 0x38
 8009588:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800958a:	e853 3f00 	ldrex	r3, [r3]
 800958e:	637b      	str	r3, [r7, #52]	@ 0x34
 8009590:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009592:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009596:	653b      	str	r3, [r7, #80]	@ 0x50
 8009598:	687b      	ldr	r3, [r7, #4]
 800959a:	681b      	ldr	r3, [r3, #0]
 800959c:	461a      	mov	r2, r3
 800959e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80095a0:	647b      	str	r3, [r7, #68]	@ 0x44
 80095a2:	643a      	str	r2, [r7, #64]	@ 0x40
 80095a4:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80095a6:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80095a8:	e841 2300 	strex	r3, r2, [r1]
 80095ac:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80095ae:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80095b0:	2b00      	cmp	r3, #0
 80095b2:	d1e6      	bne.n	8009582 <UART_CheckIdleState+0x3e>
 80095b4:	687b      	ldr	r3, [r7, #4]
 80095b6:	2220      	movs	r2, #32
 80095b8:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80095bc:	687b      	ldr	r3, [r7, #4]
 80095be:	2200      	movs	r2, #0
 80095c0:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 80095c4:	2303      	movs	r3, #3
 80095c6:	e063      	b.n	8009690 <UART_CheckIdleState+0x14c>
 80095c8:	687b      	ldr	r3, [r7, #4]
 80095ca:	681b      	ldr	r3, [r3, #0]
 80095cc:	681b      	ldr	r3, [r3, #0]
 80095ce:	f003 0304 	and.w	r3, r3, #4
 80095d2:	2b04      	cmp	r3, #4
 80095d4:	d149      	bne.n	800966a <UART_CheckIdleState+0x126>
 80095d6:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 80095da:	9300      	str	r3, [sp, #0]
 80095dc:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80095de:	2200      	movs	r2, #0
 80095e0:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 80095e4:	6878      	ldr	r0, [r7, #4]
 80095e6:	f000 f857 	bl	8009698 <UART_WaitOnFlagUntilTimeout>
 80095ea:	4603      	mov	r3, r0
 80095ec:	2b00      	cmp	r3, #0
 80095ee:	d03c      	beq.n	800966a <UART_CheckIdleState+0x126>
 80095f0:	687b      	ldr	r3, [r7, #4]
 80095f2:	681b      	ldr	r3, [r3, #0]
 80095f4:	627b      	str	r3, [r7, #36]	@ 0x24
 80095f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80095f8:	e853 3f00 	ldrex	r3, [r3]
 80095fc:	623b      	str	r3, [r7, #32]
 80095fe:	6a3b      	ldr	r3, [r7, #32]
 8009600:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8009604:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8009606:	687b      	ldr	r3, [r7, #4]
 8009608:	681b      	ldr	r3, [r3, #0]
 800960a:	461a      	mov	r2, r3
 800960c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800960e:	633b      	str	r3, [r7, #48]	@ 0x30
 8009610:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8009612:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8009614:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009616:	e841 2300 	strex	r3, r2, [r1]
 800961a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800961c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800961e:	2b00      	cmp	r3, #0
 8009620:	d1e6      	bne.n	80095f0 <UART_CheckIdleState+0xac>
 8009622:	687b      	ldr	r3, [r7, #4]
 8009624:	681b      	ldr	r3, [r3, #0]
 8009626:	3308      	adds	r3, #8
 8009628:	613b      	str	r3, [r7, #16]
 800962a:	693b      	ldr	r3, [r7, #16]
 800962c:	e853 3f00 	ldrex	r3, [r3]
 8009630:	60fb      	str	r3, [r7, #12]
 8009632:	68fb      	ldr	r3, [r7, #12]
 8009634:	f023 0301 	bic.w	r3, r3, #1
 8009638:	64bb      	str	r3, [r7, #72]	@ 0x48
 800963a:	687b      	ldr	r3, [r7, #4]
 800963c:	681b      	ldr	r3, [r3, #0]
 800963e:	3308      	adds	r3, #8
 8009640:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8009642:	61fa      	str	r2, [r7, #28]
 8009644:	61bb      	str	r3, [r7, #24]
 8009646:	69b9      	ldr	r1, [r7, #24]
 8009648:	69fa      	ldr	r2, [r7, #28]
 800964a:	e841 2300 	strex	r3, r2, [r1]
 800964e:	617b      	str	r3, [r7, #20]
 8009650:	697b      	ldr	r3, [r7, #20]
 8009652:	2b00      	cmp	r3, #0
 8009654:	d1e5      	bne.n	8009622 <UART_CheckIdleState+0xde>
 8009656:	687b      	ldr	r3, [r7, #4]
 8009658:	2220      	movs	r2, #32
 800965a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800965e:	687b      	ldr	r3, [r7, #4]
 8009660:	2200      	movs	r2, #0
 8009662:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009666:	2303      	movs	r3, #3
 8009668:	e012      	b.n	8009690 <UART_CheckIdleState+0x14c>
 800966a:	687b      	ldr	r3, [r7, #4]
 800966c:	2220      	movs	r2, #32
 800966e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009672:	687b      	ldr	r3, [r7, #4]
 8009674:	2220      	movs	r2, #32
 8009676:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800967a:	687b      	ldr	r3, [r7, #4]
 800967c:	2200      	movs	r2, #0
 800967e:	66da      	str	r2, [r3, #108]	@ 0x6c
 8009680:	687b      	ldr	r3, [r7, #4]
 8009682:	2200      	movs	r2, #0
 8009684:	671a      	str	r2, [r3, #112]	@ 0x70
 8009686:	687b      	ldr	r3, [r7, #4]
 8009688:	2200      	movs	r2, #0
 800968a:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800968e:	2300      	movs	r3, #0
 8009690:	4618      	mov	r0, r3
 8009692:	3758      	adds	r7, #88	@ 0x58
 8009694:	46bd      	mov	sp, r7
 8009696:	bd80      	pop	{r7, pc}

08009698 <UART_WaitOnFlagUntilTimeout>:
 8009698:	b580      	push	{r7, lr}
 800969a:	b084      	sub	sp, #16
 800969c:	af00      	add	r7, sp, #0
 800969e:	60f8      	str	r0, [r7, #12]
 80096a0:	60b9      	str	r1, [r7, #8]
 80096a2:	603b      	str	r3, [r7, #0]
 80096a4:	4613      	mov	r3, r2
 80096a6:	71fb      	strb	r3, [r7, #7]
 80096a8:	e04f      	b.n	800974a <UART_WaitOnFlagUntilTimeout+0xb2>
 80096aa:	69bb      	ldr	r3, [r7, #24]
 80096ac:	f1b3 3fff 	cmp.w	r3, #4294967295
 80096b0:	d04b      	beq.n	800974a <UART_WaitOnFlagUntilTimeout+0xb2>
 80096b2:	f7fa f96b 	bl	800398c <HAL_GetTick>
 80096b6:	4602      	mov	r2, r0
 80096b8:	683b      	ldr	r3, [r7, #0]
 80096ba:	1ad3      	subs	r3, r2, r3
 80096bc:	69ba      	ldr	r2, [r7, #24]
 80096be:	429a      	cmp	r2, r3
 80096c0:	d302      	bcc.n	80096c8 <UART_WaitOnFlagUntilTimeout+0x30>
 80096c2:	69bb      	ldr	r3, [r7, #24]
 80096c4:	2b00      	cmp	r3, #0
 80096c6:	d101      	bne.n	80096cc <UART_WaitOnFlagUntilTimeout+0x34>
 80096c8:	2303      	movs	r3, #3
 80096ca:	e04e      	b.n	800976a <UART_WaitOnFlagUntilTimeout+0xd2>
 80096cc:	68fb      	ldr	r3, [r7, #12]
 80096ce:	681b      	ldr	r3, [r3, #0]
 80096d0:	681b      	ldr	r3, [r3, #0]
 80096d2:	f003 0304 	and.w	r3, r3, #4
 80096d6:	2b00      	cmp	r3, #0
 80096d8:	d037      	beq.n	800974a <UART_WaitOnFlagUntilTimeout+0xb2>
 80096da:	68bb      	ldr	r3, [r7, #8]
 80096dc:	2b80      	cmp	r3, #128	@ 0x80
 80096de:	d034      	beq.n	800974a <UART_WaitOnFlagUntilTimeout+0xb2>
 80096e0:	68bb      	ldr	r3, [r7, #8]
 80096e2:	2b40      	cmp	r3, #64	@ 0x40
 80096e4:	d031      	beq.n	800974a <UART_WaitOnFlagUntilTimeout+0xb2>
 80096e6:	68fb      	ldr	r3, [r7, #12]
 80096e8:	681b      	ldr	r3, [r3, #0]
 80096ea:	69db      	ldr	r3, [r3, #28]
 80096ec:	f003 0308 	and.w	r3, r3, #8
 80096f0:	2b08      	cmp	r3, #8
 80096f2:	d110      	bne.n	8009716 <UART_WaitOnFlagUntilTimeout+0x7e>
 80096f4:	68fb      	ldr	r3, [r7, #12]
 80096f6:	681b      	ldr	r3, [r3, #0]
 80096f8:	2208      	movs	r2, #8
 80096fa:	621a      	str	r2, [r3, #32]
 80096fc:	68f8      	ldr	r0, [r7, #12]
 80096fe:	f000 f838 	bl	8009772 <UART_EndRxTransfer>
 8009702:	68fb      	ldr	r3, [r7, #12]
 8009704:	2208      	movs	r2, #8
 8009706:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800970a:	68fb      	ldr	r3, [r7, #12]
 800970c:	2200      	movs	r2, #0
 800970e:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009712:	2301      	movs	r3, #1
 8009714:	e029      	b.n	800976a <UART_WaitOnFlagUntilTimeout+0xd2>
 8009716:	68fb      	ldr	r3, [r7, #12]
 8009718:	681b      	ldr	r3, [r3, #0]
 800971a:	69db      	ldr	r3, [r3, #28]
 800971c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8009720:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8009724:	d111      	bne.n	800974a <UART_WaitOnFlagUntilTimeout+0xb2>
 8009726:	68fb      	ldr	r3, [r7, #12]
 8009728:	681b      	ldr	r3, [r3, #0]
 800972a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800972e:	621a      	str	r2, [r3, #32]
 8009730:	68f8      	ldr	r0, [r7, #12]
 8009732:	f000 f81e 	bl	8009772 <UART_EndRxTransfer>
 8009736:	68fb      	ldr	r3, [r7, #12]
 8009738:	2220      	movs	r2, #32
 800973a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800973e:	68fb      	ldr	r3, [r7, #12]
 8009740:	2200      	movs	r2, #0
 8009742:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009746:	2303      	movs	r3, #3
 8009748:	e00f      	b.n	800976a <UART_WaitOnFlagUntilTimeout+0xd2>
 800974a:	68fb      	ldr	r3, [r7, #12]
 800974c:	681b      	ldr	r3, [r3, #0]
 800974e:	69da      	ldr	r2, [r3, #28]
 8009750:	68bb      	ldr	r3, [r7, #8]
 8009752:	4013      	ands	r3, r2
 8009754:	68ba      	ldr	r2, [r7, #8]
 8009756:	429a      	cmp	r2, r3
 8009758:	bf0c      	ite	eq
 800975a:	2301      	moveq	r3, #1
 800975c:	2300      	movne	r3, #0
 800975e:	b2db      	uxtb	r3, r3
 8009760:	461a      	mov	r2, r3
 8009762:	79fb      	ldrb	r3, [r7, #7]
 8009764:	429a      	cmp	r2, r3
 8009766:	d0a0      	beq.n	80096aa <UART_WaitOnFlagUntilTimeout+0x12>
 8009768:	2300      	movs	r3, #0
 800976a:	4618      	mov	r0, r3
 800976c:	3710      	adds	r7, #16
 800976e:	46bd      	mov	sp, r7
 8009770:	bd80      	pop	{r7, pc}

08009772 <UART_EndRxTransfer>:
 8009772:	b480      	push	{r7}
 8009774:	b095      	sub	sp, #84	@ 0x54
 8009776:	af00      	add	r7, sp, #0
 8009778:	6078      	str	r0, [r7, #4]
 800977a:	687b      	ldr	r3, [r7, #4]
 800977c:	681b      	ldr	r3, [r3, #0]
 800977e:	637b      	str	r3, [r7, #52]	@ 0x34
 8009780:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009782:	e853 3f00 	ldrex	r3, [r3]
 8009786:	633b      	str	r3, [r7, #48]	@ 0x30
 8009788:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800978a:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800978e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8009790:	687b      	ldr	r3, [r7, #4]
 8009792:	681b      	ldr	r3, [r3, #0]
 8009794:	461a      	mov	r2, r3
 8009796:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8009798:	643b      	str	r3, [r7, #64]	@ 0x40
 800979a:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800979c:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800979e:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80097a0:	e841 2300 	strex	r3, r2, [r1]
 80097a4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80097a6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80097a8:	2b00      	cmp	r3, #0
 80097aa:	d1e6      	bne.n	800977a <UART_EndRxTransfer+0x8>
 80097ac:	687b      	ldr	r3, [r7, #4]
 80097ae:	681b      	ldr	r3, [r3, #0]
 80097b0:	3308      	adds	r3, #8
 80097b2:	623b      	str	r3, [r7, #32]
 80097b4:	6a3b      	ldr	r3, [r7, #32]
 80097b6:	e853 3f00 	ldrex	r3, [r3]
 80097ba:	61fb      	str	r3, [r7, #28]
 80097bc:	69fb      	ldr	r3, [r7, #28]
 80097be:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80097c2:	f023 0301 	bic.w	r3, r3, #1
 80097c6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80097c8:	687b      	ldr	r3, [r7, #4]
 80097ca:	681b      	ldr	r3, [r3, #0]
 80097cc:	3308      	adds	r3, #8
 80097ce:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80097d0:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80097d2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80097d4:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80097d6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80097d8:	e841 2300 	strex	r3, r2, [r1]
 80097dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80097de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80097e0:	2b00      	cmp	r3, #0
 80097e2:	d1e3      	bne.n	80097ac <UART_EndRxTransfer+0x3a>
 80097e4:	687b      	ldr	r3, [r7, #4]
 80097e6:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80097e8:	2b01      	cmp	r3, #1
 80097ea:	d118      	bne.n	800981e <UART_EndRxTransfer+0xac>
 80097ec:	687b      	ldr	r3, [r7, #4]
 80097ee:	681b      	ldr	r3, [r3, #0]
 80097f0:	60fb      	str	r3, [r7, #12]
 80097f2:	68fb      	ldr	r3, [r7, #12]
 80097f4:	e853 3f00 	ldrex	r3, [r3]
 80097f8:	60bb      	str	r3, [r7, #8]
 80097fa:	68bb      	ldr	r3, [r7, #8]
 80097fc:	f023 0310 	bic.w	r3, r3, #16
 8009800:	647b      	str	r3, [r7, #68]	@ 0x44
 8009802:	687b      	ldr	r3, [r7, #4]
 8009804:	681b      	ldr	r3, [r3, #0]
 8009806:	461a      	mov	r2, r3
 8009808:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800980a:	61bb      	str	r3, [r7, #24]
 800980c:	617a      	str	r2, [r7, #20]
 800980e:	6979      	ldr	r1, [r7, #20]
 8009810:	69ba      	ldr	r2, [r7, #24]
 8009812:	e841 2300 	strex	r3, r2, [r1]
 8009816:	613b      	str	r3, [r7, #16]
 8009818:	693b      	ldr	r3, [r7, #16]
 800981a:	2b00      	cmp	r3, #0
 800981c:	d1e6      	bne.n	80097ec <UART_EndRxTransfer+0x7a>
 800981e:	687b      	ldr	r3, [r7, #4]
 8009820:	2220      	movs	r2, #32
 8009822:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8009826:	687b      	ldr	r3, [r7, #4]
 8009828:	2200      	movs	r2, #0
 800982a:	66da      	str	r2, [r3, #108]	@ 0x6c
 800982c:	687b      	ldr	r3, [r7, #4]
 800982e:	2200      	movs	r2, #0
 8009830:	675a      	str	r2, [r3, #116]	@ 0x74
 8009832:	bf00      	nop
 8009834:	3754      	adds	r7, #84	@ 0x54
 8009836:	46bd      	mov	sp, r7
 8009838:	f85d 7b04 	ldr.w	r7, [sp], #4
 800983c:	4770      	bx	lr
	...

08009840 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8009840:	b480      	push	{r7}
 8009842:	b083      	sub	sp, #12
 8009844:	af00      	add	r7, sp, #0
 8009846:	4603      	mov	r3, r0
 8009848:	6039      	str	r1, [r7, #0]
 800984a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800984c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8009850:	2b00      	cmp	r3, #0
 8009852:	db0a      	blt.n	800986a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009854:	683b      	ldr	r3, [r7, #0]
 8009856:	b2da      	uxtb	r2, r3
 8009858:	490c      	ldr	r1, [pc, #48]	@ (800988c <__NVIC_SetPriority+0x4c>)
 800985a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800985e:	0112      	lsls	r2, r2, #4
 8009860:	b2d2      	uxtb	r2, r2
 8009862:	440b      	add	r3, r1
 8009864:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8009868:	e00a      	b.n	8009880 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800986a:	683b      	ldr	r3, [r7, #0]
 800986c:	b2da      	uxtb	r2, r3
 800986e:	4908      	ldr	r1, [pc, #32]	@ (8009890 <__NVIC_SetPriority+0x50>)
 8009870:	79fb      	ldrb	r3, [r7, #7]
 8009872:	f003 030f 	and.w	r3, r3, #15
 8009876:	3b04      	subs	r3, #4
 8009878:	0112      	lsls	r2, r2, #4
 800987a:	b2d2      	uxtb	r2, r2
 800987c:	440b      	add	r3, r1
 800987e:	761a      	strb	r2, [r3, #24]
}
 8009880:	bf00      	nop
 8009882:	370c      	adds	r7, #12
 8009884:	46bd      	mov	sp, r7
 8009886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800988a:	4770      	bx	lr
 800988c:	e000e100 	.word	0xe000e100
 8009890:	e000ed00 	.word	0xe000ed00

08009894 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8009894:	b580      	push	{r7, lr}
 8009896:	af00      	add	r7, sp, #0
  /* Clear overflow flag */
  SysTick->CTRL;
 8009898:	4b05      	ldr	r3, [pc, #20]	@ (80098b0 <SysTick_Handler+0x1c>)
 800989a:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800989c:	f001 fe94 	bl	800b5c8 <xTaskGetSchedulerState>
 80098a0:	4603      	mov	r3, r0
 80098a2:	2b01      	cmp	r3, #1
 80098a4:	d001      	beq.n	80098aa <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
 80098a6:	f002 fc8f 	bl	800c1c8 <xPortSysTickHandler>
  }
}
 80098aa:	bf00      	nop
 80098ac:	bd80      	pop	{r7, pc}
 80098ae:	bf00      	nop
 80098b0:	e000e010 	.word	0xe000e010

080098b4 <SVC_Setup>:
#endif /* SysTick */

/*
  Setup SVC to reset value.
*/
__STATIC_INLINE void SVC_Setup (void) {
 80098b4:	b580      	push	{r7, lr}
 80098b6:	af00      	add	r7, sp, #0
#if (__ARM_ARCH_7A__ == 0U)
  /* Service Call interrupt might be configured before kernel start     */
  /* and when its priority is lower or equal to BASEPRI, svc intruction */
  /* causes a Hard Fault.                                               */
  NVIC_SetPriority (SVCall_IRQ_NBR, 0U);
 80098b8:	2100      	movs	r1, #0
 80098ba:	f06f 0004 	mvn.w	r0, #4
 80098be:	f7ff ffbf 	bl	8009840 <__NVIC_SetPriority>
#endif
}
 80098c2:	bf00      	nop
 80098c4:	bd80      	pop	{r7, pc}
	...

080098c8 <osKernelInitialize>:
static uint32_t OS_Tick_GetOverflow (void);
/* Get OS Tick interval */
static uint32_t OS_Tick_GetInterval (void);
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
 80098c8:	b480      	push	{r7}
 80098ca:	b083      	sub	sp, #12
 80098cc:	af00      	add	r7, sp, #0
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80098ce:	f3ef 8305 	mrs	r3, IPSR
 80098d2:	603b      	str	r3, [r7, #0]
  return(result);
 80098d4:	683b      	ldr	r3, [r7, #0]
  osStatus_t stat;

  if (IS_IRQ()) {
 80098d6:	2b00      	cmp	r3, #0
 80098d8:	d003      	beq.n	80098e2 <osKernelInitialize+0x1a>
    stat = osErrorISR;
 80098da:	f06f 0305 	mvn.w	r3, #5
 80098de:	607b      	str	r3, [r7, #4]
 80098e0:	e00c      	b.n	80098fc <osKernelInitialize+0x34>
  }
  else {
    if (KernelState == osKernelInactive) {
 80098e2:	4b0a      	ldr	r3, [pc, #40]	@ (800990c <osKernelInitialize+0x44>)
 80098e4:	681b      	ldr	r3, [r3, #0]
 80098e6:	2b00      	cmp	r3, #0
 80098e8:	d105      	bne.n	80098f6 <osKernelInitialize+0x2e>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80098ea:	4b08      	ldr	r3, [pc, #32]	@ (800990c <osKernelInitialize+0x44>)
 80098ec:	2201      	movs	r2, #1
 80098ee:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80098f0:	2300      	movs	r3, #0
 80098f2:	607b      	str	r3, [r7, #4]
 80098f4:	e002      	b.n	80098fc <osKernelInitialize+0x34>
    } else {
      stat = osError;
 80098f6:	f04f 33ff 	mov.w	r3, #4294967295
 80098fa:	607b      	str	r3, [r7, #4]
    }
  }

  return (stat);
 80098fc:	687b      	ldr	r3, [r7, #4]
}
 80098fe:	4618      	mov	r0, r3
 8009900:	370c      	adds	r7, #12
 8009902:	46bd      	mov	sp, r7
 8009904:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009908:	4770      	bx	lr
 800990a:	bf00      	nop
 800990c:	20000a88 	.word	0x20000a88

08009910 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8009910:	b580      	push	{r7, lr}
 8009912:	b082      	sub	sp, #8
 8009914:	af00      	add	r7, sp, #0
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009916:	f3ef 8305 	mrs	r3, IPSR
 800991a:	603b      	str	r3, [r7, #0]
  return(result);
 800991c:	683b      	ldr	r3, [r7, #0]
  osStatus_t stat;

  if (IS_IRQ()) {
 800991e:	2b00      	cmp	r3, #0
 8009920:	d003      	beq.n	800992a <osKernelStart+0x1a>
    stat = osErrorISR;
 8009922:	f06f 0305 	mvn.w	r3, #5
 8009926:	607b      	str	r3, [r7, #4]
 8009928:	e010      	b.n	800994c <osKernelStart+0x3c>
  }
  else {
    if (KernelState == osKernelReady) {
 800992a:	4b0b      	ldr	r3, [pc, #44]	@ (8009958 <osKernelStart+0x48>)
 800992c:	681b      	ldr	r3, [r3, #0]
 800992e:	2b01      	cmp	r3, #1
 8009930:	d109      	bne.n	8009946 <osKernelStart+0x36>
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
 8009932:	f7ff ffbf 	bl	80098b4 <SVC_Setup>
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8009936:	4b08      	ldr	r3, [pc, #32]	@ (8009958 <osKernelStart+0x48>)
 8009938:	2202      	movs	r2, #2
 800993a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800993c:	f001 f9ce 	bl	800acdc <vTaskStartScheduler>
      stat = osOK;
 8009940:	2300      	movs	r3, #0
 8009942:	607b      	str	r3, [r7, #4]
 8009944:	e002      	b.n	800994c <osKernelStart+0x3c>
    } else {
      stat = osError;
 8009946:	f04f 33ff 	mov.w	r3, #4294967295
 800994a:	607b      	str	r3, [r7, #4]
    }
  }

  return (stat);
 800994c:	687b      	ldr	r3, [r7, #4]
}
 800994e:	4618      	mov	r0, r3
 8009950:	3708      	adds	r7, #8
 8009952:	46bd      	mov	sp, r7
 8009954:	bd80      	pop	{r7, pc}
 8009956:	bf00      	nop
 8009958:	20000a88 	.word	0x20000a88

0800995c <osKernelGetTickCount>:
  }

  return (lock);
}

uint32_t osKernelGetTickCount (void) {
 800995c:	b580      	push	{r7, lr}
 800995e:	b082      	sub	sp, #8
 8009960:	af00      	add	r7, sp, #0
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009962:	f3ef 8305 	mrs	r3, IPSR
 8009966:	603b      	str	r3, [r7, #0]
  return(result);
 8009968:	683b      	ldr	r3, [r7, #0]
  TickType_t ticks;

  if (IS_IRQ()) {
 800996a:	2b00      	cmp	r3, #0
 800996c:	d003      	beq.n	8009976 <osKernelGetTickCount+0x1a>
    ticks = xTaskGetTickCountFromISR();
 800996e:	f001 fae1 	bl	800af34 <xTaskGetTickCountFromISR>
 8009972:	6078      	str	r0, [r7, #4]
 8009974:	e002      	b.n	800997c <osKernelGetTickCount+0x20>
  } else {
    ticks = xTaskGetTickCount();
 8009976:	f001 facd 	bl	800af14 <xTaskGetTickCount>
 800997a:	6078      	str	r0, [r7, #4]
  }

  return (ticks);
 800997c:	687b      	ldr	r3, [r7, #4]
}
 800997e:	4618      	mov	r0, r3
 8009980:	3708      	adds	r7, #8
 8009982:	46bd      	mov	sp, r7
 8009984:	bd80      	pop	{r7, pc}

08009986 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8009986:	b580      	push	{r7, lr}
 8009988:	b08e      	sub	sp, #56	@ 0x38
 800998a:	af04      	add	r7, sp, #16
 800998c:	60f8      	str	r0, [r7, #12]
 800998e:	60b9      	str	r1, [r7, #8]
 8009990:	607a      	str	r2, [r7, #4]
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8009992:	2300      	movs	r3, #0
 8009994:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009996:	f3ef 8305 	mrs	r3, IPSR
 800999a:	617b      	str	r3, [r7, #20]
  return(result);
 800999c:	697b      	ldr	r3, [r7, #20]

  if (!IS_IRQ() && (func != NULL)) {
 800999e:	2b00      	cmp	r3, #0
 80099a0:	d17e      	bne.n	8009aa0 <osThreadNew+0x11a>
 80099a2:	68fb      	ldr	r3, [r7, #12]
 80099a4:	2b00      	cmp	r3, #0
 80099a6:	d07b      	beq.n	8009aa0 <osThreadNew+0x11a>
    stack = configMINIMAL_STACK_SIZE;
 80099a8:	2380      	movs	r3, #128	@ 0x80
 80099aa:	623b      	str	r3, [r7, #32]
    prio  = (UBaseType_t)osPriorityNormal;
 80099ac:	2318      	movs	r3, #24
 80099ae:	61fb      	str	r3, [r7, #28]

    name = NULL;
 80099b0:	2300      	movs	r3, #0
 80099b2:	627b      	str	r3, [r7, #36]	@ 0x24
    mem  = -1;
 80099b4:	f04f 33ff 	mov.w	r3, #4294967295
 80099b8:	61bb      	str	r3, [r7, #24]

    if (attr != NULL) {
 80099ba:	687b      	ldr	r3, [r7, #4]
 80099bc:	2b00      	cmp	r3, #0
 80099be:	d045      	beq.n	8009a4c <osThreadNew+0xc6>
      if (attr->name != NULL) {
 80099c0:	687b      	ldr	r3, [r7, #4]
 80099c2:	681b      	ldr	r3, [r3, #0]
 80099c4:	2b00      	cmp	r3, #0
 80099c6:	d002      	beq.n	80099ce <osThreadNew+0x48>
        name = attr->name;
 80099c8:	687b      	ldr	r3, [r7, #4]
 80099ca:	681b      	ldr	r3, [r3, #0]
 80099cc:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if (attr->priority != osPriorityNone) {
 80099ce:	687b      	ldr	r3, [r7, #4]
 80099d0:	699b      	ldr	r3, [r3, #24]
 80099d2:	2b00      	cmp	r3, #0
 80099d4:	d002      	beq.n	80099dc <osThreadNew+0x56>
        prio = (UBaseType_t)attr->priority;
 80099d6:	687b      	ldr	r3, [r7, #4]
 80099d8:	699b      	ldr	r3, [r3, #24]
 80099da:	61fb      	str	r3, [r7, #28]
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80099dc:	69fb      	ldr	r3, [r7, #28]
 80099de:	2b00      	cmp	r3, #0
 80099e0:	d008      	beq.n	80099f4 <osThreadNew+0x6e>
 80099e2:	69fb      	ldr	r3, [r7, #28]
 80099e4:	2b38      	cmp	r3, #56	@ 0x38
 80099e6:	d805      	bhi.n	80099f4 <osThreadNew+0x6e>
 80099e8:	687b      	ldr	r3, [r7, #4]
 80099ea:	685b      	ldr	r3, [r3, #4]
 80099ec:	f003 0301 	and.w	r3, r3, #1
 80099f0:	2b00      	cmp	r3, #0
 80099f2:	d001      	beq.n	80099f8 <osThreadNew+0x72>
        return (NULL);
 80099f4:	2300      	movs	r3, #0
 80099f6:	e054      	b.n	8009aa2 <osThreadNew+0x11c>
      }

      if (attr->stack_size > 0U) {
 80099f8:	687b      	ldr	r3, [r7, #4]
 80099fa:	695b      	ldr	r3, [r3, #20]
 80099fc:	2b00      	cmp	r3, #0
 80099fe:	d003      	beq.n	8009a08 <osThreadNew+0x82>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8009a00:	687b      	ldr	r3, [r7, #4]
 8009a02:	695b      	ldr	r3, [r3, #20]
 8009a04:	089b      	lsrs	r3, r3, #2
 8009a06:	623b      	str	r3, [r7, #32]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009a08:	687b      	ldr	r3, [r7, #4]
 8009a0a:	689b      	ldr	r3, [r3, #8]
 8009a0c:	2b00      	cmp	r3, #0
 8009a0e:	d00e      	beq.n	8009a2e <osThreadNew+0xa8>
 8009a10:	687b      	ldr	r3, [r7, #4]
 8009a12:	68db      	ldr	r3, [r3, #12]
 8009a14:	2ba7      	cmp	r3, #167	@ 0xa7
 8009a16:	d90a      	bls.n	8009a2e <osThreadNew+0xa8>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009a18:	687b      	ldr	r3, [r7, #4]
 8009a1a:	691b      	ldr	r3, [r3, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009a1c:	2b00      	cmp	r3, #0
 8009a1e:	d006      	beq.n	8009a2e <osThreadNew+0xa8>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009a20:	687b      	ldr	r3, [r7, #4]
 8009a22:	695b      	ldr	r3, [r3, #20]
 8009a24:	2b00      	cmp	r3, #0
 8009a26:	d002      	beq.n	8009a2e <osThreadNew+0xa8>
        mem = 1;
 8009a28:	2301      	movs	r3, #1
 8009a2a:	61bb      	str	r3, [r7, #24]
 8009a2c:	e010      	b.n	8009a50 <osThreadNew+0xca>
      }
      else {
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8009a2e:	687b      	ldr	r3, [r7, #4]
 8009a30:	689b      	ldr	r3, [r3, #8]
 8009a32:	2b00      	cmp	r3, #0
 8009a34:	d10c      	bne.n	8009a50 <osThreadNew+0xca>
 8009a36:	687b      	ldr	r3, [r7, #4]
 8009a38:	68db      	ldr	r3, [r3, #12]
 8009a3a:	2b00      	cmp	r3, #0
 8009a3c:	d108      	bne.n	8009a50 <osThreadNew+0xca>
 8009a3e:	687b      	ldr	r3, [r7, #4]
 8009a40:	691b      	ldr	r3, [r3, #16]
 8009a42:	2b00      	cmp	r3, #0
 8009a44:	d104      	bne.n	8009a50 <osThreadNew+0xca>
          mem = 0;
 8009a46:	2300      	movs	r3, #0
 8009a48:	61bb      	str	r3, [r7, #24]
 8009a4a:	e001      	b.n	8009a50 <osThreadNew+0xca>
        }
      }
    }
    else {
      mem = 0;
 8009a4c:	2300      	movs	r3, #0
 8009a4e:	61bb      	str	r3, [r7, #24]
    }

    if (mem == 1) {
 8009a50:	69bb      	ldr	r3, [r7, #24]
 8009a52:	2b01      	cmp	r3, #1
 8009a54:	d110      	bne.n	8009a78 <osThreadNew+0xf2>
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8009a56:	687b      	ldr	r3, [r7, #4]
 8009a58:	691b      	ldr	r3, [r3, #16]
                                                                                      (StaticTask_t *)attr->cb_mem);
 8009a5a:	687a      	ldr	r2, [r7, #4]
 8009a5c:	6892      	ldr	r2, [r2, #8]
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8009a5e:	9202      	str	r2, [sp, #8]
 8009a60:	9301      	str	r3, [sp, #4]
 8009a62:	69fb      	ldr	r3, [r7, #28]
 8009a64:	9300      	str	r3, [sp, #0]
 8009a66:	68bb      	ldr	r3, [r7, #8]
 8009a68:	6a3a      	ldr	r2, [r7, #32]
 8009a6a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8009a6c:	68f8      	ldr	r0, [r7, #12]
 8009a6e:	f000 fe4d 	bl	800a70c <xTaskCreateStatic>
 8009a72:	4603      	mov	r3, r0
 8009a74:	613b      	str	r3, [r7, #16]
 8009a76:	e013      	b.n	8009aa0 <osThreadNew+0x11a>
      #endif
    }
    else {
      if (mem == 0) {
 8009a78:	69bb      	ldr	r3, [r7, #24]
 8009a7a:	2b00      	cmp	r3, #0
 8009a7c:	d110      	bne.n	8009aa0 <osThreadNew+0x11a>
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8009a7e:	6a3b      	ldr	r3, [r7, #32]
 8009a80:	b29a      	uxth	r2, r3
 8009a82:	f107 0310 	add.w	r3, r7, #16
 8009a86:	9301      	str	r3, [sp, #4]
 8009a88:	69fb      	ldr	r3, [r7, #28]
 8009a8a:	9300      	str	r3, [sp, #0]
 8009a8c:	68bb      	ldr	r3, [r7, #8]
 8009a8e:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8009a90:	68f8      	ldr	r0, [r7, #12]
 8009a92:	f000 fe9b 	bl	800a7cc <xTaskCreate>
 8009a96:	4603      	mov	r3, r0
 8009a98:	2b01      	cmp	r3, #1
 8009a9a:	d001      	beq.n	8009aa0 <osThreadNew+0x11a>
            hTask = NULL;
 8009a9c:	2300      	movs	r3, #0
 8009a9e:	613b      	str	r3, [r7, #16]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8009aa0:	693b      	ldr	r3, [r7, #16]
}
 8009aa2:	4618      	mov	r0, r3
 8009aa4:	3728      	adds	r7, #40	@ 0x28
 8009aa6:	46bd      	mov	sp, r7
 8009aa8:	bd80      	pop	{r7, pc}

08009aaa <osThreadExit>:

  return (stat);
}
#endif /* (configUSE_OS2_THREAD_SUSPEND_RESUME == 1) */

__NO_RETURN void osThreadExit (void) {
 8009aaa:	b580      	push	{r7, lr}
 8009aac:	af00      	add	r7, sp, #0
#ifndef USE_FreeRTOS_HEAP_1
  vTaskDelete (NULL);
 8009aae:	2000      	movs	r0, #0
 8009ab0:	f000 ffea 	bl	800aa88 <vTaskDelete>
#endif
  for (;;);
 8009ab4:	bf00      	nop
 8009ab6:	e7fd      	b.n	8009ab4 <osThreadExit+0xa>

08009ab8 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8009ab8:	b580      	push	{r7, lr}
 8009aba:	b084      	sub	sp, #16
 8009abc:	af00      	add	r7, sp, #0
 8009abe:	6078      	str	r0, [r7, #4]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009ac0:	f3ef 8305 	mrs	r3, IPSR
 8009ac4:	60bb      	str	r3, [r7, #8]
  return(result);
 8009ac6:	68bb      	ldr	r3, [r7, #8]
  osStatus_t stat;

  if (IS_IRQ()) {
 8009ac8:	2b00      	cmp	r3, #0
 8009aca:	d003      	beq.n	8009ad4 <osDelay+0x1c>
    stat = osErrorISR;
 8009acc:	f06f 0305 	mvn.w	r3, #5
 8009ad0:	60fb      	str	r3, [r7, #12]
 8009ad2:	e007      	b.n	8009ae4 <osDelay+0x2c>
  }
  else {
    stat = osOK;
 8009ad4:	2300      	movs	r3, #0
 8009ad6:	60fb      	str	r3, [r7, #12]

    if (ticks != 0U) {
 8009ad8:	687b      	ldr	r3, [r7, #4]
 8009ada:	2b00      	cmp	r3, #0
 8009adc:	d002      	beq.n	8009ae4 <osDelay+0x2c>
      vTaskDelay(ticks);
 8009ade:	6878      	ldr	r0, [r7, #4]
 8009ae0:	f001 f8c6 	bl	800ac70 <vTaskDelay>
    }
  }

  return (stat);
 8009ae4:	68fb      	ldr	r3, [r7, #12]
}
 8009ae6:	4618      	mov	r0, r3
 8009ae8:	3710      	adds	r7, #16
 8009aea:	46bd      	mov	sp, r7
 8009aec:	bd80      	pop	{r7, pc}

08009aee <osDelayUntil>:

osStatus_t osDelayUntil (uint32_t ticks) {
 8009aee:	b580      	push	{r7, lr}
 8009af0:	b086      	sub	sp, #24
 8009af2:	af00      	add	r7, sp, #0
 8009af4:	6078      	str	r0, [r7, #4]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009af6:	f3ef 8305 	mrs	r3, IPSR
 8009afa:	60fb      	str	r3, [r7, #12]
  return(result);
 8009afc:	68fb      	ldr	r3, [r7, #12]
  TickType_t tcnt, delay;
  osStatus_t stat;

  if (IS_IRQ()) {
 8009afe:	2b00      	cmp	r3, #0
 8009b00:	d003      	beq.n	8009b0a <osDelayUntil+0x1c>
    stat = osErrorISR;
 8009b02:	f06f 0305 	mvn.w	r3, #5
 8009b06:	617b      	str	r3, [r7, #20]
 8009b08:	e019      	b.n	8009b3e <osDelayUntil+0x50>
  }
  else {
    stat = osOK;
 8009b0a:	2300      	movs	r3, #0
 8009b0c:	617b      	str	r3, [r7, #20]
    tcnt = xTaskGetTickCount();
 8009b0e:	f001 fa01 	bl	800af14 <xTaskGetTickCount>
 8009b12:	4603      	mov	r3, r0
 8009b14:	60bb      	str	r3, [r7, #8]

    /* Determine remaining number of ticks to delay */
    delay = (TickType_t)ticks - tcnt;
 8009b16:	68bb      	ldr	r3, [r7, #8]
 8009b18:	687a      	ldr	r2, [r7, #4]
 8009b1a:	1ad3      	subs	r3, r2, r3
 8009b1c:	613b      	str	r3, [r7, #16]

    /* Check if target tick has not expired */
    if((delay != 0U) && (0 == (delay >> (8 * sizeof(TickType_t) - 1)))) {
 8009b1e:	693b      	ldr	r3, [r7, #16]
 8009b20:	2b00      	cmp	r3, #0
 8009b22:	d009      	beq.n	8009b38 <osDelayUntil+0x4a>
 8009b24:	693b      	ldr	r3, [r7, #16]
 8009b26:	2b00      	cmp	r3, #0
 8009b28:	db06      	blt.n	8009b38 <osDelayUntil+0x4a>
      vTaskDelayUntil (&tcnt, delay);
 8009b2a:	f107 0308 	add.w	r3, r7, #8
 8009b2e:	6939      	ldr	r1, [r7, #16]
 8009b30:	4618      	mov	r0, r3
 8009b32:	f001 f81d 	bl	800ab70 <vTaskDelayUntil>
 8009b36:	e002      	b.n	8009b3e <osDelayUntil+0x50>
    }
    else
    {
      /* No delay or already expired */
      stat = osErrorParameter;
 8009b38:	f06f 0303 	mvn.w	r3, #3
 8009b3c:	617b      	str	r3, [r7, #20]
    }
  }

  return (stat);
 8009b3e:	697b      	ldr	r3, [r7, #20]
}
 8009b40:	4618      	mov	r0, r3
 8009b42:	3718      	adds	r7, #24
 8009b44:	46bd      	mov	sp, r7
 8009b46:	bd80      	pop	{r7, pc}

08009b48 <vApplicationGetIdleTaskMemory>:

/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 8009b48:	b480      	push	{r7}
 8009b4a:	b085      	sub	sp, #20
 8009b4c:	af00      	add	r7, sp, #0
 8009b4e:	60f8      	str	r0, [r7, #12]
 8009b50:	60b9      	str	r1, [r7, #8]
 8009b52:	607a      	str	r2, [r7, #4]
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8009b54:	68fb      	ldr	r3, [r7, #12]
 8009b56:	4a07      	ldr	r2, [pc, #28]	@ (8009b74 <vApplicationGetIdleTaskMemory+0x2c>)
 8009b58:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8009b5a:	68bb      	ldr	r3, [r7, #8]
 8009b5c:	4a06      	ldr	r2, [pc, #24]	@ (8009b78 <vApplicationGetIdleTaskMemory+0x30>)
 8009b5e:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8009b60:	687b      	ldr	r3, [r7, #4]
 8009b62:	2280      	movs	r2, #128	@ 0x80
 8009b64:	601a      	str	r2, [r3, #0]
}
 8009b66:	bf00      	nop
 8009b68:	3714      	adds	r7, #20
 8009b6a:	46bd      	mov	sp, r7
 8009b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b70:	4770      	bx	lr
 8009b72:	bf00      	nop
 8009b74:	20000a8c 	.word	0x20000a8c
 8009b78:	20000b34 	.word	0x20000b34

08009b7c <vApplicationGetTimerTaskMemory>:

/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 8009b7c:	b480      	push	{r7}
 8009b7e:	b085      	sub	sp, #20
 8009b80:	af00      	add	r7, sp, #0
 8009b82:	60f8      	str	r0, [r7, #12]
 8009b84:	60b9      	str	r1, [r7, #8]
 8009b86:	607a      	str	r2, [r7, #4]
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8009b88:	68fb      	ldr	r3, [r7, #12]
 8009b8a:	4a07      	ldr	r2, [pc, #28]	@ (8009ba8 <vApplicationGetTimerTaskMemory+0x2c>)
 8009b8c:	601a      	str	r2, [r3, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8009b8e:	68bb      	ldr	r3, [r7, #8]
 8009b90:	4a06      	ldr	r2, [pc, #24]	@ (8009bac <vApplicationGetTimerTaskMemory+0x30>)
 8009b92:	601a      	str	r2, [r3, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8009b94:	687b      	ldr	r3, [r7, #4]
 8009b96:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8009b9a:	601a      	str	r2, [r3, #0]
}
 8009b9c:	bf00      	nop
 8009b9e:	3714      	adds	r7, #20
 8009ba0:	46bd      	mov	sp, r7
 8009ba2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ba6:	4770      	bx	lr
 8009ba8:	20000d34 	.word	0x20000d34
 8009bac:	20000ddc 	.word	0x20000ddc

08009bb0 <vListInitialise>:
 8009bb0:	b480      	push	{r7}
 8009bb2:	b083      	sub	sp, #12
 8009bb4:	af00      	add	r7, sp, #0
 8009bb6:	6078      	str	r0, [r7, #4]
 8009bb8:	687b      	ldr	r3, [r7, #4]
 8009bba:	f103 0208 	add.w	r2, r3, #8
 8009bbe:	687b      	ldr	r3, [r7, #4]
 8009bc0:	605a      	str	r2, [r3, #4]
 8009bc2:	687b      	ldr	r3, [r7, #4]
 8009bc4:	f04f 32ff 	mov.w	r2, #4294967295
 8009bc8:	609a      	str	r2, [r3, #8]
 8009bca:	687b      	ldr	r3, [r7, #4]
 8009bcc:	f103 0208 	add.w	r2, r3, #8
 8009bd0:	687b      	ldr	r3, [r7, #4]
 8009bd2:	60da      	str	r2, [r3, #12]
 8009bd4:	687b      	ldr	r3, [r7, #4]
 8009bd6:	f103 0208 	add.w	r2, r3, #8
 8009bda:	687b      	ldr	r3, [r7, #4]
 8009bdc:	611a      	str	r2, [r3, #16]
 8009bde:	687b      	ldr	r3, [r7, #4]
 8009be0:	2200      	movs	r2, #0
 8009be2:	601a      	str	r2, [r3, #0]
 8009be4:	bf00      	nop
 8009be6:	370c      	adds	r7, #12
 8009be8:	46bd      	mov	sp, r7
 8009bea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bee:	4770      	bx	lr

08009bf0 <vListInitialiseItem>:
 8009bf0:	b480      	push	{r7}
 8009bf2:	b083      	sub	sp, #12
 8009bf4:	af00      	add	r7, sp, #0
 8009bf6:	6078      	str	r0, [r7, #4]
 8009bf8:	687b      	ldr	r3, [r7, #4]
 8009bfa:	2200      	movs	r2, #0
 8009bfc:	611a      	str	r2, [r3, #16]
 8009bfe:	bf00      	nop
 8009c00:	370c      	adds	r7, #12
 8009c02:	46bd      	mov	sp, r7
 8009c04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c08:	4770      	bx	lr

08009c0a <vListInsertEnd>:
 8009c0a:	b480      	push	{r7}
 8009c0c:	b085      	sub	sp, #20
 8009c0e:	af00      	add	r7, sp, #0
 8009c10:	6078      	str	r0, [r7, #4]
 8009c12:	6039      	str	r1, [r7, #0]
 8009c14:	687b      	ldr	r3, [r7, #4]
 8009c16:	685b      	ldr	r3, [r3, #4]
 8009c18:	60fb      	str	r3, [r7, #12]
 8009c1a:	683b      	ldr	r3, [r7, #0]
 8009c1c:	68fa      	ldr	r2, [r7, #12]
 8009c1e:	605a      	str	r2, [r3, #4]
 8009c20:	68fb      	ldr	r3, [r7, #12]
 8009c22:	689a      	ldr	r2, [r3, #8]
 8009c24:	683b      	ldr	r3, [r7, #0]
 8009c26:	609a      	str	r2, [r3, #8]
 8009c28:	68fb      	ldr	r3, [r7, #12]
 8009c2a:	689b      	ldr	r3, [r3, #8]
 8009c2c:	683a      	ldr	r2, [r7, #0]
 8009c2e:	605a      	str	r2, [r3, #4]
 8009c30:	68fb      	ldr	r3, [r7, #12]
 8009c32:	683a      	ldr	r2, [r7, #0]
 8009c34:	609a      	str	r2, [r3, #8]
 8009c36:	683b      	ldr	r3, [r7, #0]
 8009c38:	687a      	ldr	r2, [r7, #4]
 8009c3a:	611a      	str	r2, [r3, #16]
 8009c3c:	687b      	ldr	r3, [r7, #4]
 8009c3e:	681b      	ldr	r3, [r3, #0]
 8009c40:	1c5a      	adds	r2, r3, #1
 8009c42:	687b      	ldr	r3, [r7, #4]
 8009c44:	601a      	str	r2, [r3, #0]
 8009c46:	bf00      	nop
 8009c48:	3714      	adds	r7, #20
 8009c4a:	46bd      	mov	sp, r7
 8009c4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c50:	4770      	bx	lr

08009c52 <vListInsert>:
 8009c52:	b480      	push	{r7}
 8009c54:	b085      	sub	sp, #20
 8009c56:	af00      	add	r7, sp, #0
 8009c58:	6078      	str	r0, [r7, #4]
 8009c5a:	6039      	str	r1, [r7, #0]
 8009c5c:	683b      	ldr	r3, [r7, #0]
 8009c5e:	681b      	ldr	r3, [r3, #0]
 8009c60:	60bb      	str	r3, [r7, #8]
 8009c62:	68bb      	ldr	r3, [r7, #8]
 8009c64:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009c68:	d103      	bne.n	8009c72 <vListInsert+0x20>
 8009c6a:	687b      	ldr	r3, [r7, #4]
 8009c6c:	691b      	ldr	r3, [r3, #16]
 8009c6e:	60fb      	str	r3, [r7, #12]
 8009c70:	e00c      	b.n	8009c8c <vListInsert+0x3a>
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	3308      	adds	r3, #8
 8009c76:	60fb      	str	r3, [r7, #12]
 8009c78:	e002      	b.n	8009c80 <vListInsert+0x2e>
 8009c7a:	68fb      	ldr	r3, [r7, #12]
 8009c7c:	685b      	ldr	r3, [r3, #4]
 8009c7e:	60fb      	str	r3, [r7, #12]
 8009c80:	68fb      	ldr	r3, [r7, #12]
 8009c82:	685b      	ldr	r3, [r3, #4]
 8009c84:	681b      	ldr	r3, [r3, #0]
 8009c86:	68ba      	ldr	r2, [r7, #8]
 8009c88:	429a      	cmp	r2, r3
 8009c8a:	d2f6      	bcs.n	8009c7a <vListInsert+0x28>
 8009c8c:	68fb      	ldr	r3, [r7, #12]
 8009c8e:	685a      	ldr	r2, [r3, #4]
 8009c90:	683b      	ldr	r3, [r7, #0]
 8009c92:	605a      	str	r2, [r3, #4]
 8009c94:	683b      	ldr	r3, [r7, #0]
 8009c96:	685b      	ldr	r3, [r3, #4]
 8009c98:	683a      	ldr	r2, [r7, #0]
 8009c9a:	609a      	str	r2, [r3, #8]
 8009c9c:	683b      	ldr	r3, [r7, #0]
 8009c9e:	68fa      	ldr	r2, [r7, #12]
 8009ca0:	609a      	str	r2, [r3, #8]
 8009ca2:	68fb      	ldr	r3, [r7, #12]
 8009ca4:	683a      	ldr	r2, [r7, #0]
 8009ca6:	605a      	str	r2, [r3, #4]
 8009ca8:	683b      	ldr	r3, [r7, #0]
 8009caa:	687a      	ldr	r2, [r7, #4]
 8009cac:	611a      	str	r2, [r3, #16]
 8009cae:	687b      	ldr	r3, [r7, #4]
 8009cb0:	681b      	ldr	r3, [r3, #0]
 8009cb2:	1c5a      	adds	r2, r3, #1
 8009cb4:	687b      	ldr	r3, [r7, #4]
 8009cb6:	601a      	str	r2, [r3, #0]
 8009cb8:	bf00      	nop
 8009cba:	3714      	adds	r7, #20
 8009cbc:	46bd      	mov	sp, r7
 8009cbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cc2:	4770      	bx	lr

08009cc4 <uxListRemove>:
 8009cc4:	b480      	push	{r7}
 8009cc6:	b085      	sub	sp, #20
 8009cc8:	af00      	add	r7, sp, #0
 8009cca:	6078      	str	r0, [r7, #4]
 8009ccc:	687b      	ldr	r3, [r7, #4]
 8009cce:	691b      	ldr	r3, [r3, #16]
 8009cd0:	60fb      	str	r3, [r7, #12]
 8009cd2:	687b      	ldr	r3, [r7, #4]
 8009cd4:	685b      	ldr	r3, [r3, #4]
 8009cd6:	687a      	ldr	r2, [r7, #4]
 8009cd8:	6892      	ldr	r2, [r2, #8]
 8009cda:	609a      	str	r2, [r3, #8]
 8009cdc:	687b      	ldr	r3, [r7, #4]
 8009cde:	689b      	ldr	r3, [r3, #8]
 8009ce0:	687a      	ldr	r2, [r7, #4]
 8009ce2:	6852      	ldr	r2, [r2, #4]
 8009ce4:	605a      	str	r2, [r3, #4]
 8009ce6:	68fb      	ldr	r3, [r7, #12]
 8009ce8:	685b      	ldr	r3, [r3, #4]
 8009cea:	687a      	ldr	r2, [r7, #4]
 8009cec:	429a      	cmp	r2, r3
 8009cee:	d103      	bne.n	8009cf8 <uxListRemove+0x34>
 8009cf0:	687b      	ldr	r3, [r7, #4]
 8009cf2:	689a      	ldr	r2, [r3, #8]
 8009cf4:	68fb      	ldr	r3, [r7, #12]
 8009cf6:	605a      	str	r2, [r3, #4]
 8009cf8:	687b      	ldr	r3, [r7, #4]
 8009cfa:	2200      	movs	r2, #0
 8009cfc:	611a      	str	r2, [r3, #16]
 8009cfe:	68fb      	ldr	r3, [r7, #12]
 8009d00:	681b      	ldr	r3, [r3, #0]
 8009d02:	1e5a      	subs	r2, r3, #1
 8009d04:	68fb      	ldr	r3, [r7, #12]
 8009d06:	601a      	str	r2, [r3, #0]
 8009d08:	68fb      	ldr	r3, [r7, #12]
 8009d0a:	681b      	ldr	r3, [r3, #0]
 8009d0c:	4618      	mov	r0, r3
 8009d0e:	3714      	adds	r7, #20
 8009d10:	46bd      	mov	sp, r7
 8009d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d16:	4770      	bx	lr

08009d18 <xQueueGenericReset>:
 8009d18:	b580      	push	{r7, lr}
 8009d1a:	b084      	sub	sp, #16
 8009d1c:	af00      	add	r7, sp, #0
 8009d1e:	6078      	str	r0, [r7, #4]
 8009d20:	6039      	str	r1, [r7, #0]
 8009d22:	687b      	ldr	r3, [r7, #4]
 8009d24:	60fb      	str	r3, [r7, #12]
 8009d26:	68fb      	ldr	r3, [r7, #12]
 8009d28:	2b00      	cmp	r3, #0
 8009d2a:	d10b      	bne.n	8009d44 <xQueueGenericReset+0x2c>
 8009d2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d30:	f383 8811 	msr	BASEPRI, r3
 8009d34:	f3bf 8f6f 	isb	sy
 8009d38:	f3bf 8f4f 	dsb	sy
 8009d3c:	60bb      	str	r3, [r7, #8]
 8009d3e:	bf00      	nop
 8009d40:	bf00      	nop
 8009d42:	e7fd      	b.n	8009d40 <xQueueGenericReset+0x28>
 8009d44:	f002 f9b0 	bl	800c0a8 <vPortEnterCritical>
 8009d48:	68fb      	ldr	r3, [r7, #12]
 8009d4a:	681a      	ldr	r2, [r3, #0]
 8009d4c:	68fb      	ldr	r3, [r7, #12]
 8009d4e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009d50:	68f9      	ldr	r1, [r7, #12]
 8009d52:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8009d54:	fb01 f303 	mul.w	r3, r1, r3
 8009d58:	441a      	add	r2, r3
 8009d5a:	68fb      	ldr	r3, [r7, #12]
 8009d5c:	609a      	str	r2, [r3, #8]
 8009d5e:	68fb      	ldr	r3, [r7, #12]
 8009d60:	2200      	movs	r2, #0
 8009d62:	639a      	str	r2, [r3, #56]	@ 0x38
 8009d64:	68fb      	ldr	r3, [r7, #12]
 8009d66:	681a      	ldr	r2, [r3, #0]
 8009d68:	68fb      	ldr	r3, [r7, #12]
 8009d6a:	605a      	str	r2, [r3, #4]
 8009d6c:	68fb      	ldr	r3, [r7, #12]
 8009d6e:	681a      	ldr	r2, [r3, #0]
 8009d70:	68fb      	ldr	r3, [r7, #12]
 8009d72:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009d74:	3b01      	subs	r3, #1
 8009d76:	68f9      	ldr	r1, [r7, #12]
 8009d78:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8009d7a:	fb01 f303 	mul.w	r3, r1, r3
 8009d7e:	441a      	add	r2, r3
 8009d80:	68fb      	ldr	r3, [r7, #12]
 8009d82:	60da      	str	r2, [r3, #12]
 8009d84:	68fb      	ldr	r3, [r7, #12]
 8009d86:	22ff      	movs	r2, #255	@ 0xff
 8009d88:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8009d8c:	68fb      	ldr	r3, [r7, #12]
 8009d8e:	22ff      	movs	r2, #255	@ 0xff
 8009d90:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8009d94:	683b      	ldr	r3, [r7, #0]
 8009d96:	2b00      	cmp	r3, #0
 8009d98:	d114      	bne.n	8009dc4 <xQueueGenericReset+0xac>
 8009d9a:	68fb      	ldr	r3, [r7, #12]
 8009d9c:	691b      	ldr	r3, [r3, #16]
 8009d9e:	2b00      	cmp	r3, #0
 8009da0:	d01a      	beq.n	8009dd8 <xQueueGenericReset+0xc0>
 8009da2:	68fb      	ldr	r3, [r7, #12]
 8009da4:	3310      	adds	r3, #16
 8009da6:	4618      	mov	r0, r3
 8009da8:	f001 fa48 	bl	800b23c <xTaskRemoveFromEventList>
 8009dac:	4603      	mov	r3, r0
 8009dae:	2b00      	cmp	r3, #0
 8009db0:	d012      	beq.n	8009dd8 <xQueueGenericReset+0xc0>
 8009db2:	4b0d      	ldr	r3, [pc, #52]	@ (8009de8 <xQueueGenericReset+0xd0>)
 8009db4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009db8:	601a      	str	r2, [r3, #0]
 8009dba:	f3bf 8f4f 	dsb	sy
 8009dbe:	f3bf 8f6f 	isb	sy
 8009dc2:	e009      	b.n	8009dd8 <xQueueGenericReset+0xc0>
 8009dc4:	68fb      	ldr	r3, [r7, #12]
 8009dc6:	3310      	adds	r3, #16
 8009dc8:	4618      	mov	r0, r3
 8009dca:	f7ff fef1 	bl	8009bb0 <vListInitialise>
 8009dce:	68fb      	ldr	r3, [r7, #12]
 8009dd0:	3324      	adds	r3, #36	@ 0x24
 8009dd2:	4618      	mov	r0, r3
 8009dd4:	f7ff feec 	bl	8009bb0 <vListInitialise>
 8009dd8:	f002 f998 	bl	800c10c <vPortExitCritical>
 8009ddc:	2301      	movs	r3, #1
 8009dde:	4618      	mov	r0, r3
 8009de0:	3710      	adds	r7, #16
 8009de2:	46bd      	mov	sp, r7
 8009de4:	bd80      	pop	{r7, pc}
 8009de6:	bf00      	nop
 8009de8:	e000ed04 	.word	0xe000ed04

08009dec <xQueueGenericCreateStatic>:
 8009dec:	b580      	push	{r7, lr}
 8009dee:	b08e      	sub	sp, #56	@ 0x38
 8009df0:	af02      	add	r7, sp, #8
 8009df2:	60f8      	str	r0, [r7, #12]
 8009df4:	60b9      	str	r1, [r7, #8]
 8009df6:	607a      	str	r2, [r7, #4]
 8009df8:	603b      	str	r3, [r7, #0]
 8009dfa:	68fb      	ldr	r3, [r7, #12]
 8009dfc:	2b00      	cmp	r3, #0
 8009dfe:	d10b      	bne.n	8009e18 <xQueueGenericCreateStatic+0x2c>
 8009e00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e04:	f383 8811 	msr	BASEPRI, r3
 8009e08:	f3bf 8f6f 	isb	sy
 8009e0c:	f3bf 8f4f 	dsb	sy
 8009e10:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009e12:	bf00      	nop
 8009e14:	bf00      	nop
 8009e16:	e7fd      	b.n	8009e14 <xQueueGenericCreateStatic+0x28>
 8009e18:	683b      	ldr	r3, [r7, #0]
 8009e1a:	2b00      	cmp	r3, #0
 8009e1c:	d10b      	bne.n	8009e36 <xQueueGenericCreateStatic+0x4a>
 8009e1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e22:	f383 8811 	msr	BASEPRI, r3
 8009e26:	f3bf 8f6f 	isb	sy
 8009e2a:	f3bf 8f4f 	dsb	sy
 8009e2e:	627b      	str	r3, [r7, #36]	@ 0x24
 8009e30:	bf00      	nop
 8009e32:	bf00      	nop
 8009e34:	e7fd      	b.n	8009e32 <xQueueGenericCreateStatic+0x46>
 8009e36:	687b      	ldr	r3, [r7, #4]
 8009e38:	2b00      	cmp	r3, #0
 8009e3a:	d002      	beq.n	8009e42 <xQueueGenericCreateStatic+0x56>
 8009e3c:	68bb      	ldr	r3, [r7, #8]
 8009e3e:	2b00      	cmp	r3, #0
 8009e40:	d001      	beq.n	8009e46 <xQueueGenericCreateStatic+0x5a>
 8009e42:	2301      	movs	r3, #1
 8009e44:	e000      	b.n	8009e48 <xQueueGenericCreateStatic+0x5c>
 8009e46:	2300      	movs	r3, #0
 8009e48:	2b00      	cmp	r3, #0
 8009e4a:	d10b      	bne.n	8009e64 <xQueueGenericCreateStatic+0x78>
 8009e4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e50:	f383 8811 	msr	BASEPRI, r3
 8009e54:	f3bf 8f6f 	isb	sy
 8009e58:	f3bf 8f4f 	dsb	sy
 8009e5c:	623b      	str	r3, [r7, #32]
 8009e5e:	bf00      	nop
 8009e60:	bf00      	nop
 8009e62:	e7fd      	b.n	8009e60 <xQueueGenericCreateStatic+0x74>
 8009e64:	687b      	ldr	r3, [r7, #4]
 8009e66:	2b00      	cmp	r3, #0
 8009e68:	d102      	bne.n	8009e70 <xQueueGenericCreateStatic+0x84>
 8009e6a:	68bb      	ldr	r3, [r7, #8]
 8009e6c:	2b00      	cmp	r3, #0
 8009e6e:	d101      	bne.n	8009e74 <xQueueGenericCreateStatic+0x88>
 8009e70:	2301      	movs	r3, #1
 8009e72:	e000      	b.n	8009e76 <xQueueGenericCreateStatic+0x8a>
 8009e74:	2300      	movs	r3, #0
 8009e76:	2b00      	cmp	r3, #0
 8009e78:	d10b      	bne.n	8009e92 <xQueueGenericCreateStatic+0xa6>
 8009e7a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e7e:	f383 8811 	msr	BASEPRI, r3
 8009e82:	f3bf 8f6f 	isb	sy
 8009e86:	f3bf 8f4f 	dsb	sy
 8009e8a:	61fb      	str	r3, [r7, #28]
 8009e8c:	bf00      	nop
 8009e8e:	bf00      	nop
 8009e90:	e7fd      	b.n	8009e8e <xQueueGenericCreateStatic+0xa2>
 8009e92:	2350      	movs	r3, #80	@ 0x50
 8009e94:	617b      	str	r3, [r7, #20]
 8009e96:	697b      	ldr	r3, [r7, #20]
 8009e98:	2b50      	cmp	r3, #80	@ 0x50
 8009e9a:	d00b      	beq.n	8009eb4 <xQueueGenericCreateStatic+0xc8>
 8009e9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ea0:	f383 8811 	msr	BASEPRI, r3
 8009ea4:	f3bf 8f6f 	isb	sy
 8009ea8:	f3bf 8f4f 	dsb	sy
 8009eac:	61bb      	str	r3, [r7, #24]
 8009eae:	bf00      	nop
 8009eb0:	bf00      	nop
 8009eb2:	e7fd      	b.n	8009eb0 <xQueueGenericCreateStatic+0xc4>
 8009eb4:	697b      	ldr	r3, [r7, #20]
 8009eb6:	683b      	ldr	r3, [r7, #0]
 8009eb8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8009eba:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009ebc:	2b00      	cmp	r3, #0
 8009ebe:	d00d      	beq.n	8009edc <xQueueGenericCreateStatic+0xf0>
 8009ec0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009ec2:	2201      	movs	r2, #1
 8009ec4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8009ec8:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 8009ecc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009ece:	9300      	str	r3, [sp, #0]
 8009ed0:	4613      	mov	r3, r2
 8009ed2:	687a      	ldr	r2, [r7, #4]
 8009ed4:	68b9      	ldr	r1, [r7, #8]
 8009ed6:	68f8      	ldr	r0, [r7, #12]
 8009ed8:	f000 f805 	bl	8009ee6 <prvInitialiseNewQueue>
 8009edc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009ede:	4618      	mov	r0, r3
 8009ee0:	3730      	adds	r7, #48	@ 0x30
 8009ee2:	46bd      	mov	sp, r7
 8009ee4:	bd80      	pop	{r7, pc}

08009ee6 <prvInitialiseNewQueue>:
 8009ee6:	b580      	push	{r7, lr}
 8009ee8:	b084      	sub	sp, #16
 8009eea:	af00      	add	r7, sp, #0
 8009eec:	60f8      	str	r0, [r7, #12]
 8009eee:	60b9      	str	r1, [r7, #8]
 8009ef0:	607a      	str	r2, [r7, #4]
 8009ef2:	70fb      	strb	r3, [r7, #3]
 8009ef4:	68bb      	ldr	r3, [r7, #8]
 8009ef6:	2b00      	cmp	r3, #0
 8009ef8:	d103      	bne.n	8009f02 <prvInitialiseNewQueue+0x1c>
 8009efa:	69bb      	ldr	r3, [r7, #24]
 8009efc:	69ba      	ldr	r2, [r7, #24]
 8009efe:	601a      	str	r2, [r3, #0]
 8009f00:	e002      	b.n	8009f08 <prvInitialiseNewQueue+0x22>
 8009f02:	69bb      	ldr	r3, [r7, #24]
 8009f04:	687a      	ldr	r2, [r7, #4]
 8009f06:	601a      	str	r2, [r3, #0]
 8009f08:	69bb      	ldr	r3, [r7, #24]
 8009f0a:	68fa      	ldr	r2, [r7, #12]
 8009f0c:	63da      	str	r2, [r3, #60]	@ 0x3c
 8009f0e:	69bb      	ldr	r3, [r7, #24]
 8009f10:	68ba      	ldr	r2, [r7, #8]
 8009f12:	641a      	str	r2, [r3, #64]	@ 0x40
 8009f14:	2101      	movs	r1, #1
 8009f16:	69b8      	ldr	r0, [r7, #24]
 8009f18:	f7ff fefe 	bl	8009d18 <xQueueGenericReset>
 8009f1c:	69bb      	ldr	r3, [r7, #24]
 8009f1e:	78fa      	ldrb	r2, [r7, #3]
 8009f20:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8009f24:	bf00      	nop
 8009f26:	3710      	adds	r7, #16
 8009f28:	46bd      	mov	sp, r7
 8009f2a:	bd80      	pop	{r7, pc}

08009f2c <xQueueGenericSend>:
 8009f2c:	b580      	push	{r7, lr}
 8009f2e:	b08e      	sub	sp, #56	@ 0x38
 8009f30:	af00      	add	r7, sp, #0
 8009f32:	60f8      	str	r0, [r7, #12]
 8009f34:	60b9      	str	r1, [r7, #8]
 8009f36:	607a      	str	r2, [r7, #4]
 8009f38:	603b      	str	r3, [r7, #0]
 8009f3a:	2300      	movs	r3, #0
 8009f3c:	637b      	str	r3, [r7, #52]	@ 0x34
 8009f3e:	68fb      	ldr	r3, [r7, #12]
 8009f40:	633b      	str	r3, [r7, #48]	@ 0x30
 8009f42:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009f44:	2b00      	cmp	r3, #0
 8009f46:	d10b      	bne.n	8009f60 <xQueueGenericSend+0x34>
 8009f48:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f4c:	f383 8811 	msr	BASEPRI, r3
 8009f50:	f3bf 8f6f 	isb	sy
 8009f54:	f3bf 8f4f 	dsb	sy
 8009f58:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009f5a:	bf00      	nop
 8009f5c:	bf00      	nop
 8009f5e:	e7fd      	b.n	8009f5c <xQueueGenericSend+0x30>
 8009f60:	68bb      	ldr	r3, [r7, #8]
 8009f62:	2b00      	cmp	r3, #0
 8009f64:	d103      	bne.n	8009f6e <xQueueGenericSend+0x42>
 8009f66:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009f68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009f6a:	2b00      	cmp	r3, #0
 8009f6c:	d101      	bne.n	8009f72 <xQueueGenericSend+0x46>
 8009f6e:	2301      	movs	r3, #1
 8009f70:	e000      	b.n	8009f74 <xQueueGenericSend+0x48>
 8009f72:	2300      	movs	r3, #0
 8009f74:	2b00      	cmp	r3, #0
 8009f76:	d10b      	bne.n	8009f90 <xQueueGenericSend+0x64>
 8009f78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f7c:	f383 8811 	msr	BASEPRI, r3
 8009f80:	f3bf 8f6f 	isb	sy
 8009f84:	f3bf 8f4f 	dsb	sy
 8009f88:	627b      	str	r3, [r7, #36]	@ 0x24
 8009f8a:	bf00      	nop
 8009f8c:	bf00      	nop
 8009f8e:	e7fd      	b.n	8009f8c <xQueueGenericSend+0x60>
 8009f90:	683b      	ldr	r3, [r7, #0]
 8009f92:	2b02      	cmp	r3, #2
 8009f94:	d103      	bne.n	8009f9e <xQueueGenericSend+0x72>
 8009f96:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009f98:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009f9a:	2b01      	cmp	r3, #1
 8009f9c:	d101      	bne.n	8009fa2 <xQueueGenericSend+0x76>
 8009f9e:	2301      	movs	r3, #1
 8009fa0:	e000      	b.n	8009fa4 <xQueueGenericSend+0x78>
 8009fa2:	2300      	movs	r3, #0
 8009fa4:	2b00      	cmp	r3, #0
 8009fa6:	d10b      	bne.n	8009fc0 <xQueueGenericSend+0x94>
 8009fa8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009fac:	f383 8811 	msr	BASEPRI, r3
 8009fb0:	f3bf 8f6f 	isb	sy
 8009fb4:	f3bf 8f4f 	dsb	sy
 8009fb8:	623b      	str	r3, [r7, #32]
 8009fba:	bf00      	nop
 8009fbc:	bf00      	nop
 8009fbe:	e7fd      	b.n	8009fbc <xQueueGenericSend+0x90>
 8009fc0:	f001 fb02 	bl	800b5c8 <xTaskGetSchedulerState>
 8009fc4:	4603      	mov	r3, r0
 8009fc6:	2b00      	cmp	r3, #0
 8009fc8:	d102      	bne.n	8009fd0 <xQueueGenericSend+0xa4>
 8009fca:	687b      	ldr	r3, [r7, #4]
 8009fcc:	2b00      	cmp	r3, #0
 8009fce:	d101      	bne.n	8009fd4 <xQueueGenericSend+0xa8>
 8009fd0:	2301      	movs	r3, #1
 8009fd2:	e000      	b.n	8009fd6 <xQueueGenericSend+0xaa>
 8009fd4:	2300      	movs	r3, #0
 8009fd6:	2b00      	cmp	r3, #0
 8009fd8:	d10b      	bne.n	8009ff2 <xQueueGenericSend+0xc6>
 8009fda:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009fde:	f383 8811 	msr	BASEPRI, r3
 8009fe2:	f3bf 8f6f 	isb	sy
 8009fe6:	f3bf 8f4f 	dsb	sy
 8009fea:	61fb      	str	r3, [r7, #28]
 8009fec:	bf00      	nop
 8009fee:	bf00      	nop
 8009ff0:	e7fd      	b.n	8009fee <xQueueGenericSend+0xc2>
 8009ff2:	f002 f859 	bl	800c0a8 <vPortEnterCritical>
 8009ff6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009ff8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8009ffa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009ffc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009ffe:	429a      	cmp	r2, r3
 800a000:	d302      	bcc.n	800a008 <xQueueGenericSend+0xdc>
 800a002:	683b      	ldr	r3, [r7, #0]
 800a004:	2b02      	cmp	r3, #2
 800a006:	d129      	bne.n	800a05c <xQueueGenericSend+0x130>
 800a008:	683a      	ldr	r2, [r7, #0]
 800a00a:	68b9      	ldr	r1, [r7, #8]
 800a00c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800a00e:	f000 fa0f 	bl	800a430 <prvCopyDataToQueue>
 800a012:	62f8      	str	r0, [r7, #44]	@ 0x2c
 800a014:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a016:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a018:	2b00      	cmp	r3, #0
 800a01a:	d010      	beq.n	800a03e <xQueueGenericSend+0x112>
 800a01c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a01e:	3324      	adds	r3, #36	@ 0x24
 800a020:	4618      	mov	r0, r3
 800a022:	f001 f90b 	bl	800b23c <xTaskRemoveFromEventList>
 800a026:	4603      	mov	r3, r0
 800a028:	2b00      	cmp	r3, #0
 800a02a:	d013      	beq.n	800a054 <xQueueGenericSend+0x128>
 800a02c:	4b3f      	ldr	r3, [pc, #252]	@ (800a12c <xQueueGenericSend+0x200>)
 800a02e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a032:	601a      	str	r2, [r3, #0]
 800a034:	f3bf 8f4f 	dsb	sy
 800a038:	f3bf 8f6f 	isb	sy
 800a03c:	e00a      	b.n	800a054 <xQueueGenericSend+0x128>
 800a03e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a040:	2b00      	cmp	r3, #0
 800a042:	d007      	beq.n	800a054 <xQueueGenericSend+0x128>
 800a044:	4b39      	ldr	r3, [pc, #228]	@ (800a12c <xQueueGenericSend+0x200>)
 800a046:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a04a:	601a      	str	r2, [r3, #0]
 800a04c:	f3bf 8f4f 	dsb	sy
 800a050:	f3bf 8f6f 	isb	sy
 800a054:	f002 f85a 	bl	800c10c <vPortExitCritical>
 800a058:	2301      	movs	r3, #1
 800a05a:	e063      	b.n	800a124 <xQueueGenericSend+0x1f8>
 800a05c:	687b      	ldr	r3, [r7, #4]
 800a05e:	2b00      	cmp	r3, #0
 800a060:	d103      	bne.n	800a06a <xQueueGenericSend+0x13e>
 800a062:	f002 f853 	bl	800c10c <vPortExitCritical>
 800a066:	2300      	movs	r3, #0
 800a068:	e05c      	b.n	800a124 <xQueueGenericSend+0x1f8>
 800a06a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a06c:	2b00      	cmp	r3, #0
 800a06e:	d106      	bne.n	800a07e <xQueueGenericSend+0x152>
 800a070:	f107 0314 	add.w	r3, r7, #20
 800a074:	4618      	mov	r0, r3
 800a076:	f001 f945 	bl	800b304 <vTaskInternalSetTimeOutState>
 800a07a:	2301      	movs	r3, #1
 800a07c:	637b      	str	r3, [r7, #52]	@ 0x34
 800a07e:	f002 f845 	bl	800c10c <vPortExitCritical>
 800a082:	f000 fe9b 	bl	800adbc <vTaskSuspendAll>
 800a086:	f002 f80f 	bl	800c0a8 <vPortEnterCritical>
 800a08a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a08c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800a090:	b25b      	sxtb	r3, r3
 800a092:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a096:	d103      	bne.n	800a0a0 <xQueueGenericSend+0x174>
 800a098:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a09a:	2200      	movs	r2, #0
 800a09c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800a0a0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a0a2:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800a0a6:	b25b      	sxtb	r3, r3
 800a0a8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a0ac:	d103      	bne.n	800a0b6 <xQueueGenericSend+0x18a>
 800a0ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a0b0:	2200      	movs	r2, #0
 800a0b2:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800a0b6:	f002 f829 	bl	800c10c <vPortExitCritical>
 800a0ba:	1d3a      	adds	r2, r7, #4
 800a0bc:	f107 0314 	add.w	r3, r7, #20
 800a0c0:	4611      	mov	r1, r2
 800a0c2:	4618      	mov	r0, r3
 800a0c4:	f001 f934 	bl	800b330 <xTaskCheckForTimeOut>
 800a0c8:	4603      	mov	r3, r0
 800a0ca:	2b00      	cmp	r3, #0
 800a0cc:	d124      	bne.n	800a118 <xQueueGenericSend+0x1ec>
 800a0ce:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800a0d0:	f000 faa6 	bl	800a620 <prvIsQueueFull>
 800a0d4:	4603      	mov	r3, r0
 800a0d6:	2b00      	cmp	r3, #0
 800a0d8:	d018      	beq.n	800a10c <xQueueGenericSend+0x1e0>
 800a0da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a0dc:	3310      	adds	r3, #16
 800a0de:	687a      	ldr	r2, [r7, #4]
 800a0e0:	4611      	mov	r1, r2
 800a0e2:	4618      	mov	r0, r3
 800a0e4:	f001 f858 	bl	800b198 <vTaskPlaceOnEventList>
 800a0e8:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800a0ea:	f000 fa31 	bl	800a550 <prvUnlockQueue>
 800a0ee:	f000 fe73 	bl	800add8 <xTaskResumeAll>
 800a0f2:	4603      	mov	r3, r0
 800a0f4:	2b00      	cmp	r3, #0
 800a0f6:	f47f af7c 	bne.w	8009ff2 <xQueueGenericSend+0xc6>
 800a0fa:	4b0c      	ldr	r3, [pc, #48]	@ (800a12c <xQueueGenericSend+0x200>)
 800a0fc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a100:	601a      	str	r2, [r3, #0]
 800a102:	f3bf 8f4f 	dsb	sy
 800a106:	f3bf 8f6f 	isb	sy
 800a10a:	e772      	b.n	8009ff2 <xQueueGenericSend+0xc6>
 800a10c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800a10e:	f000 fa1f 	bl	800a550 <prvUnlockQueue>
 800a112:	f000 fe61 	bl	800add8 <xTaskResumeAll>
 800a116:	e76c      	b.n	8009ff2 <xQueueGenericSend+0xc6>
 800a118:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800a11a:	f000 fa19 	bl	800a550 <prvUnlockQueue>
 800a11e:	f000 fe5b 	bl	800add8 <xTaskResumeAll>
 800a122:	2300      	movs	r3, #0
 800a124:	4618      	mov	r0, r3
 800a126:	3738      	adds	r7, #56	@ 0x38
 800a128:	46bd      	mov	sp, r7
 800a12a:	bd80      	pop	{r7, pc}
 800a12c:	e000ed04 	.word	0xe000ed04

0800a130 <xQueueGenericSendFromISR>:
 800a130:	b580      	push	{r7, lr}
 800a132:	b090      	sub	sp, #64	@ 0x40
 800a134:	af00      	add	r7, sp, #0
 800a136:	60f8      	str	r0, [r7, #12]
 800a138:	60b9      	str	r1, [r7, #8]
 800a13a:	607a      	str	r2, [r7, #4]
 800a13c:	603b      	str	r3, [r7, #0]
 800a13e:	68fb      	ldr	r3, [r7, #12]
 800a140:	63bb      	str	r3, [r7, #56]	@ 0x38
 800a142:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a144:	2b00      	cmp	r3, #0
 800a146:	d10b      	bne.n	800a160 <xQueueGenericSendFromISR+0x30>
 800a148:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a14c:	f383 8811 	msr	BASEPRI, r3
 800a150:	f3bf 8f6f 	isb	sy
 800a154:	f3bf 8f4f 	dsb	sy
 800a158:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a15a:	bf00      	nop
 800a15c:	bf00      	nop
 800a15e:	e7fd      	b.n	800a15c <xQueueGenericSendFromISR+0x2c>
 800a160:	68bb      	ldr	r3, [r7, #8]
 800a162:	2b00      	cmp	r3, #0
 800a164:	d103      	bne.n	800a16e <xQueueGenericSendFromISR+0x3e>
 800a166:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a168:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a16a:	2b00      	cmp	r3, #0
 800a16c:	d101      	bne.n	800a172 <xQueueGenericSendFromISR+0x42>
 800a16e:	2301      	movs	r3, #1
 800a170:	e000      	b.n	800a174 <xQueueGenericSendFromISR+0x44>
 800a172:	2300      	movs	r3, #0
 800a174:	2b00      	cmp	r3, #0
 800a176:	d10b      	bne.n	800a190 <xQueueGenericSendFromISR+0x60>
 800a178:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a17c:	f383 8811 	msr	BASEPRI, r3
 800a180:	f3bf 8f6f 	isb	sy
 800a184:	f3bf 8f4f 	dsb	sy
 800a188:	627b      	str	r3, [r7, #36]	@ 0x24
 800a18a:	bf00      	nop
 800a18c:	bf00      	nop
 800a18e:	e7fd      	b.n	800a18c <xQueueGenericSendFromISR+0x5c>
 800a190:	683b      	ldr	r3, [r7, #0]
 800a192:	2b02      	cmp	r3, #2
 800a194:	d103      	bne.n	800a19e <xQueueGenericSendFromISR+0x6e>
 800a196:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a198:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a19a:	2b01      	cmp	r3, #1
 800a19c:	d101      	bne.n	800a1a2 <xQueueGenericSendFromISR+0x72>
 800a19e:	2301      	movs	r3, #1
 800a1a0:	e000      	b.n	800a1a4 <xQueueGenericSendFromISR+0x74>
 800a1a2:	2300      	movs	r3, #0
 800a1a4:	2b00      	cmp	r3, #0
 800a1a6:	d10b      	bne.n	800a1c0 <xQueueGenericSendFromISR+0x90>
 800a1a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a1ac:	f383 8811 	msr	BASEPRI, r3
 800a1b0:	f3bf 8f6f 	isb	sy
 800a1b4:	f3bf 8f4f 	dsb	sy
 800a1b8:	623b      	str	r3, [r7, #32]
 800a1ba:	bf00      	nop
 800a1bc:	bf00      	nop
 800a1be:	e7fd      	b.n	800a1bc <xQueueGenericSendFromISR+0x8c>
 800a1c0:	f002 f852 	bl	800c268 <vPortValidateInterruptPriority>
 800a1c4:	f3ef 8211 	mrs	r2, BASEPRI
 800a1c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a1cc:	f383 8811 	msr	BASEPRI, r3
 800a1d0:	f3bf 8f6f 	isb	sy
 800a1d4:	f3bf 8f4f 	dsb	sy
 800a1d8:	61fa      	str	r2, [r7, #28]
 800a1da:	61bb      	str	r3, [r7, #24]
 800a1dc:	69fb      	ldr	r3, [r7, #28]
 800a1de:	637b      	str	r3, [r7, #52]	@ 0x34
 800a1e0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a1e2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a1e4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a1e6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a1e8:	429a      	cmp	r2, r3
 800a1ea:	d302      	bcc.n	800a1f2 <xQueueGenericSendFromISR+0xc2>
 800a1ec:	683b      	ldr	r3, [r7, #0]
 800a1ee:	2b02      	cmp	r3, #2
 800a1f0:	d12f      	bne.n	800a252 <xQueueGenericSendFromISR+0x122>
 800a1f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a1f4:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800a1f8:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 800a1fc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a1fe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a200:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a202:	683a      	ldr	r2, [r7, #0]
 800a204:	68b9      	ldr	r1, [r7, #8]
 800a206:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800a208:	f000 f912 	bl	800a430 <prvCopyDataToQueue>
 800a20c:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 800a210:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a214:	d112      	bne.n	800a23c <xQueueGenericSendFromISR+0x10c>
 800a216:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a218:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a21a:	2b00      	cmp	r3, #0
 800a21c:	d016      	beq.n	800a24c <xQueueGenericSendFromISR+0x11c>
 800a21e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a220:	3324      	adds	r3, #36	@ 0x24
 800a222:	4618      	mov	r0, r3
 800a224:	f001 f80a 	bl	800b23c <xTaskRemoveFromEventList>
 800a228:	4603      	mov	r3, r0
 800a22a:	2b00      	cmp	r3, #0
 800a22c:	d00e      	beq.n	800a24c <xQueueGenericSendFromISR+0x11c>
 800a22e:	687b      	ldr	r3, [r7, #4]
 800a230:	2b00      	cmp	r3, #0
 800a232:	d00b      	beq.n	800a24c <xQueueGenericSendFromISR+0x11c>
 800a234:	687b      	ldr	r3, [r7, #4]
 800a236:	2201      	movs	r2, #1
 800a238:	601a      	str	r2, [r3, #0]
 800a23a:	e007      	b.n	800a24c <xQueueGenericSendFromISR+0x11c>
 800a23c:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 800a240:	3301      	adds	r3, #1
 800a242:	b2db      	uxtb	r3, r3
 800a244:	b25a      	sxtb	r2, r3
 800a246:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a248:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800a24c:	2301      	movs	r3, #1
 800a24e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a250:	e001      	b.n	800a256 <xQueueGenericSendFromISR+0x126>
 800a252:	2300      	movs	r3, #0
 800a254:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a256:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a258:	617b      	str	r3, [r7, #20]
 800a25a:	697b      	ldr	r3, [r7, #20]
 800a25c:	f383 8811 	msr	BASEPRI, r3
 800a260:	bf00      	nop
 800a262:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a264:	4618      	mov	r0, r3
 800a266:	3740      	adds	r7, #64	@ 0x40
 800a268:	46bd      	mov	sp, r7
 800a26a:	bd80      	pop	{r7, pc}

0800a26c <xQueueReceive>:
 800a26c:	b580      	push	{r7, lr}
 800a26e:	b08c      	sub	sp, #48	@ 0x30
 800a270:	af00      	add	r7, sp, #0
 800a272:	60f8      	str	r0, [r7, #12]
 800a274:	60b9      	str	r1, [r7, #8]
 800a276:	607a      	str	r2, [r7, #4]
 800a278:	2300      	movs	r3, #0
 800a27a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a27c:	68fb      	ldr	r3, [r7, #12]
 800a27e:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a280:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a282:	2b00      	cmp	r3, #0
 800a284:	d10b      	bne.n	800a29e <xQueueReceive+0x32>
 800a286:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a28a:	f383 8811 	msr	BASEPRI, r3
 800a28e:	f3bf 8f6f 	isb	sy
 800a292:	f3bf 8f4f 	dsb	sy
 800a296:	623b      	str	r3, [r7, #32]
 800a298:	bf00      	nop
 800a29a:	bf00      	nop
 800a29c:	e7fd      	b.n	800a29a <xQueueReceive+0x2e>
 800a29e:	68bb      	ldr	r3, [r7, #8]
 800a2a0:	2b00      	cmp	r3, #0
 800a2a2:	d103      	bne.n	800a2ac <xQueueReceive+0x40>
 800a2a4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a2a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a2a8:	2b00      	cmp	r3, #0
 800a2aa:	d101      	bne.n	800a2b0 <xQueueReceive+0x44>
 800a2ac:	2301      	movs	r3, #1
 800a2ae:	e000      	b.n	800a2b2 <xQueueReceive+0x46>
 800a2b0:	2300      	movs	r3, #0
 800a2b2:	2b00      	cmp	r3, #0
 800a2b4:	d10b      	bne.n	800a2ce <xQueueReceive+0x62>
 800a2b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a2ba:	f383 8811 	msr	BASEPRI, r3
 800a2be:	f3bf 8f6f 	isb	sy
 800a2c2:	f3bf 8f4f 	dsb	sy
 800a2c6:	61fb      	str	r3, [r7, #28]
 800a2c8:	bf00      	nop
 800a2ca:	bf00      	nop
 800a2cc:	e7fd      	b.n	800a2ca <xQueueReceive+0x5e>
 800a2ce:	f001 f97b 	bl	800b5c8 <xTaskGetSchedulerState>
 800a2d2:	4603      	mov	r3, r0
 800a2d4:	2b00      	cmp	r3, #0
 800a2d6:	d102      	bne.n	800a2de <xQueueReceive+0x72>
 800a2d8:	687b      	ldr	r3, [r7, #4]
 800a2da:	2b00      	cmp	r3, #0
 800a2dc:	d101      	bne.n	800a2e2 <xQueueReceive+0x76>
 800a2de:	2301      	movs	r3, #1
 800a2e0:	e000      	b.n	800a2e4 <xQueueReceive+0x78>
 800a2e2:	2300      	movs	r3, #0
 800a2e4:	2b00      	cmp	r3, #0
 800a2e6:	d10b      	bne.n	800a300 <xQueueReceive+0x94>
 800a2e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a2ec:	f383 8811 	msr	BASEPRI, r3
 800a2f0:	f3bf 8f6f 	isb	sy
 800a2f4:	f3bf 8f4f 	dsb	sy
 800a2f8:	61bb      	str	r3, [r7, #24]
 800a2fa:	bf00      	nop
 800a2fc:	bf00      	nop
 800a2fe:	e7fd      	b.n	800a2fc <xQueueReceive+0x90>
 800a300:	f001 fed2 	bl	800c0a8 <vPortEnterCritical>
 800a304:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a306:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a308:	627b      	str	r3, [r7, #36]	@ 0x24
 800a30a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a30c:	2b00      	cmp	r3, #0
 800a30e:	d01f      	beq.n	800a350 <xQueueReceive+0xe4>
 800a310:	68b9      	ldr	r1, [r7, #8]
 800a312:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a314:	f000 f8f6 	bl	800a504 <prvCopyDataFromQueue>
 800a318:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a31a:	1e5a      	subs	r2, r3, #1
 800a31c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a31e:	639a      	str	r2, [r3, #56]	@ 0x38
 800a320:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a322:	691b      	ldr	r3, [r3, #16]
 800a324:	2b00      	cmp	r3, #0
 800a326:	d00f      	beq.n	800a348 <xQueueReceive+0xdc>
 800a328:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a32a:	3310      	adds	r3, #16
 800a32c:	4618      	mov	r0, r3
 800a32e:	f000 ff85 	bl	800b23c <xTaskRemoveFromEventList>
 800a332:	4603      	mov	r3, r0
 800a334:	2b00      	cmp	r3, #0
 800a336:	d007      	beq.n	800a348 <xQueueReceive+0xdc>
 800a338:	4b3c      	ldr	r3, [pc, #240]	@ (800a42c <xQueueReceive+0x1c0>)
 800a33a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a33e:	601a      	str	r2, [r3, #0]
 800a340:	f3bf 8f4f 	dsb	sy
 800a344:	f3bf 8f6f 	isb	sy
 800a348:	f001 fee0 	bl	800c10c <vPortExitCritical>
 800a34c:	2301      	movs	r3, #1
 800a34e:	e069      	b.n	800a424 <xQueueReceive+0x1b8>
 800a350:	687b      	ldr	r3, [r7, #4]
 800a352:	2b00      	cmp	r3, #0
 800a354:	d103      	bne.n	800a35e <xQueueReceive+0xf2>
 800a356:	f001 fed9 	bl	800c10c <vPortExitCritical>
 800a35a:	2300      	movs	r3, #0
 800a35c:	e062      	b.n	800a424 <xQueueReceive+0x1b8>
 800a35e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a360:	2b00      	cmp	r3, #0
 800a362:	d106      	bne.n	800a372 <xQueueReceive+0x106>
 800a364:	f107 0310 	add.w	r3, r7, #16
 800a368:	4618      	mov	r0, r3
 800a36a:	f000 ffcb 	bl	800b304 <vTaskInternalSetTimeOutState>
 800a36e:	2301      	movs	r3, #1
 800a370:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a372:	f001 fecb 	bl	800c10c <vPortExitCritical>
 800a376:	f000 fd21 	bl	800adbc <vTaskSuspendAll>
 800a37a:	f001 fe95 	bl	800c0a8 <vPortEnterCritical>
 800a37e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a380:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800a384:	b25b      	sxtb	r3, r3
 800a386:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a38a:	d103      	bne.n	800a394 <xQueueReceive+0x128>
 800a38c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a38e:	2200      	movs	r2, #0
 800a390:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800a394:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a396:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800a39a:	b25b      	sxtb	r3, r3
 800a39c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a3a0:	d103      	bne.n	800a3aa <xQueueReceive+0x13e>
 800a3a2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a3a4:	2200      	movs	r2, #0
 800a3a6:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800a3aa:	f001 feaf 	bl	800c10c <vPortExitCritical>
 800a3ae:	1d3a      	adds	r2, r7, #4
 800a3b0:	f107 0310 	add.w	r3, r7, #16
 800a3b4:	4611      	mov	r1, r2
 800a3b6:	4618      	mov	r0, r3
 800a3b8:	f000 ffba 	bl	800b330 <xTaskCheckForTimeOut>
 800a3bc:	4603      	mov	r3, r0
 800a3be:	2b00      	cmp	r3, #0
 800a3c0:	d123      	bne.n	800a40a <xQueueReceive+0x19e>
 800a3c2:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a3c4:	f000 f916 	bl	800a5f4 <prvIsQueueEmpty>
 800a3c8:	4603      	mov	r3, r0
 800a3ca:	2b00      	cmp	r3, #0
 800a3cc:	d017      	beq.n	800a3fe <xQueueReceive+0x192>
 800a3ce:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a3d0:	3324      	adds	r3, #36	@ 0x24
 800a3d2:	687a      	ldr	r2, [r7, #4]
 800a3d4:	4611      	mov	r1, r2
 800a3d6:	4618      	mov	r0, r3
 800a3d8:	f000 fede 	bl	800b198 <vTaskPlaceOnEventList>
 800a3dc:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a3de:	f000 f8b7 	bl	800a550 <prvUnlockQueue>
 800a3e2:	f000 fcf9 	bl	800add8 <xTaskResumeAll>
 800a3e6:	4603      	mov	r3, r0
 800a3e8:	2b00      	cmp	r3, #0
 800a3ea:	d189      	bne.n	800a300 <xQueueReceive+0x94>
 800a3ec:	4b0f      	ldr	r3, [pc, #60]	@ (800a42c <xQueueReceive+0x1c0>)
 800a3ee:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a3f2:	601a      	str	r2, [r3, #0]
 800a3f4:	f3bf 8f4f 	dsb	sy
 800a3f8:	f3bf 8f6f 	isb	sy
 800a3fc:	e780      	b.n	800a300 <xQueueReceive+0x94>
 800a3fe:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a400:	f000 f8a6 	bl	800a550 <prvUnlockQueue>
 800a404:	f000 fce8 	bl	800add8 <xTaskResumeAll>
 800a408:	e77a      	b.n	800a300 <xQueueReceive+0x94>
 800a40a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a40c:	f000 f8a0 	bl	800a550 <prvUnlockQueue>
 800a410:	f000 fce2 	bl	800add8 <xTaskResumeAll>
 800a414:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a416:	f000 f8ed 	bl	800a5f4 <prvIsQueueEmpty>
 800a41a:	4603      	mov	r3, r0
 800a41c:	2b00      	cmp	r3, #0
 800a41e:	f43f af6f 	beq.w	800a300 <xQueueReceive+0x94>
 800a422:	2300      	movs	r3, #0
 800a424:	4618      	mov	r0, r3
 800a426:	3730      	adds	r7, #48	@ 0x30
 800a428:	46bd      	mov	sp, r7
 800a42a:	bd80      	pop	{r7, pc}
 800a42c:	e000ed04 	.word	0xe000ed04

0800a430 <prvCopyDataToQueue>:
 800a430:	b580      	push	{r7, lr}
 800a432:	b086      	sub	sp, #24
 800a434:	af00      	add	r7, sp, #0
 800a436:	60f8      	str	r0, [r7, #12]
 800a438:	60b9      	str	r1, [r7, #8]
 800a43a:	607a      	str	r2, [r7, #4]
 800a43c:	2300      	movs	r3, #0
 800a43e:	617b      	str	r3, [r7, #20]
 800a440:	68fb      	ldr	r3, [r7, #12]
 800a442:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a444:	613b      	str	r3, [r7, #16]
 800a446:	68fb      	ldr	r3, [r7, #12]
 800a448:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a44a:	2b00      	cmp	r3, #0
 800a44c:	d10d      	bne.n	800a46a <prvCopyDataToQueue+0x3a>
 800a44e:	68fb      	ldr	r3, [r7, #12]
 800a450:	681b      	ldr	r3, [r3, #0]
 800a452:	2b00      	cmp	r3, #0
 800a454:	d14d      	bne.n	800a4f2 <prvCopyDataToQueue+0xc2>
 800a456:	68fb      	ldr	r3, [r7, #12]
 800a458:	689b      	ldr	r3, [r3, #8]
 800a45a:	4618      	mov	r0, r3
 800a45c:	f001 f8d2 	bl	800b604 <xTaskPriorityDisinherit>
 800a460:	6178      	str	r0, [r7, #20]
 800a462:	68fb      	ldr	r3, [r7, #12]
 800a464:	2200      	movs	r2, #0
 800a466:	609a      	str	r2, [r3, #8]
 800a468:	e043      	b.n	800a4f2 <prvCopyDataToQueue+0xc2>
 800a46a:	687b      	ldr	r3, [r7, #4]
 800a46c:	2b00      	cmp	r3, #0
 800a46e:	d119      	bne.n	800a4a4 <prvCopyDataToQueue+0x74>
 800a470:	68fb      	ldr	r3, [r7, #12]
 800a472:	6858      	ldr	r0, [r3, #4]
 800a474:	68fb      	ldr	r3, [r7, #12]
 800a476:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a478:	461a      	mov	r2, r3
 800a47a:	68b9      	ldr	r1, [r7, #8]
 800a47c:	f002 f9b6 	bl	800c7ec <memcpy>
 800a480:	68fb      	ldr	r3, [r7, #12]
 800a482:	685a      	ldr	r2, [r3, #4]
 800a484:	68fb      	ldr	r3, [r7, #12]
 800a486:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a488:	441a      	add	r2, r3
 800a48a:	68fb      	ldr	r3, [r7, #12]
 800a48c:	605a      	str	r2, [r3, #4]
 800a48e:	68fb      	ldr	r3, [r7, #12]
 800a490:	685a      	ldr	r2, [r3, #4]
 800a492:	68fb      	ldr	r3, [r7, #12]
 800a494:	689b      	ldr	r3, [r3, #8]
 800a496:	429a      	cmp	r2, r3
 800a498:	d32b      	bcc.n	800a4f2 <prvCopyDataToQueue+0xc2>
 800a49a:	68fb      	ldr	r3, [r7, #12]
 800a49c:	681a      	ldr	r2, [r3, #0]
 800a49e:	68fb      	ldr	r3, [r7, #12]
 800a4a0:	605a      	str	r2, [r3, #4]
 800a4a2:	e026      	b.n	800a4f2 <prvCopyDataToQueue+0xc2>
 800a4a4:	68fb      	ldr	r3, [r7, #12]
 800a4a6:	68d8      	ldr	r0, [r3, #12]
 800a4a8:	68fb      	ldr	r3, [r7, #12]
 800a4aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a4ac:	461a      	mov	r2, r3
 800a4ae:	68b9      	ldr	r1, [r7, #8]
 800a4b0:	f002 f99c 	bl	800c7ec <memcpy>
 800a4b4:	68fb      	ldr	r3, [r7, #12]
 800a4b6:	68da      	ldr	r2, [r3, #12]
 800a4b8:	68fb      	ldr	r3, [r7, #12]
 800a4ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a4bc:	425b      	negs	r3, r3
 800a4be:	441a      	add	r2, r3
 800a4c0:	68fb      	ldr	r3, [r7, #12]
 800a4c2:	60da      	str	r2, [r3, #12]
 800a4c4:	68fb      	ldr	r3, [r7, #12]
 800a4c6:	68da      	ldr	r2, [r3, #12]
 800a4c8:	68fb      	ldr	r3, [r7, #12]
 800a4ca:	681b      	ldr	r3, [r3, #0]
 800a4cc:	429a      	cmp	r2, r3
 800a4ce:	d207      	bcs.n	800a4e0 <prvCopyDataToQueue+0xb0>
 800a4d0:	68fb      	ldr	r3, [r7, #12]
 800a4d2:	689a      	ldr	r2, [r3, #8]
 800a4d4:	68fb      	ldr	r3, [r7, #12]
 800a4d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a4d8:	425b      	negs	r3, r3
 800a4da:	441a      	add	r2, r3
 800a4dc:	68fb      	ldr	r3, [r7, #12]
 800a4de:	60da      	str	r2, [r3, #12]
 800a4e0:	687b      	ldr	r3, [r7, #4]
 800a4e2:	2b02      	cmp	r3, #2
 800a4e4:	d105      	bne.n	800a4f2 <prvCopyDataToQueue+0xc2>
 800a4e6:	693b      	ldr	r3, [r7, #16]
 800a4e8:	2b00      	cmp	r3, #0
 800a4ea:	d002      	beq.n	800a4f2 <prvCopyDataToQueue+0xc2>
 800a4ec:	693b      	ldr	r3, [r7, #16]
 800a4ee:	3b01      	subs	r3, #1
 800a4f0:	613b      	str	r3, [r7, #16]
 800a4f2:	693b      	ldr	r3, [r7, #16]
 800a4f4:	1c5a      	adds	r2, r3, #1
 800a4f6:	68fb      	ldr	r3, [r7, #12]
 800a4f8:	639a      	str	r2, [r3, #56]	@ 0x38
 800a4fa:	697b      	ldr	r3, [r7, #20]
 800a4fc:	4618      	mov	r0, r3
 800a4fe:	3718      	adds	r7, #24
 800a500:	46bd      	mov	sp, r7
 800a502:	bd80      	pop	{r7, pc}

0800a504 <prvCopyDataFromQueue>:
 800a504:	b580      	push	{r7, lr}
 800a506:	b082      	sub	sp, #8
 800a508:	af00      	add	r7, sp, #0
 800a50a:	6078      	str	r0, [r7, #4]
 800a50c:	6039      	str	r1, [r7, #0]
 800a50e:	687b      	ldr	r3, [r7, #4]
 800a510:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a512:	2b00      	cmp	r3, #0
 800a514:	d018      	beq.n	800a548 <prvCopyDataFromQueue+0x44>
 800a516:	687b      	ldr	r3, [r7, #4]
 800a518:	68da      	ldr	r2, [r3, #12]
 800a51a:	687b      	ldr	r3, [r7, #4]
 800a51c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a51e:	441a      	add	r2, r3
 800a520:	687b      	ldr	r3, [r7, #4]
 800a522:	60da      	str	r2, [r3, #12]
 800a524:	687b      	ldr	r3, [r7, #4]
 800a526:	68da      	ldr	r2, [r3, #12]
 800a528:	687b      	ldr	r3, [r7, #4]
 800a52a:	689b      	ldr	r3, [r3, #8]
 800a52c:	429a      	cmp	r2, r3
 800a52e:	d303      	bcc.n	800a538 <prvCopyDataFromQueue+0x34>
 800a530:	687b      	ldr	r3, [r7, #4]
 800a532:	681a      	ldr	r2, [r3, #0]
 800a534:	687b      	ldr	r3, [r7, #4]
 800a536:	60da      	str	r2, [r3, #12]
 800a538:	687b      	ldr	r3, [r7, #4]
 800a53a:	68d9      	ldr	r1, [r3, #12]
 800a53c:	687b      	ldr	r3, [r7, #4]
 800a53e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a540:	461a      	mov	r2, r3
 800a542:	6838      	ldr	r0, [r7, #0]
 800a544:	f002 f952 	bl	800c7ec <memcpy>
 800a548:	bf00      	nop
 800a54a:	3708      	adds	r7, #8
 800a54c:	46bd      	mov	sp, r7
 800a54e:	bd80      	pop	{r7, pc}

0800a550 <prvUnlockQueue>:
 800a550:	b580      	push	{r7, lr}
 800a552:	b084      	sub	sp, #16
 800a554:	af00      	add	r7, sp, #0
 800a556:	6078      	str	r0, [r7, #4]
 800a558:	f001 fda6 	bl	800c0a8 <vPortEnterCritical>
 800a55c:	687b      	ldr	r3, [r7, #4]
 800a55e:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800a562:	73fb      	strb	r3, [r7, #15]
 800a564:	e011      	b.n	800a58a <prvUnlockQueue+0x3a>
 800a566:	687b      	ldr	r3, [r7, #4]
 800a568:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a56a:	2b00      	cmp	r3, #0
 800a56c:	d012      	beq.n	800a594 <prvUnlockQueue+0x44>
 800a56e:	687b      	ldr	r3, [r7, #4]
 800a570:	3324      	adds	r3, #36	@ 0x24
 800a572:	4618      	mov	r0, r3
 800a574:	f000 fe62 	bl	800b23c <xTaskRemoveFromEventList>
 800a578:	4603      	mov	r3, r0
 800a57a:	2b00      	cmp	r3, #0
 800a57c:	d001      	beq.n	800a582 <prvUnlockQueue+0x32>
 800a57e:	f000 ff3b 	bl	800b3f8 <vTaskMissedYield>
 800a582:	7bfb      	ldrb	r3, [r7, #15]
 800a584:	3b01      	subs	r3, #1
 800a586:	b2db      	uxtb	r3, r3
 800a588:	73fb      	strb	r3, [r7, #15]
 800a58a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800a58e:	2b00      	cmp	r3, #0
 800a590:	dce9      	bgt.n	800a566 <prvUnlockQueue+0x16>
 800a592:	e000      	b.n	800a596 <prvUnlockQueue+0x46>
 800a594:	bf00      	nop
 800a596:	687b      	ldr	r3, [r7, #4]
 800a598:	22ff      	movs	r2, #255	@ 0xff
 800a59a:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800a59e:	f001 fdb5 	bl	800c10c <vPortExitCritical>
 800a5a2:	f001 fd81 	bl	800c0a8 <vPortEnterCritical>
 800a5a6:	687b      	ldr	r3, [r7, #4]
 800a5a8:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800a5ac:	73bb      	strb	r3, [r7, #14]
 800a5ae:	e011      	b.n	800a5d4 <prvUnlockQueue+0x84>
 800a5b0:	687b      	ldr	r3, [r7, #4]
 800a5b2:	691b      	ldr	r3, [r3, #16]
 800a5b4:	2b00      	cmp	r3, #0
 800a5b6:	d012      	beq.n	800a5de <prvUnlockQueue+0x8e>
 800a5b8:	687b      	ldr	r3, [r7, #4]
 800a5ba:	3310      	adds	r3, #16
 800a5bc:	4618      	mov	r0, r3
 800a5be:	f000 fe3d 	bl	800b23c <xTaskRemoveFromEventList>
 800a5c2:	4603      	mov	r3, r0
 800a5c4:	2b00      	cmp	r3, #0
 800a5c6:	d001      	beq.n	800a5cc <prvUnlockQueue+0x7c>
 800a5c8:	f000 ff16 	bl	800b3f8 <vTaskMissedYield>
 800a5cc:	7bbb      	ldrb	r3, [r7, #14]
 800a5ce:	3b01      	subs	r3, #1
 800a5d0:	b2db      	uxtb	r3, r3
 800a5d2:	73bb      	strb	r3, [r7, #14]
 800a5d4:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800a5d8:	2b00      	cmp	r3, #0
 800a5da:	dce9      	bgt.n	800a5b0 <prvUnlockQueue+0x60>
 800a5dc:	e000      	b.n	800a5e0 <prvUnlockQueue+0x90>
 800a5de:	bf00      	nop
 800a5e0:	687b      	ldr	r3, [r7, #4]
 800a5e2:	22ff      	movs	r2, #255	@ 0xff
 800a5e4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800a5e8:	f001 fd90 	bl	800c10c <vPortExitCritical>
 800a5ec:	bf00      	nop
 800a5ee:	3710      	adds	r7, #16
 800a5f0:	46bd      	mov	sp, r7
 800a5f2:	bd80      	pop	{r7, pc}

0800a5f4 <prvIsQueueEmpty>:
 800a5f4:	b580      	push	{r7, lr}
 800a5f6:	b084      	sub	sp, #16
 800a5f8:	af00      	add	r7, sp, #0
 800a5fa:	6078      	str	r0, [r7, #4]
 800a5fc:	f001 fd54 	bl	800c0a8 <vPortEnterCritical>
 800a600:	687b      	ldr	r3, [r7, #4]
 800a602:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a604:	2b00      	cmp	r3, #0
 800a606:	d102      	bne.n	800a60e <prvIsQueueEmpty+0x1a>
 800a608:	2301      	movs	r3, #1
 800a60a:	60fb      	str	r3, [r7, #12]
 800a60c:	e001      	b.n	800a612 <prvIsQueueEmpty+0x1e>
 800a60e:	2300      	movs	r3, #0
 800a610:	60fb      	str	r3, [r7, #12]
 800a612:	f001 fd7b 	bl	800c10c <vPortExitCritical>
 800a616:	68fb      	ldr	r3, [r7, #12]
 800a618:	4618      	mov	r0, r3
 800a61a:	3710      	adds	r7, #16
 800a61c:	46bd      	mov	sp, r7
 800a61e:	bd80      	pop	{r7, pc}

0800a620 <prvIsQueueFull>:
 800a620:	b580      	push	{r7, lr}
 800a622:	b084      	sub	sp, #16
 800a624:	af00      	add	r7, sp, #0
 800a626:	6078      	str	r0, [r7, #4]
 800a628:	f001 fd3e 	bl	800c0a8 <vPortEnterCritical>
 800a62c:	687b      	ldr	r3, [r7, #4]
 800a62e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a630:	687b      	ldr	r3, [r7, #4]
 800a632:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a634:	429a      	cmp	r2, r3
 800a636:	d102      	bne.n	800a63e <prvIsQueueFull+0x1e>
 800a638:	2301      	movs	r3, #1
 800a63a:	60fb      	str	r3, [r7, #12]
 800a63c:	e001      	b.n	800a642 <prvIsQueueFull+0x22>
 800a63e:	2300      	movs	r3, #0
 800a640:	60fb      	str	r3, [r7, #12]
 800a642:	f001 fd63 	bl	800c10c <vPortExitCritical>
 800a646:	68fb      	ldr	r3, [r7, #12]
 800a648:	4618      	mov	r0, r3
 800a64a:	3710      	adds	r7, #16
 800a64c:	46bd      	mov	sp, r7
 800a64e:	bd80      	pop	{r7, pc}

0800a650 <vQueueAddToRegistry>:
 800a650:	b480      	push	{r7}
 800a652:	b085      	sub	sp, #20
 800a654:	af00      	add	r7, sp, #0
 800a656:	6078      	str	r0, [r7, #4]
 800a658:	6039      	str	r1, [r7, #0]
 800a65a:	2300      	movs	r3, #0
 800a65c:	60fb      	str	r3, [r7, #12]
 800a65e:	e014      	b.n	800a68a <vQueueAddToRegistry+0x3a>
 800a660:	4a0f      	ldr	r2, [pc, #60]	@ (800a6a0 <vQueueAddToRegistry+0x50>)
 800a662:	68fb      	ldr	r3, [r7, #12]
 800a664:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 800a668:	2b00      	cmp	r3, #0
 800a66a:	d10b      	bne.n	800a684 <vQueueAddToRegistry+0x34>
 800a66c:	490c      	ldr	r1, [pc, #48]	@ (800a6a0 <vQueueAddToRegistry+0x50>)
 800a66e:	68fb      	ldr	r3, [r7, #12]
 800a670:	683a      	ldr	r2, [r7, #0]
 800a672:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 800a676:	4a0a      	ldr	r2, [pc, #40]	@ (800a6a0 <vQueueAddToRegistry+0x50>)
 800a678:	68fb      	ldr	r3, [r7, #12]
 800a67a:	00db      	lsls	r3, r3, #3
 800a67c:	4413      	add	r3, r2
 800a67e:	687a      	ldr	r2, [r7, #4]
 800a680:	605a      	str	r2, [r3, #4]
 800a682:	e006      	b.n	800a692 <vQueueAddToRegistry+0x42>
 800a684:	68fb      	ldr	r3, [r7, #12]
 800a686:	3301      	adds	r3, #1
 800a688:	60fb      	str	r3, [r7, #12]
 800a68a:	68fb      	ldr	r3, [r7, #12]
 800a68c:	2b07      	cmp	r3, #7
 800a68e:	d9e7      	bls.n	800a660 <vQueueAddToRegistry+0x10>
 800a690:	bf00      	nop
 800a692:	bf00      	nop
 800a694:	3714      	adds	r7, #20
 800a696:	46bd      	mov	sp, r7
 800a698:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a69c:	4770      	bx	lr
 800a69e:	bf00      	nop
 800a6a0:	200011dc 	.word	0x200011dc

0800a6a4 <vQueueWaitForMessageRestricted>:
 800a6a4:	b580      	push	{r7, lr}
 800a6a6:	b086      	sub	sp, #24
 800a6a8:	af00      	add	r7, sp, #0
 800a6aa:	60f8      	str	r0, [r7, #12]
 800a6ac:	60b9      	str	r1, [r7, #8]
 800a6ae:	607a      	str	r2, [r7, #4]
 800a6b0:	68fb      	ldr	r3, [r7, #12]
 800a6b2:	617b      	str	r3, [r7, #20]
 800a6b4:	f001 fcf8 	bl	800c0a8 <vPortEnterCritical>
 800a6b8:	697b      	ldr	r3, [r7, #20]
 800a6ba:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800a6be:	b25b      	sxtb	r3, r3
 800a6c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a6c4:	d103      	bne.n	800a6ce <vQueueWaitForMessageRestricted+0x2a>
 800a6c6:	697b      	ldr	r3, [r7, #20]
 800a6c8:	2200      	movs	r2, #0
 800a6ca:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800a6ce:	697b      	ldr	r3, [r7, #20]
 800a6d0:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800a6d4:	b25b      	sxtb	r3, r3
 800a6d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a6da:	d103      	bne.n	800a6e4 <vQueueWaitForMessageRestricted+0x40>
 800a6dc:	697b      	ldr	r3, [r7, #20]
 800a6de:	2200      	movs	r2, #0
 800a6e0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800a6e4:	f001 fd12 	bl	800c10c <vPortExitCritical>
 800a6e8:	697b      	ldr	r3, [r7, #20]
 800a6ea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a6ec:	2b00      	cmp	r3, #0
 800a6ee:	d106      	bne.n	800a6fe <vQueueWaitForMessageRestricted+0x5a>
 800a6f0:	697b      	ldr	r3, [r7, #20]
 800a6f2:	3324      	adds	r3, #36	@ 0x24
 800a6f4:	687a      	ldr	r2, [r7, #4]
 800a6f6:	68b9      	ldr	r1, [r7, #8]
 800a6f8:	4618      	mov	r0, r3
 800a6fa:	f000 fd73 	bl	800b1e4 <vTaskPlaceOnEventListRestricted>
 800a6fe:	6978      	ldr	r0, [r7, #20]
 800a700:	f7ff ff26 	bl	800a550 <prvUnlockQueue>
 800a704:	bf00      	nop
 800a706:	3718      	adds	r7, #24
 800a708:	46bd      	mov	sp, r7
 800a70a:	bd80      	pop	{r7, pc}

0800a70c <xTaskCreateStatic>:
 800a70c:	b580      	push	{r7, lr}
 800a70e:	b08e      	sub	sp, #56	@ 0x38
 800a710:	af04      	add	r7, sp, #16
 800a712:	60f8      	str	r0, [r7, #12]
 800a714:	60b9      	str	r1, [r7, #8]
 800a716:	607a      	str	r2, [r7, #4]
 800a718:	603b      	str	r3, [r7, #0]
 800a71a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a71c:	2b00      	cmp	r3, #0
 800a71e:	d10b      	bne.n	800a738 <xTaskCreateStatic+0x2c>
 800a720:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a724:	f383 8811 	msr	BASEPRI, r3
 800a728:	f3bf 8f6f 	isb	sy
 800a72c:	f3bf 8f4f 	dsb	sy
 800a730:	623b      	str	r3, [r7, #32]
 800a732:	bf00      	nop
 800a734:	bf00      	nop
 800a736:	e7fd      	b.n	800a734 <xTaskCreateStatic+0x28>
 800a738:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a73a:	2b00      	cmp	r3, #0
 800a73c:	d10b      	bne.n	800a756 <xTaskCreateStatic+0x4a>
 800a73e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a742:	f383 8811 	msr	BASEPRI, r3
 800a746:	f3bf 8f6f 	isb	sy
 800a74a:	f3bf 8f4f 	dsb	sy
 800a74e:	61fb      	str	r3, [r7, #28]
 800a750:	bf00      	nop
 800a752:	bf00      	nop
 800a754:	e7fd      	b.n	800a752 <xTaskCreateStatic+0x46>
 800a756:	23a8      	movs	r3, #168	@ 0xa8
 800a758:	613b      	str	r3, [r7, #16]
 800a75a:	693b      	ldr	r3, [r7, #16]
 800a75c:	2ba8      	cmp	r3, #168	@ 0xa8
 800a75e:	d00b      	beq.n	800a778 <xTaskCreateStatic+0x6c>
 800a760:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a764:	f383 8811 	msr	BASEPRI, r3
 800a768:	f3bf 8f6f 	isb	sy
 800a76c:	f3bf 8f4f 	dsb	sy
 800a770:	61bb      	str	r3, [r7, #24]
 800a772:	bf00      	nop
 800a774:	bf00      	nop
 800a776:	e7fd      	b.n	800a774 <xTaskCreateStatic+0x68>
 800a778:	693b      	ldr	r3, [r7, #16]
 800a77a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a77c:	2b00      	cmp	r3, #0
 800a77e:	d01e      	beq.n	800a7be <xTaskCreateStatic+0xb2>
 800a780:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a782:	2b00      	cmp	r3, #0
 800a784:	d01b      	beq.n	800a7be <xTaskCreateStatic+0xb2>
 800a786:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a788:	627b      	str	r3, [r7, #36]	@ 0x24
 800a78a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a78c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800a78e:	631a      	str	r2, [r3, #48]	@ 0x30
 800a790:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a792:	2202      	movs	r2, #2
 800a794:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 800a798:	2300      	movs	r3, #0
 800a79a:	9303      	str	r3, [sp, #12]
 800a79c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a79e:	9302      	str	r3, [sp, #8]
 800a7a0:	f107 0314 	add.w	r3, r7, #20
 800a7a4:	9301      	str	r3, [sp, #4]
 800a7a6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a7a8:	9300      	str	r3, [sp, #0]
 800a7aa:	683b      	ldr	r3, [r7, #0]
 800a7ac:	687a      	ldr	r2, [r7, #4]
 800a7ae:	68b9      	ldr	r1, [r7, #8]
 800a7b0:	68f8      	ldr	r0, [r7, #12]
 800a7b2:	f000 f851 	bl	800a858 <prvInitialiseNewTask>
 800a7b6:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800a7b8:	f000 f8f6 	bl	800a9a8 <prvAddNewTaskToReadyList>
 800a7bc:	e001      	b.n	800a7c2 <xTaskCreateStatic+0xb6>
 800a7be:	2300      	movs	r3, #0
 800a7c0:	617b      	str	r3, [r7, #20]
 800a7c2:	697b      	ldr	r3, [r7, #20]
 800a7c4:	4618      	mov	r0, r3
 800a7c6:	3728      	adds	r7, #40	@ 0x28
 800a7c8:	46bd      	mov	sp, r7
 800a7ca:	bd80      	pop	{r7, pc}

0800a7cc <xTaskCreate>:
 800a7cc:	b580      	push	{r7, lr}
 800a7ce:	b08c      	sub	sp, #48	@ 0x30
 800a7d0:	af04      	add	r7, sp, #16
 800a7d2:	60f8      	str	r0, [r7, #12]
 800a7d4:	60b9      	str	r1, [r7, #8]
 800a7d6:	603b      	str	r3, [r7, #0]
 800a7d8:	4613      	mov	r3, r2
 800a7da:	80fb      	strh	r3, [r7, #6]
 800a7dc:	88fb      	ldrh	r3, [r7, #6]
 800a7de:	009b      	lsls	r3, r3, #2
 800a7e0:	4618      	mov	r0, r3
 800a7e2:	f001 fd83 	bl	800c2ec <pvPortMalloc>
 800a7e6:	6178      	str	r0, [r7, #20]
 800a7e8:	697b      	ldr	r3, [r7, #20]
 800a7ea:	2b00      	cmp	r3, #0
 800a7ec:	d00e      	beq.n	800a80c <xTaskCreate+0x40>
 800a7ee:	20a8      	movs	r0, #168	@ 0xa8
 800a7f0:	f001 fd7c 	bl	800c2ec <pvPortMalloc>
 800a7f4:	61f8      	str	r0, [r7, #28]
 800a7f6:	69fb      	ldr	r3, [r7, #28]
 800a7f8:	2b00      	cmp	r3, #0
 800a7fa:	d003      	beq.n	800a804 <xTaskCreate+0x38>
 800a7fc:	69fb      	ldr	r3, [r7, #28]
 800a7fe:	697a      	ldr	r2, [r7, #20]
 800a800:	631a      	str	r2, [r3, #48]	@ 0x30
 800a802:	e005      	b.n	800a810 <xTaskCreate+0x44>
 800a804:	6978      	ldr	r0, [r7, #20]
 800a806:	f001 fe3f 	bl	800c488 <vPortFree>
 800a80a:	e001      	b.n	800a810 <xTaskCreate+0x44>
 800a80c:	2300      	movs	r3, #0
 800a80e:	61fb      	str	r3, [r7, #28]
 800a810:	69fb      	ldr	r3, [r7, #28]
 800a812:	2b00      	cmp	r3, #0
 800a814:	d017      	beq.n	800a846 <xTaskCreate+0x7a>
 800a816:	69fb      	ldr	r3, [r7, #28]
 800a818:	2200      	movs	r2, #0
 800a81a:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 800a81e:	88fa      	ldrh	r2, [r7, #6]
 800a820:	2300      	movs	r3, #0
 800a822:	9303      	str	r3, [sp, #12]
 800a824:	69fb      	ldr	r3, [r7, #28]
 800a826:	9302      	str	r3, [sp, #8]
 800a828:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a82a:	9301      	str	r3, [sp, #4]
 800a82c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a82e:	9300      	str	r3, [sp, #0]
 800a830:	683b      	ldr	r3, [r7, #0]
 800a832:	68b9      	ldr	r1, [r7, #8]
 800a834:	68f8      	ldr	r0, [r7, #12]
 800a836:	f000 f80f 	bl	800a858 <prvInitialiseNewTask>
 800a83a:	69f8      	ldr	r0, [r7, #28]
 800a83c:	f000 f8b4 	bl	800a9a8 <prvAddNewTaskToReadyList>
 800a840:	2301      	movs	r3, #1
 800a842:	61bb      	str	r3, [r7, #24]
 800a844:	e002      	b.n	800a84c <xTaskCreate+0x80>
 800a846:	f04f 33ff 	mov.w	r3, #4294967295
 800a84a:	61bb      	str	r3, [r7, #24]
 800a84c:	69bb      	ldr	r3, [r7, #24]
 800a84e:	4618      	mov	r0, r3
 800a850:	3720      	adds	r7, #32
 800a852:	46bd      	mov	sp, r7
 800a854:	bd80      	pop	{r7, pc}
	...

0800a858 <prvInitialiseNewTask>:
 800a858:	b580      	push	{r7, lr}
 800a85a:	b088      	sub	sp, #32
 800a85c:	af00      	add	r7, sp, #0
 800a85e:	60f8      	str	r0, [r7, #12]
 800a860:	60b9      	str	r1, [r7, #8]
 800a862:	607a      	str	r2, [r7, #4]
 800a864:	603b      	str	r3, [r7, #0]
 800a866:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a868:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 800a86a:	687b      	ldr	r3, [r7, #4]
 800a86c:	009b      	lsls	r3, r3, #2
 800a86e:	461a      	mov	r2, r3
 800a870:	21a5      	movs	r1, #165	@ 0xa5
 800a872:	f001 ff29 	bl	800c6c8 <memset>
 800a876:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a878:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a87a:	687b      	ldr	r3, [r7, #4]
 800a87c:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800a880:	3b01      	subs	r3, #1
 800a882:	009b      	lsls	r3, r3, #2
 800a884:	4413      	add	r3, r2
 800a886:	61bb      	str	r3, [r7, #24]
 800a888:	69bb      	ldr	r3, [r7, #24]
 800a88a:	f023 0307 	bic.w	r3, r3, #7
 800a88e:	61bb      	str	r3, [r7, #24]
 800a890:	69bb      	ldr	r3, [r7, #24]
 800a892:	f003 0307 	and.w	r3, r3, #7
 800a896:	2b00      	cmp	r3, #0
 800a898:	d00b      	beq.n	800a8b2 <prvInitialiseNewTask+0x5a>
 800a89a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a89e:	f383 8811 	msr	BASEPRI, r3
 800a8a2:	f3bf 8f6f 	isb	sy
 800a8a6:	f3bf 8f4f 	dsb	sy
 800a8aa:	617b      	str	r3, [r7, #20]
 800a8ac:	bf00      	nop
 800a8ae:	bf00      	nop
 800a8b0:	e7fd      	b.n	800a8ae <prvInitialiseNewTask+0x56>
 800a8b2:	68bb      	ldr	r3, [r7, #8]
 800a8b4:	2b00      	cmp	r3, #0
 800a8b6:	d01f      	beq.n	800a8f8 <prvInitialiseNewTask+0xa0>
 800a8b8:	2300      	movs	r3, #0
 800a8ba:	61fb      	str	r3, [r7, #28]
 800a8bc:	e012      	b.n	800a8e4 <prvInitialiseNewTask+0x8c>
 800a8be:	68ba      	ldr	r2, [r7, #8]
 800a8c0:	69fb      	ldr	r3, [r7, #28]
 800a8c2:	4413      	add	r3, r2
 800a8c4:	7819      	ldrb	r1, [r3, #0]
 800a8c6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800a8c8:	69fb      	ldr	r3, [r7, #28]
 800a8ca:	4413      	add	r3, r2
 800a8cc:	3334      	adds	r3, #52	@ 0x34
 800a8ce:	460a      	mov	r2, r1
 800a8d0:	701a      	strb	r2, [r3, #0]
 800a8d2:	68ba      	ldr	r2, [r7, #8]
 800a8d4:	69fb      	ldr	r3, [r7, #28]
 800a8d6:	4413      	add	r3, r2
 800a8d8:	781b      	ldrb	r3, [r3, #0]
 800a8da:	2b00      	cmp	r3, #0
 800a8dc:	d006      	beq.n	800a8ec <prvInitialiseNewTask+0x94>
 800a8de:	69fb      	ldr	r3, [r7, #28]
 800a8e0:	3301      	adds	r3, #1
 800a8e2:	61fb      	str	r3, [r7, #28]
 800a8e4:	69fb      	ldr	r3, [r7, #28]
 800a8e6:	2b0f      	cmp	r3, #15
 800a8e8:	d9e9      	bls.n	800a8be <prvInitialiseNewTask+0x66>
 800a8ea:	e000      	b.n	800a8ee <prvInitialiseNewTask+0x96>
 800a8ec:	bf00      	nop
 800a8ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a8f0:	2200      	movs	r2, #0
 800a8f2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800a8f6:	e003      	b.n	800a900 <prvInitialiseNewTask+0xa8>
 800a8f8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a8fa:	2200      	movs	r2, #0
 800a8fc:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800a900:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a902:	2b37      	cmp	r3, #55	@ 0x37
 800a904:	d901      	bls.n	800a90a <prvInitialiseNewTask+0xb2>
 800a906:	2337      	movs	r3, #55	@ 0x37
 800a908:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a90a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a90c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800a90e:	62da      	str	r2, [r3, #44]	@ 0x2c
 800a910:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a912:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800a914:	64da      	str	r2, [r3, #76]	@ 0x4c
 800a916:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a918:	2200      	movs	r2, #0
 800a91a:	651a      	str	r2, [r3, #80]	@ 0x50
 800a91c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a91e:	3304      	adds	r3, #4
 800a920:	4618      	mov	r0, r3
 800a922:	f7ff f965 	bl	8009bf0 <vListInitialiseItem>
 800a926:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a928:	3318      	adds	r3, #24
 800a92a:	4618      	mov	r0, r3
 800a92c:	f7ff f960 	bl	8009bf0 <vListInitialiseItem>
 800a930:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a932:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800a934:	611a      	str	r2, [r3, #16]
 800a936:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a938:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800a93c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a93e:	619a      	str	r2, [r3, #24]
 800a940:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a942:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800a944:	625a      	str	r2, [r3, #36]	@ 0x24
 800a946:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a948:	2200      	movs	r2, #0
 800a94a:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800a94e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a950:	2200      	movs	r2, #0
 800a952:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 800a956:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a958:	3354      	adds	r3, #84	@ 0x54
 800a95a:	224c      	movs	r2, #76	@ 0x4c
 800a95c:	2100      	movs	r1, #0
 800a95e:	4618      	mov	r0, r3
 800a960:	f001 feb2 	bl	800c6c8 <memset>
 800a964:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a966:	4a0d      	ldr	r2, [pc, #52]	@ (800a99c <prvInitialiseNewTask+0x144>)
 800a968:	659a      	str	r2, [r3, #88]	@ 0x58
 800a96a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a96c:	4a0c      	ldr	r2, [pc, #48]	@ (800a9a0 <prvInitialiseNewTask+0x148>)
 800a96e:	65da      	str	r2, [r3, #92]	@ 0x5c
 800a970:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a972:	4a0c      	ldr	r2, [pc, #48]	@ (800a9a4 <prvInitialiseNewTask+0x14c>)
 800a974:	661a      	str	r2, [r3, #96]	@ 0x60
 800a976:	683a      	ldr	r2, [r7, #0]
 800a978:	68f9      	ldr	r1, [r7, #12]
 800a97a:	69b8      	ldr	r0, [r7, #24]
 800a97c:	f001 fa60 	bl	800be40 <pxPortInitialiseStack>
 800a980:	4602      	mov	r2, r0
 800a982:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a984:	601a      	str	r2, [r3, #0]
 800a986:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a988:	2b00      	cmp	r3, #0
 800a98a:	d002      	beq.n	800a992 <prvInitialiseNewTask+0x13a>
 800a98c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a98e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800a990:	601a      	str	r2, [r3, #0]
 800a992:	bf00      	nop
 800a994:	3720      	adds	r7, #32
 800a996:	46bd      	mov	sp, r7
 800a998:	bd80      	pop	{r7, pc}
 800a99a:	bf00      	nop
 800a99c:	20002470 	.word	0x20002470
 800a9a0:	200024d8 	.word	0x200024d8
 800a9a4:	20002540 	.word	0x20002540

0800a9a8 <prvAddNewTaskToReadyList>:
 800a9a8:	b580      	push	{r7, lr}
 800a9aa:	b082      	sub	sp, #8
 800a9ac:	af00      	add	r7, sp, #0
 800a9ae:	6078      	str	r0, [r7, #4]
 800a9b0:	f001 fb7a 	bl	800c0a8 <vPortEnterCritical>
 800a9b4:	4b2d      	ldr	r3, [pc, #180]	@ (800aa6c <prvAddNewTaskToReadyList+0xc4>)
 800a9b6:	681b      	ldr	r3, [r3, #0]
 800a9b8:	3301      	adds	r3, #1
 800a9ba:	4a2c      	ldr	r2, [pc, #176]	@ (800aa6c <prvAddNewTaskToReadyList+0xc4>)
 800a9bc:	6013      	str	r3, [r2, #0]
 800a9be:	4b2c      	ldr	r3, [pc, #176]	@ (800aa70 <prvAddNewTaskToReadyList+0xc8>)
 800a9c0:	681b      	ldr	r3, [r3, #0]
 800a9c2:	2b00      	cmp	r3, #0
 800a9c4:	d109      	bne.n	800a9da <prvAddNewTaskToReadyList+0x32>
 800a9c6:	4a2a      	ldr	r2, [pc, #168]	@ (800aa70 <prvAddNewTaskToReadyList+0xc8>)
 800a9c8:	687b      	ldr	r3, [r7, #4]
 800a9ca:	6013      	str	r3, [r2, #0]
 800a9cc:	4b27      	ldr	r3, [pc, #156]	@ (800aa6c <prvAddNewTaskToReadyList+0xc4>)
 800a9ce:	681b      	ldr	r3, [r3, #0]
 800a9d0:	2b01      	cmp	r3, #1
 800a9d2:	d110      	bne.n	800a9f6 <prvAddNewTaskToReadyList+0x4e>
 800a9d4:	f000 fd34 	bl	800b440 <prvInitialiseTaskLists>
 800a9d8:	e00d      	b.n	800a9f6 <prvAddNewTaskToReadyList+0x4e>
 800a9da:	4b26      	ldr	r3, [pc, #152]	@ (800aa74 <prvAddNewTaskToReadyList+0xcc>)
 800a9dc:	681b      	ldr	r3, [r3, #0]
 800a9de:	2b00      	cmp	r3, #0
 800a9e0:	d109      	bne.n	800a9f6 <prvAddNewTaskToReadyList+0x4e>
 800a9e2:	4b23      	ldr	r3, [pc, #140]	@ (800aa70 <prvAddNewTaskToReadyList+0xc8>)
 800a9e4:	681b      	ldr	r3, [r3, #0]
 800a9e6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800a9e8:	687b      	ldr	r3, [r7, #4]
 800a9ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a9ec:	429a      	cmp	r2, r3
 800a9ee:	d802      	bhi.n	800a9f6 <prvAddNewTaskToReadyList+0x4e>
 800a9f0:	4a1f      	ldr	r2, [pc, #124]	@ (800aa70 <prvAddNewTaskToReadyList+0xc8>)
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	6013      	str	r3, [r2, #0]
 800a9f6:	4b20      	ldr	r3, [pc, #128]	@ (800aa78 <prvAddNewTaskToReadyList+0xd0>)
 800a9f8:	681b      	ldr	r3, [r3, #0]
 800a9fa:	3301      	adds	r3, #1
 800a9fc:	4a1e      	ldr	r2, [pc, #120]	@ (800aa78 <prvAddNewTaskToReadyList+0xd0>)
 800a9fe:	6013      	str	r3, [r2, #0]
 800aa00:	4b1d      	ldr	r3, [pc, #116]	@ (800aa78 <prvAddNewTaskToReadyList+0xd0>)
 800aa02:	681a      	ldr	r2, [r3, #0]
 800aa04:	687b      	ldr	r3, [r7, #4]
 800aa06:	645a      	str	r2, [r3, #68]	@ 0x44
 800aa08:	687b      	ldr	r3, [r7, #4]
 800aa0a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800aa0c:	4b1b      	ldr	r3, [pc, #108]	@ (800aa7c <prvAddNewTaskToReadyList+0xd4>)
 800aa0e:	681b      	ldr	r3, [r3, #0]
 800aa10:	429a      	cmp	r2, r3
 800aa12:	d903      	bls.n	800aa1c <prvAddNewTaskToReadyList+0x74>
 800aa14:	687b      	ldr	r3, [r7, #4]
 800aa16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aa18:	4a18      	ldr	r2, [pc, #96]	@ (800aa7c <prvAddNewTaskToReadyList+0xd4>)
 800aa1a:	6013      	str	r3, [r2, #0]
 800aa1c:	687b      	ldr	r3, [r7, #4]
 800aa1e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800aa20:	4613      	mov	r3, r2
 800aa22:	009b      	lsls	r3, r3, #2
 800aa24:	4413      	add	r3, r2
 800aa26:	009b      	lsls	r3, r3, #2
 800aa28:	4a15      	ldr	r2, [pc, #84]	@ (800aa80 <prvAddNewTaskToReadyList+0xd8>)
 800aa2a:	441a      	add	r2, r3
 800aa2c:	687b      	ldr	r3, [r7, #4]
 800aa2e:	3304      	adds	r3, #4
 800aa30:	4619      	mov	r1, r3
 800aa32:	4610      	mov	r0, r2
 800aa34:	f7ff f8e9 	bl	8009c0a <vListInsertEnd>
 800aa38:	f001 fb68 	bl	800c10c <vPortExitCritical>
 800aa3c:	4b0d      	ldr	r3, [pc, #52]	@ (800aa74 <prvAddNewTaskToReadyList+0xcc>)
 800aa3e:	681b      	ldr	r3, [r3, #0]
 800aa40:	2b00      	cmp	r3, #0
 800aa42:	d00e      	beq.n	800aa62 <prvAddNewTaskToReadyList+0xba>
 800aa44:	4b0a      	ldr	r3, [pc, #40]	@ (800aa70 <prvAddNewTaskToReadyList+0xc8>)
 800aa46:	681b      	ldr	r3, [r3, #0]
 800aa48:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800aa4a:	687b      	ldr	r3, [r7, #4]
 800aa4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aa4e:	429a      	cmp	r2, r3
 800aa50:	d207      	bcs.n	800aa62 <prvAddNewTaskToReadyList+0xba>
 800aa52:	4b0c      	ldr	r3, [pc, #48]	@ (800aa84 <prvAddNewTaskToReadyList+0xdc>)
 800aa54:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800aa58:	601a      	str	r2, [r3, #0]
 800aa5a:	f3bf 8f4f 	dsb	sy
 800aa5e:	f3bf 8f6f 	isb	sy
 800aa62:	bf00      	nop
 800aa64:	3708      	adds	r7, #8
 800aa66:	46bd      	mov	sp, r7
 800aa68:	bd80      	pop	{r7, pc}
 800aa6a:	bf00      	nop
 800aa6c:	200016f0 	.word	0x200016f0
 800aa70:	2000121c 	.word	0x2000121c
 800aa74:	200016fc 	.word	0x200016fc
 800aa78:	2000170c 	.word	0x2000170c
 800aa7c:	200016f8 	.word	0x200016f8
 800aa80:	20001220 	.word	0x20001220
 800aa84:	e000ed04 	.word	0xe000ed04

0800aa88 <vTaskDelete>:
 800aa88:	b580      	push	{r7, lr}
 800aa8a:	b084      	sub	sp, #16
 800aa8c:	af00      	add	r7, sp, #0
 800aa8e:	6078      	str	r0, [r7, #4]
 800aa90:	f001 fb0a 	bl	800c0a8 <vPortEnterCritical>
 800aa94:	687b      	ldr	r3, [r7, #4]
 800aa96:	2b00      	cmp	r3, #0
 800aa98:	d102      	bne.n	800aaa0 <vTaskDelete+0x18>
 800aa9a:	4b2d      	ldr	r3, [pc, #180]	@ (800ab50 <vTaskDelete+0xc8>)
 800aa9c:	681b      	ldr	r3, [r3, #0]
 800aa9e:	e000      	b.n	800aaa2 <vTaskDelete+0x1a>
 800aaa0:	687b      	ldr	r3, [r7, #4]
 800aaa2:	60fb      	str	r3, [r7, #12]
 800aaa4:	68fb      	ldr	r3, [r7, #12]
 800aaa6:	3304      	adds	r3, #4
 800aaa8:	4618      	mov	r0, r3
 800aaaa:	f7ff f90b 	bl	8009cc4 <uxListRemove>
 800aaae:	68fb      	ldr	r3, [r7, #12]
 800aab0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800aab2:	2b00      	cmp	r3, #0
 800aab4:	d004      	beq.n	800aac0 <vTaskDelete+0x38>
 800aab6:	68fb      	ldr	r3, [r7, #12]
 800aab8:	3318      	adds	r3, #24
 800aaba:	4618      	mov	r0, r3
 800aabc:	f7ff f902 	bl	8009cc4 <uxListRemove>
 800aac0:	4b24      	ldr	r3, [pc, #144]	@ (800ab54 <vTaskDelete+0xcc>)
 800aac2:	681b      	ldr	r3, [r3, #0]
 800aac4:	3301      	adds	r3, #1
 800aac6:	4a23      	ldr	r2, [pc, #140]	@ (800ab54 <vTaskDelete+0xcc>)
 800aac8:	6013      	str	r3, [r2, #0]
 800aaca:	4b21      	ldr	r3, [pc, #132]	@ (800ab50 <vTaskDelete+0xc8>)
 800aacc:	681b      	ldr	r3, [r3, #0]
 800aace:	68fa      	ldr	r2, [r7, #12]
 800aad0:	429a      	cmp	r2, r3
 800aad2:	d10b      	bne.n	800aaec <vTaskDelete+0x64>
 800aad4:	68fb      	ldr	r3, [r7, #12]
 800aad6:	3304      	adds	r3, #4
 800aad8:	4619      	mov	r1, r3
 800aada:	481f      	ldr	r0, [pc, #124]	@ (800ab58 <vTaskDelete+0xd0>)
 800aadc:	f7ff f895 	bl	8009c0a <vListInsertEnd>
 800aae0:	4b1e      	ldr	r3, [pc, #120]	@ (800ab5c <vTaskDelete+0xd4>)
 800aae2:	681b      	ldr	r3, [r3, #0]
 800aae4:	3301      	adds	r3, #1
 800aae6:	4a1d      	ldr	r2, [pc, #116]	@ (800ab5c <vTaskDelete+0xd4>)
 800aae8:	6013      	str	r3, [r2, #0]
 800aaea:	e009      	b.n	800ab00 <vTaskDelete+0x78>
 800aaec:	4b1c      	ldr	r3, [pc, #112]	@ (800ab60 <vTaskDelete+0xd8>)
 800aaee:	681b      	ldr	r3, [r3, #0]
 800aaf0:	3b01      	subs	r3, #1
 800aaf2:	4a1b      	ldr	r2, [pc, #108]	@ (800ab60 <vTaskDelete+0xd8>)
 800aaf4:	6013      	str	r3, [r2, #0]
 800aaf6:	68f8      	ldr	r0, [r7, #12]
 800aaf8:	f000 fd10 	bl	800b51c <prvDeleteTCB>
 800aafc:	f000 fd44 	bl	800b588 <prvResetNextTaskUnblockTime>
 800ab00:	f001 fb04 	bl	800c10c <vPortExitCritical>
 800ab04:	4b17      	ldr	r3, [pc, #92]	@ (800ab64 <vTaskDelete+0xdc>)
 800ab06:	681b      	ldr	r3, [r3, #0]
 800ab08:	2b00      	cmp	r3, #0
 800ab0a:	d01c      	beq.n	800ab46 <vTaskDelete+0xbe>
 800ab0c:	4b10      	ldr	r3, [pc, #64]	@ (800ab50 <vTaskDelete+0xc8>)
 800ab0e:	681b      	ldr	r3, [r3, #0]
 800ab10:	68fa      	ldr	r2, [r7, #12]
 800ab12:	429a      	cmp	r2, r3
 800ab14:	d117      	bne.n	800ab46 <vTaskDelete+0xbe>
 800ab16:	4b14      	ldr	r3, [pc, #80]	@ (800ab68 <vTaskDelete+0xe0>)
 800ab18:	681b      	ldr	r3, [r3, #0]
 800ab1a:	2b00      	cmp	r3, #0
 800ab1c:	d00b      	beq.n	800ab36 <vTaskDelete+0xae>
 800ab1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ab22:	f383 8811 	msr	BASEPRI, r3
 800ab26:	f3bf 8f6f 	isb	sy
 800ab2a:	f3bf 8f4f 	dsb	sy
 800ab2e:	60bb      	str	r3, [r7, #8]
 800ab30:	bf00      	nop
 800ab32:	bf00      	nop
 800ab34:	e7fd      	b.n	800ab32 <vTaskDelete+0xaa>
 800ab36:	4b0d      	ldr	r3, [pc, #52]	@ (800ab6c <vTaskDelete+0xe4>)
 800ab38:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ab3c:	601a      	str	r2, [r3, #0]
 800ab3e:	f3bf 8f4f 	dsb	sy
 800ab42:	f3bf 8f6f 	isb	sy
 800ab46:	bf00      	nop
 800ab48:	3710      	adds	r7, #16
 800ab4a:	46bd      	mov	sp, r7
 800ab4c:	bd80      	pop	{r7, pc}
 800ab4e:	bf00      	nop
 800ab50:	2000121c 	.word	0x2000121c
 800ab54:	2000170c 	.word	0x2000170c
 800ab58:	200016c4 	.word	0x200016c4
 800ab5c:	200016d8 	.word	0x200016d8
 800ab60:	200016f0 	.word	0x200016f0
 800ab64:	200016fc 	.word	0x200016fc
 800ab68:	20001718 	.word	0x20001718
 800ab6c:	e000ed04 	.word	0xe000ed04

0800ab70 <vTaskDelayUntil>:
 800ab70:	b580      	push	{r7, lr}
 800ab72:	b08a      	sub	sp, #40	@ 0x28
 800ab74:	af00      	add	r7, sp, #0
 800ab76:	6078      	str	r0, [r7, #4]
 800ab78:	6039      	str	r1, [r7, #0]
 800ab7a:	2300      	movs	r3, #0
 800ab7c:	627b      	str	r3, [r7, #36]	@ 0x24
 800ab7e:	687b      	ldr	r3, [r7, #4]
 800ab80:	2b00      	cmp	r3, #0
 800ab82:	d10b      	bne.n	800ab9c <vTaskDelayUntil+0x2c>
 800ab84:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ab88:	f383 8811 	msr	BASEPRI, r3
 800ab8c:	f3bf 8f6f 	isb	sy
 800ab90:	f3bf 8f4f 	dsb	sy
 800ab94:	617b      	str	r3, [r7, #20]
 800ab96:	bf00      	nop
 800ab98:	bf00      	nop
 800ab9a:	e7fd      	b.n	800ab98 <vTaskDelayUntil+0x28>
 800ab9c:	683b      	ldr	r3, [r7, #0]
 800ab9e:	2b00      	cmp	r3, #0
 800aba0:	d10b      	bne.n	800abba <vTaskDelayUntil+0x4a>
 800aba2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aba6:	f383 8811 	msr	BASEPRI, r3
 800abaa:	f3bf 8f6f 	isb	sy
 800abae:	f3bf 8f4f 	dsb	sy
 800abb2:	613b      	str	r3, [r7, #16]
 800abb4:	bf00      	nop
 800abb6:	bf00      	nop
 800abb8:	e7fd      	b.n	800abb6 <vTaskDelayUntil+0x46>
 800abba:	4b2a      	ldr	r3, [pc, #168]	@ (800ac64 <vTaskDelayUntil+0xf4>)
 800abbc:	681b      	ldr	r3, [r3, #0]
 800abbe:	2b00      	cmp	r3, #0
 800abc0:	d00b      	beq.n	800abda <vTaskDelayUntil+0x6a>
 800abc2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800abc6:	f383 8811 	msr	BASEPRI, r3
 800abca:	f3bf 8f6f 	isb	sy
 800abce:	f3bf 8f4f 	dsb	sy
 800abd2:	60fb      	str	r3, [r7, #12]
 800abd4:	bf00      	nop
 800abd6:	bf00      	nop
 800abd8:	e7fd      	b.n	800abd6 <vTaskDelayUntil+0x66>
 800abda:	f000 f8ef 	bl	800adbc <vTaskSuspendAll>
 800abde:	4b22      	ldr	r3, [pc, #136]	@ (800ac68 <vTaskDelayUntil+0xf8>)
 800abe0:	681b      	ldr	r3, [r3, #0]
 800abe2:	623b      	str	r3, [r7, #32]
 800abe4:	687b      	ldr	r3, [r7, #4]
 800abe6:	681b      	ldr	r3, [r3, #0]
 800abe8:	683a      	ldr	r2, [r7, #0]
 800abea:	4413      	add	r3, r2
 800abec:	61fb      	str	r3, [r7, #28]
 800abee:	687b      	ldr	r3, [r7, #4]
 800abf0:	681b      	ldr	r3, [r3, #0]
 800abf2:	6a3a      	ldr	r2, [r7, #32]
 800abf4:	429a      	cmp	r2, r3
 800abf6:	d20b      	bcs.n	800ac10 <vTaskDelayUntil+0xa0>
 800abf8:	687b      	ldr	r3, [r7, #4]
 800abfa:	681b      	ldr	r3, [r3, #0]
 800abfc:	69fa      	ldr	r2, [r7, #28]
 800abfe:	429a      	cmp	r2, r3
 800ac00:	d211      	bcs.n	800ac26 <vTaskDelayUntil+0xb6>
 800ac02:	69fa      	ldr	r2, [r7, #28]
 800ac04:	6a3b      	ldr	r3, [r7, #32]
 800ac06:	429a      	cmp	r2, r3
 800ac08:	d90d      	bls.n	800ac26 <vTaskDelayUntil+0xb6>
 800ac0a:	2301      	movs	r3, #1
 800ac0c:	627b      	str	r3, [r7, #36]	@ 0x24
 800ac0e:	e00a      	b.n	800ac26 <vTaskDelayUntil+0xb6>
 800ac10:	687b      	ldr	r3, [r7, #4]
 800ac12:	681b      	ldr	r3, [r3, #0]
 800ac14:	69fa      	ldr	r2, [r7, #28]
 800ac16:	429a      	cmp	r2, r3
 800ac18:	d303      	bcc.n	800ac22 <vTaskDelayUntil+0xb2>
 800ac1a:	69fa      	ldr	r2, [r7, #28]
 800ac1c:	6a3b      	ldr	r3, [r7, #32]
 800ac1e:	429a      	cmp	r2, r3
 800ac20:	d901      	bls.n	800ac26 <vTaskDelayUntil+0xb6>
 800ac22:	2301      	movs	r3, #1
 800ac24:	627b      	str	r3, [r7, #36]	@ 0x24
 800ac26:	687b      	ldr	r3, [r7, #4]
 800ac28:	69fa      	ldr	r2, [r7, #28]
 800ac2a:	601a      	str	r2, [r3, #0]
 800ac2c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ac2e:	2b00      	cmp	r3, #0
 800ac30:	d006      	beq.n	800ac40 <vTaskDelayUntil+0xd0>
 800ac32:	69fa      	ldr	r2, [r7, #28]
 800ac34:	6a3b      	ldr	r3, [r7, #32]
 800ac36:	1ad3      	subs	r3, r2, r3
 800ac38:	2100      	movs	r1, #0
 800ac3a:	4618      	mov	r0, r3
 800ac3c:	f000 fd52 	bl	800b6e4 <prvAddCurrentTaskToDelayedList>
 800ac40:	f000 f8ca 	bl	800add8 <xTaskResumeAll>
 800ac44:	61b8      	str	r0, [r7, #24]
 800ac46:	69bb      	ldr	r3, [r7, #24]
 800ac48:	2b00      	cmp	r3, #0
 800ac4a:	d107      	bne.n	800ac5c <vTaskDelayUntil+0xec>
 800ac4c:	4b07      	ldr	r3, [pc, #28]	@ (800ac6c <vTaskDelayUntil+0xfc>)
 800ac4e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ac52:	601a      	str	r2, [r3, #0]
 800ac54:	f3bf 8f4f 	dsb	sy
 800ac58:	f3bf 8f6f 	isb	sy
 800ac5c:	bf00      	nop
 800ac5e:	3728      	adds	r7, #40	@ 0x28
 800ac60:	46bd      	mov	sp, r7
 800ac62:	bd80      	pop	{r7, pc}
 800ac64:	20001718 	.word	0x20001718
 800ac68:	200016f4 	.word	0x200016f4
 800ac6c:	e000ed04 	.word	0xe000ed04

0800ac70 <vTaskDelay>:
 800ac70:	b580      	push	{r7, lr}
 800ac72:	b084      	sub	sp, #16
 800ac74:	af00      	add	r7, sp, #0
 800ac76:	6078      	str	r0, [r7, #4]
 800ac78:	2300      	movs	r3, #0
 800ac7a:	60fb      	str	r3, [r7, #12]
 800ac7c:	687b      	ldr	r3, [r7, #4]
 800ac7e:	2b00      	cmp	r3, #0
 800ac80:	d018      	beq.n	800acb4 <vTaskDelay+0x44>
 800ac82:	4b14      	ldr	r3, [pc, #80]	@ (800acd4 <vTaskDelay+0x64>)
 800ac84:	681b      	ldr	r3, [r3, #0]
 800ac86:	2b00      	cmp	r3, #0
 800ac88:	d00b      	beq.n	800aca2 <vTaskDelay+0x32>
 800ac8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ac8e:	f383 8811 	msr	BASEPRI, r3
 800ac92:	f3bf 8f6f 	isb	sy
 800ac96:	f3bf 8f4f 	dsb	sy
 800ac9a:	60bb      	str	r3, [r7, #8]
 800ac9c:	bf00      	nop
 800ac9e:	bf00      	nop
 800aca0:	e7fd      	b.n	800ac9e <vTaskDelay+0x2e>
 800aca2:	f000 f88b 	bl	800adbc <vTaskSuspendAll>
 800aca6:	2100      	movs	r1, #0
 800aca8:	6878      	ldr	r0, [r7, #4]
 800acaa:	f000 fd1b 	bl	800b6e4 <prvAddCurrentTaskToDelayedList>
 800acae:	f000 f893 	bl	800add8 <xTaskResumeAll>
 800acb2:	60f8      	str	r0, [r7, #12]
 800acb4:	68fb      	ldr	r3, [r7, #12]
 800acb6:	2b00      	cmp	r3, #0
 800acb8:	d107      	bne.n	800acca <vTaskDelay+0x5a>
 800acba:	4b07      	ldr	r3, [pc, #28]	@ (800acd8 <vTaskDelay+0x68>)
 800acbc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800acc0:	601a      	str	r2, [r3, #0]
 800acc2:	f3bf 8f4f 	dsb	sy
 800acc6:	f3bf 8f6f 	isb	sy
 800acca:	bf00      	nop
 800accc:	3710      	adds	r7, #16
 800acce:	46bd      	mov	sp, r7
 800acd0:	bd80      	pop	{r7, pc}
 800acd2:	bf00      	nop
 800acd4:	20001718 	.word	0x20001718
 800acd8:	e000ed04 	.word	0xe000ed04

0800acdc <vTaskStartScheduler>:
 800acdc:	b580      	push	{r7, lr}
 800acde:	b08a      	sub	sp, #40	@ 0x28
 800ace0:	af04      	add	r7, sp, #16
 800ace2:	2300      	movs	r3, #0
 800ace4:	60bb      	str	r3, [r7, #8]
 800ace6:	2300      	movs	r3, #0
 800ace8:	607b      	str	r3, [r7, #4]
 800acea:	463a      	mov	r2, r7
 800acec:	1d39      	adds	r1, r7, #4
 800acee:	f107 0308 	add.w	r3, r7, #8
 800acf2:	4618      	mov	r0, r3
 800acf4:	f7fe ff28 	bl	8009b48 <vApplicationGetIdleTaskMemory>
 800acf8:	6839      	ldr	r1, [r7, #0]
 800acfa:	687b      	ldr	r3, [r7, #4]
 800acfc:	68ba      	ldr	r2, [r7, #8]
 800acfe:	9202      	str	r2, [sp, #8]
 800ad00:	9301      	str	r3, [sp, #4]
 800ad02:	2300      	movs	r3, #0
 800ad04:	9300      	str	r3, [sp, #0]
 800ad06:	2300      	movs	r3, #0
 800ad08:	460a      	mov	r2, r1
 800ad0a:	4924      	ldr	r1, [pc, #144]	@ (800ad9c <vTaskStartScheduler+0xc0>)
 800ad0c:	4824      	ldr	r0, [pc, #144]	@ (800ada0 <vTaskStartScheduler+0xc4>)
 800ad0e:	f7ff fcfd 	bl	800a70c <xTaskCreateStatic>
 800ad12:	4603      	mov	r3, r0
 800ad14:	4a23      	ldr	r2, [pc, #140]	@ (800ada4 <vTaskStartScheduler+0xc8>)
 800ad16:	6013      	str	r3, [r2, #0]
 800ad18:	4b22      	ldr	r3, [pc, #136]	@ (800ada4 <vTaskStartScheduler+0xc8>)
 800ad1a:	681b      	ldr	r3, [r3, #0]
 800ad1c:	2b00      	cmp	r3, #0
 800ad1e:	d002      	beq.n	800ad26 <vTaskStartScheduler+0x4a>
 800ad20:	2301      	movs	r3, #1
 800ad22:	617b      	str	r3, [r7, #20]
 800ad24:	e001      	b.n	800ad2a <vTaskStartScheduler+0x4e>
 800ad26:	2300      	movs	r3, #0
 800ad28:	617b      	str	r3, [r7, #20]
 800ad2a:	697b      	ldr	r3, [r7, #20]
 800ad2c:	2b01      	cmp	r3, #1
 800ad2e:	d102      	bne.n	800ad36 <vTaskStartScheduler+0x5a>
 800ad30:	f000 fd2c 	bl	800b78c <xTimerCreateTimerTask>
 800ad34:	6178      	str	r0, [r7, #20]
 800ad36:	697b      	ldr	r3, [r7, #20]
 800ad38:	2b01      	cmp	r3, #1
 800ad3a:	d11b      	bne.n	800ad74 <vTaskStartScheduler+0x98>
 800ad3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ad40:	f383 8811 	msr	BASEPRI, r3
 800ad44:	f3bf 8f6f 	isb	sy
 800ad48:	f3bf 8f4f 	dsb	sy
 800ad4c:	613b      	str	r3, [r7, #16]
 800ad4e:	bf00      	nop
 800ad50:	4b15      	ldr	r3, [pc, #84]	@ (800ada8 <vTaskStartScheduler+0xcc>)
 800ad52:	681b      	ldr	r3, [r3, #0]
 800ad54:	3354      	adds	r3, #84	@ 0x54
 800ad56:	4a15      	ldr	r2, [pc, #84]	@ (800adac <vTaskStartScheduler+0xd0>)
 800ad58:	6013      	str	r3, [r2, #0]
 800ad5a:	4b15      	ldr	r3, [pc, #84]	@ (800adb0 <vTaskStartScheduler+0xd4>)
 800ad5c:	f04f 32ff 	mov.w	r2, #4294967295
 800ad60:	601a      	str	r2, [r3, #0]
 800ad62:	4b14      	ldr	r3, [pc, #80]	@ (800adb4 <vTaskStartScheduler+0xd8>)
 800ad64:	2201      	movs	r2, #1
 800ad66:	601a      	str	r2, [r3, #0]
 800ad68:	4b13      	ldr	r3, [pc, #76]	@ (800adb8 <vTaskStartScheduler+0xdc>)
 800ad6a:	2200      	movs	r2, #0
 800ad6c:	601a      	str	r2, [r3, #0]
 800ad6e:	f001 f8f7 	bl	800bf60 <xPortStartScheduler>
 800ad72:	e00f      	b.n	800ad94 <vTaskStartScheduler+0xb8>
 800ad74:	697b      	ldr	r3, [r7, #20]
 800ad76:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ad7a:	d10b      	bne.n	800ad94 <vTaskStartScheduler+0xb8>
 800ad7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ad80:	f383 8811 	msr	BASEPRI, r3
 800ad84:	f3bf 8f6f 	isb	sy
 800ad88:	f3bf 8f4f 	dsb	sy
 800ad8c:	60fb      	str	r3, [r7, #12]
 800ad8e:	bf00      	nop
 800ad90:	bf00      	nop
 800ad92:	e7fd      	b.n	800ad90 <vTaskStartScheduler+0xb4>
 800ad94:	bf00      	nop
 800ad96:	3718      	adds	r7, #24
 800ad98:	46bd      	mov	sp, r7
 800ad9a:	bd80      	pop	{r7, pc}
 800ad9c:	0800c930 	.word	0x0800c930
 800ada0:	0800b411 	.word	0x0800b411
 800ada4:	20001714 	.word	0x20001714
 800ada8:	2000121c 	.word	0x2000121c
 800adac:	20000250 	.word	0x20000250
 800adb0:	20001710 	.word	0x20001710
 800adb4:	200016fc 	.word	0x200016fc
 800adb8:	200016f4 	.word	0x200016f4

0800adbc <vTaskSuspendAll>:
 800adbc:	b480      	push	{r7}
 800adbe:	af00      	add	r7, sp, #0
 800adc0:	4b04      	ldr	r3, [pc, #16]	@ (800add4 <vTaskSuspendAll+0x18>)
 800adc2:	681b      	ldr	r3, [r3, #0]
 800adc4:	3301      	adds	r3, #1
 800adc6:	4a03      	ldr	r2, [pc, #12]	@ (800add4 <vTaskSuspendAll+0x18>)
 800adc8:	6013      	str	r3, [r2, #0]
 800adca:	bf00      	nop
 800adcc:	46bd      	mov	sp, r7
 800adce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800add2:	4770      	bx	lr
 800add4:	20001718 	.word	0x20001718

0800add8 <xTaskResumeAll>:
 800add8:	b580      	push	{r7, lr}
 800adda:	b084      	sub	sp, #16
 800addc:	af00      	add	r7, sp, #0
 800adde:	2300      	movs	r3, #0
 800ade0:	60fb      	str	r3, [r7, #12]
 800ade2:	2300      	movs	r3, #0
 800ade4:	60bb      	str	r3, [r7, #8]
 800ade6:	4b42      	ldr	r3, [pc, #264]	@ (800aef0 <xTaskResumeAll+0x118>)
 800ade8:	681b      	ldr	r3, [r3, #0]
 800adea:	2b00      	cmp	r3, #0
 800adec:	d10b      	bne.n	800ae06 <xTaskResumeAll+0x2e>
 800adee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800adf2:	f383 8811 	msr	BASEPRI, r3
 800adf6:	f3bf 8f6f 	isb	sy
 800adfa:	f3bf 8f4f 	dsb	sy
 800adfe:	603b      	str	r3, [r7, #0]
 800ae00:	bf00      	nop
 800ae02:	bf00      	nop
 800ae04:	e7fd      	b.n	800ae02 <xTaskResumeAll+0x2a>
 800ae06:	f001 f94f 	bl	800c0a8 <vPortEnterCritical>
 800ae0a:	4b39      	ldr	r3, [pc, #228]	@ (800aef0 <xTaskResumeAll+0x118>)
 800ae0c:	681b      	ldr	r3, [r3, #0]
 800ae0e:	3b01      	subs	r3, #1
 800ae10:	4a37      	ldr	r2, [pc, #220]	@ (800aef0 <xTaskResumeAll+0x118>)
 800ae12:	6013      	str	r3, [r2, #0]
 800ae14:	4b36      	ldr	r3, [pc, #216]	@ (800aef0 <xTaskResumeAll+0x118>)
 800ae16:	681b      	ldr	r3, [r3, #0]
 800ae18:	2b00      	cmp	r3, #0
 800ae1a:	d162      	bne.n	800aee2 <xTaskResumeAll+0x10a>
 800ae1c:	4b35      	ldr	r3, [pc, #212]	@ (800aef4 <xTaskResumeAll+0x11c>)
 800ae1e:	681b      	ldr	r3, [r3, #0]
 800ae20:	2b00      	cmp	r3, #0
 800ae22:	d05e      	beq.n	800aee2 <xTaskResumeAll+0x10a>
 800ae24:	e02f      	b.n	800ae86 <xTaskResumeAll+0xae>
 800ae26:	4b34      	ldr	r3, [pc, #208]	@ (800aef8 <xTaskResumeAll+0x120>)
 800ae28:	68db      	ldr	r3, [r3, #12]
 800ae2a:	68db      	ldr	r3, [r3, #12]
 800ae2c:	60fb      	str	r3, [r7, #12]
 800ae2e:	68fb      	ldr	r3, [r7, #12]
 800ae30:	3318      	adds	r3, #24
 800ae32:	4618      	mov	r0, r3
 800ae34:	f7fe ff46 	bl	8009cc4 <uxListRemove>
 800ae38:	68fb      	ldr	r3, [r7, #12]
 800ae3a:	3304      	adds	r3, #4
 800ae3c:	4618      	mov	r0, r3
 800ae3e:	f7fe ff41 	bl	8009cc4 <uxListRemove>
 800ae42:	68fb      	ldr	r3, [r7, #12]
 800ae44:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ae46:	4b2d      	ldr	r3, [pc, #180]	@ (800aefc <xTaskResumeAll+0x124>)
 800ae48:	681b      	ldr	r3, [r3, #0]
 800ae4a:	429a      	cmp	r2, r3
 800ae4c:	d903      	bls.n	800ae56 <xTaskResumeAll+0x7e>
 800ae4e:	68fb      	ldr	r3, [r7, #12]
 800ae50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ae52:	4a2a      	ldr	r2, [pc, #168]	@ (800aefc <xTaskResumeAll+0x124>)
 800ae54:	6013      	str	r3, [r2, #0]
 800ae56:	68fb      	ldr	r3, [r7, #12]
 800ae58:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ae5a:	4613      	mov	r3, r2
 800ae5c:	009b      	lsls	r3, r3, #2
 800ae5e:	4413      	add	r3, r2
 800ae60:	009b      	lsls	r3, r3, #2
 800ae62:	4a27      	ldr	r2, [pc, #156]	@ (800af00 <xTaskResumeAll+0x128>)
 800ae64:	441a      	add	r2, r3
 800ae66:	68fb      	ldr	r3, [r7, #12]
 800ae68:	3304      	adds	r3, #4
 800ae6a:	4619      	mov	r1, r3
 800ae6c:	4610      	mov	r0, r2
 800ae6e:	f7fe fecc 	bl	8009c0a <vListInsertEnd>
 800ae72:	68fb      	ldr	r3, [r7, #12]
 800ae74:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ae76:	4b23      	ldr	r3, [pc, #140]	@ (800af04 <xTaskResumeAll+0x12c>)
 800ae78:	681b      	ldr	r3, [r3, #0]
 800ae7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ae7c:	429a      	cmp	r2, r3
 800ae7e:	d302      	bcc.n	800ae86 <xTaskResumeAll+0xae>
 800ae80:	4b21      	ldr	r3, [pc, #132]	@ (800af08 <xTaskResumeAll+0x130>)
 800ae82:	2201      	movs	r2, #1
 800ae84:	601a      	str	r2, [r3, #0]
 800ae86:	4b1c      	ldr	r3, [pc, #112]	@ (800aef8 <xTaskResumeAll+0x120>)
 800ae88:	681b      	ldr	r3, [r3, #0]
 800ae8a:	2b00      	cmp	r3, #0
 800ae8c:	d1cb      	bne.n	800ae26 <xTaskResumeAll+0x4e>
 800ae8e:	68fb      	ldr	r3, [r7, #12]
 800ae90:	2b00      	cmp	r3, #0
 800ae92:	d001      	beq.n	800ae98 <xTaskResumeAll+0xc0>
 800ae94:	f000 fb78 	bl	800b588 <prvResetNextTaskUnblockTime>
 800ae98:	4b1c      	ldr	r3, [pc, #112]	@ (800af0c <xTaskResumeAll+0x134>)
 800ae9a:	681b      	ldr	r3, [r3, #0]
 800ae9c:	607b      	str	r3, [r7, #4]
 800ae9e:	687b      	ldr	r3, [r7, #4]
 800aea0:	2b00      	cmp	r3, #0
 800aea2:	d010      	beq.n	800aec6 <xTaskResumeAll+0xee>
 800aea4:	f000 f858 	bl	800af58 <xTaskIncrementTick>
 800aea8:	4603      	mov	r3, r0
 800aeaa:	2b00      	cmp	r3, #0
 800aeac:	d002      	beq.n	800aeb4 <xTaskResumeAll+0xdc>
 800aeae:	4b16      	ldr	r3, [pc, #88]	@ (800af08 <xTaskResumeAll+0x130>)
 800aeb0:	2201      	movs	r2, #1
 800aeb2:	601a      	str	r2, [r3, #0]
 800aeb4:	687b      	ldr	r3, [r7, #4]
 800aeb6:	3b01      	subs	r3, #1
 800aeb8:	607b      	str	r3, [r7, #4]
 800aeba:	687b      	ldr	r3, [r7, #4]
 800aebc:	2b00      	cmp	r3, #0
 800aebe:	d1f1      	bne.n	800aea4 <xTaskResumeAll+0xcc>
 800aec0:	4b12      	ldr	r3, [pc, #72]	@ (800af0c <xTaskResumeAll+0x134>)
 800aec2:	2200      	movs	r2, #0
 800aec4:	601a      	str	r2, [r3, #0]
 800aec6:	4b10      	ldr	r3, [pc, #64]	@ (800af08 <xTaskResumeAll+0x130>)
 800aec8:	681b      	ldr	r3, [r3, #0]
 800aeca:	2b00      	cmp	r3, #0
 800aecc:	d009      	beq.n	800aee2 <xTaskResumeAll+0x10a>
 800aece:	2301      	movs	r3, #1
 800aed0:	60bb      	str	r3, [r7, #8]
 800aed2:	4b0f      	ldr	r3, [pc, #60]	@ (800af10 <xTaskResumeAll+0x138>)
 800aed4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800aed8:	601a      	str	r2, [r3, #0]
 800aeda:	f3bf 8f4f 	dsb	sy
 800aede:	f3bf 8f6f 	isb	sy
 800aee2:	f001 f913 	bl	800c10c <vPortExitCritical>
 800aee6:	68bb      	ldr	r3, [r7, #8]
 800aee8:	4618      	mov	r0, r3
 800aeea:	3710      	adds	r7, #16
 800aeec:	46bd      	mov	sp, r7
 800aeee:	bd80      	pop	{r7, pc}
 800aef0:	20001718 	.word	0x20001718
 800aef4:	200016f0 	.word	0x200016f0
 800aef8:	200016b0 	.word	0x200016b0
 800aefc:	200016f8 	.word	0x200016f8
 800af00:	20001220 	.word	0x20001220
 800af04:	2000121c 	.word	0x2000121c
 800af08:	20001704 	.word	0x20001704
 800af0c:	20001700 	.word	0x20001700
 800af10:	e000ed04 	.word	0xe000ed04

0800af14 <xTaskGetTickCount>:
 800af14:	b480      	push	{r7}
 800af16:	b083      	sub	sp, #12
 800af18:	af00      	add	r7, sp, #0
 800af1a:	4b05      	ldr	r3, [pc, #20]	@ (800af30 <xTaskGetTickCount+0x1c>)
 800af1c:	681b      	ldr	r3, [r3, #0]
 800af1e:	607b      	str	r3, [r7, #4]
 800af20:	687b      	ldr	r3, [r7, #4]
 800af22:	4618      	mov	r0, r3
 800af24:	370c      	adds	r7, #12
 800af26:	46bd      	mov	sp, r7
 800af28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af2c:	4770      	bx	lr
 800af2e:	bf00      	nop
 800af30:	200016f4 	.word	0x200016f4

0800af34 <xTaskGetTickCountFromISR>:
 800af34:	b580      	push	{r7, lr}
 800af36:	b082      	sub	sp, #8
 800af38:	af00      	add	r7, sp, #0
 800af3a:	f001 f995 	bl	800c268 <vPortValidateInterruptPriority>
 800af3e:	2300      	movs	r3, #0
 800af40:	607b      	str	r3, [r7, #4]
 800af42:	4b04      	ldr	r3, [pc, #16]	@ (800af54 <xTaskGetTickCountFromISR+0x20>)
 800af44:	681b      	ldr	r3, [r3, #0]
 800af46:	603b      	str	r3, [r7, #0]
 800af48:	683b      	ldr	r3, [r7, #0]
 800af4a:	4618      	mov	r0, r3
 800af4c:	3708      	adds	r7, #8
 800af4e:	46bd      	mov	sp, r7
 800af50:	bd80      	pop	{r7, pc}
 800af52:	bf00      	nop
 800af54:	200016f4 	.word	0x200016f4

0800af58 <xTaskIncrementTick>:
 800af58:	b580      	push	{r7, lr}
 800af5a:	b086      	sub	sp, #24
 800af5c:	af00      	add	r7, sp, #0
 800af5e:	2300      	movs	r3, #0
 800af60:	617b      	str	r3, [r7, #20]
 800af62:	4b4f      	ldr	r3, [pc, #316]	@ (800b0a0 <xTaskIncrementTick+0x148>)
 800af64:	681b      	ldr	r3, [r3, #0]
 800af66:	2b00      	cmp	r3, #0
 800af68:	f040 8090 	bne.w	800b08c <xTaskIncrementTick+0x134>
 800af6c:	4b4d      	ldr	r3, [pc, #308]	@ (800b0a4 <xTaskIncrementTick+0x14c>)
 800af6e:	681b      	ldr	r3, [r3, #0]
 800af70:	3301      	adds	r3, #1
 800af72:	613b      	str	r3, [r7, #16]
 800af74:	4a4b      	ldr	r2, [pc, #300]	@ (800b0a4 <xTaskIncrementTick+0x14c>)
 800af76:	693b      	ldr	r3, [r7, #16]
 800af78:	6013      	str	r3, [r2, #0]
 800af7a:	693b      	ldr	r3, [r7, #16]
 800af7c:	2b00      	cmp	r3, #0
 800af7e:	d121      	bne.n	800afc4 <xTaskIncrementTick+0x6c>
 800af80:	4b49      	ldr	r3, [pc, #292]	@ (800b0a8 <xTaskIncrementTick+0x150>)
 800af82:	681b      	ldr	r3, [r3, #0]
 800af84:	681b      	ldr	r3, [r3, #0]
 800af86:	2b00      	cmp	r3, #0
 800af88:	d00b      	beq.n	800afa2 <xTaskIncrementTick+0x4a>
 800af8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800af8e:	f383 8811 	msr	BASEPRI, r3
 800af92:	f3bf 8f6f 	isb	sy
 800af96:	f3bf 8f4f 	dsb	sy
 800af9a:	603b      	str	r3, [r7, #0]
 800af9c:	bf00      	nop
 800af9e:	bf00      	nop
 800afa0:	e7fd      	b.n	800af9e <xTaskIncrementTick+0x46>
 800afa2:	4b41      	ldr	r3, [pc, #260]	@ (800b0a8 <xTaskIncrementTick+0x150>)
 800afa4:	681b      	ldr	r3, [r3, #0]
 800afa6:	60fb      	str	r3, [r7, #12]
 800afa8:	4b40      	ldr	r3, [pc, #256]	@ (800b0ac <xTaskIncrementTick+0x154>)
 800afaa:	681b      	ldr	r3, [r3, #0]
 800afac:	4a3e      	ldr	r2, [pc, #248]	@ (800b0a8 <xTaskIncrementTick+0x150>)
 800afae:	6013      	str	r3, [r2, #0]
 800afb0:	4a3e      	ldr	r2, [pc, #248]	@ (800b0ac <xTaskIncrementTick+0x154>)
 800afb2:	68fb      	ldr	r3, [r7, #12]
 800afb4:	6013      	str	r3, [r2, #0]
 800afb6:	4b3e      	ldr	r3, [pc, #248]	@ (800b0b0 <xTaskIncrementTick+0x158>)
 800afb8:	681b      	ldr	r3, [r3, #0]
 800afba:	3301      	adds	r3, #1
 800afbc:	4a3c      	ldr	r2, [pc, #240]	@ (800b0b0 <xTaskIncrementTick+0x158>)
 800afbe:	6013      	str	r3, [r2, #0]
 800afc0:	f000 fae2 	bl	800b588 <prvResetNextTaskUnblockTime>
 800afc4:	4b3b      	ldr	r3, [pc, #236]	@ (800b0b4 <xTaskIncrementTick+0x15c>)
 800afc6:	681b      	ldr	r3, [r3, #0]
 800afc8:	693a      	ldr	r2, [r7, #16]
 800afca:	429a      	cmp	r2, r3
 800afcc:	d349      	bcc.n	800b062 <xTaskIncrementTick+0x10a>
 800afce:	4b36      	ldr	r3, [pc, #216]	@ (800b0a8 <xTaskIncrementTick+0x150>)
 800afd0:	681b      	ldr	r3, [r3, #0]
 800afd2:	681b      	ldr	r3, [r3, #0]
 800afd4:	2b00      	cmp	r3, #0
 800afd6:	d104      	bne.n	800afe2 <xTaskIncrementTick+0x8a>
 800afd8:	4b36      	ldr	r3, [pc, #216]	@ (800b0b4 <xTaskIncrementTick+0x15c>)
 800afda:	f04f 32ff 	mov.w	r2, #4294967295
 800afde:	601a      	str	r2, [r3, #0]
 800afe0:	e03f      	b.n	800b062 <xTaskIncrementTick+0x10a>
 800afe2:	4b31      	ldr	r3, [pc, #196]	@ (800b0a8 <xTaskIncrementTick+0x150>)
 800afe4:	681b      	ldr	r3, [r3, #0]
 800afe6:	68db      	ldr	r3, [r3, #12]
 800afe8:	68db      	ldr	r3, [r3, #12]
 800afea:	60bb      	str	r3, [r7, #8]
 800afec:	68bb      	ldr	r3, [r7, #8]
 800afee:	685b      	ldr	r3, [r3, #4]
 800aff0:	607b      	str	r3, [r7, #4]
 800aff2:	693a      	ldr	r2, [r7, #16]
 800aff4:	687b      	ldr	r3, [r7, #4]
 800aff6:	429a      	cmp	r2, r3
 800aff8:	d203      	bcs.n	800b002 <xTaskIncrementTick+0xaa>
 800affa:	4a2e      	ldr	r2, [pc, #184]	@ (800b0b4 <xTaskIncrementTick+0x15c>)
 800affc:	687b      	ldr	r3, [r7, #4]
 800affe:	6013      	str	r3, [r2, #0]
 800b000:	e02f      	b.n	800b062 <xTaskIncrementTick+0x10a>
 800b002:	68bb      	ldr	r3, [r7, #8]
 800b004:	3304      	adds	r3, #4
 800b006:	4618      	mov	r0, r3
 800b008:	f7fe fe5c 	bl	8009cc4 <uxListRemove>
 800b00c:	68bb      	ldr	r3, [r7, #8]
 800b00e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b010:	2b00      	cmp	r3, #0
 800b012:	d004      	beq.n	800b01e <xTaskIncrementTick+0xc6>
 800b014:	68bb      	ldr	r3, [r7, #8]
 800b016:	3318      	adds	r3, #24
 800b018:	4618      	mov	r0, r3
 800b01a:	f7fe fe53 	bl	8009cc4 <uxListRemove>
 800b01e:	68bb      	ldr	r3, [r7, #8]
 800b020:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b022:	4b25      	ldr	r3, [pc, #148]	@ (800b0b8 <xTaskIncrementTick+0x160>)
 800b024:	681b      	ldr	r3, [r3, #0]
 800b026:	429a      	cmp	r2, r3
 800b028:	d903      	bls.n	800b032 <xTaskIncrementTick+0xda>
 800b02a:	68bb      	ldr	r3, [r7, #8]
 800b02c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b02e:	4a22      	ldr	r2, [pc, #136]	@ (800b0b8 <xTaskIncrementTick+0x160>)
 800b030:	6013      	str	r3, [r2, #0]
 800b032:	68bb      	ldr	r3, [r7, #8]
 800b034:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b036:	4613      	mov	r3, r2
 800b038:	009b      	lsls	r3, r3, #2
 800b03a:	4413      	add	r3, r2
 800b03c:	009b      	lsls	r3, r3, #2
 800b03e:	4a1f      	ldr	r2, [pc, #124]	@ (800b0bc <xTaskIncrementTick+0x164>)
 800b040:	441a      	add	r2, r3
 800b042:	68bb      	ldr	r3, [r7, #8]
 800b044:	3304      	adds	r3, #4
 800b046:	4619      	mov	r1, r3
 800b048:	4610      	mov	r0, r2
 800b04a:	f7fe fdde 	bl	8009c0a <vListInsertEnd>
 800b04e:	68bb      	ldr	r3, [r7, #8]
 800b050:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b052:	4b1b      	ldr	r3, [pc, #108]	@ (800b0c0 <xTaskIncrementTick+0x168>)
 800b054:	681b      	ldr	r3, [r3, #0]
 800b056:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b058:	429a      	cmp	r2, r3
 800b05a:	d3b8      	bcc.n	800afce <xTaskIncrementTick+0x76>
 800b05c:	2301      	movs	r3, #1
 800b05e:	617b      	str	r3, [r7, #20]
 800b060:	e7b5      	b.n	800afce <xTaskIncrementTick+0x76>
 800b062:	4b17      	ldr	r3, [pc, #92]	@ (800b0c0 <xTaskIncrementTick+0x168>)
 800b064:	681b      	ldr	r3, [r3, #0]
 800b066:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b068:	4914      	ldr	r1, [pc, #80]	@ (800b0bc <xTaskIncrementTick+0x164>)
 800b06a:	4613      	mov	r3, r2
 800b06c:	009b      	lsls	r3, r3, #2
 800b06e:	4413      	add	r3, r2
 800b070:	009b      	lsls	r3, r3, #2
 800b072:	440b      	add	r3, r1
 800b074:	681b      	ldr	r3, [r3, #0]
 800b076:	2b01      	cmp	r3, #1
 800b078:	d901      	bls.n	800b07e <xTaskIncrementTick+0x126>
 800b07a:	2301      	movs	r3, #1
 800b07c:	617b      	str	r3, [r7, #20]
 800b07e:	4b11      	ldr	r3, [pc, #68]	@ (800b0c4 <xTaskIncrementTick+0x16c>)
 800b080:	681b      	ldr	r3, [r3, #0]
 800b082:	2b00      	cmp	r3, #0
 800b084:	d007      	beq.n	800b096 <xTaskIncrementTick+0x13e>
 800b086:	2301      	movs	r3, #1
 800b088:	617b      	str	r3, [r7, #20]
 800b08a:	e004      	b.n	800b096 <xTaskIncrementTick+0x13e>
 800b08c:	4b0e      	ldr	r3, [pc, #56]	@ (800b0c8 <xTaskIncrementTick+0x170>)
 800b08e:	681b      	ldr	r3, [r3, #0]
 800b090:	3301      	adds	r3, #1
 800b092:	4a0d      	ldr	r2, [pc, #52]	@ (800b0c8 <xTaskIncrementTick+0x170>)
 800b094:	6013      	str	r3, [r2, #0]
 800b096:	697b      	ldr	r3, [r7, #20]
 800b098:	4618      	mov	r0, r3
 800b09a:	3718      	adds	r7, #24
 800b09c:	46bd      	mov	sp, r7
 800b09e:	bd80      	pop	{r7, pc}
 800b0a0:	20001718 	.word	0x20001718
 800b0a4:	200016f4 	.word	0x200016f4
 800b0a8:	200016a8 	.word	0x200016a8
 800b0ac:	200016ac 	.word	0x200016ac
 800b0b0:	20001708 	.word	0x20001708
 800b0b4:	20001710 	.word	0x20001710
 800b0b8:	200016f8 	.word	0x200016f8
 800b0bc:	20001220 	.word	0x20001220
 800b0c0:	2000121c 	.word	0x2000121c
 800b0c4:	20001704 	.word	0x20001704
 800b0c8:	20001700 	.word	0x20001700

0800b0cc <vTaskSwitchContext>:
 800b0cc:	b480      	push	{r7}
 800b0ce:	b085      	sub	sp, #20
 800b0d0:	af00      	add	r7, sp, #0
 800b0d2:	4b2b      	ldr	r3, [pc, #172]	@ (800b180 <vTaskSwitchContext+0xb4>)
 800b0d4:	681b      	ldr	r3, [r3, #0]
 800b0d6:	2b00      	cmp	r3, #0
 800b0d8:	d003      	beq.n	800b0e2 <vTaskSwitchContext+0x16>
 800b0da:	4b2a      	ldr	r3, [pc, #168]	@ (800b184 <vTaskSwitchContext+0xb8>)
 800b0dc:	2201      	movs	r2, #1
 800b0de:	601a      	str	r2, [r3, #0]
 800b0e0:	e047      	b.n	800b172 <vTaskSwitchContext+0xa6>
 800b0e2:	4b28      	ldr	r3, [pc, #160]	@ (800b184 <vTaskSwitchContext+0xb8>)
 800b0e4:	2200      	movs	r2, #0
 800b0e6:	601a      	str	r2, [r3, #0]
 800b0e8:	4b27      	ldr	r3, [pc, #156]	@ (800b188 <vTaskSwitchContext+0xbc>)
 800b0ea:	681b      	ldr	r3, [r3, #0]
 800b0ec:	60fb      	str	r3, [r7, #12]
 800b0ee:	e011      	b.n	800b114 <vTaskSwitchContext+0x48>
 800b0f0:	68fb      	ldr	r3, [r7, #12]
 800b0f2:	2b00      	cmp	r3, #0
 800b0f4:	d10b      	bne.n	800b10e <vTaskSwitchContext+0x42>
 800b0f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b0fa:	f383 8811 	msr	BASEPRI, r3
 800b0fe:	f3bf 8f6f 	isb	sy
 800b102:	f3bf 8f4f 	dsb	sy
 800b106:	607b      	str	r3, [r7, #4]
 800b108:	bf00      	nop
 800b10a:	bf00      	nop
 800b10c:	e7fd      	b.n	800b10a <vTaskSwitchContext+0x3e>
 800b10e:	68fb      	ldr	r3, [r7, #12]
 800b110:	3b01      	subs	r3, #1
 800b112:	60fb      	str	r3, [r7, #12]
 800b114:	491d      	ldr	r1, [pc, #116]	@ (800b18c <vTaskSwitchContext+0xc0>)
 800b116:	68fa      	ldr	r2, [r7, #12]
 800b118:	4613      	mov	r3, r2
 800b11a:	009b      	lsls	r3, r3, #2
 800b11c:	4413      	add	r3, r2
 800b11e:	009b      	lsls	r3, r3, #2
 800b120:	440b      	add	r3, r1
 800b122:	681b      	ldr	r3, [r3, #0]
 800b124:	2b00      	cmp	r3, #0
 800b126:	d0e3      	beq.n	800b0f0 <vTaskSwitchContext+0x24>
 800b128:	68fa      	ldr	r2, [r7, #12]
 800b12a:	4613      	mov	r3, r2
 800b12c:	009b      	lsls	r3, r3, #2
 800b12e:	4413      	add	r3, r2
 800b130:	009b      	lsls	r3, r3, #2
 800b132:	4a16      	ldr	r2, [pc, #88]	@ (800b18c <vTaskSwitchContext+0xc0>)
 800b134:	4413      	add	r3, r2
 800b136:	60bb      	str	r3, [r7, #8]
 800b138:	68bb      	ldr	r3, [r7, #8]
 800b13a:	685b      	ldr	r3, [r3, #4]
 800b13c:	685a      	ldr	r2, [r3, #4]
 800b13e:	68bb      	ldr	r3, [r7, #8]
 800b140:	605a      	str	r2, [r3, #4]
 800b142:	68bb      	ldr	r3, [r7, #8]
 800b144:	685a      	ldr	r2, [r3, #4]
 800b146:	68bb      	ldr	r3, [r7, #8]
 800b148:	3308      	adds	r3, #8
 800b14a:	429a      	cmp	r2, r3
 800b14c:	d104      	bne.n	800b158 <vTaskSwitchContext+0x8c>
 800b14e:	68bb      	ldr	r3, [r7, #8]
 800b150:	685b      	ldr	r3, [r3, #4]
 800b152:	685a      	ldr	r2, [r3, #4]
 800b154:	68bb      	ldr	r3, [r7, #8]
 800b156:	605a      	str	r2, [r3, #4]
 800b158:	68bb      	ldr	r3, [r7, #8]
 800b15a:	685b      	ldr	r3, [r3, #4]
 800b15c:	68db      	ldr	r3, [r3, #12]
 800b15e:	4a0c      	ldr	r2, [pc, #48]	@ (800b190 <vTaskSwitchContext+0xc4>)
 800b160:	6013      	str	r3, [r2, #0]
 800b162:	4a09      	ldr	r2, [pc, #36]	@ (800b188 <vTaskSwitchContext+0xbc>)
 800b164:	68fb      	ldr	r3, [r7, #12]
 800b166:	6013      	str	r3, [r2, #0]
 800b168:	4b09      	ldr	r3, [pc, #36]	@ (800b190 <vTaskSwitchContext+0xc4>)
 800b16a:	681b      	ldr	r3, [r3, #0]
 800b16c:	3354      	adds	r3, #84	@ 0x54
 800b16e:	4a09      	ldr	r2, [pc, #36]	@ (800b194 <vTaskSwitchContext+0xc8>)
 800b170:	6013      	str	r3, [r2, #0]
 800b172:	bf00      	nop
 800b174:	3714      	adds	r7, #20
 800b176:	46bd      	mov	sp, r7
 800b178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b17c:	4770      	bx	lr
 800b17e:	bf00      	nop
 800b180:	20001718 	.word	0x20001718
 800b184:	20001704 	.word	0x20001704
 800b188:	200016f8 	.word	0x200016f8
 800b18c:	20001220 	.word	0x20001220
 800b190:	2000121c 	.word	0x2000121c
 800b194:	20000250 	.word	0x20000250

0800b198 <vTaskPlaceOnEventList>:
 800b198:	b580      	push	{r7, lr}
 800b19a:	b084      	sub	sp, #16
 800b19c:	af00      	add	r7, sp, #0
 800b19e:	6078      	str	r0, [r7, #4]
 800b1a0:	6039      	str	r1, [r7, #0]
 800b1a2:	687b      	ldr	r3, [r7, #4]
 800b1a4:	2b00      	cmp	r3, #0
 800b1a6:	d10b      	bne.n	800b1c0 <vTaskPlaceOnEventList+0x28>
 800b1a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b1ac:	f383 8811 	msr	BASEPRI, r3
 800b1b0:	f3bf 8f6f 	isb	sy
 800b1b4:	f3bf 8f4f 	dsb	sy
 800b1b8:	60fb      	str	r3, [r7, #12]
 800b1ba:	bf00      	nop
 800b1bc:	bf00      	nop
 800b1be:	e7fd      	b.n	800b1bc <vTaskPlaceOnEventList+0x24>
 800b1c0:	4b07      	ldr	r3, [pc, #28]	@ (800b1e0 <vTaskPlaceOnEventList+0x48>)
 800b1c2:	681b      	ldr	r3, [r3, #0]
 800b1c4:	3318      	adds	r3, #24
 800b1c6:	4619      	mov	r1, r3
 800b1c8:	6878      	ldr	r0, [r7, #4]
 800b1ca:	f7fe fd42 	bl	8009c52 <vListInsert>
 800b1ce:	2101      	movs	r1, #1
 800b1d0:	6838      	ldr	r0, [r7, #0]
 800b1d2:	f000 fa87 	bl	800b6e4 <prvAddCurrentTaskToDelayedList>
 800b1d6:	bf00      	nop
 800b1d8:	3710      	adds	r7, #16
 800b1da:	46bd      	mov	sp, r7
 800b1dc:	bd80      	pop	{r7, pc}
 800b1de:	bf00      	nop
 800b1e0:	2000121c 	.word	0x2000121c

0800b1e4 <vTaskPlaceOnEventListRestricted>:
 800b1e4:	b580      	push	{r7, lr}
 800b1e6:	b086      	sub	sp, #24
 800b1e8:	af00      	add	r7, sp, #0
 800b1ea:	60f8      	str	r0, [r7, #12]
 800b1ec:	60b9      	str	r1, [r7, #8]
 800b1ee:	607a      	str	r2, [r7, #4]
 800b1f0:	68fb      	ldr	r3, [r7, #12]
 800b1f2:	2b00      	cmp	r3, #0
 800b1f4:	d10b      	bne.n	800b20e <vTaskPlaceOnEventListRestricted+0x2a>
 800b1f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b1fa:	f383 8811 	msr	BASEPRI, r3
 800b1fe:	f3bf 8f6f 	isb	sy
 800b202:	f3bf 8f4f 	dsb	sy
 800b206:	617b      	str	r3, [r7, #20]
 800b208:	bf00      	nop
 800b20a:	bf00      	nop
 800b20c:	e7fd      	b.n	800b20a <vTaskPlaceOnEventListRestricted+0x26>
 800b20e:	4b0a      	ldr	r3, [pc, #40]	@ (800b238 <vTaskPlaceOnEventListRestricted+0x54>)
 800b210:	681b      	ldr	r3, [r3, #0]
 800b212:	3318      	adds	r3, #24
 800b214:	4619      	mov	r1, r3
 800b216:	68f8      	ldr	r0, [r7, #12]
 800b218:	f7fe fcf7 	bl	8009c0a <vListInsertEnd>
 800b21c:	687b      	ldr	r3, [r7, #4]
 800b21e:	2b00      	cmp	r3, #0
 800b220:	d002      	beq.n	800b228 <vTaskPlaceOnEventListRestricted+0x44>
 800b222:	f04f 33ff 	mov.w	r3, #4294967295
 800b226:	60bb      	str	r3, [r7, #8]
 800b228:	6879      	ldr	r1, [r7, #4]
 800b22a:	68b8      	ldr	r0, [r7, #8]
 800b22c:	f000 fa5a 	bl	800b6e4 <prvAddCurrentTaskToDelayedList>
 800b230:	bf00      	nop
 800b232:	3718      	adds	r7, #24
 800b234:	46bd      	mov	sp, r7
 800b236:	bd80      	pop	{r7, pc}
 800b238:	2000121c 	.word	0x2000121c

0800b23c <xTaskRemoveFromEventList>:
 800b23c:	b580      	push	{r7, lr}
 800b23e:	b086      	sub	sp, #24
 800b240:	af00      	add	r7, sp, #0
 800b242:	6078      	str	r0, [r7, #4]
 800b244:	687b      	ldr	r3, [r7, #4]
 800b246:	68db      	ldr	r3, [r3, #12]
 800b248:	68db      	ldr	r3, [r3, #12]
 800b24a:	613b      	str	r3, [r7, #16]
 800b24c:	693b      	ldr	r3, [r7, #16]
 800b24e:	2b00      	cmp	r3, #0
 800b250:	d10b      	bne.n	800b26a <xTaskRemoveFromEventList+0x2e>
 800b252:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b256:	f383 8811 	msr	BASEPRI, r3
 800b25a:	f3bf 8f6f 	isb	sy
 800b25e:	f3bf 8f4f 	dsb	sy
 800b262:	60fb      	str	r3, [r7, #12]
 800b264:	bf00      	nop
 800b266:	bf00      	nop
 800b268:	e7fd      	b.n	800b266 <xTaskRemoveFromEventList+0x2a>
 800b26a:	693b      	ldr	r3, [r7, #16]
 800b26c:	3318      	adds	r3, #24
 800b26e:	4618      	mov	r0, r3
 800b270:	f7fe fd28 	bl	8009cc4 <uxListRemove>
 800b274:	4b1d      	ldr	r3, [pc, #116]	@ (800b2ec <xTaskRemoveFromEventList+0xb0>)
 800b276:	681b      	ldr	r3, [r3, #0]
 800b278:	2b00      	cmp	r3, #0
 800b27a:	d11d      	bne.n	800b2b8 <xTaskRemoveFromEventList+0x7c>
 800b27c:	693b      	ldr	r3, [r7, #16]
 800b27e:	3304      	adds	r3, #4
 800b280:	4618      	mov	r0, r3
 800b282:	f7fe fd1f 	bl	8009cc4 <uxListRemove>
 800b286:	693b      	ldr	r3, [r7, #16]
 800b288:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b28a:	4b19      	ldr	r3, [pc, #100]	@ (800b2f0 <xTaskRemoveFromEventList+0xb4>)
 800b28c:	681b      	ldr	r3, [r3, #0]
 800b28e:	429a      	cmp	r2, r3
 800b290:	d903      	bls.n	800b29a <xTaskRemoveFromEventList+0x5e>
 800b292:	693b      	ldr	r3, [r7, #16]
 800b294:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b296:	4a16      	ldr	r2, [pc, #88]	@ (800b2f0 <xTaskRemoveFromEventList+0xb4>)
 800b298:	6013      	str	r3, [r2, #0]
 800b29a:	693b      	ldr	r3, [r7, #16]
 800b29c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b29e:	4613      	mov	r3, r2
 800b2a0:	009b      	lsls	r3, r3, #2
 800b2a2:	4413      	add	r3, r2
 800b2a4:	009b      	lsls	r3, r3, #2
 800b2a6:	4a13      	ldr	r2, [pc, #76]	@ (800b2f4 <xTaskRemoveFromEventList+0xb8>)
 800b2a8:	441a      	add	r2, r3
 800b2aa:	693b      	ldr	r3, [r7, #16]
 800b2ac:	3304      	adds	r3, #4
 800b2ae:	4619      	mov	r1, r3
 800b2b0:	4610      	mov	r0, r2
 800b2b2:	f7fe fcaa 	bl	8009c0a <vListInsertEnd>
 800b2b6:	e005      	b.n	800b2c4 <xTaskRemoveFromEventList+0x88>
 800b2b8:	693b      	ldr	r3, [r7, #16]
 800b2ba:	3318      	adds	r3, #24
 800b2bc:	4619      	mov	r1, r3
 800b2be:	480e      	ldr	r0, [pc, #56]	@ (800b2f8 <xTaskRemoveFromEventList+0xbc>)
 800b2c0:	f7fe fca3 	bl	8009c0a <vListInsertEnd>
 800b2c4:	693b      	ldr	r3, [r7, #16]
 800b2c6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b2c8:	4b0c      	ldr	r3, [pc, #48]	@ (800b2fc <xTaskRemoveFromEventList+0xc0>)
 800b2ca:	681b      	ldr	r3, [r3, #0]
 800b2cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b2ce:	429a      	cmp	r2, r3
 800b2d0:	d905      	bls.n	800b2de <xTaskRemoveFromEventList+0xa2>
 800b2d2:	2301      	movs	r3, #1
 800b2d4:	617b      	str	r3, [r7, #20]
 800b2d6:	4b0a      	ldr	r3, [pc, #40]	@ (800b300 <xTaskRemoveFromEventList+0xc4>)
 800b2d8:	2201      	movs	r2, #1
 800b2da:	601a      	str	r2, [r3, #0]
 800b2dc:	e001      	b.n	800b2e2 <xTaskRemoveFromEventList+0xa6>
 800b2de:	2300      	movs	r3, #0
 800b2e0:	617b      	str	r3, [r7, #20]
 800b2e2:	697b      	ldr	r3, [r7, #20]
 800b2e4:	4618      	mov	r0, r3
 800b2e6:	3718      	adds	r7, #24
 800b2e8:	46bd      	mov	sp, r7
 800b2ea:	bd80      	pop	{r7, pc}
 800b2ec:	20001718 	.word	0x20001718
 800b2f0:	200016f8 	.word	0x200016f8
 800b2f4:	20001220 	.word	0x20001220
 800b2f8:	200016b0 	.word	0x200016b0
 800b2fc:	2000121c 	.word	0x2000121c
 800b300:	20001704 	.word	0x20001704

0800b304 <vTaskInternalSetTimeOutState>:
 800b304:	b480      	push	{r7}
 800b306:	b083      	sub	sp, #12
 800b308:	af00      	add	r7, sp, #0
 800b30a:	6078      	str	r0, [r7, #4]
 800b30c:	4b06      	ldr	r3, [pc, #24]	@ (800b328 <vTaskInternalSetTimeOutState+0x24>)
 800b30e:	681a      	ldr	r2, [r3, #0]
 800b310:	687b      	ldr	r3, [r7, #4]
 800b312:	601a      	str	r2, [r3, #0]
 800b314:	4b05      	ldr	r3, [pc, #20]	@ (800b32c <vTaskInternalSetTimeOutState+0x28>)
 800b316:	681a      	ldr	r2, [r3, #0]
 800b318:	687b      	ldr	r3, [r7, #4]
 800b31a:	605a      	str	r2, [r3, #4]
 800b31c:	bf00      	nop
 800b31e:	370c      	adds	r7, #12
 800b320:	46bd      	mov	sp, r7
 800b322:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b326:	4770      	bx	lr
 800b328:	20001708 	.word	0x20001708
 800b32c:	200016f4 	.word	0x200016f4

0800b330 <xTaskCheckForTimeOut>:
 800b330:	b580      	push	{r7, lr}
 800b332:	b088      	sub	sp, #32
 800b334:	af00      	add	r7, sp, #0
 800b336:	6078      	str	r0, [r7, #4]
 800b338:	6039      	str	r1, [r7, #0]
 800b33a:	687b      	ldr	r3, [r7, #4]
 800b33c:	2b00      	cmp	r3, #0
 800b33e:	d10b      	bne.n	800b358 <xTaskCheckForTimeOut+0x28>
 800b340:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b344:	f383 8811 	msr	BASEPRI, r3
 800b348:	f3bf 8f6f 	isb	sy
 800b34c:	f3bf 8f4f 	dsb	sy
 800b350:	613b      	str	r3, [r7, #16]
 800b352:	bf00      	nop
 800b354:	bf00      	nop
 800b356:	e7fd      	b.n	800b354 <xTaskCheckForTimeOut+0x24>
 800b358:	683b      	ldr	r3, [r7, #0]
 800b35a:	2b00      	cmp	r3, #0
 800b35c:	d10b      	bne.n	800b376 <xTaskCheckForTimeOut+0x46>
 800b35e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b362:	f383 8811 	msr	BASEPRI, r3
 800b366:	f3bf 8f6f 	isb	sy
 800b36a:	f3bf 8f4f 	dsb	sy
 800b36e:	60fb      	str	r3, [r7, #12]
 800b370:	bf00      	nop
 800b372:	bf00      	nop
 800b374:	e7fd      	b.n	800b372 <xTaskCheckForTimeOut+0x42>
 800b376:	f000 fe97 	bl	800c0a8 <vPortEnterCritical>
 800b37a:	4b1d      	ldr	r3, [pc, #116]	@ (800b3f0 <xTaskCheckForTimeOut+0xc0>)
 800b37c:	681b      	ldr	r3, [r3, #0]
 800b37e:	61bb      	str	r3, [r7, #24]
 800b380:	687b      	ldr	r3, [r7, #4]
 800b382:	685b      	ldr	r3, [r3, #4]
 800b384:	69ba      	ldr	r2, [r7, #24]
 800b386:	1ad3      	subs	r3, r2, r3
 800b388:	617b      	str	r3, [r7, #20]
 800b38a:	683b      	ldr	r3, [r7, #0]
 800b38c:	681b      	ldr	r3, [r3, #0]
 800b38e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b392:	d102      	bne.n	800b39a <xTaskCheckForTimeOut+0x6a>
 800b394:	2300      	movs	r3, #0
 800b396:	61fb      	str	r3, [r7, #28]
 800b398:	e023      	b.n	800b3e2 <xTaskCheckForTimeOut+0xb2>
 800b39a:	687b      	ldr	r3, [r7, #4]
 800b39c:	681a      	ldr	r2, [r3, #0]
 800b39e:	4b15      	ldr	r3, [pc, #84]	@ (800b3f4 <xTaskCheckForTimeOut+0xc4>)
 800b3a0:	681b      	ldr	r3, [r3, #0]
 800b3a2:	429a      	cmp	r2, r3
 800b3a4:	d007      	beq.n	800b3b6 <xTaskCheckForTimeOut+0x86>
 800b3a6:	687b      	ldr	r3, [r7, #4]
 800b3a8:	685b      	ldr	r3, [r3, #4]
 800b3aa:	69ba      	ldr	r2, [r7, #24]
 800b3ac:	429a      	cmp	r2, r3
 800b3ae:	d302      	bcc.n	800b3b6 <xTaskCheckForTimeOut+0x86>
 800b3b0:	2301      	movs	r3, #1
 800b3b2:	61fb      	str	r3, [r7, #28]
 800b3b4:	e015      	b.n	800b3e2 <xTaskCheckForTimeOut+0xb2>
 800b3b6:	683b      	ldr	r3, [r7, #0]
 800b3b8:	681b      	ldr	r3, [r3, #0]
 800b3ba:	697a      	ldr	r2, [r7, #20]
 800b3bc:	429a      	cmp	r2, r3
 800b3be:	d20b      	bcs.n	800b3d8 <xTaskCheckForTimeOut+0xa8>
 800b3c0:	683b      	ldr	r3, [r7, #0]
 800b3c2:	681a      	ldr	r2, [r3, #0]
 800b3c4:	697b      	ldr	r3, [r7, #20]
 800b3c6:	1ad2      	subs	r2, r2, r3
 800b3c8:	683b      	ldr	r3, [r7, #0]
 800b3ca:	601a      	str	r2, [r3, #0]
 800b3cc:	6878      	ldr	r0, [r7, #4]
 800b3ce:	f7ff ff99 	bl	800b304 <vTaskInternalSetTimeOutState>
 800b3d2:	2300      	movs	r3, #0
 800b3d4:	61fb      	str	r3, [r7, #28]
 800b3d6:	e004      	b.n	800b3e2 <xTaskCheckForTimeOut+0xb2>
 800b3d8:	683b      	ldr	r3, [r7, #0]
 800b3da:	2200      	movs	r2, #0
 800b3dc:	601a      	str	r2, [r3, #0]
 800b3de:	2301      	movs	r3, #1
 800b3e0:	61fb      	str	r3, [r7, #28]
 800b3e2:	f000 fe93 	bl	800c10c <vPortExitCritical>
 800b3e6:	69fb      	ldr	r3, [r7, #28]
 800b3e8:	4618      	mov	r0, r3
 800b3ea:	3720      	adds	r7, #32
 800b3ec:	46bd      	mov	sp, r7
 800b3ee:	bd80      	pop	{r7, pc}
 800b3f0:	200016f4 	.word	0x200016f4
 800b3f4:	20001708 	.word	0x20001708

0800b3f8 <vTaskMissedYield>:
 800b3f8:	b480      	push	{r7}
 800b3fa:	af00      	add	r7, sp, #0
 800b3fc:	4b03      	ldr	r3, [pc, #12]	@ (800b40c <vTaskMissedYield+0x14>)
 800b3fe:	2201      	movs	r2, #1
 800b400:	601a      	str	r2, [r3, #0]
 800b402:	bf00      	nop
 800b404:	46bd      	mov	sp, r7
 800b406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b40a:	4770      	bx	lr
 800b40c:	20001704 	.word	0x20001704

0800b410 <prvIdleTask>:
 800b410:	b580      	push	{r7, lr}
 800b412:	b082      	sub	sp, #8
 800b414:	af00      	add	r7, sp, #0
 800b416:	6078      	str	r0, [r7, #4]
 800b418:	f000 f852 	bl	800b4c0 <prvCheckTasksWaitingTermination>
 800b41c:	4b06      	ldr	r3, [pc, #24]	@ (800b438 <prvIdleTask+0x28>)
 800b41e:	681b      	ldr	r3, [r3, #0]
 800b420:	2b01      	cmp	r3, #1
 800b422:	d9f9      	bls.n	800b418 <prvIdleTask+0x8>
 800b424:	4b05      	ldr	r3, [pc, #20]	@ (800b43c <prvIdleTask+0x2c>)
 800b426:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b42a:	601a      	str	r2, [r3, #0]
 800b42c:	f3bf 8f4f 	dsb	sy
 800b430:	f3bf 8f6f 	isb	sy
 800b434:	e7f0      	b.n	800b418 <prvIdleTask+0x8>
 800b436:	bf00      	nop
 800b438:	20001220 	.word	0x20001220
 800b43c:	e000ed04 	.word	0xe000ed04

0800b440 <prvInitialiseTaskLists>:
 800b440:	b580      	push	{r7, lr}
 800b442:	b082      	sub	sp, #8
 800b444:	af00      	add	r7, sp, #0
 800b446:	2300      	movs	r3, #0
 800b448:	607b      	str	r3, [r7, #4]
 800b44a:	e00c      	b.n	800b466 <prvInitialiseTaskLists+0x26>
 800b44c:	687a      	ldr	r2, [r7, #4]
 800b44e:	4613      	mov	r3, r2
 800b450:	009b      	lsls	r3, r3, #2
 800b452:	4413      	add	r3, r2
 800b454:	009b      	lsls	r3, r3, #2
 800b456:	4a12      	ldr	r2, [pc, #72]	@ (800b4a0 <prvInitialiseTaskLists+0x60>)
 800b458:	4413      	add	r3, r2
 800b45a:	4618      	mov	r0, r3
 800b45c:	f7fe fba8 	bl	8009bb0 <vListInitialise>
 800b460:	687b      	ldr	r3, [r7, #4]
 800b462:	3301      	adds	r3, #1
 800b464:	607b      	str	r3, [r7, #4]
 800b466:	687b      	ldr	r3, [r7, #4]
 800b468:	2b37      	cmp	r3, #55	@ 0x37
 800b46a:	d9ef      	bls.n	800b44c <prvInitialiseTaskLists+0xc>
 800b46c:	480d      	ldr	r0, [pc, #52]	@ (800b4a4 <prvInitialiseTaskLists+0x64>)
 800b46e:	f7fe fb9f 	bl	8009bb0 <vListInitialise>
 800b472:	480d      	ldr	r0, [pc, #52]	@ (800b4a8 <prvInitialiseTaskLists+0x68>)
 800b474:	f7fe fb9c 	bl	8009bb0 <vListInitialise>
 800b478:	480c      	ldr	r0, [pc, #48]	@ (800b4ac <prvInitialiseTaskLists+0x6c>)
 800b47a:	f7fe fb99 	bl	8009bb0 <vListInitialise>
 800b47e:	480c      	ldr	r0, [pc, #48]	@ (800b4b0 <prvInitialiseTaskLists+0x70>)
 800b480:	f7fe fb96 	bl	8009bb0 <vListInitialise>
 800b484:	480b      	ldr	r0, [pc, #44]	@ (800b4b4 <prvInitialiseTaskLists+0x74>)
 800b486:	f7fe fb93 	bl	8009bb0 <vListInitialise>
 800b48a:	4b0b      	ldr	r3, [pc, #44]	@ (800b4b8 <prvInitialiseTaskLists+0x78>)
 800b48c:	4a05      	ldr	r2, [pc, #20]	@ (800b4a4 <prvInitialiseTaskLists+0x64>)
 800b48e:	601a      	str	r2, [r3, #0]
 800b490:	4b0a      	ldr	r3, [pc, #40]	@ (800b4bc <prvInitialiseTaskLists+0x7c>)
 800b492:	4a05      	ldr	r2, [pc, #20]	@ (800b4a8 <prvInitialiseTaskLists+0x68>)
 800b494:	601a      	str	r2, [r3, #0]
 800b496:	bf00      	nop
 800b498:	3708      	adds	r7, #8
 800b49a:	46bd      	mov	sp, r7
 800b49c:	bd80      	pop	{r7, pc}
 800b49e:	bf00      	nop
 800b4a0:	20001220 	.word	0x20001220
 800b4a4:	20001680 	.word	0x20001680
 800b4a8:	20001694 	.word	0x20001694
 800b4ac:	200016b0 	.word	0x200016b0
 800b4b0:	200016c4 	.word	0x200016c4
 800b4b4:	200016dc 	.word	0x200016dc
 800b4b8:	200016a8 	.word	0x200016a8
 800b4bc:	200016ac 	.word	0x200016ac

0800b4c0 <prvCheckTasksWaitingTermination>:
 800b4c0:	b580      	push	{r7, lr}
 800b4c2:	b082      	sub	sp, #8
 800b4c4:	af00      	add	r7, sp, #0
 800b4c6:	e019      	b.n	800b4fc <prvCheckTasksWaitingTermination+0x3c>
 800b4c8:	f000 fdee 	bl	800c0a8 <vPortEnterCritical>
 800b4cc:	4b10      	ldr	r3, [pc, #64]	@ (800b510 <prvCheckTasksWaitingTermination+0x50>)
 800b4ce:	68db      	ldr	r3, [r3, #12]
 800b4d0:	68db      	ldr	r3, [r3, #12]
 800b4d2:	607b      	str	r3, [r7, #4]
 800b4d4:	687b      	ldr	r3, [r7, #4]
 800b4d6:	3304      	adds	r3, #4
 800b4d8:	4618      	mov	r0, r3
 800b4da:	f7fe fbf3 	bl	8009cc4 <uxListRemove>
 800b4de:	4b0d      	ldr	r3, [pc, #52]	@ (800b514 <prvCheckTasksWaitingTermination+0x54>)
 800b4e0:	681b      	ldr	r3, [r3, #0]
 800b4e2:	3b01      	subs	r3, #1
 800b4e4:	4a0b      	ldr	r2, [pc, #44]	@ (800b514 <prvCheckTasksWaitingTermination+0x54>)
 800b4e6:	6013      	str	r3, [r2, #0]
 800b4e8:	4b0b      	ldr	r3, [pc, #44]	@ (800b518 <prvCheckTasksWaitingTermination+0x58>)
 800b4ea:	681b      	ldr	r3, [r3, #0]
 800b4ec:	3b01      	subs	r3, #1
 800b4ee:	4a0a      	ldr	r2, [pc, #40]	@ (800b518 <prvCheckTasksWaitingTermination+0x58>)
 800b4f0:	6013      	str	r3, [r2, #0]
 800b4f2:	f000 fe0b 	bl	800c10c <vPortExitCritical>
 800b4f6:	6878      	ldr	r0, [r7, #4]
 800b4f8:	f000 f810 	bl	800b51c <prvDeleteTCB>
 800b4fc:	4b06      	ldr	r3, [pc, #24]	@ (800b518 <prvCheckTasksWaitingTermination+0x58>)
 800b4fe:	681b      	ldr	r3, [r3, #0]
 800b500:	2b00      	cmp	r3, #0
 800b502:	d1e1      	bne.n	800b4c8 <prvCheckTasksWaitingTermination+0x8>
 800b504:	bf00      	nop
 800b506:	bf00      	nop
 800b508:	3708      	adds	r7, #8
 800b50a:	46bd      	mov	sp, r7
 800b50c:	bd80      	pop	{r7, pc}
 800b50e:	bf00      	nop
 800b510:	200016c4 	.word	0x200016c4
 800b514:	200016f0 	.word	0x200016f0
 800b518:	200016d8 	.word	0x200016d8

0800b51c <prvDeleteTCB>:
 800b51c:	b580      	push	{r7, lr}
 800b51e:	b084      	sub	sp, #16
 800b520:	af00      	add	r7, sp, #0
 800b522:	6078      	str	r0, [r7, #4]
 800b524:	687b      	ldr	r3, [r7, #4]
 800b526:	3354      	adds	r3, #84	@ 0x54
 800b528:	4618      	mov	r0, r3
 800b52a:	f001 f8d5 	bl	800c6d8 <_reclaim_reent>
 800b52e:	687b      	ldr	r3, [r7, #4]
 800b530:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 800b534:	2b00      	cmp	r3, #0
 800b536:	d108      	bne.n	800b54a <prvDeleteTCB+0x2e>
 800b538:	687b      	ldr	r3, [r7, #4]
 800b53a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b53c:	4618      	mov	r0, r3
 800b53e:	f000 ffa3 	bl	800c488 <vPortFree>
 800b542:	6878      	ldr	r0, [r7, #4]
 800b544:	f000 ffa0 	bl	800c488 <vPortFree>
 800b548:	e019      	b.n	800b57e <prvDeleteTCB+0x62>
 800b54a:	687b      	ldr	r3, [r7, #4]
 800b54c:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 800b550:	2b01      	cmp	r3, #1
 800b552:	d103      	bne.n	800b55c <prvDeleteTCB+0x40>
 800b554:	6878      	ldr	r0, [r7, #4]
 800b556:	f000 ff97 	bl	800c488 <vPortFree>
 800b55a:	e010      	b.n	800b57e <prvDeleteTCB+0x62>
 800b55c:	687b      	ldr	r3, [r7, #4]
 800b55e:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 800b562:	2b02      	cmp	r3, #2
 800b564:	d00b      	beq.n	800b57e <prvDeleteTCB+0x62>
 800b566:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b56a:	f383 8811 	msr	BASEPRI, r3
 800b56e:	f3bf 8f6f 	isb	sy
 800b572:	f3bf 8f4f 	dsb	sy
 800b576:	60fb      	str	r3, [r7, #12]
 800b578:	bf00      	nop
 800b57a:	bf00      	nop
 800b57c:	e7fd      	b.n	800b57a <prvDeleteTCB+0x5e>
 800b57e:	bf00      	nop
 800b580:	3710      	adds	r7, #16
 800b582:	46bd      	mov	sp, r7
 800b584:	bd80      	pop	{r7, pc}
	...

0800b588 <prvResetNextTaskUnblockTime>:
 800b588:	b480      	push	{r7}
 800b58a:	b083      	sub	sp, #12
 800b58c:	af00      	add	r7, sp, #0
 800b58e:	4b0c      	ldr	r3, [pc, #48]	@ (800b5c0 <prvResetNextTaskUnblockTime+0x38>)
 800b590:	681b      	ldr	r3, [r3, #0]
 800b592:	681b      	ldr	r3, [r3, #0]
 800b594:	2b00      	cmp	r3, #0
 800b596:	d104      	bne.n	800b5a2 <prvResetNextTaskUnblockTime+0x1a>
 800b598:	4b0a      	ldr	r3, [pc, #40]	@ (800b5c4 <prvResetNextTaskUnblockTime+0x3c>)
 800b59a:	f04f 32ff 	mov.w	r2, #4294967295
 800b59e:	601a      	str	r2, [r3, #0]
 800b5a0:	e008      	b.n	800b5b4 <prvResetNextTaskUnblockTime+0x2c>
 800b5a2:	4b07      	ldr	r3, [pc, #28]	@ (800b5c0 <prvResetNextTaskUnblockTime+0x38>)
 800b5a4:	681b      	ldr	r3, [r3, #0]
 800b5a6:	68db      	ldr	r3, [r3, #12]
 800b5a8:	68db      	ldr	r3, [r3, #12]
 800b5aa:	607b      	str	r3, [r7, #4]
 800b5ac:	687b      	ldr	r3, [r7, #4]
 800b5ae:	685b      	ldr	r3, [r3, #4]
 800b5b0:	4a04      	ldr	r2, [pc, #16]	@ (800b5c4 <prvResetNextTaskUnblockTime+0x3c>)
 800b5b2:	6013      	str	r3, [r2, #0]
 800b5b4:	bf00      	nop
 800b5b6:	370c      	adds	r7, #12
 800b5b8:	46bd      	mov	sp, r7
 800b5ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5be:	4770      	bx	lr
 800b5c0:	200016a8 	.word	0x200016a8
 800b5c4:	20001710 	.word	0x20001710

0800b5c8 <xTaskGetSchedulerState>:
 800b5c8:	b480      	push	{r7}
 800b5ca:	b083      	sub	sp, #12
 800b5cc:	af00      	add	r7, sp, #0
 800b5ce:	4b0b      	ldr	r3, [pc, #44]	@ (800b5fc <xTaskGetSchedulerState+0x34>)
 800b5d0:	681b      	ldr	r3, [r3, #0]
 800b5d2:	2b00      	cmp	r3, #0
 800b5d4:	d102      	bne.n	800b5dc <xTaskGetSchedulerState+0x14>
 800b5d6:	2301      	movs	r3, #1
 800b5d8:	607b      	str	r3, [r7, #4]
 800b5da:	e008      	b.n	800b5ee <xTaskGetSchedulerState+0x26>
 800b5dc:	4b08      	ldr	r3, [pc, #32]	@ (800b600 <xTaskGetSchedulerState+0x38>)
 800b5de:	681b      	ldr	r3, [r3, #0]
 800b5e0:	2b00      	cmp	r3, #0
 800b5e2:	d102      	bne.n	800b5ea <xTaskGetSchedulerState+0x22>
 800b5e4:	2302      	movs	r3, #2
 800b5e6:	607b      	str	r3, [r7, #4]
 800b5e8:	e001      	b.n	800b5ee <xTaskGetSchedulerState+0x26>
 800b5ea:	2300      	movs	r3, #0
 800b5ec:	607b      	str	r3, [r7, #4]
 800b5ee:	687b      	ldr	r3, [r7, #4]
 800b5f0:	4618      	mov	r0, r3
 800b5f2:	370c      	adds	r7, #12
 800b5f4:	46bd      	mov	sp, r7
 800b5f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5fa:	4770      	bx	lr
 800b5fc:	200016fc 	.word	0x200016fc
 800b600:	20001718 	.word	0x20001718

0800b604 <xTaskPriorityDisinherit>:
 800b604:	b580      	push	{r7, lr}
 800b606:	b086      	sub	sp, #24
 800b608:	af00      	add	r7, sp, #0
 800b60a:	6078      	str	r0, [r7, #4]
 800b60c:	687b      	ldr	r3, [r7, #4]
 800b60e:	613b      	str	r3, [r7, #16]
 800b610:	2300      	movs	r3, #0
 800b612:	617b      	str	r3, [r7, #20]
 800b614:	687b      	ldr	r3, [r7, #4]
 800b616:	2b00      	cmp	r3, #0
 800b618:	d058      	beq.n	800b6cc <xTaskPriorityDisinherit+0xc8>
 800b61a:	4b2f      	ldr	r3, [pc, #188]	@ (800b6d8 <xTaskPriorityDisinherit+0xd4>)
 800b61c:	681b      	ldr	r3, [r3, #0]
 800b61e:	693a      	ldr	r2, [r7, #16]
 800b620:	429a      	cmp	r2, r3
 800b622:	d00b      	beq.n	800b63c <xTaskPriorityDisinherit+0x38>
 800b624:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b628:	f383 8811 	msr	BASEPRI, r3
 800b62c:	f3bf 8f6f 	isb	sy
 800b630:	f3bf 8f4f 	dsb	sy
 800b634:	60fb      	str	r3, [r7, #12]
 800b636:	bf00      	nop
 800b638:	bf00      	nop
 800b63a:	e7fd      	b.n	800b638 <xTaskPriorityDisinherit+0x34>
 800b63c:	693b      	ldr	r3, [r7, #16]
 800b63e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800b640:	2b00      	cmp	r3, #0
 800b642:	d10b      	bne.n	800b65c <xTaskPriorityDisinherit+0x58>
 800b644:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b648:	f383 8811 	msr	BASEPRI, r3
 800b64c:	f3bf 8f6f 	isb	sy
 800b650:	f3bf 8f4f 	dsb	sy
 800b654:	60bb      	str	r3, [r7, #8]
 800b656:	bf00      	nop
 800b658:	bf00      	nop
 800b65a:	e7fd      	b.n	800b658 <xTaskPriorityDisinherit+0x54>
 800b65c:	693b      	ldr	r3, [r7, #16]
 800b65e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800b660:	1e5a      	subs	r2, r3, #1
 800b662:	693b      	ldr	r3, [r7, #16]
 800b664:	651a      	str	r2, [r3, #80]	@ 0x50
 800b666:	693b      	ldr	r3, [r7, #16]
 800b668:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b66a:	693b      	ldr	r3, [r7, #16]
 800b66c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800b66e:	429a      	cmp	r2, r3
 800b670:	d02c      	beq.n	800b6cc <xTaskPriorityDisinherit+0xc8>
 800b672:	693b      	ldr	r3, [r7, #16]
 800b674:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800b676:	2b00      	cmp	r3, #0
 800b678:	d128      	bne.n	800b6cc <xTaskPriorityDisinherit+0xc8>
 800b67a:	693b      	ldr	r3, [r7, #16]
 800b67c:	3304      	adds	r3, #4
 800b67e:	4618      	mov	r0, r3
 800b680:	f7fe fb20 	bl	8009cc4 <uxListRemove>
 800b684:	693b      	ldr	r3, [r7, #16]
 800b686:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800b688:	693b      	ldr	r3, [r7, #16]
 800b68a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b68c:	693b      	ldr	r3, [r7, #16]
 800b68e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b690:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800b694:	693b      	ldr	r3, [r7, #16]
 800b696:	619a      	str	r2, [r3, #24]
 800b698:	693b      	ldr	r3, [r7, #16]
 800b69a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b69c:	4b0f      	ldr	r3, [pc, #60]	@ (800b6dc <xTaskPriorityDisinherit+0xd8>)
 800b69e:	681b      	ldr	r3, [r3, #0]
 800b6a0:	429a      	cmp	r2, r3
 800b6a2:	d903      	bls.n	800b6ac <xTaskPriorityDisinherit+0xa8>
 800b6a4:	693b      	ldr	r3, [r7, #16]
 800b6a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b6a8:	4a0c      	ldr	r2, [pc, #48]	@ (800b6dc <xTaskPriorityDisinherit+0xd8>)
 800b6aa:	6013      	str	r3, [r2, #0]
 800b6ac:	693b      	ldr	r3, [r7, #16]
 800b6ae:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b6b0:	4613      	mov	r3, r2
 800b6b2:	009b      	lsls	r3, r3, #2
 800b6b4:	4413      	add	r3, r2
 800b6b6:	009b      	lsls	r3, r3, #2
 800b6b8:	4a09      	ldr	r2, [pc, #36]	@ (800b6e0 <xTaskPriorityDisinherit+0xdc>)
 800b6ba:	441a      	add	r2, r3
 800b6bc:	693b      	ldr	r3, [r7, #16]
 800b6be:	3304      	adds	r3, #4
 800b6c0:	4619      	mov	r1, r3
 800b6c2:	4610      	mov	r0, r2
 800b6c4:	f7fe faa1 	bl	8009c0a <vListInsertEnd>
 800b6c8:	2301      	movs	r3, #1
 800b6ca:	617b      	str	r3, [r7, #20]
 800b6cc:	697b      	ldr	r3, [r7, #20]
 800b6ce:	4618      	mov	r0, r3
 800b6d0:	3718      	adds	r7, #24
 800b6d2:	46bd      	mov	sp, r7
 800b6d4:	bd80      	pop	{r7, pc}
 800b6d6:	bf00      	nop
 800b6d8:	2000121c 	.word	0x2000121c
 800b6dc:	200016f8 	.word	0x200016f8
 800b6e0:	20001220 	.word	0x20001220

0800b6e4 <prvAddCurrentTaskToDelayedList>:
 800b6e4:	b580      	push	{r7, lr}
 800b6e6:	b084      	sub	sp, #16
 800b6e8:	af00      	add	r7, sp, #0
 800b6ea:	6078      	str	r0, [r7, #4]
 800b6ec:	6039      	str	r1, [r7, #0]
 800b6ee:	4b21      	ldr	r3, [pc, #132]	@ (800b774 <prvAddCurrentTaskToDelayedList+0x90>)
 800b6f0:	681b      	ldr	r3, [r3, #0]
 800b6f2:	60fb      	str	r3, [r7, #12]
 800b6f4:	4b20      	ldr	r3, [pc, #128]	@ (800b778 <prvAddCurrentTaskToDelayedList+0x94>)
 800b6f6:	681b      	ldr	r3, [r3, #0]
 800b6f8:	3304      	adds	r3, #4
 800b6fa:	4618      	mov	r0, r3
 800b6fc:	f7fe fae2 	bl	8009cc4 <uxListRemove>
 800b700:	687b      	ldr	r3, [r7, #4]
 800b702:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b706:	d10a      	bne.n	800b71e <prvAddCurrentTaskToDelayedList+0x3a>
 800b708:	683b      	ldr	r3, [r7, #0]
 800b70a:	2b00      	cmp	r3, #0
 800b70c:	d007      	beq.n	800b71e <prvAddCurrentTaskToDelayedList+0x3a>
 800b70e:	4b1a      	ldr	r3, [pc, #104]	@ (800b778 <prvAddCurrentTaskToDelayedList+0x94>)
 800b710:	681b      	ldr	r3, [r3, #0]
 800b712:	3304      	adds	r3, #4
 800b714:	4619      	mov	r1, r3
 800b716:	4819      	ldr	r0, [pc, #100]	@ (800b77c <prvAddCurrentTaskToDelayedList+0x98>)
 800b718:	f7fe fa77 	bl	8009c0a <vListInsertEnd>
 800b71c:	e026      	b.n	800b76c <prvAddCurrentTaskToDelayedList+0x88>
 800b71e:	68fa      	ldr	r2, [r7, #12]
 800b720:	687b      	ldr	r3, [r7, #4]
 800b722:	4413      	add	r3, r2
 800b724:	60bb      	str	r3, [r7, #8]
 800b726:	4b14      	ldr	r3, [pc, #80]	@ (800b778 <prvAddCurrentTaskToDelayedList+0x94>)
 800b728:	681b      	ldr	r3, [r3, #0]
 800b72a:	68ba      	ldr	r2, [r7, #8]
 800b72c:	605a      	str	r2, [r3, #4]
 800b72e:	68ba      	ldr	r2, [r7, #8]
 800b730:	68fb      	ldr	r3, [r7, #12]
 800b732:	429a      	cmp	r2, r3
 800b734:	d209      	bcs.n	800b74a <prvAddCurrentTaskToDelayedList+0x66>
 800b736:	4b12      	ldr	r3, [pc, #72]	@ (800b780 <prvAddCurrentTaskToDelayedList+0x9c>)
 800b738:	681a      	ldr	r2, [r3, #0]
 800b73a:	4b0f      	ldr	r3, [pc, #60]	@ (800b778 <prvAddCurrentTaskToDelayedList+0x94>)
 800b73c:	681b      	ldr	r3, [r3, #0]
 800b73e:	3304      	adds	r3, #4
 800b740:	4619      	mov	r1, r3
 800b742:	4610      	mov	r0, r2
 800b744:	f7fe fa85 	bl	8009c52 <vListInsert>
 800b748:	e010      	b.n	800b76c <prvAddCurrentTaskToDelayedList+0x88>
 800b74a:	4b0e      	ldr	r3, [pc, #56]	@ (800b784 <prvAddCurrentTaskToDelayedList+0xa0>)
 800b74c:	681a      	ldr	r2, [r3, #0]
 800b74e:	4b0a      	ldr	r3, [pc, #40]	@ (800b778 <prvAddCurrentTaskToDelayedList+0x94>)
 800b750:	681b      	ldr	r3, [r3, #0]
 800b752:	3304      	adds	r3, #4
 800b754:	4619      	mov	r1, r3
 800b756:	4610      	mov	r0, r2
 800b758:	f7fe fa7b 	bl	8009c52 <vListInsert>
 800b75c:	4b0a      	ldr	r3, [pc, #40]	@ (800b788 <prvAddCurrentTaskToDelayedList+0xa4>)
 800b75e:	681b      	ldr	r3, [r3, #0]
 800b760:	68ba      	ldr	r2, [r7, #8]
 800b762:	429a      	cmp	r2, r3
 800b764:	d202      	bcs.n	800b76c <prvAddCurrentTaskToDelayedList+0x88>
 800b766:	4a08      	ldr	r2, [pc, #32]	@ (800b788 <prvAddCurrentTaskToDelayedList+0xa4>)
 800b768:	68bb      	ldr	r3, [r7, #8]
 800b76a:	6013      	str	r3, [r2, #0]
 800b76c:	bf00      	nop
 800b76e:	3710      	adds	r7, #16
 800b770:	46bd      	mov	sp, r7
 800b772:	bd80      	pop	{r7, pc}
 800b774:	200016f4 	.word	0x200016f4
 800b778:	2000121c 	.word	0x2000121c
 800b77c:	200016dc 	.word	0x200016dc
 800b780:	200016ac 	.word	0x200016ac
 800b784:	200016a8 	.word	0x200016a8
 800b788:	20001710 	.word	0x20001710

0800b78c <xTimerCreateTimerTask>:
 800b78c:	b580      	push	{r7, lr}
 800b78e:	b08a      	sub	sp, #40	@ 0x28
 800b790:	af04      	add	r7, sp, #16
 800b792:	2300      	movs	r3, #0
 800b794:	617b      	str	r3, [r7, #20]
 800b796:	f000 fb13 	bl	800bdc0 <prvCheckForValidListAndQueue>
 800b79a:	4b1d      	ldr	r3, [pc, #116]	@ (800b810 <xTimerCreateTimerTask+0x84>)
 800b79c:	681b      	ldr	r3, [r3, #0]
 800b79e:	2b00      	cmp	r3, #0
 800b7a0:	d021      	beq.n	800b7e6 <xTimerCreateTimerTask+0x5a>
 800b7a2:	2300      	movs	r3, #0
 800b7a4:	60fb      	str	r3, [r7, #12]
 800b7a6:	2300      	movs	r3, #0
 800b7a8:	60bb      	str	r3, [r7, #8]
 800b7aa:	1d3a      	adds	r2, r7, #4
 800b7ac:	f107 0108 	add.w	r1, r7, #8
 800b7b0:	f107 030c 	add.w	r3, r7, #12
 800b7b4:	4618      	mov	r0, r3
 800b7b6:	f7fe f9e1 	bl	8009b7c <vApplicationGetTimerTaskMemory>
 800b7ba:	6879      	ldr	r1, [r7, #4]
 800b7bc:	68bb      	ldr	r3, [r7, #8]
 800b7be:	68fa      	ldr	r2, [r7, #12]
 800b7c0:	9202      	str	r2, [sp, #8]
 800b7c2:	9301      	str	r3, [sp, #4]
 800b7c4:	2302      	movs	r3, #2
 800b7c6:	9300      	str	r3, [sp, #0]
 800b7c8:	2300      	movs	r3, #0
 800b7ca:	460a      	mov	r2, r1
 800b7cc:	4911      	ldr	r1, [pc, #68]	@ (800b814 <xTimerCreateTimerTask+0x88>)
 800b7ce:	4812      	ldr	r0, [pc, #72]	@ (800b818 <xTimerCreateTimerTask+0x8c>)
 800b7d0:	f7fe ff9c 	bl	800a70c <xTaskCreateStatic>
 800b7d4:	4603      	mov	r3, r0
 800b7d6:	4a11      	ldr	r2, [pc, #68]	@ (800b81c <xTimerCreateTimerTask+0x90>)
 800b7d8:	6013      	str	r3, [r2, #0]
 800b7da:	4b10      	ldr	r3, [pc, #64]	@ (800b81c <xTimerCreateTimerTask+0x90>)
 800b7dc:	681b      	ldr	r3, [r3, #0]
 800b7de:	2b00      	cmp	r3, #0
 800b7e0:	d001      	beq.n	800b7e6 <xTimerCreateTimerTask+0x5a>
 800b7e2:	2301      	movs	r3, #1
 800b7e4:	617b      	str	r3, [r7, #20]
 800b7e6:	697b      	ldr	r3, [r7, #20]
 800b7e8:	2b00      	cmp	r3, #0
 800b7ea:	d10b      	bne.n	800b804 <xTimerCreateTimerTask+0x78>
 800b7ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b7f0:	f383 8811 	msr	BASEPRI, r3
 800b7f4:	f3bf 8f6f 	isb	sy
 800b7f8:	f3bf 8f4f 	dsb	sy
 800b7fc:	613b      	str	r3, [r7, #16]
 800b7fe:	bf00      	nop
 800b800:	bf00      	nop
 800b802:	e7fd      	b.n	800b800 <xTimerCreateTimerTask+0x74>
 800b804:	697b      	ldr	r3, [r7, #20]
 800b806:	4618      	mov	r0, r3
 800b808:	3718      	adds	r7, #24
 800b80a:	46bd      	mov	sp, r7
 800b80c:	bd80      	pop	{r7, pc}
 800b80e:	bf00      	nop
 800b810:	2000174c 	.word	0x2000174c
 800b814:	0800c938 	.word	0x0800c938
 800b818:	0800b959 	.word	0x0800b959
 800b81c:	20001750 	.word	0x20001750

0800b820 <xTimerGenericCommand>:
 800b820:	b580      	push	{r7, lr}
 800b822:	b08a      	sub	sp, #40	@ 0x28
 800b824:	af00      	add	r7, sp, #0
 800b826:	60f8      	str	r0, [r7, #12]
 800b828:	60b9      	str	r1, [r7, #8]
 800b82a:	607a      	str	r2, [r7, #4]
 800b82c:	603b      	str	r3, [r7, #0]
 800b82e:	2300      	movs	r3, #0
 800b830:	627b      	str	r3, [r7, #36]	@ 0x24
 800b832:	68fb      	ldr	r3, [r7, #12]
 800b834:	2b00      	cmp	r3, #0
 800b836:	d10b      	bne.n	800b850 <xTimerGenericCommand+0x30>
 800b838:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b83c:	f383 8811 	msr	BASEPRI, r3
 800b840:	f3bf 8f6f 	isb	sy
 800b844:	f3bf 8f4f 	dsb	sy
 800b848:	623b      	str	r3, [r7, #32]
 800b84a:	bf00      	nop
 800b84c:	bf00      	nop
 800b84e:	e7fd      	b.n	800b84c <xTimerGenericCommand+0x2c>
 800b850:	4b19      	ldr	r3, [pc, #100]	@ (800b8b8 <xTimerGenericCommand+0x98>)
 800b852:	681b      	ldr	r3, [r3, #0]
 800b854:	2b00      	cmp	r3, #0
 800b856:	d02a      	beq.n	800b8ae <xTimerGenericCommand+0x8e>
 800b858:	68bb      	ldr	r3, [r7, #8]
 800b85a:	613b      	str	r3, [r7, #16]
 800b85c:	687b      	ldr	r3, [r7, #4]
 800b85e:	617b      	str	r3, [r7, #20]
 800b860:	68fb      	ldr	r3, [r7, #12]
 800b862:	61bb      	str	r3, [r7, #24]
 800b864:	68bb      	ldr	r3, [r7, #8]
 800b866:	2b05      	cmp	r3, #5
 800b868:	dc18      	bgt.n	800b89c <xTimerGenericCommand+0x7c>
 800b86a:	f7ff fead 	bl	800b5c8 <xTaskGetSchedulerState>
 800b86e:	4603      	mov	r3, r0
 800b870:	2b02      	cmp	r3, #2
 800b872:	d109      	bne.n	800b888 <xTimerGenericCommand+0x68>
 800b874:	4b10      	ldr	r3, [pc, #64]	@ (800b8b8 <xTimerGenericCommand+0x98>)
 800b876:	6818      	ldr	r0, [r3, #0]
 800b878:	f107 0110 	add.w	r1, r7, #16
 800b87c:	2300      	movs	r3, #0
 800b87e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800b880:	f7fe fb54 	bl	8009f2c <xQueueGenericSend>
 800b884:	6278      	str	r0, [r7, #36]	@ 0x24
 800b886:	e012      	b.n	800b8ae <xTimerGenericCommand+0x8e>
 800b888:	4b0b      	ldr	r3, [pc, #44]	@ (800b8b8 <xTimerGenericCommand+0x98>)
 800b88a:	6818      	ldr	r0, [r3, #0]
 800b88c:	f107 0110 	add.w	r1, r7, #16
 800b890:	2300      	movs	r3, #0
 800b892:	2200      	movs	r2, #0
 800b894:	f7fe fb4a 	bl	8009f2c <xQueueGenericSend>
 800b898:	6278      	str	r0, [r7, #36]	@ 0x24
 800b89a:	e008      	b.n	800b8ae <xTimerGenericCommand+0x8e>
 800b89c:	4b06      	ldr	r3, [pc, #24]	@ (800b8b8 <xTimerGenericCommand+0x98>)
 800b89e:	6818      	ldr	r0, [r3, #0]
 800b8a0:	f107 0110 	add.w	r1, r7, #16
 800b8a4:	2300      	movs	r3, #0
 800b8a6:	683a      	ldr	r2, [r7, #0]
 800b8a8:	f7fe fc42 	bl	800a130 <xQueueGenericSendFromISR>
 800b8ac:	6278      	str	r0, [r7, #36]	@ 0x24
 800b8ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b8b0:	4618      	mov	r0, r3
 800b8b2:	3728      	adds	r7, #40	@ 0x28
 800b8b4:	46bd      	mov	sp, r7
 800b8b6:	bd80      	pop	{r7, pc}
 800b8b8:	2000174c 	.word	0x2000174c

0800b8bc <prvProcessExpiredTimer>:
 800b8bc:	b580      	push	{r7, lr}
 800b8be:	b088      	sub	sp, #32
 800b8c0:	af02      	add	r7, sp, #8
 800b8c2:	6078      	str	r0, [r7, #4]
 800b8c4:	6039      	str	r1, [r7, #0]
 800b8c6:	4b23      	ldr	r3, [pc, #140]	@ (800b954 <prvProcessExpiredTimer+0x98>)
 800b8c8:	681b      	ldr	r3, [r3, #0]
 800b8ca:	68db      	ldr	r3, [r3, #12]
 800b8cc:	68db      	ldr	r3, [r3, #12]
 800b8ce:	617b      	str	r3, [r7, #20]
 800b8d0:	697b      	ldr	r3, [r7, #20]
 800b8d2:	3304      	adds	r3, #4
 800b8d4:	4618      	mov	r0, r3
 800b8d6:	f7fe f9f5 	bl	8009cc4 <uxListRemove>
 800b8da:	697b      	ldr	r3, [r7, #20]
 800b8dc:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800b8e0:	f003 0304 	and.w	r3, r3, #4
 800b8e4:	2b00      	cmp	r3, #0
 800b8e6:	d023      	beq.n	800b930 <prvProcessExpiredTimer+0x74>
 800b8e8:	697b      	ldr	r3, [r7, #20]
 800b8ea:	699a      	ldr	r2, [r3, #24]
 800b8ec:	687b      	ldr	r3, [r7, #4]
 800b8ee:	18d1      	adds	r1, r2, r3
 800b8f0:	687b      	ldr	r3, [r7, #4]
 800b8f2:	683a      	ldr	r2, [r7, #0]
 800b8f4:	6978      	ldr	r0, [r7, #20]
 800b8f6:	f000 f8d5 	bl	800baa4 <prvInsertTimerInActiveList>
 800b8fa:	4603      	mov	r3, r0
 800b8fc:	2b00      	cmp	r3, #0
 800b8fe:	d020      	beq.n	800b942 <prvProcessExpiredTimer+0x86>
 800b900:	2300      	movs	r3, #0
 800b902:	9300      	str	r3, [sp, #0]
 800b904:	2300      	movs	r3, #0
 800b906:	687a      	ldr	r2, [r7, #4]
 800b908:	2100      	movs	r1, #0
 800b90a:	6978      	ldr	r0, [r7, #20]
 800b90c:	f7ff ff88 	bl	800b820 <xTimerGenericCommand>
 800b910:	6138      	str	r0, [r7, #16]
 800b912:	693b      	ldr	r3, [r7, #16]
 800b914:	2b00      	cmp	r3, #0
 800b916:	d114      	bne.n	800b942 <prvProcessExpiredTimer+0x86>
 800b918:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b91c:	f383 8811 	msr	BASEPRI, r3
 800b920:	f3bf 8f6f 	isb	sy
 800b924:	f3bf 8f4f 	dsb	sy
 800b928:	60fb      	str	r3, [r7, #12]
 800b92a:	bf00      	nop
 800b92c:	bf00      	nop
 800b92e:	e7fd      	b.n	800b92c <prvProcessExpiredTimer+0x70>
 800b930:	697b      	ldr	r3, [r7, #20]
 800b932:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800b936:	f023 0301 	bic.w	r3, r3, #1
 800b93a:	b2da      	uxtb	r2, r3
 800b93c:	697b      	ldr	r3, [r7, #20]
 800b93e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800b942:	697b      	ldr	r3, [r7, #20]
 800b944:	6a1b      	ldr	r3, [r3, #32]
 800b946:	6978      	ldr	r0, [r7, #20]
 800b948:	4798      	blx	r3
 800b94a:	bf00      	nop
 800b94c:	3718      	adds	r7, #24
 800b94e:	46bd      	mov	sp, r7
 800b950:	bd80      	pop	{r7, pc}
 800b952:	bf00      	nop
 800b954:	20001744 	.word	0x20001744

0800b958 <prvTimerTask>:
 800b958:	b580      	push	{r7, lr}
 800b95a:	b084      	sub	sp, #16
 800b95c:	af00      	add	r7, sp, #0
 800b95e:	6078      	str	r0, [r7, #4]
 800b960:	f107 0308 	add.w	r3, r7, #8
 800b964:	4618      	mov	r0, r3
 800b966:	f000 f859 	bl	800ba1c <prvGetNextExpireTime>
 800b96a:	60f8      	str	r0, [r7, #12]
 800b96c:	68bb      	ldr	r3, [r7, #8]
 800b96e:	4619      	mov	r1, r3
 800b970:	68f8      	ldr	r0, [r7, #12]
 800b972:	f000 f805 	bl	800b980 <prvProcessTimerOrBlockTask>
 800b976:	f000 f8d7 	bl	800bb28 <prvProcessReceivedCommands>
 800b97a:	bf00      	nop
 800b97c:	e7f0      	b.n	800b960 <prvTimerTask+0x8>
	...

0800b980 <prvProcessTimerOrBlockTask>:
 800b980:	b580      	push	{r7, lr}
 800b982:	b084      	sub	sp, #16
 800b984:	af00      	add	r7, sp, #0
 800b986:	6078      	str	r0, [r7, #4]
 800b988:	6039      	str	r1, [r7, #0]
 800b98a:	f7ff fa17 	bl	800adbc <vTaskSuspendAll>
 800b98e:	f107 0308 	add.w	r3, r7, #8
 800b992:	4618      	mov	r0, r3
 800b994:	f000 f866 	bl	800ba64 <prvSampleTimeNow>
 800b998:	60f8      	str	r0, [r7, #12]
 800b99a:	68bb      	ldr	r3, [r7, #8]
 800b99c:	2b00      	cmp	r3, #0
 800b99e:	d130      	bne.n	800ba02 <prvProcessTimerOrBlockTask+0x82>
 800b9a0:	683b      	ldr	r3, [r7, #0]
 800b9a2:	2b00      	cmp	r3, #0
 800b9a4:	d10a      	bne.n	800b9bc <prvProcessTimerOrBlockTask+0x3c>
 800b9a6:	687a      	ldr	r2, [r7, #4]
 800b9a8:	68fb      	ldr	r3, [r7, #12]
 800b9aa:	429a      	cmp	r2, r3
 800b9ac:	d806      	bhi.n	800b9bc <prvProcessTimerOrBlockTask+0x3c>
 800b9ae:	f7ff fa13 	bl	800add8 <xTaskResumeAll>
 800b9b2:	68f9      	ldr	r1, [r7, #12]
 800b9b4:	6878      	ldr	r0, [r7, #4]
 800b9b6:	f7ff ff81 	bl	800b8bc <prvProcessExpiredTimer>
 800b9ba:	e024      	b.n	800ba06 <prvProcessTimerOrBlockTask+0x86>
 800b9bc:	683b      	ldr	r3, [r7, #0]
 800b9be:	2b00      	cmp	r3, #0
 800b9c0:	d008      	beq.n	800b9d4 <prvProcessTimerOrBlockTask+0x54>
 800b9c2:	4b13      	ldr	r3, [pc, #76]	@ (800ba10 <prvProcessTimerOrBlockTask+0x90>)
 800b9c4:	681b      	ldr	r3, [r3, #0]
 800b9c6:	681b      	ldr	r3, [r3, #0]
 800b9c8:	2b00      	cmp	r3, #0
 800b9ca:	d101      	bne.n	800b9d0 <prvProcessTimerOrBlockTask+0x50>
 800b9cc:	2301      	movs	r3, #1
 800b9ce:	e000      	b.n	800b9d2 <prvProcessTimerOrBlockTask+0x52>
 800b9d0:	2300      	movs	r3, #0
 800b9d2:	603b      	str	r3, [r7, #0]
 800b9d4:	4b0f      	ldr	r3, [pc, #60]	@ (800ba14 <prvProcessTimerOrBlockTask+0x94>)
 800b9d6:	6818      	ldr	r0, [r3, #0]
 800b9d8:	687a      	ldr	r2, [r7, #4]
 800b9da:	68fb      	ldr	r3, [r7, #12]
 800b9dc:	1ad3      	subs	r3, r2, r3
 800b9de:	683a      	ldr	r2, [r7, #0]
 800b9e0:	4619      	mov	r1, r3
 800b9e2:	f7fe fe5f 	bl	800a6a4 <vQueueWaitForMessageRestricted>
 800b9e6:	f7ff f9f7 	bl	800add8 <xTaskResumeAll>
 800b9ea:	4603      	mov	r3, r0
 800b9ec:	2b00      	cmp	r3, #0
 800b9ee:	d10a      	bne.n	800ba06 <prvProcessTimerOrBlockTask+0x86>
 800b9f0:	4b09      	ldr	r3, [pc, #36]	@ (800ba18 <prvProcessTimerOrBlockTask+0x98>)
 800b9f2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b9f6:	601a      	str	r2, [r3, #0]
 800b9f8:	f3bf 8f4f 	dsb	sy
 800b9fc:	f3bf 8f6f 	isb	sy
 800ba00:	e001      	b.n	800ba06 <prvProcessTimerOrBlockTask+0x86>
 800ba02:	f7ff f9e9 	bl	800add8 <xTaskResumeAll>
 800ba06:	bf00      	nop
 800ba08:	3710      	adds	r7, #16
 800ba0a:	46bd      	mov	sp, r7
 800ba0c:	bd80      	pop	{r7, pc}
 800ba0e:	bf00      	nop
 800ba10:	20001748 	.word	0x20001748
 800ba14:	2000174c 	.word	0x2000174c
 800ba18:	e000ed04 	.word	0xe000ed04

0800ba1c <prvGetNextExpireTime>:
 800ba1c:	b480      	push	{r7}
 800ba1e:	b085      	sub	sp, #20
 800ba20:	af00      	add	r7, sp, #0
 800ba22:	6078      	str	r0, [r7, #4]
 800ba24:	4b0e      	ldr	r3, [pc, #56]	@ (800ba60 <prvGetNextExpireTime+0x44>)
 800ba26:	681b      	ldr	r3, [r3, #0]
 800ba28:	681b      	ldr	r3, [r3, #0]
 800ba2a:	2b00      	cmp	r3, #0
 800ba2c:	d101      	bne.n	800ba32 <prvGetNextExpireTime+0x16>
 800ba2e:	2201      	movs	r2, #1
 800ba30:	e000      	b.n	800ba34 <prvGetNextExpireTime+0x18>
 800ba32:	2200      	movs	r2, #0
 800ba34:	687b      	ldr	r3, [r7, #4]
 800ba36:	601a      	str	r2, [r3, #0]
 800ba38:	687b      	ldr	r3, [r7, #4]
 800ba3a:	681b      	ldr	r3, [r3, #0]
 800ba3c:	2b00      	cmp	r3, #0
 800ba3e:	d105      	bne.n	800ba4c <prvGetNextExpireTime+0x30>
 800ba40:	4b07      	ldr	r3, [pc, #28]	@ (800ba60 <prvGetNextExpireTime+0x44>)
 800ba42:	681b      	ldr	r3, [r3, #0]
 800ba44:	68db      	ldr	r3, [r3, #12]
 800ba46:	681b      	ldr	r3, [r3, #0]
 800ba48:	60fb      	str	r3, [r7, #12]
 800ba4a:	e001      	b.n	800ba50 <prvGetNextExpireTime+0x34>
 800ba4c:	2300      	movs	r3, #0
 800ba4e:	60fb      	str	r3, [r7, #12]
 800ba50:	68fb      	ldr	r3, [r7, #12]
 800ba52:	4618      	mov	r0, r3
 800ba54:	3714      	adds	r7, #20
 800ba56:	46bd      	mov	sp, r7
 800ba58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba5c:	4770      	bx	lr
 800ba5e:	bf00      	nop
 800ba60:	20001744 	.word	0x20001744

0800ba64 <prvSampleTimeNow>:
 800ba64:	b580      	push	{r7, lr}
 800ba66:	b084      	sub	sp, #16
 800ba68:	af00      	add	r7, sp, #0
 800ba6a:	6078      	str	r0, [r7, #4]
 800ba6c:	f7ff fa52 	bl	800af14 <xTaskGetTickCount>
 800ba70:	60f8      	str	r0, [r7, #12]
 800ba72:	4b0b      	ldr	r3, [pc, #44]	@ (800baa0 <prvSampleTimeNow+0x3c>)
 800ba74:	681b      	ldr	r3, [r3, #0]
 800ba76:	68fa      	ldr	r2, [r7, #12]
 800ba78:	429a      	cmp	r2, r3
 800ba7a:	d205      	bcs.n	800ba88 <prvSampleTimeNow+0x24>
 800ba7c:	f000 f93a 	bl	800bcf4 <prvSwitchTimerLists>
 800ba80:	687b      	ldr	r3, [r7, #4]
 800ba82:	2201      	movs	r2, #1
 800ba84:	601a      	str	r2, [r3, #0]
 800ba86:	e002      	b.n	800ba8e <prvSampleTimeNow+0x2a>
 800ba88:	687b      	ldr	r3, [r7, #4]
 800ba8a:	2200      	movs	r2, #0
 800ba8c:	601a      	str	r2, [r3, #0]
 800ba8e:	4a04      	ldr	r2, [pc, #16]	@ (800baa0 <prvSampleTimeNow+0x3c>)
 800ba90:	68fb      	ldr	r3, [r7, #12]
 800ba92:	6013      	str	r3, [r2, #0]
 800ba94:	68fb      	ldr	r3, [r7, #12]
 800ba96:	4618      	mov	r0, r3
 800ba98:	3710      	adds	r7, #16
 800ba9a:	46bd      	mov	sp, r7
 800ba9c:	bd80      	pop	{r7, pc}
 800ba9e:	bf00      	nop
 800baa0:	20001754 	.word	0x20001754

0800baa4 <prvInsertTimerInActiveList>:
 800baa4:	b580      	push	{r7, lr}
 800baa6:	b086      	sub	sp, #24
 800baa8:	af00      	add	r7, sp, #0
 800baaa:	60f8      	str	r0, [r7, #12]
 800baac:	60b9      	str	r1, [r7, #8]
 800baae:	607a      	str	r2, [r7, #4]
 800bab0:	603b      	str	r3, [r7, #0]
 800bab2:	2300      	movs	r3, #0
 800bab4:	617b      	str	r3, [r7, #20]
 800bab6:	68fb      	ldr	r3, [r7, #12]
 800bab8:	68ba      	ldr	r2, [r7, #8]
 800baba:	605a      	str	r2, [r3, #4]
 800babc:	68fb      	ldr	r3, [r7, #12]
 800babe:	68fa      	ldr	r2, [r7, #12]
 800bac0:	611a      	str	r2, [r3, #16]
 800bac2:	68ba      	ldr	r2, [r7, #8]
 800bac4:	687b      	ldr	r3, [r7, #4]
 800bac6:	429a      	cmp	r2, r3
 800bac8:	d812      	bhi.n	800baf0 <prvInsertTimerInActiveList+0x4c>
 800baca:	687a      	ldr	r2, [r7, #4]
 800bacc:	683b      	ldr	r3, [r7, #0]
 800bace:	1ad2      	subs	r2, r2, r3
 800bad0:	68fb      	ldr	r3, [r7, #12]
 800bad2:	699b      	ldr	r3, [r3, #24]
 800bad4:	429a      	cmp	r2, r3
 800bad6:	d302      	bcc.n	800bade <prvInsertTimerInActiveList+0x3a>
 800bad8:	2301      	movs	r3, #1
 800bada:	617b      	str	r3, [r7, #20]
 800badc:	e01b      	b.n	800bb16 <prvInsertTimerInActiveList+0x72>
 800bade:	4b10      	ldr	r3, [pc, #64]	@ (800bb20 <prvInsertTimerInActiveList+0x7c>)
 800bae0:	681a      	ldr	r2, [r3, #0]
 800bae2:	68fb      	ldr	r3, [r7, #12]
 800bae4:	3304      	adds	r3, #4
 800bae6:	4619      	mov	r1, r3
 800bae8:	4610      	mov	r0, r2
 800baea:	f7fe f8b2 	bl	8009c52 <vListInsert>
 800baee:	e012      	b.n	800bb16 <prvInsertTimerInActiveList+0x72>
 800baf0:	687a      	ldr	r2, [r7, #4]
 800baf2:	683b      	ldr	r3, [r7, #0]
 800baf4:	429a      	cmp	r2, r3
 800baf6:	d206      	bcs.n	800bb06 <prvInsertTimerInActiveList+0x62>
 800baf8:	68ba      	ldr	r2, [r7, #8]
 800bafa:	683b      	ldr	r3, [r7, #0]
 800bafc:	429a      	cmp	r2, r3
 800bafe:	d302      	bcc.n	800bb06 <prvInsertTimerInActiveList+0x62>
 800bb00:	2301      	movs	r3, #1
 800bb02:	617b      	str	r3, [r7, #20]
 800bb04:	e007      	b.n	800bb16 <prvInsertTimerInActiveList+0x72>
 800bb06:	4b07      	ldr	r3, [pc, #28]	@ (800bb24 <prvInsertTimerInActiveList+0x80>)
 800bb08:	681a      	ldr	r2, [r3, #0]
 800bb0a:	68fb      	ldr	r3, [r7, #12]
 800bb0c:	3304      	adds	r3, #4
 800bb0e:	4619      	mov	r1, r3
 800bb10:	4610      	mov	r0, r2
 800bb12:	f7fe f89e 	bl	8009c52 <vListInsert>
 800bb16:	697b      	ldr	r3, [r7, #20]
 800bb18:	4618      	mov	r0, r3
 800bb1a:	3718      	adds	r7, #24
 800bb1c:	46bd      	mov	sp, r7
 800bb1e:	bd80      	pop	{r7, pc}
 800bb20:	20001748 	.word	0x20001748
 800bb24:	20001744 	.word	0x20001744

0800bb28 <prvProcessReceivedCommands>:
 800bb28:	b580      	push	{r7, lr}
 800bb2a:	b08e      	sub	sp, #56	@ 0x38
 800bb2c:	af02      	add	r7, sp, #8
 800bb2e:	e0ce      	b.n	800bcce <prvProcessReceivedCommands+0x1a6>
 800bb30:	687b      	ldr	r3, [r7, #4]
 800bb32:	2b00      	cmp	r3, #0
 800bb34:	da19      	bge.n	800bb6a <prvProcessReceivedCommands+0x42>
 800bb36:	1d3b      	adds	r3, r7, #4
 800bb38:	3304      	adds	r3, #4
 800bb3a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800bb3c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800bb3e:	2b00      	cmp	r3, #0
 800bb40:	d10b      	bne.n	800bb5a <prvProcessReceivedCommands+0x32>
 800bb42:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bb46:	f383 8811 	msr	BASEPRI, r3
 800bb4a:	f3bf 8f6f 	isb	sy
 800bb4e:	f3bf 8f4f 	dsb	sy
 800bb52:	61fb      	str	r3, [r7, #28]
 800bb54:	bf00      	nop
 800bb56:	bf00      	nop
 800bb58:	e7fd      	b.n	800bb56 <prvProcessReceivedCommands+0x2e>
 800bb5a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800bb5c:	681b      	ldr	r3, [r3, #0]
 800bb5e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800bb60:	6850      	ldr	r0, [r2, #4]
 800bb62:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800bb64:	6892      	ldr	r2, [r2, #8]
 800bb66:	4611      	mov	r1, r2
 800bb68:	4798      	blx	r3
 800bb6a:	687b      	ldr	r3, [r7, #4]
 800bb6c:	2b00      	cmp	r3, #0
 800bb6e:	f2c0 80ae 	blt.w	800bcce <prvProcessReceivedCommands+0x1a6>
 800bb72:	68fb      	ldr	r3, [r7, #12]
 800bb74:	62bb      	str	r3, [r7, #40]	@ 0x28
 800bb76:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bb78:	695b      	ldr	r3, [r3, #20]
 800bb7a:	2b00      	cmp	r3, #0
 800bb7c:	d004      	beq.n	800bb88 <prvProcessReceivedCommands+0x60>
 800bb7e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bb80:	3304      	adds	r3, #4
 800bb82:	4618      	mov	r0, r3
 800bb84:	f7fe f89e 	bl	8009cc4 <uxListRemove>
 800bb88:	463b      	mov	r3, r7
 800bb8a:	4618      	mov	r0, r3
 800bb8c:	f7ff ff6a 	bl	800ba64 <prvSampleTimeNow>
 800bb90:	6278      	str	r0, [r7, #36]	@ 0x24
 800bb92:	687b      	ldr	r3, [r7, #4]
 800bb94:	2b09      	cmp	r3, #9
 800bb96:	f200 8097 	bhi.w	800bcc8 <prvProcessReceivedCommands+0x1a0>
 800bb9a:	a201      	add	r2, pc, #4	@ (adr r2, 800bba0 <prvProcessReceivedCommands+0x78>)
 800bb9c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bba0:	0800bbc9 	.word	0x0800bbc9
 800bba4:	0800bbc9 	.word	0x0800bbc9
 800bba8:	0800bbc9 	.word	0x0800bbc9
 800bbac:	0800bc3f 	.word	0x0800bc3f
 800bbb0:	0800bc53 	.word	0x0800bc53
 800bbb4:	0800bc9f 	.word	0x0800bc9f
 800bbb8:	0800bbc9 	.word	0x0800bbc9
 800bbbc:	0800bbc9 	.word	0x0800bbc9
 800bbc0:	0800bc3f 	.word	0x0800bc3f
 800bbc4:	0800bc53 	.word	0x0800bc53
 800bbc8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bbca:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800bbce:	f043 0301 	orr.w	r3, r3, #1
 800bbd2:	b2da      	uxtb	r2, r3
 800bbd4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bbd6:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800bbda:	68ba      	ldr	r2, [r7, #8]
 800bbdc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bbde:	699b      	ldr	r3, [r3, #24]
 800bbe0:	18d1      	adds	r1, r2, r3
 800bbe2:	68bb      	ldr	r3, [r7, #8]
 800bbe4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800bbe6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800bbe8:	f7ff ff5c 	bl	800baa4 <prvInsertTimerInActiveList>
 800bbec:	4603      	mov	r3, r0
 800bbee:	2b00      	cmp	r3, #0
 800bbf0:	d06c      	beq.n	800bccc <prvProcessReceivedCommands+0x1a4>
 800bbf2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bbf4:	6a1b      	ldr	r3, [r3, #32]
 800bbf6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800bbf8:	4798      	blx	r3
 800bbfa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bbfc:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800bc00:	f003 0304 	and.w	r3, r3, #4
 800bc04:	2b00      	cmp	r3, #0
 800bc06:	d061      	beq.n	800bccc <prvProcessReceivedCommands+0x1a4>
 800bc08:	68ba      	ldr	r2, [r7, #8]
 800bc0a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bc0c:	699b      	ldr	r3, [r3, #24]
 800bc0e:	441a      	add	r2, r3
 800bc10:	2300      	movs	r3, #0
 800bc12:	9300      	str	r3, [sp, #0]
 800bc14:	2300      	movs	r3, #0
 800bc16:	2100      	movs	r1, #0
 800bc18:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800bc1a:	f7ff fe01 	bl	800b820 <xTimerGenericCommand>
 800bc1e:	6238      	str	r0, [r7, #32]
 800bc20:	6a3b      	ldr	r3, [r7, #32]
 800bc22:	2b00      	cmp	r3, #0
 800bc24:	d152      	bne.n	800bccc <prvProcessReceivedCommands+0x1a4>
 800bc26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bc2a:	f383 8811 	msr	BASEPRI, r3
 800bc2e:	f3bf 8f6f 	isb	sy
 800bc32:	f3bf 8f4f 	dsb	sy
 800bc36:	61bb      	str	r3, [r7, #24]
 800bc38:	bf00      	nop
 800bc3a:	bf00      	nop
 800bc3c:	e7fd      	b.n	800bc3a <prvProcessReceivedCommands+0x112>
 800bc3e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bc40:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800bc44:	f023 0301 	bic.w	r3, r3, #1
 800bc48:	b2da      	uxtb	r2, r3
 800bc4a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bc4c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800bc50:	e03d      	b.n	800bcce <prvProcessReceivedCommands+0x1a6>
 800bc52:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bc54:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800bc58:	f043 0301 	orr.w	r3, r3, #1
 800bc5c:	b2da      	uxtb	r2, r3
 800bc5e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bc60:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800bc64:	68ba      	ldr	r2, [r7, #8]
 800bc66:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bc68:	619a      	str	r2, [r3, #24]
 800bc6a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bc6c:	699b      	ldr	r3, [r3, #24]
 800bc6e:	2b00      	cmp	r3, #0
 800bc70:	d10b      	bne.n	800bc8a <prvProcessReceivedCommands+0x162>
 800bc72:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bc76:	f383 8811 	msr	BASEPRI, r3
 800bc7a:	f3bf 8f6f 	isb	sy
 800bc7e:	f3bf 8f4f 	dsb	sy
 800bc82:	617b      	str	r3, [r7, #20]
 800bc84:	bf00      	nop
 800bc86:	bf00      	nop
 800bc88:	e7fd      	b.n	800bc86 <prvProcessReceivedCommands+0x15e>
 800bc8a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bc8c:	699a      	ldr	r2, [r3, #24]
 800bc8e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bc90:	18d1      	adds	r1, r2, r3
 800bc92:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bc94:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800bc96:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800bc98:	f7ff ff04 	bl	800baa4 <prvInsertTimerInActiveList>
 800bc9c:	e017      	b.n	800bcce <prvProcessReceivedCommands+0x1a6>
 800bc9e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bca0:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800bca4:	f003 0302 	and.w	r3, r3, #2
 800bca8:	2b00      	cmp	r3, #0
 800bcaa:	d103      	bne.n	800bcb4 <prvProcessReceivedCommands+0x18c>
 800bcac:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800bcae:	f000 fbeb 	bl	800c488 <vPortFree>
 800bcb2:	e00c      	b.n	800bcce <prvProcessReceivedCommands+0x1a6>
 800bcb4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bcb6:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800bcba:	f023 0301 	bic.w	r3, r3, #1
 800bcbe:	b2da      	uxtb	r2, r3
 800bcc0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bcc2:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800bcc6:	e002      	b.n	800bcce <prvProcessReceivedCommands+0x1a6>
 800bcc8:	bf00      	nop
 800bcca:	e000      	b.n	800bcce <prvProcessReceivedCommands+0x1a6>
 800bccc:	bf00      	nop
 800bcce:	4b08      	ldr	r3, [pc, #32]	@ (800bcf0 <prvProcessReceivedCommands+0x1c8>)
 800bcd0:	681b      	ldr	r3, [r3, #0]
 800bcd2:	1d39      	adds	r1, r7, #4
 800bcd4:	2200      	movs	r2, #0
 800bcd6:	4618      	mov	r0, r3
 800bcd8:	f7fe fac8 	bl	800a26c <xQueueReceive>
 800bcdc:	4603      	mov	r3, r0
 800bcde:	2b00      	cmp	r3, #0
 800bce0:	f47f af26 	bne.w	800bb30 <prvProcessReceivedCommands+0x8>
 800bce4:	bf00      	nop
 800bce6:	bf00      	nop
 800bce8:	3730      	adds	r7, #48	@ 0x30
 800bcea:	46bd      	mov	sp, r7
 800bcec:	bd80      	pop	{r7, pc}
 800bcee:	bf00      	nop
 800bcf0:	2000174c 	.word	0x2000174c

0800bcf4 <prvSwitchTimerLists>:
 800bcf4:	b580      	push	{r7, lr}
 800bcf6:	b088      	sub	sp, #32
 800bcf8:	af02      	add	r7, sp, #8
 800bcfa:	e049      	b.n	800bd90 <prvSwitchTimerLists+0x9c>
 800bcfc:	4b2e      	ldr	r3, [pc, #184]	@ (800bdb8 <prvSwitchTimerLists+0xc4>)
 800bcfe:	681b      	ldr	r3, [r3, #0]
 800bd00:	68db      	ldr	r3, [r3, #12]
 800bd02:	681b      	ldr	r3, [r3, #0]
 800bd04:	613b      	str	r3, [r7, #16]
 800bd06:	4b2c      	ldr	r3, [pc, #176]	@ (800bdb8 <prvSwitchTimerLists+0xc4>)
 800bd08:	681b      	ldr	r3, [r3, #0]
 800bd0a:	68db      	ldr	r3, [r3, #12]
 800bd0c:	68db      	ldr	r3, [r3, #12]
 800bd0e:	60fb      	str	r3, [r7, #12]
 800bd10:	68fb      	ldr	r3, [r7, #12]
 800bd12:	3304      	adds	r3, #4
 800bd14:	4618      	mov	r0, r3
 800bd16:	f7fd ffd5 	bl	8009cc4 <uxListRemove>
 800bd1a:	68fb      	ldr	r3, [r7, #12]
 800bd1c:	6a1b      	ldr	r3, [r3, #32]
 800bd1e:	68f8      	ldr	r0, [r7, #12]
 800bd20:	4798      	blx	r3
 800bd22:	68fb      	ldr	r3, [r7, #12]
 800bd24:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800bd28:	f003 0304 	and.w	r3, r3, #4
 800bd2c:	2b00      	cmp	r3, #0
 800bd2e:	d02f      	beq.n	800bd90 <prvSwitchTimerLists+0x9c>
 800bd30:	68fb      	ldr	r3, [r7, #12]
 800bd32:	699b      	ldr	r3, [r3, #24]
 800bd34:	693a      	ldr	r2, [r7, #16]
 800bd36:	4413      	add	r3, r2
 800bd38:	60bb      	str	r3, [r7, #8]
 800bd3a:	68ba      	ldr	r2, [r7, #8]
 800bd3c:	693b      	ldr	r3, [r7, #16]
 800bd3e:	429a      	cmp	r2, r3
 800bd40:	d90e      	bls.n	800bd60 <prvSwitchTimerLists+0x6c>
 800bd42:	68fb      	ldr	r3, [r7, #12]
 800bd44:	68ba      	ldr	r2, [r7, #8]
 800bd46:	605a      	str	r2, [r3, #4]
 800bd48:	68fb      	ldr	r3, [r7, #12]
 800bd4a:	68fa      	ldr	r2, [r7, #12]
 800bd4c:	611a      	str	r2, [r3, #16]
 800bd4e:	4b1a      	ldr	r3, [pc, #104]	@ (800bdb8 <prvSwitchTimerLists+0xc4>)
 800bd50:	681a      	ldr	r2, [r3, #0]
 800bd52:	68fb      	ldr	r3, [r7, #12]
 800bd54:	3304      	adds	r3, #4
 800bd56:	4619      	mov	r1, r3
 800bd58:	4610      	mov	r0, r2
 800bd5a:	f7fd ff7a 	bl	8009c52 <vListInsert>
 800bd5e:	e017      	b.n	800bd90 <prvSwitchTimerLists+0x9c>
 800bd60:	2300      	movs	r3, #0
 800bd62:	9300      	str	r3, [sp, #0]
 800bd64:	2300      	movs	r3, #0
 800bd66:	693a      	ldr	r2, [r7, #16]
 800bd68:	2100      	movs	r1, #0
 800bd6a:	68f8      	ldr	r0, [r7, #12]
 800bd6c:	f7ff fd58 	bl	800b820 <xTimerGenericCommand>
 800bd70:	6078      	str	r0, [r7, #4]
 800bd72:	687b      	ldr	r3, [r7, #4]
 800bd74:	2b00      	cmp	r3, #0
 800bd76:	d10b      	bne.n	800bd90 <prvSwitchTimerLists+0x9c>
 800bd78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bd7c:	f383 8811 	msr	BASEPRI, r3
 800bd80:	f3bf 8f6f 	isb	sy
 800bd84:	f3bf 8f4f 	dsb	sy
 800bd88:	603b      	str	r3, [r7, #0]
 800bd8a:	bf00      	nop
 800bd8c:	bf00      	nop
 800bd8e:	e7fd      	b.n	800bd8c <prvSwitchTimerLists+0x98>
 800bd90:	4b09      	ldr	r3, [pc, #36]	@ (800bdb8 <prvSwitchTimerLists+0xc4>)
 800bd92:	681b      	ldr	r3, [r3, #0]
 800bd94:	681b      	ldr	r3, [r3, #0]
 800bd96:	2b00      	cmp	r3, #0
 800bd98:	d1b0      	bne.n	800bcfc <prvSwitchTimerLists+0x8>
 800bd9a:	4b07      	ldr	r3, [pc, #28]	@ (800bdb8 <prvSwitchTimerLists+0xc4>)
 800bd9c:	681b      	ldr	r3, [r3, #0]
 800bd9e:	617b      	str	r3, [r7, #20]
 800bda0:	4b06      	ldr	r3, [pc, #24]	@ (800bdbc <prvSwitchTimerLists+0xc8>)
 800bda2:	681b      	ldr	r3, [r3, #0]
 800bda4:	4a04      	ldr	r2, [pc, #16]	@ (800bdb8 <prvSwitchTimerLists+0xc4>)
 800bda6:	6013      	str	r3, [r2, #0]
 800bda8:	4a04      	ldr	r2, [pc, #16]	@ (800bdbc <prvSwitchTimerLists+0xc8>)
 800bdaa:	697b      	ldr	r3, [r7, #20]
 800bdac:	6013      	str	r3, [r2, #0]
 800bdae:	bf00      	nop
 800bdb0:	3718      	adds	r7, #24
 800bdb2:	46bd      	mov	sp, r7
 800bdb4:	bd80      	pop	{r7, pc}
 800bdb6:	bf00      	nop
 800bdb8:	20001744 	.word	0x20001744
 800bdbc:	20001748 	.word	0x20001748

0800bdc0 <prvCheckForValidListAndQueue>:
 800bdc0:	b580      	push	{r7, lr}
 800bdc2:	b082      	sub	sp, #8
 800bdc4:	af02      	add	r7, sp, #8
 800bdc6:	f000 f96f 	bl	800c0a8 <vPortEnterCritical>
 800bdca:	4b15      	ldr	r3, [pc, #84]	@ (800be20 <prvCheckForValidListAndQueue+0x60>)
 800bdcc:	681b      	ldr	r3, [r3, #0]
 800bdce:	2b00      	cmp	r3, #0
 800bdd0:	d120      	bne.n	800be14 <prvCheckForValidListAndQueue+0x54>
 800bdd2:	4814      	ldr	r0, [pc, #80]	@ (800be24 <prvCheckForValidListAndQueue+0x64>)
 800bdd4:	f7fd feec 	bl	8009bb0 <vListInitialise>
 800bdd8:	4813      	ldr	r0, [pc, #76]	@ (800be28 <prvCheckForValidListAndQueue+0x68>)
 800bdda:	f7fd fee9 	bl	8009bb0 <vListInitialise>
 800bdde:	4b13      	ldr	r3, [pc, #76]	@ (800be2c <prvCheckForValidListAndQueue+0x6c>)
 800bde0:	4a10      	ldr	r2, [pc, #64]	@ (800be24 <prvCheckForValidListAndQueue+0x64>)
 800bde2:	601a      	str	r2, [r3, #0]
 800bde4:	4b12      	ldr	r3, [pc, #72]	@ (800be30 <prvCheckForValidListAndQueue+0x70>)
 800bde6:	4a10      	ldr	r2, [pc, #64]	@ (800be28 <prvCheckForValidListAndQueue+0x68>)
 800bde8:	601a      	str	r2, [r3, #0]
 800bdea:	2300      	movs	r3, #0
 800bdec:	9300      	str	r3, [sp, #0]
 800bdee:	4b11      	ldr	r3, [pc, #68]	@ (800be34 <prvCheckForValidListAndQueue+0x74>)
 800bdf0:	4a11      	ldr	r2, [pc, #68]	@ (800be38 <prvCheckForValidListAndQueue+0x78>)
 800bdf2:	2110      	movs	r1, #16
 800bdf4:	200a      	movs	r0, #10
 800bdf6:	f7fd fff9 	bl	8009dec <xQueueGenericCreateStatic>
 800bdfa:	4603      	mov	r3, r0
 800bdfc:	4a08      	ldr	r2, [pc, #32]	@ (800be20 <prvCheckForValidListAndQueue+0x60>)
 800bdfe:	6013      	str	r3, [r2, #0]
 800be00:	4b07      	ldr	r3, [pc, #28]	@ (800be20 <prvCheckForValidListAndQueue+0x60>)
 800be02:	681b      	ldr	r3, [r3, #0]
 800be04:	2b00      	cmp	r3, #0
 800be06:	d005      	beq.n	800be14 <prvCheckForValidListAndQueue+0x54>
 800be08:	4b05      	ldr	r3, [pc, #20]	@ (800be20 <prvCheckForValidListAndQueue+0x60>)
 800be0a:	681b      	ldr	r3, [r3, #0]
 800be0c:	490b      	ldr	r1, [pc, #44]	@ (800be3c <prvCheckForValidListAndQueue+0x7c>)
 800be0e:	4618      	mov	r0, r3
 800be10:	f7fe fc1e 	bl	800a650 <vQueueAddToRegistry>
 800be14:	f000 f97a 	bl	800c10c <vPortExitCritical>
 800be18:	bf00      	nop
 800be1a:	46bd      	mov	sp, r7
 800be1c:	bd80      	pop	{r7, pc}
 800be1e:	bf00      	nop
 800be20:	2000174c 	.word	0x2000174c
 800be24:	2000171c 	.word	0x2000171c
 800be28:	20001730 	.word	0x20001730
 800be2c:	20001744 	.word	0x20001744
 800be30:	20001748 	.word	0x20001748
 800be34:	200017f8 	.word	0x200017f8
 800be38:	20001758 	.word	0x20001758
 800be3c:	0800c940 	.word	0x0800c940

0800be40 <pxPortInitialiseStack>:
 800be40:	b480      	push	{r7}
 800be42:	b085      	sub	sp, #20
 800be44:	af00      	add	r7, sp, #0
 800be46:	60f8      	str	r0, [r7, #12]
 800be48:	60b9      	str	r1, [r7, #8]
 800be4a:	607a      	str	r2, [r7, #4]
 800be4c:	68fb      	ldr	r3, [r7, #12]
 800be4e:	3b04      	subs	r3, #4
 800be50:	60fb      	str	r3, [r7, #12]
 800be52:	68fb      	ldr	r3, [r7, #12]
 800be54:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800be58:	601a      	str	r2, [r3, #0]
 800be5a:	68fb      	ldr	r3, [r7, #12]
 800be5c:	3b04      	subs	r3, #4
 800be5e:	60fb      	str	r3, [r7, #12]
 800be60:	68bb      	ldr	r3, [r7, #8]
 800be62:	f023 0201 	bic.w	r2, r3, #1
 800be66:	68fb      	ldr	r3, [r7, #12]
 800be68:	601a      	str	r2, [r3, #0]
 800be6a:	68fb      	ldr	r3, [r7, #12]
 800be6c:	3b04      	subs	r3, #4
 800be6e:	60fb      	str	r3, [r7, #12]
 800be70:	4a0c      	ldr	r2, [pc, #48]	@ (800bea4 <pxPortInitialiseStack+0x64>)
 800be72:	68fb      	ldr	r3, [r7, #12]
 800be74:	601a      	str	r2, [r3, #0]
 800be76:	68fb      	ldr	r3, [r7, #12]
 800be78:	3b14      	subs	r3, #20
 800be7a:	60fb      	str	r3, [r7, #12]
 800be7c:	687a      	ldr	r2, [r7, #4]
 800be7e:	68fb      	ldr	r3, [r7, #12]
 800be80:	601a      	str	r2, [r3, #0]
 800be82:	68fb      	ldr	r3, [r7, #12]
 800be84:	3b04      	subs	r3, #4
 800be86:	60fb      	str	r3, [r7, #12]
 800be88:	68fb      	ldr	r3, [r7, #12]
 800be8a:	f06f 0202 	mvn.w	r2, #2
 800be8e:	601a      	str	r2, [r3, #0]
 800be90:	68fb      	ldr	r3, [r7, #12]
 800be92:	3b20      	subs	r3, #32
 800be94:	60fb      	str	r3, [r7, #12]
 800be96:	68fb      	ldr	r3, [r7, #12]
 800be98:	4618      	mov	r0, r3
 800be9a:	3714      	adds	r7, #20
 800be9c:	46bd      	mov	sp, r7
 800be9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bea2:	4770      	bx	lr
 800bea4:	0800bea9 	.word	0x0800bea9

0800bea8 <prvTaskExitError>:
 800bea8:	b480      	push	{r7}
 800beaa:	b085      	sub	sp, #20
 800beac:	af00      	add	r7, sp, #0
 800beae:	2300      	movs	r3, #0
 800beb0:	607b      	str	r3, [r7, #4]
 800beb2:	4b13      	ldr	r3, [pc, #76]	@ (800bf00 <prvTaskExitError+0x58>)
 800beb4:	681b      	ldr	r3, [r3, #0]
 800beb6:	f1b3 3fff 	cmp.w	r3, #4294967295
 800beba:	d00b      	beq.n	800bed4 <prvTaskExitError+0x2c>
 800bebc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bec0:	f383 8811 	msr	BASEPRI, r3
 800bec4:	f3bf 8f6f 	isb	sy
 800bec8:	f3bf 8f4f 	dsb	sy
 800becc:	60fb      	str	r3, [r7, #12]
 800bece:	bf00      	nop
 800bed0:	bf00      	nop
 800bed2:	e7fd      	b.n	800bed0 <prvTaskExitError+0x28>
 800bed4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bed8:	f383 8811 	msr	BASEPRI, r3
 800bedc:	f3bf 8f6f 	isb	sy
 800bee0:	f3bf 8f4f 	dsb	sy
 800bee4:	60bb      	str	r3, [r7, #8]
 800bee6:	bf00      	nop
 800bee8:	bf00      	nop
 800beea:	687b      	ldr	r3, [r7, #4]
 800beec:	2b00      	cmp	r3, #0
 800beee:	d0fc      	beq.n	800beea <prvTaskExitError+0x42>
 800bef0:	bf00      	nop
 800bef2:	bf00      	nop
 800bef4:	3714      	adds	r7, #20
 800bef6:	46bd      	mov	sp, r7
 800bef8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800befc:	4770      	bx	lr
 800befe:	bf00      	nop
 800bf00:	2000024c 	.word	0x2000024c
	...

0800bf10 <SVC_Handler>:
 800bf10:	4b07      	ldr	r3, [pc, #28]	@ (800bf30 <pxCurrentTCBConst2>)
 800bf12:	6819      	ldr	r1, [r3, #0]
 800bf14:	6808      	ldr	r0, [r1, #0]
 800bf16:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf1a:	f380 8809 	msr	PSP, r0
 800bf1e:	f3bf 8f6f 	isb	sy
 800bf22:	f04f 0000 	mov.w	r0, #0
 800bf26:	f380 8811 	msr	BASEPRI, r0
 800bf2a:	4770      	bx	lr
 800bf2c:	f3af 8000 	nop.w

0800bf30 <pxCurrentTCBConst2>:
 800bf30:	2000121c 	.word	0x2000121c
 800bf34:	bf00      	nop
 800bf36:	bf00      	nop

0800bf38 <prvPortStartFirstTask>:
 800bf38:	4808      	ldr	r0, [pc, #32]	@ (800bf5c <prvPortStartFirstTask+0x24>)
 800bf3a:	6800      	ldr	r0, [r0, #0]
 800bf3c:	6800      	ldr	r0, [r0, #0]
 800bf3e:	f380 8808 	msr	MSP, r0
 800bf42:	f04f 0000 	mov.w	r0, #0
 800bf46:	f380 8814 	msr	CONTROL, r0
 800bf4a:	b662      	cpsie	i
 800bf4c:	b661      	cpsie	f
 800bf4e:	f3bf 8f4f 	dsb	sy
 800bf52:	f3bf 8f6f 	isb	sy
 800bf56:	df00      	svc	0
 800bf58:	bf00      	nop
 800bf5a:	bf00      	nop
 800bf5c:	e000ed08 	.word	0xe000ed08

0800bf60 <xPortStartScheduler>:
 800bf60:	b580      	push	{r7, lr}
 800bf62:	b086      	sub	sp, #24
 800bf64:	af00      	add	r7, sp, #0
 800bf66:	4b47      	ldr	r3, [pc, #284]	@ (800c084 <xPortStartScheduler+0x124>)
 800bf68:	681b      	ldr	r3, [r3, #0]
 800bf6a:	4a47      	ldr	r2, [pc, #284]	@ (800c088 <xPortStartScheduler+0x128>)
 800bf6c:	4293      	cmp	r3, r2
 800bf6e:	d10b      	bne.n	800bf88 <xPortStartScheduler+0x28>
 800bf70:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bf74:	f383 8811 	msr	BASEPRI, r3
 800bf78:	f3bf 8f6f 	isb	sy
 800bf7c:	f3bf 8f4f 	dsb	sy
 800bf80:	60fb      	str	r3, [r7, #12]
 800bf82:	bf00      	nop
 800bf84:	bf00      	nop
 800bf86:	e7fd      	b.n	800bf84 <xPortStartScheduler+0x24>
 800bf88:	4b3e      	ldr	r3, [pc, #248]	@ (800c084 <xPortStartScheduler+0x124>)
 800bf8a:	681b      	ldr	r3, [r3, #0]
 800bf8c:	4a3f      	ldr	r2, [pc, #252]	@ (800c08c <xPortStartScheduler+0x12c>)
 800bf8e:	4293      	cmp	r3, r2
 800bf90:	d10b      	bne.n	800bfaa <xPortStartScheduler+0x4a>
 800bf92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bf96:	f383 8811 	msr	BASEPRI, r3
 800bf9a:	f3bf 8f6f 	isb	sy
 800bf9e:	f3bf 8f4f 	dsb	sy
 800bfa2:	613b      	str	r3, [r7, #16]
 800bfa4:	bf00      	nop
 800bfa6:	bf00      	nop
 800bfa8:	e7fd      	b.n	800bfa6 <xPortStartScheduler+0x46>
 800bfaa:	4b39      	ldr	r3, [pc, #228]	@ (800c090 <xPortStartScheduler+0x130>)
 800bfac:	617b      	str	r3, [r7, #20]
 800bfae:	697b      	ldr	r3, [r7, #20]
 800bfb0:	781b      	ldrb	r3, [r3, #0]
 800bfb2:	b2db      	uxtb	r3, r3
 800bfb4:	607b      	str	r3, [r7, #4]
 800bfb6:	697b      	ldr	r3, [r7, #20]
 800bfb8:	22ff      	movs	r2, #255	@ 0xff
 800bfba:	701a      	strb	r2, [r3, #0]
 800bfbc:	697b      	ldr	r3, [r7, #20]
 800bfbe:	781b      	ldrb	r3, [r3, #0]
 800bfc0:	b2db      	uxtb	r3, r3
 800bfc2:	70fb      	strb	r3, [r7, #3]
 800bfc4:	78fb      	ldrb	r3, [r7, #3]
 800bfc6:	b2db      	uxtb	r3, r3
 800bfc8:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800bfcc:	b2da      	uxtb	r2, r3
 800bfce:	4b31      	ldr	r3, [pc, #196]	@ (800c094 <xPortStartScheduler+0x134>)
 800bfd0:	701a      	strb	r2, [r3, #0]
 800bfd2:	4b31      	ldr	r3, [pc, #196]	@ (800c098 <xPortStartScheduler+0x138>)
 800bfd4:	2207      	movs	r2, #7
 800bfd6:	601a      	str	r2, [r3, #0]
 800bfd8:	e009      	b.n	800bfee <xPortStartScheduler+0x8e>
 800bfda:	4b2f      	ldr	r3, [pc, #188]	@ (800c098 <xPortStartScheduler+0x138>)
 800bfdc:	681b      	ldr	r3, [r3, #0]
 800bfde:	3b01      	subs	r3, #1
 800bfe0:	4a2d      	ldr	r2, [pc, #180]	@ (800c098 <xPortStartScheduler+0x138>)
 800bfe2:	6013      	str	r3, [r2, #0]
 800bfe4:	78fb      	ldrb	r3, [r7, #3]
 800bfe6:	b2db      	uxtb	r3, r3
 800bfe8:	005b      	lsls	r3, r3, #1
 800bfea:	b2db      	uxtb	r3, r3
 800bfec:	70fb      	strb	r3, [r7, #3]
 800bfee:	78fb      	ldrb	r3, [r7, #3]
 800bff0:	b2db      	uxtb	r3, r3
 800bff2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800bff6:	2b80      	cmp	r3, #128	@ 0x80
 800bff8:	d0ef      	beq.n	800bfda <xPortStartScheduler+0x7a>
 800bffa:	4b27      	ldr	r3, [pc, #156]	@ (800c098 <xPortStartScheduler+0x138>)
 800bffc:	681b      	ldr	r3, [r3, #0]
 800bffe:	f1c3 0307 	rsb	r3, r3, #7
 800c002:	2b04      	cmp	r3, #4
 800c004:	d00b      	beq.n	800c01e <xPortStartScheduler+0xbe>
 800c006:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c00a:	f383 8811 	msr	BASEPRI, r3
 800c00e:	f3bf 8f6f 	isb	sy
 800c012:	f3bf 8f4f 	dsb	sy
 800c016:	60bb      	str	r3, [r7, #8]
 800c018:	bf00      	nop
 800c01a:	bf00      	nop
 800c01c:	e7fd      	b.n	800c01a <xPortStartScheduler+0xba>
 800c01e:	4b1e      	ldr	r3, [pc, #120]	@ (800c098 <xPortStartScheduler+0x138>)
 800c020:	681b      	ldr	r3, [r3, #0]
 800c022:	021b      	lsls	r3, r3, #8
 800c024:	4a1c      	ldr	r2, [pc, #112]	@ (800c098 <xPortStartScheduler+0x138>)
 800c026:	6013      	str	r3, [r2, #0]
 800c028:	4b1b      	ldr	r3, [pc, #108]	@ (800c098 <xPortStartScheduler+0x138>)
 800c02a:	681b      	ldr	r3, [r3, #0]
 800c02c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800c030:	4a19      	ldr	r2, [pc, #100]	@ (800c098 <xPortStartScheduler+0x138>)
 800c032:	6013      	str	r3, [r2, #0]
 800c034:	687b      	ldr	r3, [r7, #4]
 800c036:	b2da      	uxtb	r2, r3
 800c038:	697b      	ldr	r3, [r7, #20]
 800c03a:	701a      	strb	r2, [r3, #0]
 800c03c:	4b17      	ldr	r3, [pc, #92]	@ (800c09c <xPortStartScheduler+0x13c>)
 800c03e:	681b      	ldr	r3, [r3, #0]
 800c040:	4a16      	ldr	r2, [pc, #88]	@ (800c09c <xPortStartScheduler+0x13c>)
 800c042:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800c046:	6013      	str	r3, [r2, #0]
 800c048:	4b14      	ldr	r3, [pc, #80]	@ (800c09c <xPortStartScheduler+0x13c>)
 800c04a:	681b      	ldr	r3, [r3, #0]
 800c04c:	4a13      	ldr	r2, [pc, #76]	@ (800c09c <xPortStartScheduler+0x13c>)
 800c04e:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800c052:	6013      	str	r3, [r2, #0]
 800c054:	f000 f8da 	bl	800c20c <vPortSetupTimerInterrupt>
 800c058:	4b11      	ldr	r3, [pc, #68]	@ (800c0a0 <xPortStartScheduler+0x140>)
 800c05a:	2200      	movs	r2, #0
 800c05c:	601a      	str	r2, [r3, #0]
 800c05e:	f000 f8f9 	bl	800c254 <vPortEnableVFP>
 800c062:	4b10      	ldr	r3, [pc, #64]	@ (800c0a4 <xPortStartScheduler+0x144>)
 800c064:	681b      	ldr	r3, [r3, #0]
 800c066:	4a0f      	ldr	r2, [pc, #60]	@ (800c0a4 <xPortStartScheduler+0x144>)
 800c068:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800c06c:	6013      	str	r3, [r2, #0]
 800c06e:	f7ff ff63 	bl	800bf38 <prvPortStartFirstTask>
 800c072:	f7ff f82b 	bl	800b0cc <vTaskSwitchContext>
 800c076:	f7ff ff17 	bl	800bea8 <prvTaskExitError>
 800c07a:	2300      	movs	r3, #0
 800c07c:	4618      	mov	r0, r3
 800c07e:	3718      	adds	r7, #24
 800c080:	46bd      	mov	sp, r7
 800c082:	bd80      	pop	{r7, pc}
 800c084:	e000ed00 	.word	0xe000ed00
 800c088:	410fc271 	.word	0x410fc271
 800c08c:	410fc270 	.word	0x410fc270
 800c090:	e000e400 	.word	0xe000e400
 800c094:	20001848 	.word	0x20001848
 800c098:	2000184c 	.word	0x2000184c
 800c09c:	e000ed20 	.word	0xe000ed20
 800c0a0:	2000024c 	.word	0x2000024c
 800c0a4:	e000ef34 	.word	0xe000ef34

0800c0a8 <vPortEnterCritical>:
 800c0a8:	b480      	push	{r7}
 800c0aa:	b083      	sub	sp, #12
 800c0ac:	af00      	add	r7, sp, #0
 800c0ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c0b2:	f383 8811 	msr	BASEPRI, r3
 800c0b6:	f3bf 8f6f 	isb	sy
 800c0ba:	f3bf 8f4f 	dsb	sy
 800c0be:	607b      	str	r3, [r7, #4]
 800c0c0:	bf00      	nop
 800c0c2:	4b10      	ldr	r3, [pc, #64]	@ (800c104 <vPortEnterCritical+0x5c>)
 800c0c4:	681b      	ldr	r3, [r3, #0]
 800c0c6:	3301      	adds	r3, #1
 800c0c8:	4a0e      	ldr	r2, [pc, #56]	@ (800c104 <vPortEnterCritical+0x5c>)
 800c0ca:	6013      	str	r3, [r2, #0]
 800c0cc:	4b0d      	ldr	r3, [pc, #52]	@ (800c104 <vPortEnterCritical+0x5c>)
 800c0ce:	681b      	ldr	r3, [r3, #0]
 800c0d0:	2b01      	cmp	r3, #1
 800c0d2:	d110      	bne.n	800c0f6 <vPortEnterCritical+0x4e>
 800c0d4:	4b0c      	ldr	r3, [pc, #48]	@ (800c108 <vPortEnterCritical+0x60>)
 800c0d6:	681b      	ldr	r3, [r3, #0]
 800c0d8:	b2db      	uxtb	r3, r3
 800c0da:	2b00      	cmp	r3, #0
 800c0dc:	d00b      	beq.n	800c0f6 <vPortEnterCritical+0x4e>
 800c0de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c0e2:	f383 8811 	msr	BASEPRI, r3
 800c0e6:	f3bf 8f6f 	isb	sy
 800c0ea:	f3bf 8f4f 	dsb	sy
 800c0ee:	603b      	str	r3, [r7, #0]
 800c0f0:	bf00      	nop
 800c0f2:	bf00      	nop
 800c0f4:	e7fd      	b.n	800c0f2 <vPortEnterCritical+0x4a>
 800c0f6:	bf00      	nop
 800c0f8:	370c      	adds	r7, #12
 800c0fa:	46bd      	mov	sp, r7
 800c0fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c100:	4770      	bx	lr
 800c102:	bf00      	nop
 800c104:	2000024c 	.word	0x2000024c
 800c108:	e000ed04 	.word	0xe000ed04

0800c10c <vPortExitCritical>:
 800c10c:	b480      	push	{r7}
 800c10e:	b083      	sub	sp, #12
 800c110:	af00      	add	r7, sp, #0
 800c112:	4b12      	ldr	r3, [pc, #72]	@ (800c15c <vPortExitCritical+0x50>)
 800c114:	681b      	ldr	r3, [r3, #0]
 800c116:	2b00      	cmp	r3, #0
 800c118:	d10b      	bne.n	800c132 <vPortExitCritical+0x26>
 800c11a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c11e:	f383 8811 	msr	BASEPRI, r3
 800c122:	f3bf 8f6f 	isb	sy
 800c126:	f3bf 8f4f 	dsb	sy
 800c12a:	607b      	str	r3, [r7, #4]
 800c12c:	bf00      	nop
 800c12e:	bf00      	nop
 800c130:	e7fd      	b.n	800c12e <vPortExitCritical+0x22>
 800c132:	4b0a      	ldr	r3, [pc, #40]	@ (800c15c <vPortExitCritical+0x50>)
 800c134:	681b      	ldr	r3, [r3, #0]
 800c136:	3b01      	subs	r3, #1
 800c138:	4a08      	ldr	r2, [pc, #32]	@ (800c15c <vPortExitCritical+0x50>)
 800c13a:	6013      	str	r3, [r2, #0]
 800c13c:	4b07      	ldr	r3, [pc, #28]	@ (800c15c <vPortExitCritical+0x50>)
 800c13e:	681b      	ldr	r3, [r3, #0]
 800c140:	2b00      	cmp	r3, #0
 800c142:	d105      	bne.n	800c150 <vPortExitCritical+0x44>
 800c144:	2300      	movs	r3, #0
 800c146:	603b      	str	r3, [r7, #0]
 800c148:	683b      	ldr	r3, [r7, #0]
 800c14a:	f383 8811 	msr	BASEPRI, r3
 800c14e:	bf00      	nop
 800c150:	bf00      	nop
 800c152:	370c      	adds	r7, #12
 800c154:	46bd      	mov	sp, r7
 800c156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c15a:	4770      	bx	lr
 800c15c:	2000024c 	.word	0x2000024c

0800c160 <PendSV_Handler>:
 800c160:	f3ef 8009 	mrs	r0, PSP
 800c164:	f3bf 8f6f 	isb	sy
 800c168:	4b15      	ldr	r3, [pc, #84]	@ (800c1c0 <pxCurrentTCBConst>)
 800c16a:	681a      	ldr	r2, [r3, #0]
 800c16c:	f01e 0f10 	tst.w	lr, #16
 800c170:	bf08      	it	eq
 800c172:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800c176:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c17a:	6010      	str	r0, [r2, #0]
 800c17c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800c180:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800c184:	f380 8811 	msr	BASEPRI, r0
 800c188:	f3bf 8f4f 	dsb	sy
 800c18c:	f3bf 8f6f 	isb	sy
 800c190:	f7fe ff9c 	bl	800b0cc <vTaskSwitchContext>
 800c194:	f04f 0000 	mov.w	r0, #0
 800c198:	f380 8811 	msr	BASEPRI, r0
 800c19c:	bc09      	pop	{r0, r3}
 800c19e:	6819      	ldr	r1, [r3, #0]
 800c1a0:	6808      	ldr	r0, [r1, #0]
 800c1a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1a6:	f01e 0f10 	tst.w	lr, #16
 800c1aa:	bf08      	it	eq
 800c1ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800c1b0:	f380 8809 	msr	PSP, r0
 800c1b4:	f3bf 8f6f 	isb	sy
 800c1b8:	4770      	bx	lr
 800c1ba:	bf00      	nop
 800c1bc:	f3af 8000 	nop.w

0800c1c0 <pxCurrentTCBConst>:
 800c1c0:	2000121c 	.word	0x2000121c
 800c1c4:	bf00      	nop
 800c1c6:	bf00      	nop

0800c1c8 <xPortSysTickHandler>:
 800c1c8:	b580      	push	{r7, lr}
 800c1ca:	b082      	sub	sp, #8
 800c1cc:	af00      	add	r7, sp, #0
 800c1ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c1d2:	f383 8811 	msr	BASEPRI, r3
 800c1d6:	f3bf 8f6f 	isb	sy
 800c1da:	f3bf 8f4f 	dsb	sy
 800c1de:	607b      	str	r3, [r7, #4]
 800c1e0:	bf00      	nop
 800c1e2:	f7fe feb9 	bl	800af58 <xTaskIncrementTick>
 800c1e6:	4603      	mov	r3, r0
 800c1e8:	2b00      	cmp	r3, #0
 800c1ea:	d003      	beq.n	800c1f4 <xPortSysTickHandler+0x2c>
 800c1ec:	4b06      	ldr	r3, [pc, #24]	@ (800c208 <xPortSysTickHandler+0x40>)
 800c1ee:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c1f2:	601a      	str	r2, [r3, #0]
 800c1f4:	2300      	movs	r3, #0
 800c1f6:	603b      	str	r3, [r7, #0]
 800c1f8:	683b      	ldr	r3, [r7, #0]
 800c1fa:	f383 8811 	msr	BASEPRI, r3
 800c1fe:	bf00      	nop
 800c200:	bf00      	nop
 800c202:	3708      	adds	r7, #8
 800c204:	46bd      	mov	sp, r7
 800c206:	bd80      	pop	{r7, pc}
 800c208:	e000ed04 	.word	0xe000ed04

0800c20c <vPortSetupTimerInterrupt>:
 800c20c:	b480      	push	{r7}
 800c20e:	af00      	add	r7, sp, #0
 800c210:	4b0b      	ldr	r3, [pc, #44]	@ (800c240 <vPortSetupTimerInterrupt+0x34>)
 800c212:	2200      	movs	r2, #0
 800c214:	601a      	str	r2, [r3, #0]
 800c216:	4b0b      	ldr	r3, [pc, #44]	@ (800c244 <vPortSetupTimerInterrupt+0x38>)
 800c218:	2200      	movs	r2, #0
 800c21a:	601a      	str	r2, [r3, #0]
 800c21c:	4b0a      	ldr	r3, [pc, #40]	@ (800c248 <vPortSetupTimerInterrupt+0x3c>)
 800c21e:	681b      	ldr	r3, [r3, #0]
 800c220:	4a0a      	ldr	r2, [pc, #40]	@ (800c24c <vPortSetupTimerInterrupt+0x40>)
 800c222:	fba2 2303 	umull	r2, r3, r2, r3
 800c226:	099b      	lsrs	r3, r3, #6
 800c228:	4a09      	ldr	r2, [pc, #36]	@ (800c250 <vPortSetupTimerInterrupt+0x44>)
 800c22a:	3b01      	subs	r3, #1
 800c22c:	6013      	str	r3, [r2, #0]
 800c22e:	4b04      	ldr	r3, [pc, #16]	@ (800c240 <vPortSetupTimerInterrupt+0x34>)
 800c230:	2207      	movs	r2, #7
 800c232:	601a      	str	r2, [r3, #0]
 800c234:	bf00      	nop
 800c236:	46bd      	mov	sp, r7
 800c238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c23c:	4770      	bx	lr
 800c23e:	bf00      	nop
 800c240:	e000e010 	.word	0xe000e010
 800c244:	e000e018 	.word	0xe000e018
 800c248:	20000000 	.word	0x20000000
 800c24c:	10624dd3 	.word	0x10624dd3
 800c250:	e000e014 	.word	0xe000e014

0800c254 <vPortEnableVFP>:
 800c254:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800c264 <vPortEnableVFP+0x10>
 800c258:	6801      	ldr	r1, [r0, #0]
 800c25a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800c25e:	6001      	str	r1, [r0, #0]
 800c260:	4770      	bx	lr
 800c262:	bf00      	nop
 800c264:	e000ed88 	.word	0xe000ed88

0800c268 <vPortValidateInterruptPriority>:
 800c268:	b480      	push	{r7}
 800c26a:	b085      	sub	sp, #20
 800c26c:	af00      	add	r7, sp, #0
 800c26e:	f3ef 8305 	mrs	r3, IPSR
 800c272:	60fb      	str	r3, [r7, #12]
 800c274:	68fb      	ldr	r3, [r7, #12]
 800c276:	2b0f      	cmp	r3, #15
 800c278:	d915      	bls.n	800c2a6 <vPortValidateInterruptPriority+0x3e>
 800c27a:	4a18      	ldr	r2, [pc, #96]	@ (800c2dc <vPortValidateInterruptPriority+0x74>)
 800c27c:	68fb      	ldr	r3, [r7, #12]
 800c27e:	4413      	add	r3, r2
 800c280:	781b      	ldrb	r3, [r3, #0]
 800c282:	72fb      	strb	r3, [r7, #11]
 800c284:	4b16      	ldr	r3, [pc, #88]	@ (800c2e0 <vPortValidateInterruptPriority+0x78>)
 800c286:	781b      	ldrb	r3, [r3, #0]
 800c288:	7afa      	ldrb	r2, [r7, #11]
 800c28a:	429a      	cmp	r2, r3
 800c28c:	d20b      	bcs.n	800c2a6 <vPortValidateInterruptPriority+0x3e>
 800c28e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c292:	f383 8811 	msr	BASEPRI, r3
 800c296:	f3bf 8f6f 	isb	sy
 800c29a:	f3bf 8f4f 	dsb	sy
 800c29e:	607b      	str	r3, [r7, #4]
 800c2a0:	bf00      	nop
 800c2a2:	bf00      	nop
 800c2a4:	e7fd      	b.n	800c2a2 <vPortValidateInterruptPriority+0x3a>
 800c2a6:	4b0f      	ldr	r3, [pc, #60]	@ (800c2e4 <vPortValidateInterruptPriority+0x7c>)
 800c2a8:	681b      	ldr	r3, [r3, #0]
 800c2aa:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800c2ae:	4b0e      	ldr	r3, [pc, #56]	@ (800c2e8 <vPortValidateInterruptPriority+0x80>)
 800c2b0:	681b      	ldr	r3, [r3, #0]
 800c2b2:	429a      	cmp	r2, r3
 800c2b4:	d90b      	bls.n	800c2ce <vPortValidateInterruptPriority+0x66>
 800c2b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c2ba:	f383 8811 	msr	BASEPRI, r3
 800c2be:	f3bf 8f6f 	isb	sy
 800c2c2:	f3bf 8f4f 	dsb	sy
 800c2c6:	603b      	str	r3, [r7, #0]
 800c2c8:	bf00      	nop
 800c2ca:	bf00      	nop
 800c2cc:	e7fd      	b.n	800c2ca <vPortValidateInterruptPriority+0x62>
 800c2ce:	bf00      	nop
 800c2d0:	3714      	adds	r7, #20
 800c2d2:	46bd      	mov	sp, r7
 800c2d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2d8:	4770      	bx	lr
 800c2da:	bf00      	nop
 800c2dc:	e000e3f0 	.word	0xe000e3f0
 800c2e0:	20001848 	.word	0x20001848
 800c2e4:	e000ed0c 	.word	0xe000ed0c
 800c2e8:	2000184c 	.word	0x2000184c

0800c2ec <pvPortMalloc>:
 800c2ec:	b580      	push	{r7, lr}
 800c2ee:	b08a      	sub	sp, #40	@ 0x28
 800c2f0:	af00      	add	r7, sp, #0
 800c2f2:	6078      	str	r0, [r7, #4]
 800c2f4:	2300      	movs	r3, #0
 800c2f6:	61fb      	str	r3, [r7, #28]
 800c2f8:	f7fe fd60 	bl	800adbc <vTaskSuspendAll>
 800c2fc:	4b5c      	ldr	r3, [pc, #368]	@ (800c470 <pvPortMalloc+0x184>)
 800c2fe:	681b      	ldr	r3, [r3, #0]
 800c300:	2b00      	cmp	r3, #0
 800c302:	d101      	bne.n	800c308 <pvPortMalloc+0x1c>
 800c304:	f000 f924 	bl	800c550 <prvHeapInit>
 800c308:	4b5a      	ldr	r3, [pc, #360]	@ (800c474 <pvPortMalloc+0x188>)
 800c30a:	681a      	ldr	r2, [r3, #0]
 800c30c:	687b      	ldr	r3, [r7, #4]
 800c30e:	4013      	ands	r3, r2
 800c310:	2b00      	cmp	r3, #0
 800c312:	f040 8095 	bne.w	800c440 <pvPortMalloc+0x154>
 800c316:	687b      	ldr	r3, [r7, #4]
 800c318:	2b00      	cmp	r3, #0
 800c31a:	d01e      	beq.n	800c35a <pvPortMalloc+0x6e>
 800c31c:	2208      	movs	r2, #8
 800c31e:	687b      	ldr	r3, [r7, #4]
 800c320:	4413      	add	r3, r2
 800c322:	607b      	str	r3, [r7, #4]
 800c324:	687b      	ldr	r3, [r7, #4]
 800c326:	f003 0307 	and.w	r3, r3, #7
 800c32a:	2b00      	cmp	r3, #0
 800c32c:	d015      	beq.n	800c35a <pvPortMalloc+0x6e>
 800c32e:	687b      	ldr	r3, [r7, #4]
 800c330:	f023 0307 	bic.w	r3, r3, #7
 800c334:	3308      	adds	r3, #8
 800c336:	607b      	str	r3, [r7, #4]
 800c338:	687b      	ldr	r3, [r7, #4]
 800c33a:	f003 0307 	and.w	r3, r3, #7
 800c33e:	2b00      	cmp	r3, #0
 800c340:	d00b      	beq.n	800c35a <pvPortMalloc+0x6e>
 800c342:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c346:	f383 8811 	msr	BASEPRI, r3
 800c34a:	f3bf 8f6f 	isb	sy
 800c34e:	f3bf 8f4f 	dsb	sy
 800c352:	617b      	str	r3, [r7, #20]
 800c354:	bf00      	nop
 800c356:	bf00      	nop
 800c358:	e7fd      	b.n	800c356 <pvPortMalloc+0x6a>
 800c35a:	687b      	ldr	r3, [r7, #4]
 800c35c:	2b00      	cmp	r3, #0
 800c35e:	d06f      	beq.n	800c440 <pvPortMalloc+0x154>
 800c360:	4b45      	ldr	r3, [pc, #276]	@ (800c478 <pvPortMalloc+0x18c>)
 800c362:	681b      	ldr	r3, [r3, #0]
 800c364:	687a      	ldr	r2, [r7, #4]
 800c366:	429a      	cmp	r2, r3
 800c368:	d86a      	bhi.n	800c440 <pvPortMalloc+0x154>
 800c36a:	4b44      	ldr	r3, [pc, #272]	@ (800c47c <pvPortMalloc+0x190>)
 800c36c:	623b      	str	r3, [r7, #32]
 800c36e:	4b43      	ldr	r3, [pc, #268]	@ (800c47c <pvPortMalloc+0x190>)
 800c370:	681b      	ldr	r3, [r3, #0]
 800c372:	627b      	str	r3, [r7, #36]	@ 0x24
 800c374:	e004      	b.n	800c380 <pvPortMalloc+0x94>
 800c376:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c378:	623b      	str	r3, [r7, #32]
 800c37a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c37c:	681b      	ldr	r3, [r3, #0]
 800c37e:	627b      	str	r3, [r7, #36]	@ 0x24
 800c380:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c382:	685b      	ldr	r3, [r3, #4]
 800c384:	687a      	ldr	r2, [r7, #4]
 800c386:	429a      	cmp	r2, r3
 800c388:	d903      	bls.n	800c392 <pvPortMalloc+0xa6>
 800c38a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c38c:	681b      	ldr	r3, [r3, #0]
 800c38e:	2b00      	cmp	r3, #0
 800c390:	d1f1      	bne.n	800c376 <pvPortMalloc+0x8a>
 800c392:	4b37      	ldr	r3, [pc, #220]	@ (800c470 <pvPortMalloc+0x184>)
 800c394:	681b      	ldr	r3, [r3, #0]
 800c396:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800c398:	429a      	cmp	r2, r3
 800c39a:	d051      	beq.n	800c440 <pvPortMalloc+0x154>
 800c39c:	6a3b      	ldr	r3, [r7, #32]
 800c39e:	681b      	ldr	r3, [r3, #0]
 800c3a0:	2208      	movs	r2, #8
 800c3a2:	4413      	add	r3, r2
 800c3a4:	61fb      	str	r3, [r7, #28]
 800c3a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c3a8:	681a      	ldr	r2, [r3, #0]
 800c3aa:	6a3b      	ldr	r3, [r7, #32]
 800c3ac:	601a      	str	r2, [r3, #0]
 800c3ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c3b0:	685a      	ldr	r2, [r3, #4]
 800c3b2:	687b      	ldr	r3, [r7, #4]
 800c3b4:	1ad2      	subs	r2, r2, r3
 800c3b6:	2308      	movs	r3, #8
 800c3b8:	005b      	lsls	r3, r3, #1
 800c3ba:	429a      	cmp	r2, r3
 800c3bc:	d920      	bls.n	800c400 <pvPortMalloc+0x114>
 800c3be:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800c3c0:	687b      	ldr	r3, [r7, #4]
 800c3c2:	4413      	add	r3, r2
 800c3c4:	61bb      	str	r3, [r7, #24]
 800c3c6:	69bb      	ldr	r3, [r7, #24]
 800c3c8:	f003 0307 	and.w	r3, r3, #7
 800c3cc:	2b00      	cmp	r3, #0
 800c3ce:	d00b      	beq.n	800c3e8 <pvPortMalloc+0xfc>
 800c3d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c3d4:	f383 8811 	msr	BASEPRI, r3
 800c3d8:	f3bf 8f6f 	isb	sy
 800c3dc:	f3bf 8f4f 	dsb	sy
 800c3e0:	613b      	str	r3, [r7, #16]
 800c3e2:	bf00      	nop
 800c3e4:	bf00      	nop
 800c3e6:	e7fd      	b.n	800c3e4 <pvPortMalloc+0xf8>
 800c3e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c3ea:	685a      	ldr	r2, [r3, #4]
 800c3ec:	687b      	ldr	r3, [r7, #4]
 800c3ee:	1ad2      	subs	r2, r2, r3
 800c3f0:	69bb      	ldr	r3, [r7, #24]
 800c3f2:	605a      	str	r2, [r3, #4]
 800c3f4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c3f6:	687a      	ldr	r2, [r7, #4]
 800c3f8:	605a      	str	r2, [r3, #4]
 800c3fa:	69b8      	ldr	r0, [r7, #24]
 800c3fc:	f000 f90a 	bl	800c614 <prvInsertBlockIntoFreeList>
 800c400:	4b1d      	ldr	r3, [pc, #116]	@ (800c478 <pvPortMalloc+0x18c>)
 800c402:	681a      	ldr	r2, [r3, #0]
 800c404:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c406:	685b      	ldr	r3, [r3, #4]
 800c408:	1ad3      	subs	r3, r2, r3
 800c40a:	4a1b      	ldr	r2, [pc, #108]	@ (800c478 <pvPortMalloc+0x18c>)
 800c40c:	6013      	str	r3, [r2, #0]
 800c40e:	4b1a      	ldr	r3, [pc, #104]	@ (800c478 <pvPortMalloc+0x18c>)
 800c410:	681a      	ldr	r2, [r3, #0]
 800c412:	4b1b      	ldr	r3, [pc, #108]	@ (800c480 <pvPortMalloc+0x194>)
 800c414:	681b      	ldr	r3, [r3, #0]
 800c416:	429a      	cmp	r2, r3
 800c418:	d203      	bcs.n	800c422 <pvPortMalloc+0x136>
 800c41a:	4b17      	ldr	r3, [pc, #92]	@ (800c478 <pvPortMalloc+0x18c>)
 800c41c:	681b      	ldr	r3, [r3, #0]
 800c41e:	4a18      	ldr	r2, [pc, #96]	@ (800c480 <pvPortMalloc+0x194>)
 800c420:	6013      	str	r3, [r2, #0]
 800c422:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c424:	685a      	ldr	r2, [r3, #4]
 800c426:	4b13      	ldr	r3, [pc, #76]	@ (800c474 <pvPortMalloc+0x188>)
 800c428:	681b      	ldr	r3, [r3, #0]
 800c42a:	431a      	orrs	r2, r3
 800c42c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c42e:	605a      	str	r2, [r3, #4]
 800c430:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c432:	2200      	movs	r2, #0
 800c434:	601a      	str	r2, [r3, #0]
 800c436:	4b13      	ldr	r3, [pc, #76]	@ (800c484 <pvPortMalloc+0x198>)
 800c438:	681b      	ldr	r3, [r3, #0]
 800c43a:	3301      	adds	r3, #1
 800c43c:	4a11      	ldr	r2, [pc, #68]	@ (800c484 <pvPortMalloc+0x198>)
 800c43e:	6013      	str	r3, [r2, #0]
 800c440:	f7fe fcca 	bl	800add8 <xTaskResumeAll>
 800c444:	69fb      	ldr	r3, [r7, #28]
 800c446:	f003 0307 	and.w	r3, r3, #7
 800c44a:	2b00      	cmp	r3, #0
 800c44c:	d00b      	beq.n	800c466 <pvPortMalloc+0x17a>
 800c44e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c452:	f383 8811 	msr	BASEPRI, r3
 800c456:	f3bf 8f6f 	isb	sy
 800c45a:	f3bf 8f4f 	dsb	sy
 800c45e:	60fb      	str	r3, [r7, #12]
 800c460:	bf00      	nop
 800c462:	bf00      	nop
 800c464:	e7fd      	b.n	800c462 <pvPortMalloc+0x176>
 800c466:	69fb      	ldr	r3, [r7, #28]
 800c468:	4618      	mov	r0, r3
 800c46a:	3728      	adds	r7, #40	@ 0x28
 800c46c:	46bd      	mov	sp, r7
 800c46e:	bd80      	pop	{r7, pc}
 800c470:	20002458 	.word	0x20002458
 800c474:	2000246c 	.word	0x2000246c
 800c478:	2000245c 	.word	0x2000245c
 800c47c:	20002450 	.word	0x20002450
 800c480:	20002460 	.word	0x20002460
 800c484:	20002464 	.word	0x20002464

0800c488 <vPortFree>:
 800c488:	b580      	push	{r7, lr}
 800c48a:	b086      	sub	sp, #24
 800c48c:	af00      	add	r7, sp, #0
 800c48e:	6078      	str	r0, [r7, #4]
 800c490:	687b      	ldr	r3, [r7, #4]
 800c492:	617b      	str	r3, [r7, #20]
 800c494:	687b      	ldr	r3, [r7, #4]
 800c496:	2b00      	cmp	r3, #0
 800c498:	d04f      	beq.n	800c53a <vPortFree+0xb2>
 800c49a:	2308      	movs	r3, #8
 800c49c:	425b      	negs	r3, r3
 800c49e:	697a      	ldr	r2, [r7, #20]
 800c4a0:	4413      	add	r3, r2
 800c4a2:	617b      	str	r3, [r7, #20]
 800c4a4:	697b      	ldr	r3, [r7, #20]
 800c4a6:	613b      	str	r3, [r7, #16]
 800c4a8:	693b      	ldr	r3, [r7, #16]
 800c4aa:	685a      	ldr	r2, [r3, #4]
 800c4ac:	4b25      	ldr	r3, [pc, #148]	@ (800c544 <vPortFree+0xbc>)
 800c4ae:	681b      	ldr	r3, [r3, #0]
 800c4b0:	4013      	ands	r3, r2
 800c4b2:	2b00      	cmp	r3, #0
 800c4b4:	d10b      	bne.n	800c4ce <vPortFree+0x46>
 800c4b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c4ba:	f383 8811 	msr	BASEPRI, r3
 800c4be:	f3bf 8f6f 	isb	sy
 800c4c2:	f3bf 8f4f 	dsb	sy
 800c4c6:	60fb      	str	r3, [r7, #12]
 800c4c8:	bf00      	nop
 800c4ca:	bf00      	nop
 800c4cc:	e7fd      	b.n	800c4ca <vPortFree+0x42>
 800c4ce:	693b      	ldr	r3, [r7, #16]
 800c4d0:	681b      	ldr	r3, [r3, #0]
 800c4d2:	2b00      	cmp	r3, #0
 800c4d4:	d00b      	beq.n	800c4ee <vPortFree+0x66>
 800c4d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c4da:	f383 8811 	msr	BASEPRI, r3
 800c4de:	f3bf 8f6f 	isb	sy
 800c4e2:	f3bf 8f4f 	dsb	sy
 800c4e6:	60bb      	str	r3, [r7, #8]
 800c4e8:	bf00      	nop
 800c4ea:	bf00      	nop
 800c4ec:	e7fd      	b.n	800c4ea <vPortFree+0x62>
 800c4ee:	693b      	ldr	r3, [r7, #16]
 800c4f0:	685a      	ldr	r2, [r3, #4]
 800c4f2:	4b14      	ldr	r3, [pc, #80]	@ (800c544 <vPortFree+0xbc>)
 800c4f4:	681b      	ldr	r3, [r3, #0]
 800c4f6:	4013      	ands	r3, r2
 800c4f8:	2b00      	cmp	r3, #0
 800c4fa:	d01e      	beq.n	800c53a <vPortFree+0xb2>
 800c4fc:	693b      	ldr	r3, [r7, #16]
 800c4fe:	681b      	ldr	r3, [r3, #0]
 800c500:	2b00      	cmp	r3, #0
 800c502:	d11a      	bne.n	800c53a <vPortFree+0xb2>
 800c504:	693b      	ldr	r3, [r7, #16]
 800c506:	685a      	ldr	r2, [r3, #4]
 800c508:	4b0e      	ldr	r3, [pc, #56]	@ (800c544 <vPortFree+0xbc>)
 800c50a:	681b      	ldr	r3, [r3, #0]
 800c50c:	43db      	mvns	r3, r3
 800c50e:	401a      	ands	r2, r3
 800c510:	693b      	ldr	r3, [r7, #16]
 800c512:	605a      	str	r2, [r3, #4]
 800c514:	f7fe fc52 	bl	800adbc <vTaskSuspendAll>
 800c518:	693b      	ldr	r3, [r7, #16]
 800c51a:	685a      	ldr	r2, [r3, #4]
 800c51c:	4b0a      	ldr	r3, [pc, #40]	@ (800c548 <vPortFree+0xc0>)
 800c51e:	681b      	ldr	r3, [r3, #0]
 800c520:	4413      	add	r3, r2
 800c522:	4a09      	ldr	r2, [pc, #36]	@ (800c548 <vPortFree+0xc0>)
 800c524:	6013      	str	r3, [r2, #0]
 800c526:	6938      	ldr	r0, [r7, #16]
 800c528:	f000 f874 	bl	800c614 <prvInsertBlockIntoFreeList>
 800c52c:	4b07      	ldr	r3, [pc, #28]	@ (800c54c <vPortFree+0xc4>)
 800c52e:	681b      	ldr	r3, [r3, #0]
 800c530:	3301      	adds	r3, #1
 800c532:	4a06      	ldr	r2, [pc, #24]	@ (800c54c <vPortFree+0xc4>)
 800c534:	6013      	str	r3, [r2, #0]
 800c536:	f7fe fc4f 	bl	800add8 <xTaskResumeAll>
 800c53a:	bf00      	nop
 800c53c:	3718      	adds	r7, #24
 800c53e:	46bd      	mov	sp, r7
 800c540:	bd80      	pop	{r7, pc}
 800c542:	bf00      	nop
 800c544:	2000246c 	.word	0x2000246c
 800c548:	2000245c 	.word	0x2000245c
 800c54c:	20002468 	.word	0x20002468

0800c550 <prvHeapInit>:
 800c550:	b480      	push	{r7}
 800c552:	b085      	sub	sp, #20
 800c554:	af00      	add	r7, sp, #0
 800c556:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800c55a:	60bb      	str	r3, [r7, #8]
 800c55c:	4b27      	ldr	r3, [pc, #156]	@ (800c5fc <prvHeapInit+0xac>)
 800c55e:	60fb      	str	r3, [r7, #12]
 800c560:	68fb      	ldr	r3, [r7, #12]
 800c562:	f003 0307 	and.w	r3, r3, #7
 800c566:	2b00      	cmp	r3, #0
 800c568:	d00c      	beq.n	800c584 <prvHeapInit+0x34>
 800c56a:	68fb      	ldr	r3, [r7, #12]
 800c56c:	3307      	adds	r3, #7
 800c56e:	60fb      	str	r3, [r7, #12]
 800c570:	68fb      	ldr	r3, [r7, #12]
 800c572:	f023 0307 	bic.w	r3, r3, #7
 800c576:	60fb      	str	r3, [r7, #12]
 800c578:	68ba      	ldr	r2, [r7, #8]
 800c57a:	68fb      	ldr	r3, [r7, #12]
 800c57c:	1ad3      	subs	r3, r2, r3
 800c57e:	4a1f      	ldr	r2, [pc, #124]	@ (800c5fc <prvHeapInit+0xac>)
 800c580:	4413      	add	r3, r2
 800c582:	60bb      	str	r3, [r7, #8]
 800c584:	68fb      	ldr	r3, [r7, #12]
 800c586:	607b      	str	r3, [r7, #4]
 800c588:	4a1d      	ldr	r2, [pc, #116]	@ (800c600 <prvHeapInit+0xb0>)
 800c58a:	687b      	ldr	r3, [r7, #4]
 800c58c:	6013      	str	r3, [r2, #0]
 800c58e:	4b1c      	ldr	r3, [pc, #112]	@ (800c600 <prvHeapInit+0xb0>)
 800c590:	2200      	movs	r2, #0
 800c592:	605a      	str	r2, [r3, #4]
 800c594:	687b      	ldr	r3, [r7, #4]
 800c596:	68ba      	ldr	r2, [r7, #8]
 800c598:	4413      	add	r3, r2
 800c59a:	60fb      	str	r3, [r7, #12]
 800c59c:	2208      	movs	r2, #8
 800c59e:	68fb      	ldr	r3, [r7, #12]
 800c5a0:	1a9b      	subs	r3, r3, r2
 800c5a2:	60fb      	str	r3, [r7, #12]
 800c5a4:	68fb      	ldr	r3, [r7, #12]
 800c5a6:	f023 0307 	bic.w	r3, r3, #7
 800c5aa:	60fb      	str	r3, [r7, #12]
 800c5ac:	68fb      	ldr	r3, [r7, #12]
 800c5ae:	4a15      	ldr	r2, [pc, #84]	@ (800c604 <prvHeapInit+0xb4>)
 800c5b0:	6013      	str	r3, [r2, #0]
 800c5b2:	4b14      	ldr	r3, [pc, #80]	@ (800c604 <prvHeapInit+0xb4>)
 800c5b4:	681b      	ldr	r3, [r3, #0]
 800c5b6:	2200      	movs	r2, #0
 800c5b8:	605a      	str	r2, [r3, #4]
 800c5ba:	4b12      	ldr	r3, [pc, #72]	@ (800c604 <prvHeapInit+0xb4>)
 800c5bc:	681b      	ldr	r3, [r3, #0]
 800c5be:	2200      	movs	r2, #0
 800c5c0:	601a      	str	r2, [r3, #0]
 800c5c2:	687b      	ldr	r3, [r7, #4]
 800c5c4:	603b      	str	r3, [r7, #0]
 800c5c6:	683b      	ldr	r3, [r7, #0]
 800c5c8:	68fa      	ldr	r2, [r7, #12]
 800c5ca:	1ad2      	subs	r2, r2, r3
 800c5cc:	683b      	ldr	r3, [r7, #0]
 800c5ce:	605a      	str	r2, [r3, #4]
 800c5d0:	4b0c      	ldr	r3, [pc, #48]	@ (800c604 <prvHeapInit+0xb4>)
 800c5d2:	681a      	ldr	r2, [r3, #0]
 800c5d4:	683b      	ldr	r3, [r7, #0]
 800c5d6:	601a      	str	r2, [r3, #0]
 800c5d8:	683b      	ldr	r3, [r7, #0]
 800c5da:	685b      	ldr	r3, [r3, #4]
 800c5dc:	4a0a      	ldr	r2, [pc, #40]	@ (800c608 <prvHeapInit+0xb8>)
 800c5de:	6013      	str	r3, [r2, #0]
 800c5e0:	683b      	ldr	r3, [r7, #0]
 800c5e2:	685b      	ldr	r3, [r3, #4]
 800c5e4:	4a09      	ldr	r2, [pc, #36]	@ (800c60c <prvHeapInit+0xbc>)
 800c5e6:	6013      	str	r3, [r2, #0]
 800c5e8:	4b09      	ldr	r3, [pc, #36]	@ (800c610 <prvHeapInit+0xc0>)
 800c5ea:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 800c5ee:	601a      	str	r2, [r3, #0]
 800c5f0:	bf00      	nop
 800c5f2:	3714      	adds	r7, #20
 800c5f4:	46bd      	mov	sp, r7
 800c5f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5fa:	4770      	bx	lr
 800c5fc:	20001850 	.word	0x20001850
 800c600:	20002450 	.word	0x20002450
 800c604:	20002458 	.word	0x20002458
 800c608:	20002460 	.word	0x20002460
 800c60c:	2000245c 	.word	0x2000245c
 800c610:	2000246c 	.word	0x2000246c

0800c614 <prvInsertBlockIntoFreeList>:
 800c614:	b480      	push	{r7}
 800c616:	b085      	sub	sp, #20
 800c618:	af00      	add	r7, sp, #0
 800c61a:	6078      	str	r0, [r7, #4]
 800c61c:	4b28      	ldr	r3, [pc, #160]	@ (800c6c0 <prvInsertBlockIntoFreeList+0xac>)
 800c61e:	60fb      	str	r3, [r7, #12]
 800c620:	e002      	b.n	800c628 <prvInsertBlockIntoFreeList+0x14>
 800c622:	68fb      	ldr	r3, [r7, #12]
 800c624:	681b      	ldr	r3, [r3, #0]
 800c626:	60fb      	str	r3, [r7, #12]
 800c628:	68fb      	ldr	r3, [r7, #12]
 800c62a:	681b      	ldr	r3, [r3, #0]
 800c62c:	687a      	ldr	r2, [r7, #4]
 800c62e:	429a      	cmp	r2, r3
 800c630:	d8f7      	bhi.n	800c622 <prvInsertBlockIntoFreeList+0xe>
 800c632:	68fb      	ldr	r3, [r7, #12]
 800c634:	60bb      	str	r3, [r7, #8]
 800c636:	68fb      	ldr	r3, [r7, #12]
 800c638:	685b      	ldr	r3, [r3, #4]
 800c63a:	68ba      	ldr	r2, [r7, #8]
 800c63c:	4413      	add	r3, r2
 800c63e:	687a      	ldr	r2, [r7, #4]
 800c640:	429a      	cmp	r2, r3
 800c642:	d108      	bne.n	800c656 <prvInsertBlockIntoFreeList+0x42>
 800c644:	68fb      	ldr	r3, [r7, #12]
 800c646:	685a      	ldr	r2, [r3, #4]
 800c648:	687b      	ldr	r3, [r7, #4]
 800c64a:	685b      	ldr	r3, [r3, #4]
 800c64c:	441a      	add	r2, r3
 800c64e:	68fb      	ldr	r3, [r7, #12]
 800c650:	605a      	str	r2, [r3, #4]
 800c652:	68fb      	ldr	r3, [r7, #12]
 800c654:	607b      	str	r3, [r7, #4]
 800c656:	687b      	ldr	r3, [r7, #4]
 800c658:	60bb      	str	r3, [r7, #8]
 800c65a:	687b      	ldr	r3, [r7, #4]
 800c65c:	685b      	ldr	r3, [r3, #4]
 800c65e:	68ba      	ldr	r2, [r7, #8]
 800c660:	441a      	add	r2, r3
 800c662:	68fb      	ldr	r3, [r7, #12]
 800c664:	681b      	ldr	r3, [r3, #0]
 800c666:	429a      	cmp	r2, r3
 800c668:	d118      	bne.n	800c69c <prvInsertBlockIntoFreeList+0x88>
 800c66a:	68fb      	ldr	r3, [r7, #12]
 800c66c:	681a      	ldr	r2, [r3, #0]
 800c66e:	4b15      	ldr	r3, [pc, #84]	@ (800c6c4 <prvInsertBlockIntoFreeList+0xb0>)
 800c670:	681b      	ldr	r3, [r3, #0]
 800c672:	429a      	cmp	r2, r3
 800c674:	d00d      	beq.n	800c692 <prvInsertBlockIntoFreeList+0x7e>
 800c676:	687b      	ldr	r3, [r7, #4]
 800c678:	685a      	ldr	r2, [r3, #4]
 800c67a:	68fb      	ldr	r3, [r7, #12]
 800c67c:	681b      	ldr	r3, [r3, #0]
 800c67e:	685b      	ldr	r3, [r3, #4]
 800c680:	441a      	add	r2, r3
 800c682:	687b      	ldr	r3, [r7, #4]
 800c684:	605a      	str	r2, [r3, #4]
 800c686:	68fb      	ldr	r3, [r7, #12]
 800c688:	681b      	ldr	r3, [r3, #0]
 800c68a:	681a      	ldr	r2, [r3, #0]
 800c68c:	687b      	ldr	r3, [r7, #4]
 800c68e:	601a      	str	r2, [r3, #0]
 800c690:	e008      	b.n	800c6a4 <prvInsertBlockIntoFreeList+0x90>
 800c692:	4b0c      	ldr	r3, [pc, #48]	@ (800c6c4 <prvInsertBlockIntoFreeList+0xb0>)
 800c694:	681a      	ldr	r2, [r3, #0]
 800c696:	687b      	ldr	r3, [r7, #4]
 800c698:	601a      	str	r2, [r3, #0]
 800c69a:	e003      	b.n	800c6a4 <prvInsertBlockIntoFreeList+0x90>
 800c69c:	68fb      	ldr	r3, [r7, #12]
 800c69e:	681a      	ldr	r2, [r3, #0]
 800c6a0:	687b      	ldr	r3, [r7, #4]
 800c6a2:	601a      	str	r2, [r3, #0]
 800c6a4:	68fa      	ldr	r2, [r7, #12]
 800c6a6:	687b      	ldr	r3, [r7, #4]
 800c6a8:	429a      	cmp	r2, r3
 800c6aa:	d002      	beq.n	800c6b2 <prvInsertBlockIntoFreeList+0x9e>
 800c6ac:	68fb      	ldr	r3, [r7, #12]
 800c6ae:	687a      	ldr	r2, [r7, #4]
 800c6b0:	601a      	str	r2, [r3, #0]
 800c6b2:	bf00      	nop
 800c6b4:	3714      	adds	r7, #20
 800c6b6:	46bd      	mov	sp, r7
 800c6b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6bc:	4770      	bx	lr
 800c6be:	bf00      	nop
 800c6c0:	20002450 	.word	0x20002450
 800c6c4:	20002458 	.word	0x20002458

0800c6c8 <memset>:
 800c6c8:	4402      	add	r2, r0
 800c6ca:	4603      	mov	r3, r0
 800c6cc:	4293      	cmp	r3, r2
 800c6ce:	d100      	bne.n	800c6d2 <memset+0xa>
 800c6d0:	4770      	bx	lr
 800c6d2:	f803 1b01 	strb.w	r1, [r3], #1
 800c6d6:	e7f9      	b.n	800c6cc <memset+0x4>

0800c6d8 <_reclaim_reent>:
 800c6d8:	4b2d      	ldr	r3, [pc, #180]	@ (800c790 <_reclaim_reent+0xb8>)
 800c6da:	681b      	ldr	r3, [r3, #0]
 800c6dc:	4283      	cmp	r3, r0
 800c6de:	b570      	push	{r4, r5, r6, lr}
 800c6e0:	4604      	mov	r4, r0
 800c6e2:	d053      	beq.n	800c78c <_reclaim_reent+0xb4>
 800c6e4:	69c3      	ldr	r3, [r0, #28]
 800c6e6:	b31b      	cbz	r3, 800c730 <_reclaim_reent+0x58>
 800c6e8:	68db      	ldr	r3, [r3, #12]
 800c6ea:	b163      	cbz	r3, 800c706 <_reclaim_reent+0x2e>
 800c6ec:	2500      	movs	r5, #0
 800c6ee:	69e3      	ldr	r3, [r4, #28]
 800c6f0:	68db      	ldr	r3, [r3, #12]
 800c6f2:	5959      	ldr	r1, [r3, r5]
 800c6f4:	b9b1      	cbnz	r1, 800c724 <_reclaim_reent+0x4c>
 800c6f6:	3504      	adds	r5, #4
 800c6f8:	2d80      	cmp	r5, #128	@ 0x80
 800c6fa:	d1f8      	bne.n	800c6ee <_reclaim_reent+0x16>
 800c6fc:	69e3      	ldr	r3, [r4, #28]
 800c6fe:	4620      	mov	r0, r4
 800c700:	68d9      	ldr	r1, [r3, #12]
 800c702:	f000 f881 	bl	800c808 <_free_r>
 800c706:	69e3      	ldr	r3, [r4, #28]
 800c708:	6819      	ldr	r1, [r3, #0]
 800c70a:	b111      	cbz	r1, 800c712 <_reclaim_reent+0x3a>
 800c70c:	4620      	mov	r0, r4
 800c70e:	f000 f87b 	bl	800c808 <_free_r>
 800c712:	69e3      	ldr	r3, [r4, #28]
 800c714:	689d      	ldr	r5, [r3, #8]
 800c716:	b15d      	cbz	r5, 800c730 <_reclaim_reent+0x58>
 800c718:	4629      	mov	r1, r5
 800c71a:	4620      	mov	r0, r4
 800c71c:	682d      	ldr	r5, [r5, #0]
 800c71e:	f000 f873 	bl	800c808 <_free_r>
 800c722:	e7f8      	b.n	800c716 <_reclaim_reent+0x3e>
 800c724:	680e      	ldr	r6, [r1, #0]
 800c726:	4620      	mov	r0, r4
 800c728:	f000 f86e 	bl	800c808 <_free_r>
 800c72c:	4631      	mov	r1, r6
 800c72e:	e7e1      	b.n	800c6f4 <_reclaim_reent+0x1c>
 800c730:	6961      	ldr	r1, [r4, #20]
 800c732:	b111      	cbz	r1, 800c73a <_reclaim_reent+0x62>
 800c734:	4620      	mov	r0, r4
 800c736:	f000 f867 	bl	800c808 <_free_r>
 800c73a:	69e1      	ldr	r1, [r4, #28]
 800c73c:	b111      	cbz	r1, 800c744 <_reclaim_reent+0x6c>
 800c73e:	4620      	mov	r0, r4
 800c740:	f000 f862 	bl	800c808 <_free_r>
 800c744:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800c746:	b111      	cbz	r1, 800c74e <_reclaim_reent+0x76>
 800c748:	4620      	mov	r0, r4
 800c74a:	f000 f85d 	bl	800c808 <_free_r>
 800c74e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800c750:	b111      	cbz	r1, 800c758 <_reclaim_reent+0x80>
 800c752:	4620      	mov	r0, r4
 800c754:	f000 f858 	bl	800c808 <_free_r>
 800c758:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800c75a:	b111      	cbz	r1, 800c762 <_reclaim_reent+0x8a>
 800c75c:	4620      	mov	r0, r4
 800c75e:	f000 f853 	bl	800c808 <_free_r>
 800c762:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 800c764:	b111      	cbz	r1, 800c76c <_reclaim_reent+0x94>
 800c766:	4620      	mov	r0, r4
 800c768:	f000 f84e 	bl	800c808 <_free_r>
 800c76c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 800c76e:	b111      	cbz	r1, 800c776 <_reclaim_reent+0x9e>
 800c770:	4620      	mov	r0, r4
 800c772:	f000 f849 	bl	800c808 <_free_r>
 800c776:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800c778:	b111      	cbz	r1, 800c780 <_reclaim_reent+0xa8>
 800c77a:	4620      	mov	r0, r4
 800c77c:	f000 f844 	bl	800c808 <_free_r>
 800c780:	6a23      	ldr	r3, [r4, #32]
 800c782:	b11b      	cbz	r3, 800c78c <_reclaim_reent+0xb4>
 800c784:	4620      	mov	r0, r4
 800c786:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c78a:	4718      	bx	r3
 800c78c:	bd70      	pop	{r4, r5, r6, pc}
 800c78e:	bf00      	nop
 800c790:	20000250 	.word	0x20000250

0800c794 <__errno>:
 800c794:	4b01      	ldr	r3, [pc, #4]	@ (800c79c <__errno+0x8>)
 800c796:	6818      	ldr	r0, [r3, #0]
 800c798:	4770      	bx	lr
 800c79a:	bf00      	nop
 800c79c:	20000250 	.word	0x20000250

0800c7a0 <__libc_init_array>:
 800c7a0:	b570      	push	{r4, r5, r6, lr}
 800c7a2:	4d0d      	ldr	r5, [pc, #52]	@ (800c7d8 <__libc_init_array+0x38>)
 800c7a4:	4c0d      	ldr	r4, [pc, #52]	@ (800c7dc <__libc_init_array+0x3c>)
 800c7a6:	1b64      	subs	r4, r4, r5
 800c7a8:	10a4      	asrs	r4, r4, #2
 800c7aa:	2600      	movs	r6, #0
 800c7ac:	42a6      	cmp	r6, r4
 800c7ae:	d109      	bne.n	800c7c4 <__libc_init_array+0x24>
 800c7b0:	4d0b      	ldr	r5, [pc, #44]	@ (800c7e0 <__libc_init_array+0x40>)
 800c7b2:	4c0c      	ldr	r4, [pc, #48]	@ (800c7e4 <__libc_init_array+0x44>)
 800c7b4:	f000 f8a0 	bl	800c8f8 <_init>
 800c7b8:	1b64      	subs	r4, r4, r5
 800c7ba:	10a4      	asrs	r4, r4, #2
 800c7bc:	2600      	movs	r6, #0
 800c7be:	42a6      	cmp	r6, r4
 800c7c0:	d105      	bne.n	800c7ce <__libc_init_array+0x2e>
 800c7c2:	bd70      	pop	{r4, r5, r6, pc}
 800c7c4:	f855 3b04 	ldr.w	r3, [r5], #4
 800c7c8:	4798      	blx	r3
 800c7ca:	3601      	adds	r6, #1
 800c7cc:	e7ee      	b.n	800c7ac <__libc_init_array+0xc>
 800c7ce:	f855 3b04 	ldr.w	r3, [r5], #4
 800c7d2:	4798      	blx	r3
 800c7d4:	3601      	adds	r6, #1
 800c7d6:	e7f2      	b.n	800c7be <__libc_init_array+0x1e>
 800c7d8:	0800ca2c 	.word	0x0800ca2c
 800c7dc:	0800ca2c 	.word	0x0800ca2c
 800c7e0:	0800ca2c 	.word	0x0800ca2c
 800c7e4:	0800ca30 	.word	0x0800ca30

0800c7e8 <__retarget_lock_acquire_recursive>:
 800c7e8:	4770      	bx	lr

0800c7ea <__retarget_lock_release_recursive>:
 800c7ea:	4770      	bx	lr

0800c7ec <memcpy>:
 800c7ec:	440a      	add	r2, r1
 800c7ee:	4291      	cmp	r1, r2
 800c7f0:	f100 33ff 	add.w	r3, r0, #4294967295
 800c7f4:	d100      	bne.n	800c7f8 <memcpy+0xc>
 800c7f6:	4770      	bx	lr
 800c7f8:	b510      	push	{r4, lr}
 800c7fa:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c7fe:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c802:	4291      	cmp	r1, r2
 800c804:	d1f9      	bne.n	800c7fa <memcpy+0xe>
 800c806:	bd10      	pop	{r4, pc}

0800c808 <_free_r>:
 800c808:	b538      	push	{r3, r4, r5, lr}
 800c80a:	4605      	mov	r5, r0
 800c80c:	2900      	cmp	r1, #0
 800c80e:	d041      	beq.n	800c894 <_free_r+0x8c>
 800c810:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c814:	1f0c      	subs	r4, r1, #4
 800c816:	2b00      	cmp	r3, #0
 800c818:	bfb8      	it	lt
 800c81a:	18e4      	addlt	r4, r4, r3
 800c81c:	f000 f83e 	bl	800c89c <__malloc_lock>
 800c820:	4a1d      	ldr	r2, [pc, #116]	@ (800c898 <_free_r+0x90>)
 800c822:	6813      	ldr	r3, [r2, #0]
 800c824:	b933      	cbnz	r3, 800c834 <_free_r+0x2c>
 800c826:	6063      	str	r3, [r4, #4]
 800c828:	6014      	str	r4, [r2, #0]
 800c82a:	4628      	mov	r0, r5
 800c82c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c830:	f000 b83a 	b.w	800c8a8 <__malloc_unlock>
 800c834:	42a3      	cmp	r3, r4
 800c836:	d908      	bls.n	800c84a <_free_r+0x42>
 800c838:	6820      	ldr	r0, [r4, #0]
 800c83a:	1821      	adds	r1, r4, r0
 800c83c:	428b      	cmp	r3, r1
 800c83e:	bf01      	itttt	eq
 800c840:	6819      	ldreq	r1, [r3, #0]
 800c842:	685b      	ldreq	r3, [r3, #4]
 800c844:	1809      	addeq	r1, r1, r0
 800c846:	6021      	streq	r1, [r4, #0]
 800c848:	e7ed      	b.n	800c826 <_free_r+0x1e>
 800c84a:	461a      	mov	r2, r3
 800c84c:	685b      	ldr	r3, [r3, #4]
 800c84e:	b10b      	cbz	r3, 800c854 <_free_r+0x4c>
 800c850:	42a3      	cmp	r3, r4
 800c852:	d9fa      	bls.n	800c84a <_free_r+0x42>
 800c854:	6811      	ldr	r1, [r2, #0]
 800c856:	1850      	adds	r0, r2, r1
 800c858:	42a0      	cmp	r0, r4
 800c85a:	d10b      	bne.n	800c874 <_free_r+0x6c>
 800c85c:	6820      	ldr	r0, [r4, #0]
 800c85e:	4401      	add	r1, r0
 800c860:	1850      	adds	r0, r2, r1
 800c862:	4283      	cmp	r3, r0
 800c864:	6011      	str	r1, [r2, #0]
 800c866:	d1e0      	bne.n	800c82a <_free_r+0x22>
 800c868:	6818      	ldr	r0, [r3, #0]
 800c86a:	685b      	ldr	r3, [r3, #4]
 800c86c:	6053      	str	r3, [r2, #4]
 800c86e:	4408      	add	r0, r1
 800c870:	6010      	str	r0, [r2, #0]
 800c872:	e7da      	b.n	800c82a <_free_r+0x22>
 800c874:	d902      	bls.n	800c87c <_free_r+0x74>
 800c876:	230c      	movs	r3, #12
 800c878:	602b      	str	r3, [r5, #0]
 800c87a:	e7d6      	b.n	800c82a <_free_r+0x22>
 800c87c:	6820      	ldr	r0, [r4, #0]
 800c87e:	1821      	adds	r1, r4, r0
 800c880:	428b      	cmp	r3, r1
 800c882:	bf04      	itt	eq
 800c884:	6819      	ldreq	r1, [r3, #0]
 800c886:	685b      	ldreq	r3, [r3, #4]
 800c888:	6063      	str	r3, [r4, #4]
 800c88a:	bf04      	itt	eq
 800c88c:	1809      	addeq	r1, r1, r0
 800c88e:	6021      	streq	r1, [r4, #0]
 800c890:	6054      	str	r4, [r2, #4]
 800c892:	e7ca      	b.n	800c82a <_free_r+0x22>
 800c894:	bd38      	pop	{r3, r4, r5, pc}
 800c896:	bf00      	nop
 800c898:	200025ac 	.word	0x200025ac

0800c89c <__malloc_lock>:
 800c89c:	4801      	ldr	r0, [pc, #4]	@ (800c8a4 <__malloc_lock+0x8>)
 800c89e:	f7ff bfa3 	b.w	800c7e8 <__retarget_lock_acquire_recursive>
 800c8a2:	bf00      	nop
 800c8a4:	200025a8 	.word	0x200025a8

0800c8a8 <__malloc_unlock>:
 800c8a8:	4801      	ldr	r0, [pc, #4]	@ (800c8b0 <__malloc_unlock+0x8>)
 800c8aa:	f7ff bf9e 	b.w	800c7ea <__retarget_lock_release_recursive>
 800c8ae:	bf00      	nop
 800c8b0:	200025a8 	.word	0x200025a8

0800c8b4 <sqrtf>:
 800c8b4:	b508      	push	{r3, lr}
 800c8b6:	ed2d 8b02 	vpush	{d8}
 800c8ba:	eeb0 8a40 	vmov.f32	s16, s0
 800c8be:	f000 f817 	bl	800c8f0 <__ieee754_sqrtf>
 800c8c2:	eeb4 8a48 	vcmp.f32	s16, s16
 800c8c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c8ca:	d60c      	bvs.n	800c8e6 <sqrtf+0x32>
 800c8cc:	eddf 8a07 	vldr	s17, [pc, #28]	@ 800c8ec <sqrtf+0x38>
 800c8d0:	eeb4 8ae8 	vcmpe.f32	s16, s17
 800c8d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c8d8:	d505      	bpl.n	800c8e6 <sqrtf+0x32>
 800c8da:	f7ff ff5b 	bl	800c794 <__errno>
 800c8de:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 800c8e2:	2321      	movs	r3, #33	@ 0x21
 800c8e4:	6003      	str	r3, [r0, #0]
 800c8e6:	ecbd 8b02 	vpop	{d8}
 800c8ea:	bd08      	pop	{r3, pc}
 800c8ec:	00000000 	.word	0x00000000

0800c8f0 <__ieee754_sqrtf>:
 800c8f0:	eeb1 0ac0 	vsqrt.f32	s0, s0
 800c8f4:	4770      	bx	lr
	...

0800c8f8 <_init>:
 800c8f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c8fa:	bf00      	nop
 800c8fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c8fe:	bc08      	pop	{r3}
 800c900:	469e      	mov	lr, r3
 800c902:	4770      	bx	lr

0800c904 <_fini>:
 800c904:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c906:	bf00      	nop
 800c908:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c90a:	bc08      	pop	{r3}
 800c90c:	469e      	mov	lr, r3
 800c90e:	4770      	bx	lr
